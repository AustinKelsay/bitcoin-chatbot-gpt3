{"prompt": "The Bullish Case for Bitcoin", "completion": "Vijay Boyapati"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Mar 2, 2018\u00b741 min read"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "UPDATE: The Bullish Case for Bitcoin, first published as a long-form article in 2018, has now been updated and significantly expanded and has been published as a book which can now be purchased on Amazon. The foreword was written by Michael Saylor."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "With the price of a bitcoin surging to new highs in 2017, the bullish case for investors might seem so obvious it does not need stating. Alternatively it may seem foolish to invest in a digital asset that isn\u2019t backed by any commodity or government and whose price rise has prompted some to compare it to the tulip mania or the dot-com bubble. Neither is true; the bullish case for Bitcoin is compelling but far from obvious. There are significant risks to investing in Bitcoin, but, as I will argue, there is still an immense opportunity."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Never in the history of the world had it been possible to transfer value between distant peoples without relying on a trusted intermediary, such as a bank or government. In 2008 Satoshi Nakamoto, whose identity is still unknown, published a 9 page solution to a long-standing problem of computer science known as the Byzantine General\u2019s Problem. Nakamoto\u2019s solution and the system he built from it \u2014 Bitcoin \u2014 allowed, for the first time ever, value to be quickly transferred, at great distance, in a completely trustless way. The ramifications of the creation of Bitcoin are so profound for both economics and computer science that Nakamoto should rightly be the first person to qualify for both a Nobel prize in Economics and the Turing award."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "For an investor the salient fact of the invention of Bitcoin is the creation of a new scarce digital good \u2014 bitcoins. Bitcoins are transferable digital tokens that are created on the Bitcoin network in a process known as \u201cmining\u201d. Bitcoin mining is roughly analogous to gold mining except that production follows a designed, predictable schedule. By design, only 21 million bitcoins will ever be mined and most of these already have been \u2014 approximately 16.8 million bitcoins have been mined at the time of writing. Every four years the number of bitcoins produced by mining halves and the production of new bitcoins will end completely by the year 2140."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Bitcoins are not backed by any physical commodity, nor are they guaranteed by any government or company, which raises the obvious question for a new bitcoin investor: why do they have any value at all? Unlike stocks, bonds, real-estate or even commodities such as oil and wheat, bitcoins cannot be valued using standard discounted cash flow analysis or by demand for their use in the production of higher order goods. Bitcoins fall into an entirely different category of goods, known as monetary goods, whose value is set game-theoretically. I.e., each market participant values the good based on their appraisal of whether and how much other participants will value it. To understand the game-theoretic nature of monetary goods, we need to explore the origins of money."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "In the earliest human societies, trade between groups of people occurred through barter. The incredible inefficiencies inherent to barter trade drastically limited the scale and geographical scope at which trade could occur. A major disadvantage with barter based trade is the double coincidence of wants problem. An apple grower may desire trade with a fisherman, for example, but if the fisherman does not desire apples at the same moment, the trade will not take place. Over time humans evolved a desire to hold certain collectible items for their rarity and symbolic value (examples include shells, animal teeth and flint). Indeed, as Nick Szabo argues in his brilliant essay on the origins of money, the human desire for collectibles provided a distinct evolutionary advantage for early man over his nearest biological competitors, Homo neanderthalensis."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The primary and ultimate evolutionary function of collectibles was as a medium for storing and transferring wealth."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Collectibles served as a sort of \u201cproto-money\u201d by making trade possible between otherwise antagonistic tribes and by allowing wealth to be transferred between generations. Trade and transfer of collectibles were quite infrequent in paleolithic societies, and these goods served more as a \u201cstore of value\u201d rather than the \u201cmedium of exchange\u201d role that we largely recognize modern money to play. Szabo explains:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Compared to modern money, primitive money had a very low velocity \u2014 it might be transferred only a handful of times in an average individual\u2019s lifetime. Nevertheless, a durable collectible, what today we would call an heirloom, could persist for many generations and added substantial value at each transfer \u2014 often making the transfer even possible at all."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Early man faced an important game-theoretic dilemma when deciding which collectibles to gather or create: which objects would be desired by other humans? By correctly anticipating which objects might be demanded for their collectible value, a tremendous benefit was conferred on the possessor in their ability to complete trade and to acquire wealth. Some Native American tribes, such as the Narragansetts, specialized in the manufacture of otherwise useless collectibles simply for their value in trade. It is worth noting that the earlier the anticipation of future demand for a collectible good, the greater the advantage conferred to its possessor; it can be acquired more cheaply than when it is widely demanded and its trade value appreciates as the population which demands it expands. Furthermore, acquiring a good in hopes that it will be demanded as a future store of value hastens its adoption for that very purpose. This seeming circularity is actually a feedback loop that drives societies to quickly converge on a single store of value. In game-theoretic terms, this is known as a \u201cNash Equilibrium\u201d. Achieving a Nash Equilibrium for a store of value is a major boon to any society, as it greatly facilitates trade and the division of labor, paving the way for the advent of civilization."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Over the millennia, as human societies grew and trade routes developed, the stores of value that had emerged in individual societies came to compete against each other. Merchants and traders would face a choice of whether to save the proceeds of their trade in the store of value of their own society or the store of value of the society they were trading with, or some balance of both. The benefit of maintaining savings in a foreign store of value was the enhanced ability to complete trade in the associated foreign society. Merchants holding savings in a foreign store of value also had an incentive to encourage its adoption within their own society, as this would increase the purchasing power of their savings. The benefits of an imported store of value accrued not only to the merchants doing the importing, but also to the societies themselves. Two societies converging on a single store of value would see a substantial decrease in the cost of completing trade with each other and an attendant increase in trade-based wealth. Indeed, the 19th century was the first time when most of the world converged on a single store of value \u2014 gold \u2014 and this period saw the greatest explosion of trade in the history of the world. Of this halcyon period, Lord Keynes wrote:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "What an extraordinary episode in the economic progress of man that age was \u2026 for any man of capacity or character at all exceeding the average, into the middle and upper classes, for whom life offered, at a low cost and with the least trouble, conveniences, comforts, and amenities beyond the compass of the richest and most powerful monarchs of other ages. The inhabitant of London could order by telephone, sipping his morning tea in bed, the various products of the whole earth, in such quantity as he might see fit, and reasonably expect their early delivery upon his doorstep"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "When stores of value compete against each other, it is the specific attributes that make a good store of value that allows one to out-compete another at the margin and increase demand for it over time. While many goods have been used as stores of value or \u201cproto-money\u201d, certain attributes emerged that were particularly demanded and allowed goods with these attributes to out-compete others. An ideal store of value will be:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The table below grades Bitcoin, gold and fiat money (such as dollars) against the attributes listed above and is followed by an explanation of each grade:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Gold is the undisputed King of durability. The vast majority of gold that has ever been mined or minted, including the gold of the Pharaohs, remains extant today and will likely be available a thousand years hence. Gold coins that were used as money in antiquity still maintain significant value today. Fiat currency and bitcoins are fundamentally digital records that may take physical form (such as paper bills). Thus it is not their physical manifestation whose durability should be considered (since a tattered dollar bill may be exchanged for a new one), but the durability of the institution that issues them. In the case of fiat currencies, many governments have come and gone over the centuries, and their currencies disappeared with them. The Papiermark, Rentenmark and Reichsmark of the Weimar Republic no longer have value because the institution that issued them no longer exists. If history is a guide, it would be folly to consider fiat currencies durable in the long term \u2014 the US dollar and British Pound are relative anomalies in this regard. Bitcoins, having no issuing authority, may be considered durable so long as the network that secures them remains in place. Given that Bitcoin is still in its infancy, it is too early to draw strong conclusions about its durability. However, there are encouraging signs that, despite prominent instances of nation-states attempting to regulate Bitcoin and years of attacks by hackers, the network has continued to function, displaying a remarkable degree of \u201canti-fragility\u201d."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Bitcoins are the most portable store of value ever used by man. Private keys representing hundreds of millions of dollars can be stored on a tiny USB drive and easily carried anywhere. Furthermore, equally valuable sums can be transmitted between people on opposite ends of the earth near instantly. Fiat currencies, being fundamentally digital, are also highly portable. However, government regulations and capital controls mean that large transfers of value usually take days or may not be possible at all. Cash can be used to avoid capital controls, but then the risk of storage and cost of transportation become significant. Gold, being physical in form and incredibly dense, is by far the least portable. It is no wonder that the majority of bullion is never transported. When bullion is transferred between a buyer and a seller it is typically only the title to the gold that is transferred, not the physical bullion itself. Transmitting physical gold across large distances is costly, risky and time-consuming."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Gold provides the standard for fungibility. When melted down, an ounce of gold is essentially indistinguishable from any other ounce, and gold has always traded this way on the market. Fiat currencies, on the other hand, are only as fungible as the issuing institutions allow them to be. While it may be the case that a fiat banknote is usually treated like any other by merchants accepting them, there are instances where large-denomination notes have been treated differently to small ones. For instance, India\u2019s government, in an attempt to stamp out India\u2019s untaxed gray market, completely demonetized their 500 and 1000 rupee banknotes. The demonetization caused 500 and 1000 rupee notes to trade at a discount to their face value, making them no longer truly fungible with their lower denomination sibling notes. Bitcoins are fungible at the network level, meaning that every bitcoin, when transmitted, is treated the same on the Bitcoin network. However, because bitcoins are traceable on the blockchain, a particular bitcoin may become tainted by its use in illicit trade and merchants or exchanges may be compelled not to accept such tainted bitcoins. Without improvements to the privacy and anonymity of Bitcoin\u2019s network protocol, bitcoins cannot be considered as fungible as gold."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "For most intents and purposes, both fiat currencies and gold are fairly easy to verify for authenticity. However, despite providing features on their banknotes to prevent counterfeiting, nation-states and their citizens still face the potential to be duped by counterfeit bills. Gold is also not immune from being counterfeited. Sophisticated criminals have used gold-plated tungsten as a way of fooling gold investors into paying for false gold. Bitcoins, on the other hand, can be verified with mathematical certainty. Using cryptographic signatures, the owner of a bitcoin can publicly prove she owns the bitcoins she says she does."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Bitcoins can be divided down to a hundred millionth of a bitcoin and transmitted at such infinitesimal amounts (network fees can, however, make transmission of tiny amounts uneconomic). Fiat currencies are typically divisible down to pocket change, which has little purchasing power, making fiat divisible enough in practice. Gold, while physically divisible, becomes difficult to use when divided into small enough quantities that it could be useful for lower-value day-to-day trade."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The attribute that most clearly distinguishes Bitcoin from fiat currencies and gold is its predetermined scarcity. By design, at most 21 million bitcoins can ever be created. This gives the owner of bitcoins a known percentage of the total possible supply. For instance, an owner of 10 bitcoins would know that at most 2.1 million people on earth (less than 0.03% of the world\u2019s population) could ever have as many bitcoins as they had. Gold, while remaining quite scarce through history, is not immune to increases in supply. If it were ever the case that a new method of mining or acquiring gold became economic, the supply of gold could rise dramatically (examples include sea-floor or asteroid mining). Finally, fiat currencies, while only a relatively recent invention of history, have proven to be prone to constant increases in supply. Nation-states have shown a persistent proclivity to inflate their money supply to solve short-term political problems. The inflationary tendencies of governments across the world leave the owner of a fiat currency with the likelihood that their savings will diminish in value over time."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "No monetary good has a history as long and storied as gold, which has been valued for as long as human civilization has existed. Coins minted in the distant days of antiquity still maintain significant value today. The same cannot be said of fiat currencies, which are a relatively recent anomaly of history. From their inception, fiat currencies have had a near-universal tendency toward eventual worthlessness. The use of inflation as an insidious means of invisibly taxing a citizenry has been a temptation that few states in history have been able to resist. If the 20th century, in which fiat monies came to dominate the global monetary order, established any economic truth, it is that fiat money cannot be trusted to maintain its value over the long or even medium term. Bitcoin, despite its short existence, has weathered enough trials in the market that there is a high likelihood it will not vanish as a valued asset any time soon. Furthermore, the Lindy effect suggests that the longer Bitcoin remains in existence the greater society\u2019s confidence that it will continue to exist long into the future. In other words, the societal trust of a new monetary good is asymptotic in nature, as is illustrated in the graph below:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "If Bitcoin exists for 20 years, there will be near-universal confidence that it will be available forever, much as people believe the Internet is a permanent feature of the modern world."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "One of the most significant sources of early demand for bitcoins was their use in the illicit drug trade. Many subsequently surmised, mistakenly, that the primary demand for bitcoins was due to their ostensible anonymity. Bitcoin, however, is far from an anonymous currency; every transaction transmitted on the Bitcoin network is forever recorded on a public blockchain. The historical record of transactions allows for later forensic analysis to identify the source of a flow of funds. It was such an analysis that led to the apprehending of a perpetrator of the infamous MtGox heist. While it is true that a sufficiently careful and diligent person can conceal their identity when using Bitcoin, this is not why Bitcoin was so popular for trading drugs. The key attribute that makes Bitcoin valuable for proscribed activities is that it is \u201cpermissionless\u201d at the network level. When bitcoins are transmitted on the Bitcoin network, there is no human intervention deciding whether the transaction should be allowed. As a distributed peer-to-peer network, Bitcoin is, by its very nature, designed to be censorship-resistant. This is in stark contrast to the fiat banking system, where states regulate banks and the other gatekeepers of money transmission to report and prevent outlawed uses of monetary goods. A classic example of regulated money transmission is capital controls. A wealthy millionaire, for instance, may find it very hard to transfer their wealth to a new domicile if they wish to flee an oppressive regime. Although gold is not issued by states, its physical nature makes it difficult to transmit at distance, making it far more susceptible to state regulation than Bitcoin. India\u2019s Gold Control Act is an example of such regulation."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Bitcoin excels across the majority of attributes listed above, allowing it to outcompete modern and ancient monetary goods at the margin and providing a strong incentive for its increasing adoption. In particular, the potent combination of censorship resistance and absolute scarcity has been a powerful motivator for wealthy investors to allocate a portion of their wealth to the nascent asset class."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "There is an obsession in modern monetary economics with the medium of exchange role of money. In the 20th century, states have monopolized the issuance of money and continually undermined its use as a store of value, creating a false belief that money is primarily defined as a medium of exchange. Many have criticized Bitcoin as being an unsuitable money because its price has been too volatile to be suitable as a medium of exchange. This puts the cart before the horse, however. Money has always evolved in stages, with the store of value role preceding the medium of exchange role. One of the fathers of marginalist economics, William Stanley Jevons, explained that:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Historically speaking \u2026 gold seems to have served, firstly, as a commodity valuable for ornamental purposes; secondly, as stored wealth; thirdly, as a medium of exchange; and, lastly, as a measure of value."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Using modern terminology, money always evolves in the following four stages:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Monetary goods that are not yet a unit of account may be thought of as being \u201cpartly monetized\u201d. Today gold fills such a role, being a store of value but having been stripped of its medium of exchange and unit of account roles by government intervention. It is also possible that one good fills the medium of exchange role of money while another good fills the other roles. This is typically true in countries with dysfunctional states, such as Argentina or Zimbabwe. In his book Digital Gold, Nathaniel Popper writes:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "In America, the dollar seamlessly serves the three functions of money: providing a medium of exchange, a unit for measuring the cost of goods, and an asset where value can be stored. In Argentina, on the other hand, while the peso was used as a medium of exchange \u2014 for daily purchases \u2014 no one used it as a store of value. Keeping savings in the peso was equivalent to throwing away money. So people exchanged any pesos they wanted to save for dollars, which kept their value better than the peso. Because the peso was so volatile, people usually remembered prices in dollars, which provided a more reliable unit of measure over time."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Bitcoin is currently transitioning from the first stage of monetization to the second stage. It will likely be several years before Bitcoin transitions from being an incipient store of value to being a true medium of exchange, and the path it takes to get there is still fraught with risk and uncertainty. It is striking to note that the same transition took many centuries for gold. No one alive has seen the real-time monetization of a good (as is taking place with Bitcoin), so there is precious little experience regarding the path this monetization will take."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "In the process of being monetized, a monetary good will soar in purchasing power. Many have commented that the increase in purchasing power of Bitcoin creates the appearance of a \u201cbubble\u201d. While this term is often using disparagingly to suggest that Bitcoin is grossly overvalued, it is unintentionally apt. A characteristic that is common to all monetary goods is that their purchasing power is higher than can be justified by their use-value alone. Indeed, many historical monies had no use-value at all. The difference between the purchasing power of a monetary good and the exchange-value it could command for its inherent usefulness can be thought of as a \u201cmonetary premium\u201d. As a monetary good transitions through the stages of monetization (listed in the section above), the monetary premium will increase. The premium does not, however, move in a straight, predictable line. A good X that was in the process of being monetized may be outcompeted by another good Y that is more suitable as money, and the monetary premium of X may drop or vanish entirely. The monetary premium of silver disappeared almost entirely in the late 19th century when governments across the world largely abandoned it as money in favor of gold."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Even in the absence of exogenous factors such as government intervention or competition from other monetary goods, the monetary premium for a new money will not follow a predictable path. Economist Larry White observed that:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "the trouble with [the] bubble story, of course, is that [it] is consistent with any price path, and thus gives no explanation for a particular price path"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The process of monetization is game-theoretic; every market participant attempts to anticipate the aggregate demand of other participants and thereby the future monetary premium. Because the monetary premium is unanchored to any inherent usefulness, market participants tend to default to past prices when determining whether a monetary good is cheap or expensive and whether to buy or sell it. The connection of current demand to past prices is known as \u201cpath dependence\u201d and is perhaps the greatest source of confusion in understanding the price movements of monetary goods."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "When the purchasing power of a monetary good increases with increasing adoption, market expectations of what constitutes \u201ccheap\u201d and \u201cexpensive\u201d shift accordingly. Similarly, when the price of a monetary good crashes, expectations can switch to a general belief that prior prices were \u201cirrational\u201d or overly inflated. The path dependence of money is illustrated by the words of well-known Wall Street fund manager Josh Brown:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "I bought [bitcoins] at like $2300 and had an immediate double on my hands. Then I started saying \u201cI can\u2019t buy more of it,\u201d as it rose, even though that\u2019s an anchored opinion based on nothing other than the price where I originally got it. Then, as it fell over the last week because of a Chinese crackdown on the exchanges, I started saying to myself, \u201cOh good, I hope it gets killed so I can buy more.\u201d"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The truth is that the notions of \u201ccheap\u201d and \u201cexpensive\u201d are essentially meaningless in reference to monetary goods. The price of a monetary good is not a reflection of its cash flow or how useful it is but, rather, is a measure of how widely adopted it has become for the various roles of money."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Further complicating the path-dependent nature of money is the fact that market participants do not merely act as dispassionate observers, trying to buy or sell in anticipation of future movements of the monetary premium, but also act as active evangelizers. Since there is no objectively correct monetary premium, proselytizing the superior attributes of a monetary good is more effective than for regular goods, whose value is ultimately anchored to cash flow or use-demand. The religious fervor of participants in the Bitcoin market can be observed in various online forums where owners actively promote the benefits of Bitcoin and the wealth that can be made by investing in it. In observing the Bitcoin market, Leigh Drogen comments:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "You recognize this as a religion \u2014 a story we all tell each other and agree upon. Religion is the adoption curve we ought to be thinking about. It\u2019s almost perfect \u2014 as soon as someone gets in, they tell everyone and go out evangelizing. Then their friends get in and they start evangelizing."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "While the comparison to religion may give Bitcoin an aura of irrational faith, it is entirely rational for the individual owner to evangelize for a superior monetary good and for society as a whole to standardize on it. Money acts as the foundation for all trade and savings, so the adoption of a superior form of money has tremendous multiplicative benefits to wealth creation for all members of a society."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "While there are no a priori rules about the path a monetary good will take as it is monetized, a curious pattern has emerged during the relatively brief history of Bitcoin\u2019s monetization. Bitcoin\u2019s price appears to follow a fractal pattern of increasing magnitude, where each iteration of the fractal matches the classic shape of a Gartner hype cycle."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "In his article on the Speculative Bitcoin Adoption/Price Theory, Michael Casey posits that the expanding Gartner hype cycles represent phases of a standard S-curve of adoption that was followed by many transformative technologies as they become commonly used in society."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Each Gartner hype cycle begins with a burst of enthusiasm for the new technology, and the price is bid up by the market participants who are \u201creachable\u201d in that iteration. The earliest buyers in a Gartner hype cycle typically have a strong conviction about the transformative nature of the technology they are investing in. Eventually the market reaches a crescendo of enthusiasm as the supply of new participants who can be reached in the cycle is exhausted and the buying becomes dominated by speculators more interested in quick profits than the underlying technology."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Following the peak of the hype cycle, prices rapidly drop and the speculative fervor is replaced by despair, public derision and a sense that the technology was not transformative at all. Eventually the price bottoms and forms a plateau where the original investors who had strong conviction are joined by a new cohort who were able to withstand the pain of the crash and who appreciated the importance of the technology."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The plateau persists for a prolonged period of time and forms, as Casey calls it, a \u201cstable, boring low\u201d. During the plateau, public interest in the technology will dwindle but it will continue to be developed and the collection of strong believers will slowly grow. A new base is then set for the next iteration of the hype cycle as external observers recognize the technology is not going away and that investing in it may not be as risky as it seemed during the crash phase of the cycle. The next iteration of the hype cycle will bring in a much larger set of adopters and be far greater in magnitude."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Very few people participating in an iteration of a Gartner hype cycle will correctly anticipate how high prices will go in that cycle. Prices usually reach levels that would seem absurd to most investors at the earliest stages of the cycle. When the cycle ends, a popular cause is typically attributed to the crash by the media. While the stated cause (such as an exchange failure) may be a precipitating event, it is not the fundamental reason for the cycle to end. Gartner hype cycles end because of an exhaustion of market participants reachable in the cycle."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "It is telling that gold followed the classic pattern of a Gartner hype cycle from the late 1970s to the early 2000s. One might speculate that the hype cycle is an inherent social dynamic to the process of monetization."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Since the inception of the first exchange traded price in 2010, the Bitcoin market has witnessed four major Gartner hype cycles. With hindsight we can precisely identify the price ranges of previous hype cycles in the Bitcoin market. We can also qualitatively identify the cohort of investors that were associated with each iteration of prior cycles."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "$0\u2013$1 (2009\u2013March 2011): The first hype cycle in the Bitcoin market was dominated by cryptographers, computer scientists and cypherpunks who were already primed to understand the importance of Satoshi Nakamoto\u2019s groundbreaking invention and who were pioneers in establishing that the Bitcoin protocol was free of technical flaws."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "$1\u2013$30 (March 2011\u2013July 2011): The second cycle attracted both early adopters of new technology and a steady stream of ideologically motivated investors who were dazzled by the potential of a stateless money. Libertarians such as Roger Ver were attracted to Bitcoin for the anti-establishment activities that would become possible if the nascent technology became widely adopted. Wences Casares, a brilliant and well-connected serial entrepreneur, was also part of the second Bitcoin hype cycle and is known to have evangelized Bitcoin to some of the most prominent technologists and investors in Silicon Valley."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "$250\u2013$1100 (April 2013\u2013December 2013): The third hype cycle saw the entrance of early retail and institutional investors who were willing to brave the horrendously complicated and risky liquidity channels from which bitcoins could be bought. The primary source of liquidity in the market during this period was the Japan-based MtGox exchange that was run by the notoriously incompetent and malfeasant Mark Karpeles, who later saw prison time for his role in the collapse of the exchange."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "It is worth observing that the rise in Bitcoin\u2019s price during the aforementioned hype cycles was largely correlated with an increase in liquidity and the ease with which investors could purchase bitcoins. In the first hype cycle, there were no exchanges available, and acquisition of bitcoins was primarily through mining or by direct exchange with someone who had already mined bitcoins. In the second hype cycle, rudimentary exchanges became available, but obtaining and securing bitcoins from these exchanges remained too complex for all but the most technologically savvy investors. Even in the third hype cycle, significant hurdles remained for investors transferring money to MtGox to acquire bitcoins. Banks were reluctant to deal with the exchange, and third party vendors who facilitated transfers were often incompetent, criminal, or both. Further, many who did manage to transfer money to MtGox ultimately faced loss of funds when the exchange was hacked and later closed."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "It was only after the collapse of the MtGox exchange and a two-year lull in the market price of Bitcoin that mature and deep sources of liquidity were developed; examples include regulated exchanges such as GDAX and OTC brokers such as Cumberland mining. By the time the fourth hype cycle began in 2016 it was relatively easy for retail investors to buy bitcoins and secure them."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "$1100\u2013$19600? (2014\u2013?):"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "At the time of writing, the Bitcoin market is undergoing its fourth major hype cycle. Participation in the current hype cycle has been dominated by what Michael Casey described as the \u201cearly majority\u201d of retail and institutional investors."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "As sources of liquidity have deepened and matured, major institutional investors now have the opportunity to participate through regulated futures markets. The availability of a regulated futures market paves the way for the creation of a Bitcoin ETF, which will then usher in the \u201clate majority\u201d and \u201claggards\u201d in subsequent hype cycles."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Although it is impossible to predict the exact magnitude of the current hype cycle, it would be reasonable to conjecture that the cycle reaches its zenith in the range of $20,000 to $50,000. Much higher than this range and Bitcoin would command a significant fraction of gold\u2019s entire market capitalization (gold and Bitcoin would have equivalent market capitalizations at a bitcoin price of approximately $380,000 at the time of writing). A significant fraction of gold\u2019s market capitalization comes from central bank demand and it\u2019s unlikely that central banks or nation states will participate in this particular hype cycle."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Bitcoin\u2019s final Gartner hype cycle will begin when nation-states start accumulating it as a part of their foreign currency reserves. The market capitalization of Bitcoin is currently too small for it to be considered a viable addition to reserves for most countries. However, as private sector interest increases and the capitalization of Bitcoin approaches 1 trillion dollars it will become liquid enough for most states to enter the market. The entrance of the first state to officially add bitcoins to their reserves will likely trigger a stampede for others to do so. The states that are the earliest in adopting Bitcoin would see the largest benefit to their balance sheets if Bitcoin ultimately became a global reserve currency. Unfortunately, it will probably be the states with the strongest executive powers \u2014 dictatorships such as North Korea \u2014 that will move the fastest in accumulating bitcoins. The unwillingness to see such states improve their financial position and the inherently weak executive branches of the Western democracies will cause them to dither and be laggards in accumulating bitcoins for their reserves."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "There is a great irony that the US is currently one of the nations most open in its regulatory position toward Bitcoin, while China and Russia are the most hostile. The US risks the greatest downside to its geopolitical position if Bitcoin were to supplant the dollar as the world\u2019s reserve currency. In the 1960s, Charle de Gaulle criticized the \u201cexorbitant privilege\u201d the US enjoyed from the international monetary order it crafted with the Bretton Woods agreement of 1944. The Russian and Chinese governments have not yet awoken to the geo-strategic benefits of Bitcoin as a reserve currency and are currently preoccupied with the effects it may have on their internal markets. Like de Gaulle in the 1960s, who threatened to reestablish the classical gold standard in response to the US\u2019s exorbitant privilege, the Chinese and Russians will, in time, come to see the benefits of a large reserve position in a non-sovereign store of value. With the largest concentration of Bitcoin mining power residing in China, the Chinese state already has a distinct advantage in its potential to add bitcoins to its reserves."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The US prides itself as a nation of innovators, with Silicon Valley being a crown jewel of the US economy. Thus far, Silicon Valley has largely dominated the conversation toward regulators on the position they should take vis-\u00e0-vis Bitcoin. However, the banking industry and the US Federal Reserve are finally having their first inkling of the existential threat Bitcoin poses to US monetary policy if it were to become a global reserve currency. The Wall Street Journal, known to be a mouth-piece for the Federal Reserve, published a commentary on the threat Bitcoin poses to US monetary policy:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "There is another danger, perhaps even more serious from the point of view of the central banks and regulators: bitcoin might not crash. If the speculative fervor in the cryptocurrency is merely the precursor to it being widely used as an alternative to the dollar, it will threaten the central banks\u2019 monopoly on money."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "In the coming years there will be a great struggle between entrepreneurs and innovators in Silicon Valley, who will attempt to keep Bitcoin free of state control, and the banking industry and central banks who will do everything in their power to regulate Bitcoin to prevent their industry and money-issuing powers from being disrupted."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "A monetary good cannot transition to being a generally accepted medium of exchange (the standard economic definition of \u201cmoney\u201d) before it is widely valued, for the tautological reason that a good that is not valued will not be accepted in exchange. In the process of becoming widely valued, and hence a store of value, a monetary good will soar in purchasing power, creating an opportunity cost to relinquishing it for use in exchange. Only when the opportunity cost of relinquishing a store of value drops to a suitably low level can it transition to becoming a generally accepted medium of exchange."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "More precisely, a monetary good will only be suitable as a medium of exchange when the sum of the opportunity cost and the transactional cost of using it in exchange drops below the cost of completing a trade without it."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "In a barter-based society, the transition of a store of value to a medium of exchange can occur even when the monetary good is increasing in purchasing power because the transactional costs of barter trade are extremely high. In a developed economy, where transactional costs are low, it is possible for a nascent and rapidly appreciating store of value, such as Bitcoin, to be used as a medium of exchange, albeit in a very limited scope. An example is the illicit drug market where buyers are willing to sacrifice the opportunity of holding bitcoins to minimize the substantial risk of purchasing the drugs using fiat currency."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "There are, however, major institutional barriers to a nascent store of value becoming a generally accepted medium of exchange in a developed society. States use taxation as a powerful means to protect their sovereign money from being displaced by competing monetary goods. Not only does a sovereign money enjoy the advantage of a constant source of demand, by way of taxes being remittable only in it, but competing monetary goods are taxed whenever they are exchanged at an appreciated value. This latter kind of taxation creates significant friction to using a store of value as a medium of exchange."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The handicapping of market-based monetary goods is not an insurmountable barrier to their adoption as a generally accepted medium of exchange, however. If faith is lost in a sovereign money, its value can collapse in a process known as hyperinflation. When a sovereign money hyperinflates, its value first collapses against the most liquid goods in the society, such as gold or a foreign money like the US dollar, if they are available. When no liquid goods are available or their supply is limited, a hyperinflating money collapses against real goods, such as real estate and commodities. The archetypal image of a hyperinflation is a grocery store emptied of all its produce as consumers flee the rapidly diminishing value of their nation\u2019s money."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Eventually, when faith is completely lost during a hyperinflation, a sovereign money will no longer be accepted by anyone, and the society will either devolve to barter or the monetary unit will be completely replaced as a medium of exchange. An example of this process was the replacement of the Zimbabwe dollar with the US dollar. The replacement of a sovereign money with a foreign one is made more difficult by the scarcity of the foreign money and the absence of foreign banking institutions to provide liquidity."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The ability to easily transmit bitcoins across borders and absence of a need for a banking system make Bitcoin an ideal monetary good to acquire for those afflicted by hyperinflation. In the coming years, as fiat monies continue to follow their historical trend toward eventual worthlessness, Bitcoin will become an increasingly popular choice for global savings to flee to. When a nation\u2019s money is abandoned and replaced by Bitcoin, Bitcoin will have transitioned from being a store of value in that society to a generally accepted medium of exchange. Daniel Krawisz coined the term \u201chyperbitcoinization\u201d to describe this process."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Much of this article has focused on the monetary nature of Bitcoin. With this foundation we can now address some of the most commonly held misconceptions about Bitcoin."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Bitcoin, like all market-based monetary goods, displays a monetary premium. The monetary premium is what gives rise to the common criticism that Bitcoin is a \u201cbubble\u201d. However, all monetary goods display a monetary premium. Indeed, it is this premium (the excess over the use-demand price) that is the defining characteristic of all monies. In other words, money is always and everywhere a bubble. Paradoxically, a monetary good is both a bubble and may be undervalued if it\u2019s in the early stages of its adoption for use as money."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Bitcoin\u2019s price volatility is a function of its nascency. In the first few years of its existence, Bitcoin behaved like a penny-stock, and any large buyer \u2014 such as the Winklevoss twins \u2014 could cause a large spike in its price. As adoption and liquidity have increased over the years, Bitcoin\u2019s volatility has decreased commensurately. When Bitcoin achieves the market capitalization of gold, it will display a similar level of volatility. As Bitcoin surpasses the market capitalization of gold, its volatility will decrease to a level that will make it suitable as a widely used medium of exchange. As previously noted, the monetization of Bitcoin occurs in a series of Gartner hype cycles. Volatility is lowest during the plateau phase of the hype cycle, while it is highest during the peak and crash phases of the cycle. Each hype cycle has lower volatility than the previous ones because the liquidity of the market has increased."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "A recent criticism of the Bitcoin network is that the increase in fees to transmit bitcoins makes it unsuitable as a payment system. However, the growth in fees is healthy and expected. Transaction fees are the cost required to pay bitcoin miners to secure the network by validating transactions. Miners can either be paid by transaction fees or by block rewards, which are an inflationary subsidy borne by current bitcoin owners."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Given Bitcoin\u2019s fixed supply schedule \u2014 a monetary policy which makes it ideally suited as a store of value \u2014 block rewards will eventually decline to zero and the network must ultimately be secured with transaction fees. A network with \u201clow\u201d fees is a network with little security and prone to external censorship. Those touting the low fees of Bitcoin alternatives are unknowingly describing the weakness of these so-called \u201calt-coins\u201d."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The specious root of the criticism of Bitcoin\u2019s \u201chigh\u201d transaction fees is the belief that Bitcoin should be a payment system first and a store of value later. As we have seen with the origins of money, this belief puts the cart before the horse. Only when Bitcoin has become a deeply established store of value will it become suitable as a medium of exchange. Further, once the opportunity cost of trading bitcoins is at a level at which it is suitable as a medium of exchange, most trades will not occur on the Bitcoin network itself but on \u201csecond layer\u201d networks with much lower fees. Second layer networks, such as the Lightning network, provide the modern equivalent of the promissory notes that were used to transfer titles for gold in the 19th century. Promissory notes were used by banks because transferring the underlying bullion was far more costly than transferring the note that represented title to the gold. Unlike promissory notes, however, the Lightning network will allow the transfer of bitcoins at low cost while requiring little or no trust of third parties such as banks. The development of the Lightning network is a profoundly important technical innovation in Bitcoin\u2019s history and its value will become apparent as it is developed and adopted in the coming years."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "As an open-source software protocol, it has always been possible to copy Bitcoin\u2019s software and imitate its network. Over the years, many imitators have been created, ranging from ersatz facsimiles, such as Litecoin, to complex variants like Ethereum that promise to allow arbitrarily complex contractual arrangements using a distributed computational system. A common investment criticism of Bitcoin is that it cannot maintain its value when competitors can be easily created that are able to incorporate the latest innovations and software features."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The fallacy in this argument is that the scores of Bitcoin competitors that have been created over the years lack the \u201cnetwork effect\u201d of the first and dominant technology in the space. A network effect \u2014 the increased value of using Bitcoin simply because it is already the dominant network \u2014 is a feature in and of itself. For any technology that possesses a network effect, it is by far the most important feature."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The network effect for Bitcoin encompasses the liquidity of its market, the number of people who own it, and the community of developers maintaining and improving upon its software and its brand awareness. Large investors, including nation-states, will seek the most liquid market so that they can enter and exit the market quickly without affecting its price. Developers will flock to the dominant development community which has the highest-calibre talent, thereby reinforcing the strength of that community. And brand awareness is self-reinforcing, as would-be competitors to Bitcoin are always mentioned in the context of Bitcoin itself."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "A trend that became popular in 2017 was not only to imitate Bitcoin\u2019s software, but to copy the entire history of its past transactions (known as the blockchain). By copying Bitcoin\u2019s blockchain up to a certain point and then splitting off into a new network, in a process known as \u201cforking\u201d, competitors to Bitcoin were able to solve the problem of distributing their token to a large user base."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The most significant fork of this kind occurred on August 1st, 2017 when a new network known as Bitcoin Cash (BCash) was created. An owner of N bitcoins before August 1st, 2017, would then own both N bitcoins and N BCash tokens. The small but vocal community of BCash proponents have tirelessly attempted to expropriate Bitcoin\u2019s brand recognition, both through the naming of their new network and a campaign to convince neophytes in the Bitcoin market that Bcash is the \u201creal\u201d Bitcoin. These attempts have largely failed, and this failure is reflected in the market capitalizations of the two networks. However, for new investors, there remains an apparent risk that a competitor might clone Bitcoin and its blockchain and succeed in overtaking it in market capitalization, thus becoming the de facto Bitcoin."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "An important rule can be gleaned from the major forks that have happened to both the Bitcoin and Ethereum networks. The majority of the market capitalization will settle on the network that retains the highest-calibre and most active developer community. For although Bitcoin can be viewed as a nascent money, it is also a computer network built on software that needs to be maintained and improved upon. Buying tokens on a network which has little or inexperienced developer support would be akin to buying a clone of Microsoft Windows that was not supported by Microsoft\u2019s best developers. It is clear from the history of the forks that occurred in 2017 that the best and most experienced computer scientists and cryptographers are committed to developing for the original Bitcoin and not any of the growing legion of imitators that have been created from it."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Although the common criticisms of Bitcoin found in the media and economics profession are misplaced and based on a flawed understanding of money, there are real and significant risks to investing in Bitcoin. It would be prudent for a prospective Bitcoin investor to understand and weigh these risks before considering an investment in Bitcoin."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The Bitcoin protocol and the cryptographic primitives that it is built upon could be found to have a design flaw, or could be made insecure with the development of quantum computing. If a flaw is found in the protocol, or some new means of computation makes possible the breaking of the cryptography underpinning Bitcoin, the faith in Bitcoin may be severely compromised. The protocol risk was highest in the early years of Bitcoin\u2019s development, when it was still unclear, even to seasoned cryptographers, that Satoshi Nakamoto had actually found a solution to the Byzantine Generals\u2019 Problem. Concerns about serious flaws in the Bitcoin protocol have dissipated over the years, but given its technological nature, protocol risk will always remain for Bitcoin, if only as an outlier risk."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Being decentralized in design, Bitcoin has shown a remarkable degree of resilience in the face of numerous attempts by various governments to regulate it or shut it down. However, the exchanges where bitcoins are traded for fiat currencies are highly centralized and susceptible to regulation and closure. Without these exchanges and the willingness of the banking system to do business with them, the process of monetization of Bitcoin would be severely stunted, if not halted completely. While there are alternative sources of liquidity for Bitcoin, such as over-the-counter brokers and decentralized markets for buying and selling Bitcoins (like localbitcoins.com), the critical process of price discovery happens on the most liquid exchanges, which are all centralized."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Mitigating the risk of exchange shutdowns is jurisdictional arbitrage. Binance, a prominent exchange that started in China, moved to Japan after the Chinese government halted its operations in China. National governments are also wary of smothering a nascent industry that may prove as consequential as the Internet, thereby ceding a tremendous competitive advantage to other nations."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Only with a coordinated global shutdown of Bitcoin exchanges would the process of monetization be halted completely. The race is on for Bitcoin to become so widely adopted that a complete shutdown becomes as politically infeasible as a complete shutdown of the Internet. The possibility of such a shutdown is still real, however, and must be factored into the risks of investing in Bitcoin. As was discussed in the prior section on the entrance of nation-states, national governments are finally awakening to the threat that a non-sovereign, censorship-resistant, digital currency poses to their monetary policies. It is an open question whether they will act on this threat before Bitcoin becomes so entrenched that political action against it proves ineffectual."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "The open and transparent nature of the Bitcoin blockchain makes it possible for states to mark certain bitcoins as being \u201ctainted\u201d by their use in proscribed activities. Although Bitcoin\u2019s censorship resistance at the protocol level allows these bitcoins to be transmitted, if regulations were to appear that banned the use of such tainted bitcoins by exchanges or merchants, they could become largely worthless. Bitcoin would then lose one of the critical properties of a monetary good: fungibility."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "To ameliorate Bitcoin\u2019s fungibility, improvements will need to be made at the protocol level to improve the privacy of transactions. While there are new developments in this regard, pioneered in digital currencies such as Monero and Zcash, there are major technological tradeoffs to be made between the efficiency and complexity of Bitcoin and its privacy. It remains an open question whether privacy-enhancing features can be added to Bitcoin in a way that doesn\u2019t compromise its usefulness as money in other ways."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Bitcoin is an incipient money that is transitioning from the collectible stage of monetization to becoming a store of value. As a non-sovereign monetary good, it is possible that at some stage in the future Bitcoin will become a global money much like gold during the classical gold standard of the 19th century. The adoption of Bitcoin as global money is precisely the bullish case for Bitcoin, and was articulated by Satoshi Nakamoto as early as 2010 in an email exchange with Mike Hearn:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "If you imagine it being used for some fraction of world commerce, then there\u2019s only going to be 21 million coins for the whole world, so it would be worth much more per unit."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "This case was made even more trenchantly by the brilliant cryptographer Hal Finney, the recipient of the first bitcoins sent by Nakamoto, shortly after the announcement of the first working Bitcoin software:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "[I]magine that Bitcoin is successful and becomes the dominant payment system in use throughout the world. Then the total value of the currency should be equal to the total value of all the wealth in the world. Current estimates of total worldwide household wealth that I have found range from $100 trillion to $300 trillion. With 20 million coins, that gives each coin a value of about $10 million."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Even if Bitcoin were not to become a fully fledged global money and were simply to compete with gold as a non-sovereign store of value, it is currently massively undervalued. Mapping the market capitalization of the extant above-ground gold supply (approximately 8 trillion dollars) to a maximum Bitcoin supply of 21 million coins gives a value of approximately $380,000 per bitcoin. As we have seen in prior sections, for the attributes that make a monetary good suitable as a store of value, Bitcoin is superior to gold along every axis except for established history. As time passes and the Lindy effect takes hold, established history will no longer be a competitive advantage for gold. Thus, it is not unreasonable to expect that Bitcoin will approach, and perhaps surpass, gold\u2019s market capitalization in the next decade. A caveat to this thesis is that a large fraction of gold\u2019s capitalization comes from central banks holding it as a store of value. For Bitcoin to achieve or surpass gold\u2019s capitalization, some participation by nation-states will be necessary. Whether the Western democracies will participate in the ownership of Bitcoin is unclear. It is more likely, and unfortunate, that tin-pot dictatorships and kleptocracies will be the first nations to enter the Bitcoin market."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "If no nation-states participate in the Bitcoin market, there still remains a bullish case for Bitcoin. As a non-sovereign store of value used only by retail and institutional investors, Bitcoin is still early in its adoption curve \u2014 the so-called \u201cearly majority\u201d are now entering the market while the late majority and laggards are still years away from entering. With broader participation from retail and especially institutional investors, a price level between $100,000 and $200,000 is feasible."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Owning bitcoins is one of the few asymmetric bets that people across the entire world can participate in. Much like a call option, an investor\u2019s downside is limited to 1x, while their potential upside is still 100x or more. Bitcoin is the first truly global bubble whose size and scope is limited only by the desire of the world\u2019s citizenry to protect their savings from the vagaries of government economic mismanagement. Indeed, Bitcoin rose like a phoenix from the ashes of the 2008 global financial catastrophe \u2014 a catastrophe that was precipitated by the policies of central banks like the Federal Reserve."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "Beyond the financial case for Bitcoin, its rise as a non-sovereign store of value will have profound geopolitical consequences. A global, non-inflationary reserve currency will force nation-states to alter their primary funding mechanism from inflation to direct taxation, which is far less politically palatable. States will shrink in size commensurate to the political pain of transitioning to taxation as their exclusive means of funding. Furthermore, global trade will be settled in a manner that satisfies Charles de Gaulle\u2019s aspiration that no nation should have privilege over any other:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "We consider it necessary that international trade be established, as it was the case, before the great misfortunes of the World, on an indisputable monetary base, and one that does not bear the mark of any particular country."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "50 years from now, that monetary base will be Bitcoin."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "This article has been translated into:"}
{"prompt": "The Bullish Case for Bitcoin", "completion": "I\u2019m a former Google engineer who\u2019s interested in Austrian economics. I\u2019m also a husband and loving father of Addie and Will. Follow me on Twitter."}
{"prompt": "The Bullish Case for Bitcoin", "completion": "I want to thank Alex Morcos, John Pfeffer, Pierre Rochard, Mat Balez, Ray Boyapati, Daniel Coleman, Koen Swinkels, Patri Friedman, Ardian Tola, Michael Flaxman and Michael Hartl for their valuable feedback on earlier drafts of this series of articles. Sanjay Mavinkurve generously provided his brilliant design skills to create some of the charts."}
{"prompt": "Bitcoin is One for All", "completion": "At the Democratic National Convention (August 2020), Congresswoman Alexandria Ocasio-Cortez described the Bernie Sanders presidential campaign as, \u201ca movement that realizes the unsustainable brutality of an economy that rewards explosive inequalities of wealth for the few at the expense of long-term stability for the many.\u201d That the current economic system is working very well for a few at the expense of the many has become more widely recognized and accepted across both sides of the political aisle in recent years. While there is vehement disagreement on the appropriate solution, most everyone at least agrees that there is a problem. Fortunately or unfortunately, there is no political solution to a problem that is inherently of economic origin. It is unfortunate because politicians of all ideologies will make promises of grandeur while further dividing the nation as they hopelessly search for a political solution which does not exist. At the same time, it is fortunate that the solution is not political, as bridging partisan divides has historically proven to be a fool\u2019s errand. "}
{"prompt": "Bitcoin is One for All", "completion": "Without doubt, the economic structure is broken. Wealth gaps are only becoming wider, it is unsustainable, and economic instability is everywhere. The stock market and national average home values are back at all time highs while tens of millions of Americans are filing for unemployment and half of society has practically no savings. Economic equations do not add up. That is a hard-to-deny reality; it is suffocating many and it applies globally. Politicians simply are not the answer. The fundamental problem with the current economic structure lies not in politics, but in the currencies which coordinate economic activity (e.g. the dollar, euro, yen, peso, bolivar, etc.). The chink in the armor is in the foundation. No politician can fix problems that stem from structural flaws inherent to modern money. Once the foundation is fixed, then solutions to higher order challenges can follow suit, but until then, any efforts will continue to prove ineffective. "}
{"prompt": "Bitcoin is One for All", "completion": "A currency is the foundation of an economy because it coordinates all economic activity. If an economy is functionally breaking down, it would be more appropriate to say that the underlying currency is not effectively coordinating economic activity; the currency is the input and the economy is the output. In short, the fly in the ointment is the money. While many are focused on how to solve the problem of massive wealth inequality, very few connect that the greatest source of inequity lies in the tool that everyone is using to coordinate the entire orchestra. It is not just that the economy is not working for many; it is that the dollar (or euro, yen, etc) as the primary mechanism coordinating economic resources is failing for everyone. Economic imbalance and growing inequality is the new normal, but there is nothing natural about sustained economic imbalance. In fact, it is an economic oxymoron. Balance is critical to the functioning of any economy, and when functioning properly, an economy would naturally eliminate imbalance in its normal course. If an economy fails to do so, and instead allows imbalance to be sustained, that is evidence of a broken economic structure. But, the massive and growing economic imbalance which exists today is not the inevitable and unavoidable consequence of free market capitalism; instead, it is principally a result of central bank monetary policy, which allows economic imbalances to be sustained in ways that would otherwise not be possible."}
{"prompt": "Bitcoin is One for All", "completion": "Central bank monetary policy is the exogenous force creating massive economic distortion and extreme levels of inequality. The mere existence of economic inequality is not in itself an inequity; in fact, unequal outcomes are both natural and entirely consistent with economic balance. On the other hand, the inequality which has been created and exacerbated by a flawed monetary system is an inequity, and it is not natural to a free market economy. It is exogenous. The structural flaw inherent to the dollar currency system (or any fiat currency system) is the force most responsible for sustained economic imbalance. Unsustainable and extreme wealth disparity follow from that imbalance. Every other distortive economic action or policy exists at higher orders than the issues created by the manipulation of the money itself. That is the root of all structural economic problems, and until it is fixed, the world will remain suspended in an increasingly fragile state. The legacy monetary system centralizes and consolidates wealth; that is the output of sustaining and exacerbating economic imbalance. It is a system that works for a few in the short-term but fails for all in the long run because the end game of monetary manipulation and an ever-growing economic imbalance is instability. The currency\u2019s ability to coordinate economic activity degrades gradually and eventually fails completely; everyone pays that inevitable price."}
{"prompt": "Bitcoin is One for All", "completion": "Bitcoin is the polar opposite. It is one currency that works for all, now and in the future. It eliminates imbalance as a natural function, wherever and as soon as it appears, because its supply cannot be manipulated. With a fixed supply capped at 21 million and an ever-increasing adoption curve, more and more people own bitcoin, and each person controls a smaller and smaller share of the same fixed pie. The ownership of the currency naturally becomes more distributed and less concentrated over time, which provides the foundation for greater balance.  Bitcoin levels the playing field and ensures that the monetary system cannot itself be a source of extreme inequity. It does so by guaranteeing certain inalienable rights. Every holder of the currency is provided the assurance that more units of the currency will not be arbitrarily produced, and each unit of the currency is treated equally within the network. Bitcoin more effectively coordinates economic activity because its pricing mechanism cannot be distorted or manipulated by exogenous forces, which is the fatal flaw of the legacy currency system. A fixed supply, equal protection, and true price signals deliver greater balance. Bitcoin fixes the economic foundation for everyone such that everything else can then begin to fix itself. "}
{"prompt": "Bitcoin is One for All", "completion": "As a simplified construct, think about money as the coordination function within an economy. The utility of money is to intermediate a series of exchanges. Receive, hold, spend (h/t @pierrerochard), that simple. Money is the intermediary good used to both establish and trade value. As the market converges on a common form of money, a price system emerges, which allows for the subjective concept of value to be more objectively measured. Money is the pricing mechanism and the output is a pricing system. The price system communicates information; it aggregates individual preferences within an economy and communicates those preferences through local prices, as measured in a common monetary medium. Change in prices reflects changes in preferences."}
{"prompt": "Bitcoin is One for All", "completion": "Because preferences are ever changing, so too are prices. Within a developed economy, there are millions of goods, each with individual prices resulting in billions of relative price signals. Relative price signals ultimately communicate exchange ratios between various combinations of goods. While the value of any single good may be static for a period of time, certain prices are always changing within an economy, which dictates that relative prices are ever changing. An economy constantly works to find balance through the aggregate changes in price levels. Anyone and everyone within an economy reacts to the price signals most relevant to their own preferences, which naturally change and become dynamically influenced by changing prices themselves. Through the price system, individual market participants learn both what others value and what they need to produce to meet their own needs. As prices change, behaviors change, and everyone adapts. The price system is the visible hand which allows for balance to be achieved and for imbalance to be identified and eliminated. Long-term economic stability is achieved because variable information is constantly communicated through the price system. It is the fluctuation in prices inherent to undistorted markets that actively prevents large scale and systemic imbalances from forming. "}
{"prompt": "Bitcoin is One for All", "completion": "The foundation of the economy is broken because the money coordinating economic activity is actively manipulated. Most central banks, including the Fed, have the authority to create money arbitrarily at no cost and have a mandate to maintain stable prices (i.e. a price stability mandate). This combination is fatal to the functioning of any price mechanism and ultimately to the underlying economy. When a central bank targets the stability of any price level, it is actually working in opposition to the natural course of an economy, which seeks to find balance and to adapt to a change in preferences through the price system. Worse yet, the means by which a central bank works to achieve price stability is through the manipulation of the money supply, which distorts the entire pricing mechanism underpinning the economy. With every exogenous attempt to achieve price stability, the central bank actively allows imbalances to be sustained and distributes bad information to every person within the economy through false price signals, which in turn causes further imbalances to grow. Imagine this happening each time the economy tried to find balance. By sustaining imbalance, those that principally benefited from the existence of imbalance are continuously advantaged at the expense of everyone else."}
{"prompt": "Bitcoin is One for All", "completion": "Made worse, it actively impedes the ability of those on the lower end of the economic spectrum to contribute and to command a greater share of the resources within an economy. Artificially inflated asset prices create an uphill battle for those that do not own assets, and false signals induce poor economic decisions, disproportionately harming those lowest on the economic spectrum who can least afford errors and setbacks. False and distorted economic signals, created through the manipulation of the money supply, are counterproductive for all in the long run, but in the short-term, benefit those to whom the imbalance is positively skewed."}
{"prompt": "Bitcoin is One for All", "completion": "For example, when the value of real estate was declining during the 2008 financial crisis, the price mechanism of the economy was communicating that there was an imbalance. In aggregate, market participants were communicating an increasing demand for money relative to a decreasing demand to hold real estate. At that particular moment in time, the actual amount of money and the available supply of real estate were not rapidly changing. Instead, preferences within the economy were shifting as were relative price signals. Rather than allow the economy to find balance and eliminate imbalance, the Fed increased the supply of dollars in an effort to \u201cstabilize\u201d the dollar value of real estate. More literally, it created $1.7 trillion dollars and used those newly minted dollars to purchase mortgage-backed securities as a direct means to support the value of real estate. Those that owned real estate (e.g. housing) or operated businesses dealing in the production (or financing) of real estate benefited disproportionately at the expense of those that did not. The benefit skewed to the side of existing imbalance, as it always does when imbalance is being sustained artificially."}
{"prompt": "Bitcoin is One for All", "completion": "Not only did the Fed manipulate the value of real estate, it manipulated and distorted all price signals within the economy by significantly increasing the money supply. The market function to eliminate imbalance would have been for prices to change. The Fed\u2019s solution was the opposite. It devalued the money (by increasing its supply), such that the value of real estate (among other goods) as priced in dollars would change the least. Rather than eliminate imbalance, the Fed\u2019s actions allowed imbalances to be sustained and actually grow. Once one actually appreciates the fundamental role which money and the pricing mechanism play in coordinating economic activity, it becomes clear as day that sustaining imbalance is precisely what occurs each time the Fed intervenes to stabilize price levels. Stability when achieved through manipulation merely suppresses volatility. It creates an unnatural rigidity in price, when price fluctuation is both a desired state and the natural function of a market communicating changes in preferences. When imbalances that would otherwise be eliminated are allowed to be sustained by artificial means and for extended periods of time, it ultimately creates greater volatility in the long run and critically impairs the ability of a monetary medium to coordinate economic activity, which is its singular utility. Each time and cumulatively, it advantages and further embeds the incumbents, just as the market is working to eliminate imbalance."}
{"prompt": "Bitcoin is One for All", "completion": "By manipulating price levels, the Fed isn\u2019t just preventing smaller intermittent fires from naturally running their course while creating larger fires down the road. Instead, think of the Fed\u2019s actions as the arsonist that lights a fire, leaves through the back door in the middle of the night, and then is celebrated as the hero when it arrives through the front door to fight the fire with gasoline. A change in price levels, even if particularly volatile, is not a fire that needs putting out. Artificially preventing changes in price, aka a price stability mandate, is what lights the fire in the first place. The Fed coopts the entire value chain of the pricing mechanism. Change in price is actually desired and the central bank works in opposition to that change by manipulating the money supply. The formation of imbalance within an economy is natural; creating a centralized mechanism which prevents imbalances from being eliminated is the unnatural and damaging part. It also creates long-term economic instability by distorting price signals over decades and widens the wealth gap by constantly advantanging those on the right side of imbalance. Predictably and unironically, the existence of the central bank\u2019s price stability mandate, combined with the power to print money, causes both long-term instability and sustained economic imbalances."}
{"prompt": "Bitcoin is One for All", "completion": "Hayek \u2013 The Pretense of Knowledge"}
{"prompt": "Bitcoin is One for All", "completion": "Most mainstream economics professors would readily agree that price fixing or setting quotas on certain economic goods naturally creates economic inefficiency and imbalance. However, the same cohort of experts would then turn around and avidly defend central bank monetary policy, not realizing the fundamental inconsistency. Economic manipulation is economic manipulation. Rigidity in price or quantity of any economic good driven by exogenous forces results in imbalance; variance allows for balance and equilibrium. Very logical and not controversial. Why then is the same not understood when applied to money? Imbalances are created when central banks target interest rates through the manipulation of the supply of money, just as imbalances are created when the Venezuelan government arbitrarily sets the price of a gallon of gas below its market value. Ironically, the manipulation of the money supply happens to be economically more destructive because it distorts all prices within an economy, and all relative price signals as individual price levels do not adjust ratably (in fact, far from it). When the Fed pursues its price stability mandate, it is actively sending false price signals throughout an economy and causing imbalances in supply and demand structures to be sustained. Price stability is price manipulation, and it is perfectly predictable that when the price of money is manipulated to achieve any definition of stability, the very action causes a degree of economic distortion far worse than the manipulation of any single market."}
{"prompt": "Bitcoin is One for All", "completion": "Hayek \u2013 The Use of Knowledge in Society"}
{"prompt": "Bitcoin is One for All", "completion": "The effects of sustaining imbalance can be best understood and observed through the credit system because that is where the Fed directly intervenes and consequently where the greatest distortion and imbalance exists. As the economy slows and as price levels begin to change counter to the Fed\u2019s desired course, the Fed increases the supply of dollars in the financial system by purchasing debt instruments (typically government treasuries) and crediting the accounts of the sellers with newly minted dollars. At the onset, the credit system was just a tool to effect monetary policy; it was the mechanism through which the Fed pursued price stability. Increase the supply of dollars by purchasing credit instruments, reduce interest rates by that same mechanism, induce economic expansion via cheap credit and cause general price levels to stabilize. That was the theory and intent. However, predictably, this pattern caused imbalances to form and be sustained in the credit system itself. Now the tail is wagging the dog. Today, the credit system in the U.S. stands at $77.9 trillion system wide, whereas there are only $4.5 trillion actual dollars within the banking system. For every dollar that exists, approximately $17 dollars of dollar-denominated debt exists (debt-to-dollars of 17:1). Again, this is an imbalance only made possible and sustained as a function of the Fed. Each time the credit system attempts to contract, the Fed creates more dollars to help maintain the size of the credit system, such that it can further expand. Because the credit system is now orders of magnitude larger than the base money supply, economic activity today is largely coordinated by the allocation and expansion of credit rather than by the base money itself. In aggregate, the credit system is the marginal price setter given its size relative to the base money supply. Because of its price stability mandate, the Fed has an implicit mandate to maintain the size of the credit system, and in order to do so, it must target asset prices that support existing debt levels. It has become circular. The Fed used the credit system as a tool to stabilize price levels but now it must maintain the size of the credit system in order to maintain stable prices. "}
{"prompt": "Bitcoin is One for All", "completion": "This vicious cycle was only ever made possible because the Fed has unilateral control of the money supply. In 1971, President Nixon officially ended all convertibility of dollars to gold, and the U.S. government later decoupled the value of the dollar from gold altogether in 1976. While the creation of the Federal Reserve in 1913 was the beginning and President Roosevelt\u2019s executive order in 1933 banning private ownership of gold set the stage, the complete departure from gold as a monetary anchor in the 1970s removed constraints that otherwise prevented the true centralization of the money supply, and which ultimately enabled the great monetary inflation which Paul Tudor Jones recently wrote about. Once the final constraints were removed, it opened the door for the Fed to take a more central role in actively managing the economy via the money supply, which it ultimately effects through the credit system. As a direct consequence, the base money supply and the credit system have expanded in ways that would otherwise not have been possible, allowing imbalances to consistently grow over time and creating long-term economic distortions."}
{"prompt": "Bitcoin is One for All", "completion": "When imbalances emerge in the credit system (i.e. too much debt existing), the Fed supplies more dollars such that existing debt levels can be sustained. Rather than write off bad debt and reduce existing debt levels, imbalances are actively sustained rather than eliminated. This is the real reason why the banking sector and the function of credit has become as large as it has; it would not have been possible if the Fed were not able to print money to artificially sustain unsustainable levels of debt, all in the interest of \u201cprice stability.\u201d Effectively, each time the banking sector would otherwise contract, the Fed takes measures to actively prevent it. It sounds crazy because it is, but it exists the way it does because the credit system is the primary transmission mechanism of the Fed\u2019s monetary policy. The Fed needs the credit system to be maintained because it is through this vehicle that the Fed attempts to \u201cmanage\u201d the economy. The Fed sees targeting asset prices to sustain debt levels as less disruptive than allowing debt to be restructured and written off. In the Fed\u2019s eyes, it\u2019s six one way, half a dozen the other; effectively the same, but with less disruption. In reality, one path is economic manipulation of the worst kind, and the other is the natural and organic balancing of an economy in imbalance. The Fed chooses the former, trading short-term stability for long-term instability and distortion."}
{"prompt": "Bitcoin is One for All", "completion": "While it should be obvious that asset price targeting advantages those with assets (wealthy) and is a regressive tax on those without assets (poor), the Fed has its price stability mandate. For those on the lower end of the economic spectrum with little to no savings, cash naturally represents most, if not all, of one\u2019s savings. On the other hand, those at the higher end of the economic spectrum typically hold cash in addition to equity in businesses, real estate and financial assets, such as stocks and bonds. Again, consider the 2008 financial crisis. There were imbalances in both the housing market and financial markets; prices within these markets were at unsustainable levels. As imbalance was being eliminated and as price levels were correcting, the Fed stepped in to \u201cstabilize\u201d asset prices. Imagine that you were someone just entering the economy, without any savings, or you could not afford to purchase a home and likely did not own stocks or bonds. Everyone who owned assets was bailed out at the expense of those who did not, all in the interest of price stability."}
{"prompt": "Bitcoin is One for All", "completion": "By increasing the supply of dollars to prop up asset prices, each dollar naturally becomes worth less. For those lowest on the economic spectrum, wages paid in dollars (labor) were devalued, and asset prices were directly manipulated higher. Inflation of most all consumer goods broadly followed. It is the equivalent of being hit from both sides. Wages purchase less and less day-to-day, and it becomes measurably more difficult to accumulate the amount of savings necessary to purchase assets. Initially, the effects are at best zero-sum. Those at the top benefit, those at the bottom suffer. In the end, everyone loses because the end game is economic instability. Notice the negative correlation below between housing prices and housing affordability, and then recognize that housing prices are actively manipulated by the Fed. Also recognize that housing prices are at an all-time high (above 2007 bubble levels), when nearly half the country has no savings. That equation only exists in a manipulated world, and it crushes those without savings. "}
{"prompt": "Bitcoin is One for All", "completion": "Economists running the show and those that benefit the most will overwhelmingly agree it has to be done (every time); history is written by the winners but it is still all smoke and mirrors.  "}
{"prompt": "Bitcoin is One for All", "completion": "\u201cSure, it was a crazy experiment, but the Fed had no other choice. Just imagine all those on the lower end of the spectrum that would have lost their jobs if not for the Fed\u2019s actions. Without a job, the poorest on the economic spectrum would have been far worse off and would not have been able to afford a home.\u201d "}
{"prompt": "Bitcoin is One for All", "completion": "At least, this is the common, predictable defense. The same line has certainly been used to defend the Fed\u2019s most recent actions in response to the global pandemic (printing $3 trillion with a T). While it may seem like logic, it is an anecdote that lacks any fundamental economic argument in defense of the manipulation of price levels. The narrative is caught in a vicious cycle that begins with economic imbalance as a starting point (and one created by decades of the same distortive monetary policy). Recall the role of arsonist hailed as a hero fighting the fire. You cannot dig yourself out of a hole by continuing to dig in the same direction. At a fundamental level, manipulating price levels allows imbalances that would otherwise course correct to be sustained. It disproportionately advantages those that contributed to, and benefited the most from, the very existence of imbalance \u2013 like having your cake and eating it too, or like getting a second bite at the apple. Those most directly bailed out took an inadvisable risk, and rather than be penalized, the world of imbalance is sustained. The advantages gained from manipulated incentive structures are allowed to continue in a way that would not be possible absent the Fed\u2019s policy decisions."}
{"prompt": "Bitcoin is One for All", "completion": "While there is never perfect balance, the existence and fluctuation of price levels is how an economy works toward balance through trial and error. Every individual reacts to an ever-changing set of price signals. It is how people evaluate which businesses to create, which skillsets to acquire, and which jobs to pursue, all of which are interdependent on each individual\u2019s own interests and capabilities. Imbalances can naturally arise within an economy as individuals speculate and over-invest in certain segments based on imperfect expectations of consumer preferences. That is the nature of trial and error. Nobody knows or can predict the future; they use price signals to best guide decisions. A business or individual produces a good for X and attempts to sell it for Y, and if insufficient demand exists to make the activity profitable, that is the market communicating information to the producer. Better luck next time; build it for less or build something else that is of greater value or valued by more people. Imbalances are eliminated. Those that took the risk own the consequences, and it\u2019s back to the drawing board in a never-ending game aimed at marrying individual ideas and skillsets with the preferences of other market participants."}
{"prompt": "Bitcoin is One for All", "completion": "\u201cPrices and profits are all that most producers need to be able to serve the needs of men they do not know. They are tools for searching \u2014 just as, for the soldier or hunter or seaman, the telescope extends the range of vision.\u201d \u2014 Friedrich Hayek"}
{"prompt": "Bitcoin is One for All", "completion": "Money is the tool that is used to coordinate resources and to test the market by trial and error; it becomes the lifeblood of an economy because it is the foundation of a price system. It is how information is distributed to all participants. The better the money, the more reliable its price system. And the more reliable a price system, the greater the balance in an economy. Those within an economy that deliver the greatest value to the largest number of people are naturally rewarded with the most money, but money would be of little value to the producer if others were not producing goods that they themselves valued. The system would not sustain itself if balance did not exist; in order to purchase a good or service from another individual, one must have earned money in the first place. Acquiring money by voluntarily providing a service valued by others is a far better outcome for everyone in aggregate than if money were to be acquired through any other means. It is so because it\u2019s the only way for the cycle to be repeatable and symbiotic rather than one-off and zero-sum. What good is a customer that runs out of money or doesn\u2019t have any in the first place? In a balanced economy, every producer is a customer of someone else and vice versa. "}
{"prompt": "Bitcoin is One for All", "completion": " \u201cGive a man a fish and you feed him for a day; teach him how to fish and you feed him for a lifetime.\u201d "}
{"prompt": "Bitcoin is One for All", "completion": "One need not be religious to understand the wisdom. Each individual benefits by having a larger number of people producing more goods or services, and everyone is incentivized to produce output valued by others within an economy. Everyone has a selfish interest in both delivering value to others and in helping others to contribute value in return. But, it is not just a na\u00efve or hopeful economic view of the world; there are discernible benefits to trade, specialization and ultimately, in a broader range of choice for all individuals, which organically dictates a division of labor. Money coordinates the division of labor, and the form of money with the most reliable pricing mechanism will consistently deliver the greatest value with the greatest range of choice and balance. The pricing mechanism with the least distortion provides the clearest signals as to what other people value, and derivatively, provides the greatest assurance that the information communicated is not a false signal. The undistorted function of a monetary medium and its price system is what ensures imbalance is eliminated; it is the governor that allows for balance to be restored and for symbiotic relationships to continuously be discovered in a constant process of trial and error. "}
{"prompt": "Bitcoin is One for All", "completion": "The Fed\u2019s monetary policy actively prevents the economy from restructuring and from finding balance. Efforts to maintain price stability when imbalance exists equates to maintaining otherwise false price signals. Productive assets remain in the hands of a few, and the world remains suspended in a state of imbalance. Money that makes its way to those on the lower end of the spectrum eventually finds its way back to those that control the productive assets like a steel trap because structural imbalances are never fixed. Instead, the natural healing process is stymied when the Fed intervenes. The structure of the economy cannot sustainably cycle money in a symbiotic way because balance does not exist; skillsets and preferences of market participants are not aligned. The Fed pumping money into a structurally broken economy is akin to giving a man a fish and feeding him for a day, while at the same time preventing him from learning how to fish by sustaining false signals. The existence of imbalance signals that the composition of an economy is not meeting the needs of the participants that make up the market. Or rather, that the assets and individuals which capture the lion\u2019s share of wealth would not continue to do so if the economy was allowed to restructure."}
{"prompt": "Bitcoin is One for All", "completion": "The Fed\u2019s economic structure produces inequity by preventing imbalances from rebalancing. That is what the market attempts to do every time the Fed steps in to keep the dream alive. Giving all benefits of the doubt, the Fed believes it is helping. The starting point of the Fed\u2019s economic theory is that active management of the money supply is a positive driving force. That is in its DNA. It is not questioned or debated. It sees its activities as smoothing out market signals rather than manipulating them. The question for all those within the four walls of the Fed is how much and when to manipulate the money supply, not if. Would anyone expect the Fed to be an honest evaluator of its actions? It would be like grading your own test; no one would reasonably expect an objective assessment because there can be no objectivity. Certain false assumptions are encoded in their brains as true which prevents the possibility of objectivity. They look everywhere for answers but in the mirror, and try the same policies over and over again, always expecting a different result."}
{"prompt": "Bitcoin is One for All", "completion": "\u201cInequality is something that has been with us increasingly for more than four decades, it\u2019s not really related to monetary policy. It\u2019s more related to [stutter] there are a lot of theories on what causes it, but it\u2019s been something that\u2019s more or less been going up consistently for more than four decades and there are a lot of different theories, one of which is just that globalization and technology call for rising levels of skills and aptitudes and education and that U.S. educational attainment flattened out, certainly relative to our peers, over that period[.]\u201d Jay Powell, Chairman of Federal Reserve (June 2020)"}
{"prompt": "Bitcoin is One for All", "completion": "Fed Chairman Powell recently provided this as a response to a question asking whether Fed policy contributes to increasing wealth inequality. Notice how the response is not an argument as to why central bank policy does not cause imbalance and inequality. It is more of a pronouncement followed by a \u201clook over there\u201d defense. Never believe the myths about globalization and technology driving wealth inequality. There is nothing about technology, innovation and globalization that causes sustained economic imbalance or a structurally expanding wealth gap within an economy. For innovation to be valuable, it by definition must solve problems for a range of people, but if those that valued it did not have money or means to afford the innovation, it wouldn\u2019t be valuable. Value becomes self-referencing in that sense. Economic balance is a governing input to value. In order to believe the tall tales of technology and globalization causing economic imbalance, one would have to be willfully blind to the impact of centralizing the money supply, which in turn caused banking to become the epicenter and lifeblood of the economy, and which made it possible for imbalance to actively be sustained over decades as a policy decision. There may be many theories, but the manipulation of every price signal within the economy is ground zero to economic imbalance and inequity; it is the structural flaw in the foundation which creates the unlevel playing field off of which all other contributing factors compound."}
{"prompt": "Bitcoin is One for All", "completion": "Money is the bedrock of economic systems. Understanding the fundamental and foundational role money plays in the economic engine establishes the logical connection between systemic economic issues of imbalance and the artificial manipulation of the money supply. Of course, there are other factors at play. The money supply is not the only way economic activity is manipulated. Tax policy, government spending and the regulatory apparatus all contribute. But, focusing there would be like trying to fix the windows on the 100th floor when the bottom ten stories are each being supported by a single Jenga block. That is the relationship between the issues inherent in the monetary system (the foundation) and all other economic issues (higher levels). The core problem that bitcoin solves is the foundation. If everyone were to display a little bit of humility, each would recognize that there is no silver bullet to solve the structural problem of a widening wealth gap and economic imbalance. There is no individual with a plan or piece of legislation that will make everything better. Imbalance created by central command does not get solved by central command. Quite the opposite. The only real hope is to first fix the foundation, such that everyone on net can get back to doing the desirable things without the need for conscious control. Balance will follow from there."}
{"prompt": "Bitcoin is One for All", "completion": "\u201cBut those who clamor for \u201cconscious direction\u201d\u2014and who cannot believe that anything which has evolved without design (and even without our understanding it) should solve problems which we should not be able to solve consciously\u2014should remember this: The problem is precisely how to extend the span of our utilization of resources beyond the span of the control of any one mind; and therefore, how to dispense with the need of conscious control, and how to provide inducements which will make the individuals do the desirable things without anyone having to tell them what to do.\u201d Hayek, Use of Knowledge in Society"}
{"prompt": "Bitcoin is One for All", "completion": "With a fixed supply of 21 million, enforced on a decentralized basis and controlled by no one, bitcoin has taken away the ability to manipulate the monetary function entirely. If misbehaving children cannot find a way to share a toy and play nice, what do you do? You take the toy away and put the kids in the penalty box. That is kind of like the relationship between bitcoin and central banks. No human (or institution) can be trusted with control over the money supply, so the only practical solution is to take away the ability and temptation all together. The one constant in bitcoin is its fixed supply; there will only ever be 21 million bitcoin, and there is nothing anyone can do about it. Everything will change around bitcoin, but its supply as a constant will increasingly become the guidepost off of which all other activity is measured. It ensures a level playing field and represents a source of truth, which is absent in the existing economic structure. Because its supply cannot be manipulated, neither can its price signal. Undistorted price signals communicate more perfect information. But never confuse more perfect information and a level playing field with price stability or the issue of volatility. If the value of bitcoin is $12,000 today and $10,000 tomorrow, that is the undistorted communication of information. "}
{"prompt": "Bitcoin is One for All", "completion": "\u201cVariation is information. When there is no variation, there is no information. [\u2026] There is no freedom without noise\u2014and no stability without volatility.\u201d \u2014 (Taleb & Blyth, Foreign Affairs, May/June 2011 Issue)"}
{"prompt": "Bitcoin is One for All", "completion": "A fixed supply ensures that any change in price is exclusively driven by a change in demand rather than an artificial and unpredictable change in the supply of money (i.e. communicating a change in preferences to the entire economy). It eliminates an entire side of the equation, which heavily influences changes in prices today, and which distorts the communication of preferences. Imagine knowing with absolute certainty that every change in price were dictated by a change in consumer preferences rather than the effects of increases or decreases in the money supply. That is the difference between being able to consistently rely on true economic price signals and playing musical chairs knowing someone else is in control of the stereo. Today and into the future, the same principle will hold true. Everyone will be able to rely upon and trust that changes throughout bitcoin\u2019s price system will always be true and never be influenced by unpredictable changes in supply."}
{"prompt": "Bitcoin is One for All", "completion": "This fundamental difference between the existing monetary structure and bitcoin changes the entire game. False price signals vs. true price signals. False price signals are the equivalent to believing you have a cheat sheet for a test, training yourself based on that information and then showing up only to find out that the test was entirely different. Everyone believes they are responding to true price signals, not realizing that the information communicated would be fundamentally different if the money had not been manipulated. Each time a violent shock occurs within the system, everyone gets a hint that price signals were communicating bad information, but then the Fed steps in to stabilize prices and everyone becomes reassured that it\u2019s ok to come back outside and play, relying on the same bad signals. The primary reason a violent shock to the system is even possible is because this process has occurred every time the economy has attempted to structurally rebalance over the past 50 years. Bad signals attempt to correct, only to be sustained and exacerbated by exogenous forces. With a fixed money supply, this wrong is permanently righted. It will no longer be possible to sustain imbalance. So long as bitcoin exists, the monetary medium will not be capable of distributing distorted price signals. There is a difference between right, wrong and true. True price signals merely ensure that the information being communicated is reflective of the individual and aggregate preferences of an economy. In that sense, there is no right or wrong, so long as the information can reasonably be relied upon as accurate and undistorted. No one has to trust or question whether bitcoin\u2019s price signals are true because its fixed supply will guarantee it."}
{"prompt": "Bitcoin is One for All", "completion": "And no longer does anyone need to figure out how to play a rigged game because that game is ending. The days of monetary inequity will soon be past as bitcoin distributes throughout the world. It will shift the balance of power back to those that actually create value, as defined by true price signals, which are communicated by individuals that hold the currency. Setting aside taxes and regulatory capture for a moment, if one wants to acquire bitcoin, he or she will have to provide value in return, and bitcoin will become the arbiter of that value. Of 21 million, approximately 18.5 million bitcoin are already in circulation. The 18.5 million in circulation are all held by some individual or entity. In order to acquire any, bitcoin must be earned by delivering value to those that hold the currency. Even for those not yet circulating, every single bitcoin must be earned by contributing value. The same is not true of the current monetary system. In the current structure, dollars can either be earned by delivering value to others within the economy, or conversely, if the Fed decides to hand out more money. And this happens quite frequently. Of all the dollars that exist today, over 80% have been created and allocated by the Fed since 2008 (source link), rather than by the alternative \u2013 delivering value to others within the economy. Which system sounds more fair, balanced and conducive to aligning incentives throughout an economy over decades and generations?"}
{"prompt": "Bitcoin is One for All", "completion": "As more people adopt bitcoin, the currency is transferred from those that have to those that have not. By making the nominal amount of bitcoin zero-sum, it ensures that the economic system is non-zero sum. In order to join the economy, you must deliver value to someone within the network. No value leaks outside the system; no inefficiency can be introduced through the production of money. Whether new entrants are joining the network or trade occurs from within, value is always transferred, and through that transfer, value is actually created. Recall that the valuable function of money is to coordinate economic activity. The production of money, on the other hand, produces no value and only serves to distort and impair the ability of a monetary medium to properly function. The nominal amount of money is not important. What is important is its ability to communicate accurate information to a broad set of economic participants."}
{"prompt": "Bitcoin is One for All", "completion": "That is why people demand money, and with a terminal rate of change set at zero, each participant can use bitcoin to best understand the value of his or her own output relative to that of others and relative to the preferences of others, undistorted by any changes in the money supply. Each person can make better decisions (on average) in the pursuit of his or her own interest, while by definition delivering value to others as a means to that end. A fixed amount of currency plus more people valuing it equals greater distribution of the currency. With a fixed supply, no more than 21 million bitcoin can ever be saved and paradoxically, that change in the incentive structure will cause more people to save. By introducing an incentive to save (i.e. a fixed supply), more people will. And as more people save in a currency which has a fixed supply, it results in more and more people owning less and less but through that function of more people saving, it creates greater stability. Whereas the centralized control of the money supply and the ability to sustain imbalance causes wealth to consolidate, a fixed money supply naturally causes the currency to become further decentralized and more distributed, delivering greater balance."}
{"prompt": "Bitcoin is One for All", "completion": "Centralized governance of the money supply allows the distribution to consolidate as new units of the currency are created and as imbalance is sustained; whereas, a decentralized governance model enforcing a fixed supply ensures that the distribution of the currency becomes greater and greater over time. The structure of the currency dictates the opposite effect, and the trend can be seen in actual data. Bitcoin held in smaller denominations continues to grow steadily, while bitcoin held in larger denominations continues to decline. As the currency and economic system grows, the currency becomes more widely distributed. Rather than consolidate, the currency distributes to more people, and the nominal amount held by each declines, while purchasing power increases. As more people demand the currency, its value rises. However, there is a terminally fixed supply. As increases in demand naturally outpace ever diminishing increases in supply, there is one principal way to acquire bitcoin: by delivering value to an existing holder of the currency. The currency transfers from relatively few early holders to a more widely distributed base as a function of time. Everyone wins; the network utility increases as more participants voluntarily opt in and the distribution of the currency becomes less and less concentrated, ensuring greater balance and reducing systemic risks created by the existence of a few extremely large holders. "}
{"prompt": "Bitcoin is One for All", "completion": "When the incentives of a monetary medium align both individual and aggregate interests, non-zero sum outcomes become the default, as does balance. Bitcoin is accessible to anyone, and everyone that chooses to use it is afforded the same protections. Anyone that produces value and exchanges it for bitcoin is assured that their output will not be devalued in the future merely as a function of someone in a far-off land creating new units of money. Separately, everyone is assured the benefit of undistorted price signals. In bitcoin, rich and poor are provided these same protections equally. It is no guarantee that someone else will value the currency more or less, but it eliminates the possibility of an involuntary forced devaluation of labor and output stored in a monetary medium, which distorts economic activity and creates false price signals. When presented with that opportunity relative to a certainty of the worse outcome, it becomes a clear choice. Compared to the current economic structure in which the wealthiest better understand the effects of active monetary debasement and are best equipped to combat and exploit it, there is a reality that those on the lower end of the economic spectrum have more to gain by leveling the playing field. Even still, it is not about rich and poor. Everyone benefits from the elimination of money production and an economy that provides greater balance through the communication of more perfect information. "}
{"prompt": "Bitcoin is One for All", "completion": "In a tweet from 2018, the founder of Ethereum (Vitalik Buterin) beautifully and ironically described the power of holding a currency with a fixed supply that could not be manipulated, while actually arguing for the opposite. He both made the precise argument which central bankers use to defend their actions while also articulating the power it would place in the holder of a currency with a fixed supply. While Buterin believes it to be oligarchic to have the immutable right to own a fixed percentage of all the world\u2019s money indefinitely, what if that right were extended to the poorest people on earth? What if it were applied equally to every single person on earth? That is the power of bitcoin. If you are living in one of the poorest countries in the western hemisphere, such as Nicaragua, and choose to exchange your value for bitcoin, you now have an immutable right to own a fixed percentage of all the world\u2019s money indefinitely. Only you can decide when, how and to whom to transfer that for value received in the future. The poorest in Nicaragua suddenly are elevated to the exact same leveled playing field as a billionaire in New York like Paul Tudor Jones. Within the bitcoin network, there is no distinction. Equal rights are the default. That cannot and does not exist in the legacy financial system. It is infinitely more oligarchic to indiscriminately devalue someone\u2019s monetary savings by increasing the supply of money while at the same time determining to whom that new money should be \u201crewarded.\u201d There can be no comparison between that world and allowing those that earn money honestly by producing value for others to determine how best to allocate it for value returned in the future."}
{"prompt": "Bitcoin is One for All", "completion": "The idea that bitcoin could solve problems today for rich and poor alike stumps quite a few. Most consider bitcoin to be a speculative asset, and many will look at its volatility and believe it unfit for people without a level of savings that one could afford to lose. That view is fortunately flat wrong and economically unsupported. It is easy to look at an economic disaster like Venezuela, where the vast majority of people are struggling to have very basic needs fulfilled, and believe reliable access to food, water, power and healthcare is more important than \u201cbuying\u201d bitcoin. However, it is harder to ignore that the economic collapse was caused by a deterioration in the money that previously coordinated economic activity and that the only long-term solution to build it back up is to use a form of money that better fulfills that coordination function. Reliable access to food, water, power and healthcare doesn\u2019t exist without the use of money to coordinate resources. In rebuilding an economy on top of a new monetary medium, someone has to go first, and just because it is hard to imagine, it does not change the reality that it\u2019s the only way out. One action triggers another. And another and another. Whether it\u2019s Venezuela, any other country suffering from rapid economic deterioration, or any poverty-stricken area in the developed world, the need for assistance is immediate, but there is no quick fix. Bitcoin can\u2019t remove a socialist dictator, it can\u2019t take the kleptocrats out of the kleptocracy, it can\u2019t reverse damaging tax policy or social programs, and it can\u2019t magically turn poor people into rich people or vice versa. It can, however, solve problems today for anyone that is determined enough to use it, regardless of poverty level or economic status. "}
{"prompt": "Bitcoin is One for All", "completion": "There is no reason why a superior form of money would perform one function for some and not for others, regardless of wealth, income levels or any other reason. It is a vicious cycle to break, but the inception point of elevating any individual or society is finding a way to produce more value than is consumed or demanded of others. The best way to accomplish that goal is by using money to exchange value and coordinate economic activity. Bitcoin isn\u2019t just a rich person tool that will become serviceable to poor people once enough rich people have it. That is nonsensical. It is the opposite; it is the best way anyone can level the playing field, regardless of whether the path may be harder for some than others.  The demand for money is near universal, and over time, anyone using the form of money with the strongest foundation and the most true price signals will benefit. Whereas the dollar (and other fiat currencies) are one for a few in the short-term and all for none in the long-term, bitcoin is one for all, now and in the future, because it fixes the economic foundation for everyone. "}
{"prompt": "Bitcoin is One for All", "completion": "\u201cWhether in Rome, Constantinople, Florence, or Venice, history shows that a sound monetary standard is a necessary prerequisite for human flourishing, without which society stands on the precipice of barbarism and destruction.\u201d Saifedean Ammous, the Bitcoin Standard"}
{"prompt": "Bitcoin is One for All", "completion": "Views presented are expressly my own and not those of Unchained Capital or my colleagues. Thanks to Phil Geiger, Will Cole and Robert Breedlove for reviewing and for providing valuable feedback."}
{"prompt": "Bitcoin is One for All", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin is One for All", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "When it comes to bitcoin adoption, there are generally two rules that never seem to fail. Everyone always feels late, and everyone always wishes they had bought more bitcoin. There are exceptions to every rule, but bitcoin has an uncanny ability to screw with the human psyche. It turns out that 21 million is a scarily small number, and it actually becomes smaller as more individuals come to understand that the fixed supply of bitcoin is credibly enforced and that monetary networks converge on a single medium. Demand for bitcoin is driven by the credibility of its monetary properties and the convergent nature of money, but increasing demand for bitcoin reinforces the scarcity of bitcoin\u2019s fixed supply. As it does, bitcoin becomes more valuable as a monetary medium. While this becomes evident the further down the bitcoin rabbit hole one travels, it is not uncommon for individuals on the periphery to be overwhelmed by the sheer number of cryptocurrencies. Sure, bitcoin is in the \u201clead\u201d today, but there are thousands; how do you know bitcoin is not MySpace? How can you be sure that something new doesn\u2019t overtake bitcoin?"}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "It may sound crazy to believe that bitcoin will be the dominant global currency, and it likely would be if evaluating the possibility from a top-down, probability-weighted perspective. Today, bitcoin is one of a thousand-plus competing digital currencies that all look the same on the surface. Its purchasing power of $150 billion is a drop in the bucket compared to the global financial system which supports $250 trillion of debt. Gold alone has a purchasing power of $8 trillion (50 times the size of bitcoin). What are the chances that an 11-year old internet sensation rises from the ashes of the 2008 financial crisis and goes from nothing to becoming the dominant global currency? The idea sounds laughable, or at the very least, it appears to be too low of a probability to warrant consideration. However, when starting from the bottom-up and developing conviction around a few foundational principles, the noise of a thousand cryptocurrencies fades to the background. When added together, just a few foundational principles create simplicity and clarity around what once may have seemed too complex to possibly discern. If someone had to evaluate one thousand possibilities to come to the right solution, it may not be practical or possible. But if you could eliminate 999 of those possibilities based on one, or a few starting first principles, it then becomes more practical to arrive at a coherent answer."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "This is the roadmap to cutting out the noise and focusing on what really matters. Individuals may come to different conclusions concerning any of these questions, but this is the path to consider when attempting to understand why bitcoin consistently outcompetes all other currencies and whether it will continue to do so. Money is a basic necessity, but it is not a collective hallucination, nor is it a shared belief system. Individuals adopt bitcoin because it possesses unique properties that make it superior as a form of money relative to all other currencies. Because money is a solution to an intersubjective problem, monetary systems tend to converge on a single medium. Or rather, economic systems naturally emerge from a single medium due to the function of money. The properties inherent in bitcoin are causing the market to converge on it as a tool to communicate and measure value because it represents a step-function change improvement over any other monetary medium. If anyone comes away with the fundamental view that money is a necessity and that monetary systems naturally converge, the question then centers on whether bitcoin is optimized to fulfill the monetary function better than any of the competition."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Civilization as we know it would not exist without money. Without money, there would be no airplanes, no cars, no iPhones, and the ability to fulfill very basic necessities would become materially impaired. Millions of people could not peacefully inhabit a single city, state, or country without the function of money. Money is the economic good that allows food to reliably show up on grocery shelves, gas to be at the gas station, electricity to power homes, clean water to be abundant, etc. It is money that makes the world turn and it would not turn in the way that most have taken for granted if not for the function of money. It is a massively underappreciated function; one that is poorly understood because it is generally not consciously considered. In the developed world, reliable money is taken as given. So too are the basic necessities delivered through the coordination function of money."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Consider, for example, a local grocery store and the range of choice that converges in a single store. The number of individual contributions and skills that are required to make that happen is mind-boggling. From the coordination of the store itself, to the individual packaging, to the technology providers, to the logistics networks, to the transportation networks, to the payments systems, and right down to each individual item of food. Then as a derivative, consider all the unique inputs that go into each item on the shelf. The grocery store is just the fulfillment side; the production of each input has its own diverse supply chain. And it is just one modern marvel. Deconstructing the inputs of a modern telecom network, energy grid or water and waste management system is similarly complex. Each network and the participants therein rely on the others. Producers of food rely on individuals that help fulfill energy demand, telecom services, logistics, clean water, etc. among others and vice versa. Practically all networks are connected, and it is all made possible through the coordination function of money. Everyone is able to contribute their own skills based on their own personal interests and preferences: receive money in return for value delivered today, and then use that same money to acquire the specialized value created by others in the future."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "And it does not all happen by chance either. Some not-so-rigorous thinkers suggest that money is either a collective hallucination or that it derives value from the government. In reality, money is a tool that was invented by man to satisfy a very specific market need in facilitating trade. Money helps facilitate this activity by acting as an intermediary between a series of present and future exchanges. Without any conscious control or direction, market participants evaluate various different goods and converge on the tool with the properties best-suited to facilitate the very express purpose of converting present value for future value. Whereas individual consumption preferences vary from person to person and change constantly, the need for exchange is practically universal, and the function is distinctly uniform. For every individual, money allows for value produced in the present to be converted into consumption in the future. The value one places on a home, a car, food, leisure, etc. naturally changes over time and logically varies from person to person. But the need to consume and the need to communicate preferences does not change and applies to all individuals on an intersubjective basis."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Money exists to communicate these preferences and ultimately, value. But recognizing that all value is subjective (and not intrinsic), money forms the baseline to establish an expression of value and more importantly relative value. Money represents the collective recognition that everyone benefits from the existence of a common language to communicate individual preferences. It aggregates and measures the preferences of all individuals within an economy, at any point in time, and it would not be possible, or at the very least extremely inefficient, to communicate value if not for a common constant upon which everyone could agree. Think of money as the constant against which to measure all other goods. If it did not exist, everyone would be at a practical standstill, not able to agree on the value of anything. By comparing against a single constant, it then becomes more practical to discern the relative value of two other goods.  There are billions of goods and services produced by billions of individuals, all with unique preferences. Through the convergence on a single form of money to aggregate and communicate all preferences, a price system ultimately emerges. By measuring and expressing the value of all goods in a common intermediary (money), it then becomes possible to understand how much one good (or resource) is valued relative to any other."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Without the use of a common currency, there would be no concept of price. And without the concept of price, it would not be possible to do any range of economic calculation. The ability to perform economic calculation allows individuals to take independent actions, relying on the information communicated through a price system, to best satisfy their own needs by understanding the needs of others.  In fact, it is a price system that allows supply and demand structures to form, and it is ultimately a necessity because it provides for the communication of information, without which the fulfillment of basic needs would not be possible. Imagine if nothing you consumed had a discernible price. How would you know what you needed to produce in order to obtain the goods you prefer? Then recognize that your own conception of the value you produce and the very existence of goods and services produced by others would not be available if not for some expression of price existing. It becomes circular, but money is the good that allows the underlying structures of an economy to form through the price system. While it is often extolled as the root of all evil, money may just be the greatest accidental invention ever created by man, and one that could not have emerged by conscious control."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Late stage Silicon Valley thinking has many people believing that hundreds, if not thousands, of currencies may exist in the future. The machines are going to do all the calculation! AI and quantum will handle it. An intellectually \u201csafe\u201d view to hold is that 95% of cryptocurrencies will probably fail but there are some \u201cinteresting\u201d projects. \u201cIt is inherently difficult to know which will succeed.\u201d \u201cMuch like venture capital investing, most will fail but the ones that win will win big.\u201d At least, this is what most of Silicon Valley would have you believe because it is a defensible parallel to historical experiences investing in companies. In reality, it is a blanket hedge lacking in first principles. It is also applying a familiar formula to an entirely distinct class of problem."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "While it may seem logical to form a mental framework around bitcoin in relation to the rhyming history of technology startups, there can be no comparison whatsoever. Bitcoin is money, not a company. It would be illogical to assume competition between two monetary mediums (or multiple) would be in any way parallel or would follow a similar pattern to that of two companies. Companies compete in a capital formation arms race; in order to do so, they need money to coordinate economic activity. How do they get money? By using money to coordinate the production of goods and services and by selling the output for more money (profit). In essence, companies compete for the same pool of money in order to accumulate capital. Money is the tool that makes the wheel go round. It simply would not be possible to coordinate all the individual skills necessary in order to allow for the fulfillment of goods and services derived from the complexity of most modern supply chains without money. It also would not be possible if it were not for the fact that a large group of people accepted a common form of money."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "In the supply chain of production, money serves a distinct function of a different class than any individual good or service. It is the distinction between the fulfillment of preferences (production of goods and services) and the coordination of preferences (money). The fulfillment of preferences is dependent on the coordination of preferences, and the coordination of preferences is dependent on a price system, which can only form as a derivative of mass convergence on a single monetary medium. Without a pricing system, division of labor would not exist, at least not to the extent necessary to allow for the functioning of complex supply chains. This is the root level principle most miss when contemplating a world of many currencies. Any pricing system is derived from a single currency. The concept of price would not exist if not for a critical mass of individuals producing a diverse set of goods and services and communicating the value of those goods and services through a common medium. In order to derive the benefit of money and price, convergence is a precursor. As a result, it may be more accurate to say that economic systems emerge from a single monetary medium rather than converge on one. Individuals converge on a single monetary medium and the output is an economic system."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Whereas the value of all other goods and services is consumption, the value of money is exchange. Exchange is the good any individual is purchasing when choosing to convert value (the subjective output of time, labor and physical capital) into a monetary good. Individual consumption preferences are unique, but money serves one singular function for all market participants: to bridge the present to the future (whether it be for a day, week, year or longer). In any exchange of present value, some time continuum exists until a future exchange. At the point of exchange, each individual must make a decision as to which monetary good will best serve the function of preserving value created in the present into the future. A or B? While an individual can choose to hold one or multiple currencies, one is definitionally going to perform that function more effectively. One will preserve future purchasing power better than the other. Everyone intuitively understands this and makes a decision based on the inherent properties of one medium relative to another. When deciding which monetary good to use, the preference of one individual is impacted by the preference of others, but each individual is making an independent evaluation discerning the relative strengths of multiple monetary goods. It is not coincidence that the market converges on a single medium because each individual is attempting to solve the same problem of future exchange, which is interdependent on the preference of others."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "The ultimate goal is to reach consensus such that each individual can communicate and exchange with the widest and most relevant set of trading partners. Collectively, it is an objective evaluation of tangible goods based on an intersubjective need. The whole point is to find the one good that everyone can agree is i) a relative constant, ii) measurable and iii) functional in exchange. The existence of a constant creates order where none existed previously, but that constant must also be functional as both a measurement tool and a means of exchange. It is the combination of these characteristics, often described as aggregating the properties of scarcity, durability, fungibility, divisibility, and transferability, which are unique to money. Very few goods possess all of these properties, and every good is unique, with inherent properties that cause each to be better or worse in fulfilling certain functions within an economy. A is always different than B, and the combination of properties that perfect a monetary good are so rare that the distinction from one to another is never marginal."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "More practically, everyone agrees on a single monetary good through which to express value because it is in their individual and collective interests to do so. It is the problem itself: how to communicate value with other market participants. It would be counterproductive to the entire exercise if a consensus were not formed. But it is the properties of a monetary good itself that allow for convergence and consensus. The imagined world of thousands of currencies is blind to these fundamental first principles. A critical mass of individuals converging on a common medium is the input required to ascertain the information that is actually desired. And the value of a common medium only increases in value as more and more people converge on it as a tool to facilitate exchanges. The fundamental reason being that with more individuals converging on a single medium, the medium actually accumulates more information and presents a greater utility."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Think of each individual as a potential trading partner. As individuals adopt the common medium as a standard of value, all existing participants in the monetary network gain new trading partners, as do the individuals that become part of the network. There is mutual benefit, and ultimately the range of choice expands. But what also occurs as a monetary network expands is that more goods come to be valued in the common medium of exchange. More prices exist, and as a result, more relative prices do as well. More information is aggregated into the common medium, which can then be relied upon by all individuals within the network (and by the network as a whole) to better coordinate resources and respond to changing preferences. The constant becomes more valuable and inherently more reliable as it communicates more information about more goods produced by more individuals. The constant actually becomes more constant as more variable information is communicated through it."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "As adoption of a monetary network increases by an order of magnitude (10x), possible network connections increase by two orders of magnitude (100x). While this helps demonstrate the mutual benefit of adoption, it also highlights the consequence of converting value into a smaller monetary network. A network that is one-tenth the size has 1% of the number of potential connections. Not every network distribution is equal, but a larger monetary network translates to a more reliable constant to communicate information \u2013 greater density, more relevant information and ultimately a broader range of choice. The size of a monetary network and the expected growth of that network become critical components of the intersubjective A/B test, when each individual is determining which medium to utilize. While the number of people with whom any individual can maintain social relationships is inherently limited, the same limits do not apply to monetary networks. It is money that allows humans to break from the constraints of Dunbar\u2019s number. A monetary network allows for millions (if not hundreds of millions) of people unknown to each other to contribute value at end points in the network, with relatively few direct connections needed."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Monetary networks ultimately accumulate the value of all other networks because all other network effects would not exist without a monetary network. Complex networks cannot form without a common currency to coordinate the economic inputs necessary to kick start the positively reinforcing feedback loops of price.  A common currency is the very foundation of any monetary network, which allows other value networks to form. It provides the common language to communicate value, ultimately leading to trade and specialization, and organically creating the ability to expand the use of resources beyond the reach of \u201cconscious control\u201d (to steal Hayek). When contemplating the network effects of a social network, a logistics network, a telecom network, energy grid etc., add them all together and that is the value of a monetary network. A monetary network not only provides the foundation for all other value networks to form, but the currency of that network is what pays for access to all derivative networks within the monetary network. The existence of the common currency is the engine and the oil."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Yes, the dollar, euro, yen, pound, franc, yuan, ruble, lira, peso, etc. all co-exist today, but this is not a natural function of an open, global economy. Instead, each fiat currency that exists today emerged as a fractional representation of gold, which the world had previously converged upon as a monetary standard. None would subsist without the forces of government intervention; nor would any fiat currency have ever emerged if not for the prior existence (and limitations) of gold as a monetary medium. Modern monetary theorists and gold bugs alike will never admit it, but the calamity that is all fiat systems is nothing more than the manifestation of gold\u2019s failure as a monetary medium. It is a dead man walking. The gold standard was formally abandoned in 1971, and the subsistence of jurisdictional fiat systems since then merely represents a transient departure from free market monetary forces. Modern fiat systems have only managed to survive as long as they have because a solution to the very problem created by fiat did not yet exist. Bitcoin is that solution, and ever since its creation, individuals have been converging upon it as a new monetary standard; a trend that will only continue as knowledge naturally distributes."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "The market converges on bitcoin over time and its value continues to increase because it provides a constant that is superior to any other form of money. Bitcoin has an optimal monetary policy, and that policy is credibly enforced on a decentralized basis. Only 21 million bitcoin will ever exist, and the element of trust is removed from the equation entirely. Bitcoin\u2019s fixed supply is enforced by a network consensus mechanism on a decentralized basis. No one trusts anyone, and everyone enforces the rules independently. As an aggregate of these two functions, bitcoin is becoming the scarcest form of money that has ever existed. Finite scarcity is a property no other form of money has ever or will ever achieve, and demand for bitcoin is fundamentally driven by that scarcity. However, scarcity is a two-sided equation. A fixed supply may be the primary draw, but demand is a critical and often overlooked aspect of scarcity. Demand is what actually makes scarcity a utility as a constant in exchange. Bitcoin becomes more and more scarce as a two-way function of increasing demand and a completely inelastic terminal supply. The scarcity of its fixed supply creates demand but increasing demand then creates greater scarcity. It sounds circular because it is. If there were 21 million bitcoin and only 1 person valued it, there would be nothing scarce or useful about bitcoin. But if 100 million people valued bitcoin, 21 million starts to become scarce. And if the network grew to one billion people, 21 million would become extremely scarce, and bitcoin would represent a greater utility as a constant."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "With a fixed supply, increased demand naturally results in bitcoin becoming more distributed. There is only so much to go around, and the pie ends up getting split up into smaller and smaller shares owned by more and more people. As more individuals value bitcoin, the network not only becomes a greater utility; it also becomes more secure. It becomes a greater utility because more people are communicating in the same language of value through a more reliable constant. And as more individuals participate in the network consensus mechanism, the entire system becomes more resistant to corruption and ultimately more secure. Recognize that there is nothing about a blockchain that guarantees a fixed supply, and bitcoin\u2019s supply schedule is not credible because software dictates it be so. Instead, 21 million is only credible because it is governed on a decentralized basis and by an ever increasing number of network participants. 21 million becomes a more credibly fixed number as more individuals participate in consensus, and it ultimately becomes a more reliable constant as each individual controls a smaller and smaller share of the network over time. As adoption increases, security and utility work in lock-step. Consider the distribution and relative density of bitcoin adoption throughout the world (heat map below of network nodes). As reach and density within each market spread, bitcoin\u2019s constant becomes harder and harder."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "As individuals increasingly opt-in, 21 million becomes more and more credible, and in the mind of those who adopt it, finite scarcity becomes what differentiates bitcoin from all other forms of money \u2013 both legacy currencies and competing cryptocurrencies alike. All other currencies either centralize over time (e.g. the dollar, euro, yen, gold) or were too centralized from the start (e.g. all other cryptocurrencies) to credibly compete with a fixed supply of 21 million. Centralization inherently creates the need to rely on trust, and trust ultimately puts the supply of any currency at risk, which in turn impairs demand and marginalizes its utility in the function of exchange. Whereas all other currencies depend on trust, the constant bitcoin provides is trustless. 21 million is only credible because bitcoin is decentralized, and bitcoin becomes increasingly decentralized over time. The best any other form of money could possibly do is match bitcoin, but practically, it is not possible because individuals converge on a single medium, and bitcoin beat every other currency to the punch. Every other currency is ultimately competing against the ideal constant; one that will not change and that does not rely on trust."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "All forms of money compete with each other for every exchange. If the primary (or sole) utility of an asset is the exchange for other goods and services, and if it does not have a claim on the income stream of a productive asset (such as a stock or bond), it must compete as a form of money. As a consequence, any such asset is directly competing with bitcoin for the exact same use case, and no other currency will ever provide a more reliable constant because bitcoin already exists and it is finite. Because individuals converge on a single medium, scarcity in bitcoin will perpetually be reinforced on both the supply and demand side, whereas the opposite force will be in effect for all other currencies due to the reflexive nature of monetary competition. The distinction between two monetary goods is never marginal, and neither is the consequence of individual decisions to exchange in one medium rather than another. Money is an intersubjective problem, and a choice to opt into one monetary medium is an explicit opt out of the other, which in turn causes one network to gain value (and utility) at the direct expense of another. As bitcoin becomes more scarce and more reliable as a constant, other currencies become less scarce and more variable. Monetary competition is zero sum, and relative scarcity, a dynamic function of both supply and demand, creates the fundamental differentiation between two monetary mediums that only increases and becomes more apparent over time."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "But remember that scarcity for scarcity sake is not the goal of any money. Instead, the money that provides the greatest constant will facilitate exchange most effectively. The monetary good with the greatest relative scarcity will best preserve value between present and future exchanges over time. Relative price and relative value of all other goods is the information actually desired from the coordination function of money, and in every exchange, each individual is incentivized to maximize present value into the future. Finite scarcity in bitcoin provides the greatest assurance that value exchanged in the present will be preserved into the future, and as more and more individuals collectively identify that bitcoin is the monetary good with the greatest relative scarcity, stability in its price will become an emergent property (see Bitcoin is Not Too Volatile)."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "While scarcity is the bedrock, not all scarce goods are functional as money. In order to be functional as a tool to communicate value, a monetary good must be a relative constant, easy to measure and functional in exchange. A ruler may be an effective measurement tool, but rulers are not scarce, nor is it easy to carve up pieces of a ruler into larger and smaller units to facilitate exchange. In exchange, a monetary good being scarce and measurable allows for the measurement of all other goods; the ability to easily subdivide and transfer a monetary unit provides for practical utility in exchange. Bitcoin combines finite scarcity with the ability to subdivide each whole unit down to 8 decimal points (0.00000001 or one 100,000,000th of a bitcoin) and transfer any amount of value, however large or small. Just as scarcity for scarcity sake is not necessarily valuable in the context of money, neither is the property of divisibility. It is the combination that becomes valuable in the context of money, particularly when each subdivided unit is fungible \u2013 when each individual unit is essentially interchangeable and each of its parts is indistinguishable from another part. It is these properties together that allow bitcoin to not only be a perfect constant but also an effective measure of value to facilitate exchange."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "In the code, one bitcoin is actually represented as 100,000,000 sub-units, with the smallest unit referred to as a satoshi (or sat for short). Technically, one bitcoin is 100,000,000 sats. While one bitcoin equates to approximately $9,000 today, one satoshi is equal to one-twentieth of a penny. In essence, anyone can exchange any amount of value into bitcoin. Bitcoin, as with any money, is functional for one purpose, to store value between a series of exchanges. Receive bitcoin for value produced today, save, spend bitcoin in the future in return for value produced by others. It will perform the same function regardless of amount. The practical consequence of divisibility is that bitcoin is capable of measuring any and all value which allows it to support any and all adoption. Individuals produce a wide range of value, and divisibility allows all individuals to utilize bitcoin as a savings mechanism regardless of whether it be to store $50 or $50,000 in value. For a monetary good to be an effective communication tool, it must be able to measure the range of value produced by all individuals, and bitcoin does this flawlessly. The ability to divide and transfer any amount of bitcoin makes it accessible to all individuals and ultimately all goods produced, regardless of how much value is attributable to each."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "In the A/B test of monetary competition, if A > B, any amount of A will perform the function of money better than any amount of B. Over time, A will increase in purchasing power relative to B whether it be for $50 or $50,000-worth of value. Never be confused by a list of cryptocurrencies trading on Coinbase that look like a \u201cbetter deal\u201d because the price is \u201ccheap\u201d whereas bitcoin appears \u201cexpensive.\u201d Always remember that bitcoin is capable of being divided into smaller or larger units to store more or less value. One bitcoin is an inherently arbitrary unit, as is one unit of any currency. The market test is whether A is more functional as money than B. It is an intersubjective decision, and while the market is communicating which network it believes performs the monetary function more effectively through price and value, network value is the output, not the input. The input is each individual evaluating the properties of the monetary good itself relative to others. If bitcoin is A in your evaluation, then there is no \u201ctoo expensive.\u201d Bitcoin may be over or undervalued at any point in time, but each individual that adopts bitcoin increases the value of the network (recall the discussion on trading partners + network connections). And the ability to be divided easily into very small units allows for a practically limitless number of individuals to convert and communicate value through the network. If A is greater than B, and if A can support unlimited adoption, it eventually obsoletes the need for network B."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "As individuals independently evaluate this A/B test, more people ultimately adopt bitcoin, and bitcoin becomes divided into smaller and smaller units (on average). This is the result of increasing demand combined with a fixed supply, and the value of the network actually increases as a function of this process. As a network, bitcoin becomes more valuable as it is valued by more people. Essentially, 0.1 bitcoin = $1,000 is more valuable than 1.0 bitcoin = $1,000, despite each being worth the same measured in dollar terms. More exchange (and ultimately more commerce) becomes possible the more valuable bitcoin becomes in total, but value is really an output of more and more people choosing to adopt bitcoin as an exchange intermediary. Each individual owns a smaller and smaller nominal amount of the currency, but the purchasing power of each equivalent unit increases over time. With each exchange, every individual is conveying his or her own value onto the network and is doing so at the direct expense of a competing monetary network. Through this process, a new price is determined specific to the value created and measured by each individual, and as a result, bitcoin accumulates more information derived from a more diverse set of trading partners."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "While prices today may not yet be quoted in bitcoin terms, a pricing system is forming every time an individual converts value into bitcoin. Even if dollars are an indirect intermediary, value produced somewhere in the world, distinct to a particular individual, is expressed as a unit of bitcoin; as more and more people choose to do so and increasingly on a per-individual basis, that value converts to a smaller and smaller unit of bitcoin (on average). The consequence is that a smaller and smaller denomination of bitcoin can be used by more people to transfer an equivalent amount of value, and as bitcoin is measured by more people, its ability to measure relative value only increases. Since bitcoin can measure all value and can be adopted by a limitless number of individuals, it practically obsoletes the need for any other value transfer network over the long-term because the form of money with the lowest rate of change ultimately communicates more perfect information. Finite scarcity combined with divisibility creates an extremely powerful exchange intermediary. Bitcoin has the lowest terminal rate of change possible due to its absolute scarcity, and it can be divided to a fraction of a penny, which will allow it to measure value far more precisely than any other currency."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "With this baseline, the real knockout punch becomes the fact that bitcoin can be irrevocably transferred over a communication channel without the need for any trusted third-party as an intermediary. This is fundamentally different than digital payments in fiat systems, which are dependent on trusted intermediaries. In aggregate, bitcoin is a greater constant than any other form of money and is highly divisible (and measurable), while also capable of being transferred over the internet. Try to identify a single other good that could possibly share these properties: finite scarcity (greatest constant) + divisibility and fungibility (measurement) + ability to send over a communication channel (ease of transfer). This is what every other monetary good is up against as it competes for the convergent role of money. Practically, the only way to really appreciate the power of such a rare dynamic is through experiencing it firsthand. Any individual can access the network on a permissionless basis by running a bitcoin node on a home computer. The ability to power up a computer anywhere in the world and transfer a finitely scarce resource to any other individual, without permission or reliance on a trusted third-party is empowering. That hundreds of millions of people can do this in unison without anyone needing to trust other participants in the network is near-impossible to fully comprehend."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Bitcoin is often described as digital gold, but really, this does not do it justice. Bitcoin combines the strengths of physical gold with the strengths of the digital dollar without the limitations of either. Gold is scarce but difficult to divide and transfer, while the dollar is easy to transfer but not scarce. Bitcoin is finitely scarce, easy to divide, and easy to transfer. In their current forms, both gold and all fiat monetary systems are dependent on trust, whereas bitcoin is trustless. Bitcoin optimized for the strengths and weaknesses of both, which is fundamentally why the market is converging (and will continue to converge) on bitcoin to fulfill the function of money."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "If any individual comes to three principal conclusions: i) money is a basic necessity, ii) money is not a collective hallucination and iii) economic systems converge on a single medium, that individual is going to more consciously seek out the best form of money. It is money that preserves value into the future, and ultimately, allows individuals to convert their own time and their own skills into a range of choice so great that prior generations would find it difficult to imagine. Freedom is ultimately what a reliable form of money provides: the freedom to pursue individual interests (specialization) and the ability to convert the output of that value into the value created by others (trade). Whether individuals consciously ask themselves these questions or not, they will naturally be forced to answer them through their actions. They will also arrive at the same answer as those that do. The conscious and the subconscious arrive at the same place because the fundamental truths do not change, and the function of money is singular: to intermediate a series of present and future exchanges and to provide the very baseline to communicate subjective value among a wide group of individuals that stand to benefit from trade and specialization. Money is a necessity. There are discernible properties that make certain goods more or less functional in exchange, and exchange is an inherently intersubjective problem."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Owning bitcoin is becoming the cost of entry to what will likely be the largest and most diverse economy that has ever existed. Bitcoin is global and it is accessible on a permissionless basis. Because bitcoin becomes the common language of value for all participants, anyone that is a part of the network will be able to communicate and ultimately trade with other network participants. The more trading partners, the greater the value each unit provides to the individuals holding the currency. While there will likely always be jurisdictional friction that impedes trade, access to the same common currency removes the root source of friction in the communication of value, and bitcoin\u2019s fixed supply will allow its pricing mechanism to accumulate and communicate more perfect information with the least amount of distortion relative to any other form of money. And as more individuals choose to store value in bitcoin, its fixed supply becomes more credible and its pricing mechanism more reliable and relevant. New adopters of a monetary network both contribute value and realize value as a function of adoption, which is why it is not possible to be late to bitcoin, nor will bitcoin ever be too expensive."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "It does not matter how complex bitcoin is. At the end of the day, bitcoin becomes an A/B test. The need for money is real and individuals will converge on the form of money that best fulfills the function of exchange. No other currency in the world can ever be more scarce than bitcoin, and scarcity will act like a gravitational force driving adoption and communication of value. Today, most billionaires do not understand bitcoin. Bitcoin is an equal opportunity mind-bender. But even those who do not understand bitcoin will come to rely upon it. There are many fundamental questions. Bitcoin is volatile, seemingly slow, challenges to scaling, not commonly used for payments, consumes a lot of energy, etc. Stability is an emergent property that follows adoption, and all other perceived limitations will be solved as a function of the value that is derived from finite scarcity combined with the ability to measure, divide and transfer value. That is the innovation of bitcoin. Currency A has a fixed supply. Currency B does not. Currency A keeps increasing in value relative to Currency B. Currency A continues to increase in purchasing power relative to goods and services while Currency B does the opposite. Which one do I want? A or B? Make the right choice because the opportunity cost is your time and value. All of the rest simply explains why individuals will increasingly opt for A over B, but in practice, it all comes down to basic common sense and survival instincts. Bitcoin obsoletes all other money because economic systems converge on a single currency, and bitcoin has the most credible monetary properties."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "\u201cI don\u2019t believe we shall ever have a good money again before we take the thing out of the hands of government, that is, we can\u2019t take it violently out of the hands of government, all we can do is by some sly roundabout way introduce something that they can\u2019t stop.\u201d \u2013 F.A. Hayek."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Next Edition: Bitcoin is a Rally Cry"}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Views presented are expressly my own and not those of Unchained Capital or my colleagues. Thanks to Will Cole and Phil Geiger for reviewing and for providing valuable feedback."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin Obsoletes All Other Money", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Gradually, Then Suddenly", "completion": "This is the first of a weekly series that I\u2019ve decided to write on the subject of bitcoin, inspired by my friends Marty Bent and Saifedean Ammous. Education is such a critical aspect of bitcoin and I hope that, by distilling my own thoughts, I can help others accelerate their path in understanding a complex subject.  I\u2019ve titled the series Gradually, Then Suddenly. As Hemingway penned the process of going bankrupt, it\u2019s also the way that government-backed currencies hyper-inflate and often how people come to understand bitcoin (gradually, then suddenly). Writings will generally stick to bitcoin but will also include the Fed and monetary economics as these stories are deeply intertwined. Because I\u2019ll be trying to keep concise, the series will communicate my principal conclusions and opinions rather than setting out to present every detail that led to them; my intention is to provide insight into my thought process and to provide a roadmap if others are interested in learning more. My hope is to reach a broader audience (beyond those that have been formative in my own journey) and to help folks on the periphery gain a better understanding of why many of us are so focused on bitcoin as a subject matter. Views presented are expressly my own and not those of either Unchained Capital or my colleagues. Hope you enjoy & please provide feedback."}
{"prompt": "Gradually, Then Suddenly", "completion": "Or rather, Bitcoin has become money (to me). It was a slow process that involved unlocking a number of mental blocks along the way but it began with asking the question, what is money? That is the beginning of the real rabbit hole. And not the speculative, I\u2019m looking for a lottery ticket blockchain-is-going-to-change-the-world kind of rabbit hole. At the root level, it\u2019s the rabbit hole that attempts to answer the question, \u201cwhy is the dollar in my pocket money?\u201d Why do hundreds of millions of people exchange their hard-earned, real-world value every day for this piece of paper (or digital representation)? It\u2019s both a difficult question to ask and a harder one to answer, something I realized everyone has to approach in their own way, on their own timeline and guided by their own life experiences. People have to be interested in that question in order to even begin to understand bitcoin."}
{"prompt": "Gradually, Then Suddenly", "completion": "For me, the path involved first understanding why gold was money. That involved understanding the unique properties which made something a better or worse form of money and what differentiated money as a unique economic good compared to most other types of economic goods. The Bitcoin Standard was formative for me in exploring the questions, not as a gospel but rather, as a foundation to think about the problem statement. When I applied that foundation to my own life experiences and to my own understanding of the existing financial system, and its flaws, only then did it begin to become intuitive. And that\u2019s something that may be evident (that bitcoin is intuitive as money) to those that have spent years thinking about it relative to monetary principles but it\u2019s also true that bitcoin is not intuitive. It\u2019s extremely not intuitive until it becomes intuitive and then over time it becomes hyper intuitive."}
{"prompt": "Gradually, Then Suddenly", "completion": "As part of my process, I found it helpful to consider bitcoin relative to two tangible guide posts: gold and the dollar financial system. Does A (bitcoin) share the properties of B (either gold or the dollar, respectively).  Is A better than B? Because what makes something money is not an absolutism; it is a choice between storing value in one medium vs. another, always involving trade-offs. Without understanding the flaws of the existing financial system (whether the dollar, euro, yen, bolivar, peso, etc., respectively), I could have never arrived at bitcoin being money in a vacuum."}
{"prompt": "Gradually, Then Suddenly", "completion": "While I worked at Deutsche Bank during the financial crisis, I had no baseline to understand what was actually happening. Ten years later, and after having worked in the restructuring world and at a macro hedge fund, only then did I start to develop a more clear understanding of what had really transpired in 2008 and 2009. Through my own research of the great financial crisis, the Fed and specifically the impact of quantitative easing (see here), I came to the principal conclusion that the root problem was that the financial system had been leveraged approximately 150-to-1 (too much debt and too few dollars) and that the insane degree of leverage was only made possible as a function of Fed policy which had consistently prevented system-wide deleveraging over the course of the three decades leading up to the crisis. Further, it became apparent that the solution (quantitative easing) merely caused an unsustainable credit system to metastasize over the subsequent ten years, making future QE an inevitability. I became convinced that, whether bitcoin survives or not, the existing financial system is working on borrowed time and that one way or another, something other than the status quo will be the inevitable path forward."}
{"prompt": "Gradually, Then Suddenly", "completion": "Then I figured out that bitcoin has a fixed supply. Developing an understanding of how and why that is possible is the basis of understanding bitcoin as money.  Doing so requires significant personal investment in understanding how economic incentives are woven together with bitcoin\u2019s technical architecture and why bitcoin can\u2019t be \u201cfaked\u201d or copied (or rather, why the incentives are so strong to cooperate and why the opportunity cost is too high to defect). It\u2019s a long road but will ultimately lead one to an understanding that a global network of rational economic actors, operating within a voluntary, opt-in currency system would not collectively and overwhelmingly form a consensus to debase the currency which they have all independently and voluntarily determined to use as a store of wealth. This reality (or belief system) then underpins and reinforces bitcoin\u2019s economic incentives, technical architecture and network effect."}
{"prompt": "Gradually, Then Suddenly", "completion": "So it\u2019s not simply that software code dictates that there will only ever be 21 million bitcoin; it\u2019s understanding why that monetary policy is credible and resilient and how bitcoin achieves verifiable scarcity. That can\u2019t happen overnight for any individual. It can\u2019t be explained to someone at a cocktail party. It is a reality that is reinforced and strengthened over time only by experiencing the incentive structure and seeing it work time and time again, every 10 minutes (on average). When then compared to how the dollar system works or even the underpinnings of gold, bitcoin as money becomes more intuitive."}
{"prompt": "Gradually, Then Suddenly", "completion": "In summary, when trying to understand bitcoin as money, start with gold, the dollar, the Fed, quantitative easing and why bitcoin\u2019s supply is fixed. Money is not simply a collective hallucination or a belief system; there is rhyme and reason. Bitcoin exists as a solution to the money problem that is global QE and if you believe the deterioration of local currencies in Turkey, Argentina or Venezuela could never happen to the U.S. dollar or to a developed economy, we are merely at a different point on the same curve. Bitcoin represents a fundamentally different structure and a more resilient path forward but you have to understand where we\u2019ve been and how we got here to know where we\u2019re going."}
{"prompt": "Gradually, Then Suddenly", "completion": "Hayek writes about the price mechanism as the greatest distribution system of knowledge in the world (The Use of Knowledge in Society). When the money supply is manipulated, it distorts global pricing mechanisms which then communicates \u201cbad\u201d information throughout the economic system. When that manipulation is sustained over 30-40 years, massive imbalances in underlying economic activity are created which is where we find ourselves today. Ultimately, gold\u2019s failure was the dollar and the dollar\u2019s failure is the economic distortion which led to, and which has been exacerbated by, QE. Bitcoin\u2019s promise is the solution to both. Because bitcoin\u2019s supply is fixed and cannot be manipulated, it will eventually become the most reliable pricing mechanism in the world and consequently, the greatest distribution system of knowledge. The volatility witnessed today is nothing more than the logical path of price discovery as adoption increases by orders of magnitude and as we advance toward that future state of full adoption."}
{"prompt": "Gradually, Then Suddenly", "completion": "\u2013 Vijay Boyapati on SLP"}
{"prompt": "Gradually, Then Suddenly", "completion": "Next week: Copying Bitcoin, the audacity of trying to print your own money."}
{"prompt": "Gradually, Then Suddenly", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Gradually, Then Suddenly", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Enders Game", "completion": "For context, the following research piece was written just before the Fed began to unwind its balance sheet (October 2017) and it hasn\u2019t been revised or altered since. At the time, I had set out to better understand the financial crisis and the impact of quantitative easing (QE) in an effort to then forecast what to reasonably expect when the Fed began to subsequently unwind QE. I was working independently at the time and crafted the ending to be a recommendation for traditional macro investors of how best to hedge based on my research."}
{"prompt": "Enders Game", "completion": "I have not updated the paper since but my fundamental views also have not changed. Separately, I believe there is value in it being a static piece; anyone reading today has the benefit of more history and knowledge than I had based on the subsequent 18-24 months from the time of writing. During this period, the Fed pursued an initial unwind of its balance sheet only to signal a reversal in March 2019. I generally have a dislike for research that constantly shifts the narrative to fit new data points which often results in revisionist history and also why I have chosen to leave this piece static, though I will write on the subject as part of a new weekly series that I just began to publish (Gradually, Then Suddenly)."}
{"prompt": "Enders Game", "completion": "We\u2019ll see if my views stand the test of time; I don\u2019t believe I will be right on everything but on the core thesis, I think I\u2019m on track. I make the point in the paper that the Fed would shift course more quickly than most people think (or thought) but if I could re-write the ending, I\u2019d incorporate bitcoin because really, where this story ends, bitcoin begins. One of the takeaways and principal conclusions that can be drawn is that future QE (by the Fed and globally) is a certainty and that\u2019s really why bitcoin exists."}
{"prompt": "Enders Game", "completion": "I recently appeared on Marty Bent\u2019s Tales from the Crypt podcast and we discussed this piece which I had previously shared with him privately. Many listeners requested to read it which is why I\u2019m only now making it public. It took me a few months but I finally got around to it. Despite being written in the Fall of 2017, it remains very topical both as the President actively jawbones Chairman Powell concerning the Fed\u2019s balance sheet policy and as the Fed figures out what to do about its Catch 22. I hope it provides readers with a better understanding of the financial crisis, the operations of the Fed, the impact of QE and what comes next."}
{"prompt": "Enders Game", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Enders Game", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "How many times have you heard the safety instructions before a standard commercial flight? You probably know them by heart, but every time, prior to takeoff, flight attendants instruct passengers traveling with children to put their oxygen mask on first and then tend to the children. Instinctively, it\u2019s counterintuitive. Logically, it makes all the sense in the world. Make sure you can breathe, so that the child dependent on you can breathe too. The same principle applies to the coordination function of money in an economy and the resources required to protect that function.  In a more philosophical safety warning, the flight attendant may say, \u201cplease make sure the money supply is secure so that we can continue to coordinate the activity of millions of people to build these hyper complex planes that afford you the opportunity to even contemplate the problem I\u2019m about to explain.\u201d"}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "We will come back to this, but you will never hope to understand the justification for the amount of energy bitcoin consumes without first developing an appreciation for the fundamental role money plays in coordinating economic activity. What is money? How does it work? How should it work? What is its function in society? If you haven\u2019t stopped to ask these questions, you can\u2019t begin to grasp the weight of the problem bitcoin intends to solve. And without an appreciation for the problem, the cost to secure the solution will never seem justified."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Any number of concerned onlookers raise the red flag about the amount of energy consumed by the bitcoin network. This concern stems from the idea that the energy consumed by the bitcoin network could otherwise be utilized for more productive functions, or that it is just plain bad for the environment. Both ignore the fundamental magnitude of how critical bitcoin\u2019s energy consumption actually is. In the long-game, there may be no greater, more important use of energy than that which is deployed to secure the integrity of a monetary network and constructively, in this case, the bitcoin network. But, that doesn\u2019t stop those that do not understand the problem statement from raising concerns."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "\u201cThe fundamentally wasteful nature of bitcoin mining means there\u2019s no easy technological solution coming.\u201d \u2013 the Guardian"}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "\u201cIn the context of climate change, raging wildfires, and record-breaking hurricanes, it\u2019s worth asking ourselves hard questions about Bitcoin\u2019s environmental impact.\u201d \u2013 Vice Media"}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "For background, bitcoin is secured by a decentralized network of nodes (computers running the bitcoin protocol). Economic nodes within the network generate, validate and relay transactions as well as validate and relay bitcoin blocks (time sequenced groups of transactions). Mining nodes perform similar functions but also perform bitcoin\u2019s proof of work function to generate, solve and transmit blocks to the rest of the network. By performing this work, miners validate history and provide a \u201cclearing\u201d function for current transactions, which all other nodes then check for validity. Think the clearing function of the New York Fed but on a completely decentralized basis every ten minutes (on average)."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "The work performed requires massive amounts of processing power contributed by miners all over the world, running 24 hours a day, 7 days a week. This processing power requires energy. For context, at 75 exahashes per second, the bitcoin network currently consumes approximately 7-8 gigawatts of power, which translates to ~$9 million per day (or ~$3.3 billion per year) of energy at a marginal cost of 5 cents per kWh (rough estimates). Based on national averages in the U.S., the bitcoin network consumes as much power as approximately 6 million homes. Yeah, it is definitely a lot of power, but it is also what secures and backs the bitcoin network. "}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "How could this much energy be justified? And what will bitcoin consume when a billion people are using it?  The dollar works just fine, right? Well that\u2019s just the thing, it doesn\u2019t. These resources are being devoted to fix a problem most don\u2019t understand exists, which makes justifying a derivative cost challenging. To help ease the pain of environmentalists and social justice warriors, we often point out a number of countervailing narratives to make it seem more palatable:  "}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "These considerations help enumerate why a simple view that bitcoin\u2019s energy consumption is necessarily wasteful or necessarily bad for the environment fails the proverbial test. However, without an appreciation for the enormity of the monetary problem bitcoin intends to solve, the marginal cost could never be justified. Bitcoin represents a solution to the systemic issues that exist within our legacy monetary framework and it relies on energy consumption to function. Economic stability depends on the function of money and bitcoin provides a more sound monetary framework which is why there is no more important long-term use of energy than securing the bitcoin network. So rather than expand on the many individual counterpoints to the mainstream narrative, there is no better place to focus than the first principle problem itself: the money problem or the global QE (quantitative easing) problem, see here."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "The problem of money is enormous, though most people do not recognize it. Most can feel it in their daily lives but cannot identify the root cause. Working harder, longer hours, going into debt and still barely getting by. There has to be a better way, but in order to identify a solution, one has to first see and understand the problem. The problem that exists is with our money and the impact it has on society is pervasive."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Without getting into the details of what money is (read the Bitcoin Standard or Nick Szabo\u2019s Shelling Out), we can more easily describe its function in society. Money is the good that facilitates economic coordination between parties that otherwise would not have a basis to cooperate. Put simply, it is the good that allows society to function, and it allows us to accumulate the capital that makes our lives better, which takes different forms for different people. There is a saying that money is the root of all evil, but as Hayek more appropriately describes it in the Road to Serfdom, money is an agent of freedom."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "\u201cMoney is one of the greatest instruments of freedom ever invented by man.\u201d\nF.A. Hayek, The Road to Serfdom (Reader\u2019s Digest Condensed Version)"}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "More specifically, money is the good that allows for specialization and the division of labor. It allows individuals to pursue their own interests; it is how individuals communicate their preferences to the world, whether in work or in leisure, and it is what creates the \u201crange of choice\u201d we all take for granted. Our modern economy is built on the foundation of freedom that money provides, but the end result is a highly complex and specialized system."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "To simplify the concept, Milton Friedman explains the complexity of a pencil (see here), detailing how no one individual is capable of producing a standard lead pencil. He details the wood required, the saw to cut the wood, the steel to make the saw, the iron ore to make the steel, the lead, the rubber for the eraser, the brass ring, the yellow paint, the glue, etc. He explains how making a single pencil requires the coordination and cooperation of thousands of people, including people who don\u2019t speak the same language, who likely practice different religions and who may even hate each other if they were ever to meet in person. And he explains that the ability to cooperate is a function of the price system and the economic good we call money."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Abstracting from the pencil, now consider the complexity of our modern economy. From cars to airplanes to the internet to mobile phones, even to your local grocery store. Modern supply chains are so complex and so specialized that they require the coordination of millions of people to deliver any of these basic functions. The orchestration of all this activity which fuels global trade is only made possible by the function of money."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Venezuela provides a tangible macro and micro example of the vital role money plays in economic coordination and the dysfunction that follows when a monetary good fails. Venezuela is one of the most oil rich countries in the world, but as an end game function of monetary debasement, Venezuela\u2019s currency has recently hyperinflated. As its currency has deteriorated, basic economic functions have broken down to the point where getting food at grocery stores or basic healthcare is no longer the baseline. It is a full-on humanitarian crisis, and at the root level, it is a function of Venezuela no longer having a stable currency to coordinate economic activity and to facilitate the production of the goods it needs to trade within the global economy."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "How does this relate to bitcoin and energy consumption? Being an energy rich country, oil was (and is) Venezuela\u2019s primary export; or rather, the good it needs to produce in order to trade. Despite being one of the most energy rich countries in the world, Venezuela\u2019s oil production is plummeting."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Venezuela can no longer import the technology or coordinate the resources it needs to extract its primary trading currency (oil). This has caused significant deterioration in its local economy, impairing its ability to produce the electricity needed to power its own energy grids, causing extended blackouts and preventing the delivery of basic services such as power, clean water or healthcare."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "What is occurring in Venezuela is devastating, and it is a function of the economic deterioration caused by hyperinflation. Monetary debasement distorts the price mechanism of a currency, which then creates economic imbalances. As economic coordination deteriorates, complex supply chains become disrupted resulting in a decline in the supply of real goods (e.g. food on shelves, oil production, etc.) and an imbalance between supply and demand. As more money is created, real goods become relatively scarce compared to the supply of money, which causes the very function of money to breakdown. Individuals have a disincentive to hold currency as real goods become more and more scarce, instead choosing to sell currency as quickly possible, creating a run on basic necessities and causing the currency to hyperinflate. Economic deterioration by monetary manipulation 101."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Now, many sitting comfortably in the developed world will look at Venezuela and think, \u201cit could never happen here,\u201d but that ignores all first principles. Whether it is well understood or not, the market structure of the Venezuelan bolivar or the Argentine peso is identical to that of the dollar, the euro or the yen. The Fed, the European Central Bank or the Bank of Japan may be better at managing stability (for now), but it does not change the fact that the underpinnings of all fiat currency systems are the same. "}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "To highlight the U.S. as an example, the Federal Reserve expanded the monetary base from $180 billion in 1984 to a peak of $4.2 trillion following QE3, an increase of 23x. Because of the nature of the Fed\u2019s credit-based economy, the economic distortion of this debasement occurred gradually (see here) until the financial crisis which occurred suddenly, and as a function of quantitative easing, we presently sit further out on the same ledge. If you believe the developed world is not in a precarious situation or not subject to a similar monetary foundation as Venezuela, I would respectfully point to patients zero: the Fed, the ECB and the Bank of Japan. Often, faith placed in these institutions is blind to both first principles and common sense, but consider the quote below from a resident Fed economist during the aftermath of the financial crisis and  as the Fed was in the middle innings of creating $3.6 trillion new dollars as part of quantitative easing:"}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "\u201cAlso, I want to just emphasize that I think the gaps in our understanding\nof the interactions between the financial sector and the real sector are profound\u201d\nDavid Wilcox \u2013 Fed Economist (August 2011)"}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "An honest review of history demonstrates the ill-temperament of those put in charge of managing our economies from central command. While admitting profound gaps in their ability to understand the implications of actions taken on the real economy, the response was to continue down the same path (but in a bigger way) while expecting a different result, the definition of insanity. Now, as we face the consequences of the response to the crisis, we have a choice between two great contrasts. A) a centrally-planned form of currency that is designed to lose its value; or B) a decentralized currency with a fixed supply. The latter comes with cost in the form of energy consumption, but the positive externality will be long-term economic stability."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Future economic stability is fundamentally why there can be no more important source of demand for the consumption of energy than the security of bitcoin\u2019s monetary system, especially when the alternatives (fiat and gold) are structurally flawed. If we wait to see the signs of hyperinflation, we\u2019re already lost. But Venezuela is not just an example of what transpires as a result of hyperinflation, it is a living example of the importance of energy production to the functioning of society. Some energy input is required for everything that we consume in our daily lives. The coordination of those energy inputs is dependent on the reliability and stability of the money we use. "}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Ignore your morning coffee for a minute and think basics: clean water, sanitation, food, medicine, basic healthcare, etc. The coordination of resources to deliver these basic services is dependent on a functioning monetary system. When a monetary system breaks down, social coordination and even the social fabric begins to go with it. If the basis of all trade is energy, and if we need money to coordinate trade, the highest and best use of that energy should first be to protect the monetary system. Put your proverbial \u201coxygen mask\u201d on first and then shift to dependents. Secure the foundation of trade and then focus on all of the derivatives."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Any and all concerns about the amount of energy bitcoin consumes or will consume is a red-herring. It is not that we should sacrifice electricity that could otherwise power homes; instead, it\u2019s that we will never have the electricity to power those homes if we do not have a reliable monetary system to coordinate economic activity and marshal resources. In practice, bitcoin will not practically compete for the same energy resources that fuel the basic productive and consumptive functions of our economy (not zero sum); instead, bitcoin\u2019s function as a currency system will ensure that those very energy needs can continue to be fulfilled."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "What would be bad for society is if more countries deteriorated into the economic and humanitarian disaster that is Venezuela, where basic health and human services cannot be reliably provided. And this is not to present a draconian vision or a dystopian future; instead, it is to articulate the importance and interconnectedness of both the money function and the energy function in complex, highly specialized economies."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "\u201cIf it prevents one instance of hyperinflation such as Venezuela from\nhappening [\u2026], bitcoin\u2019s energy consumption would be the best bargain humanity ever got.\u201d\n\u2013 Saifedean Ammous, The Bitcoin Standard Research Bulletin"}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Bitcoin represents a backup switch to the current architecture of the global financial system and is soon to be its primary engine. Setting aside the systemic risks that currently plague our financial system, bitcoin is a fundamentally more sound monetary system from the ground up. And, it is one secured by the production and consumption of energy. You do not have to believe that the dollar\u2019s fate will be that of the Venezuelan bolivar to recognize the importance and interplay between the stability of a monetary function and the production of energy resources that provide basic economic necessities. And the risk inherent in even the possibility of hyperinflation is so negatively asymmetric that the price of bitcoin energy consumption is of small relative cost."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Bitcoin will consume any and all energy resources necessary to secure its monetary network, which is inherently driven by the base demand to hold it as a currency. The more people that value the long-term stability it provides, the more energy it will consume. In the end, this consumption will ensure all other derivatives of energy consumption will continue to be fulfilled, which is why there is no more important long-term use of energy than securing the bitcoin network. Put a price on economic stability and the economic freedom a stable monetary system provides; that is the true justification for the amount of energy bitcoin should and will consume. Everything else is a distraction."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Next Week: Bitcoin is not too slow"}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Views are expressly my own and not those of Unchained Capital or my colleagues. Thanks for Will Cole and Phil Geiger for reviewing this version of Gradually, Then Suddenly and providing valuable feedback."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin Does Not Waste Energy", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin is Not Too Slow", "completion": "In Peter Thiel\u2019s Zero to One, he outlines the impact new technology has on building a non-zero sum future. While the book is focused on individuals and companies, bitcoin as a monetary system is the ultimate zero to one technology leap. For historical examples, Thiel highlights the advent of the steam engine as well as the shift from typewriters to computer processors among others. He also articulates a view that innovation has largely stagnated since the early 1970s, while noting that technological progress since then has been more 1 to n than 0 to 1. Bitcoin fixes this. Bitcoin\u2019s innovation is not only zero to one; it is fundamentally distinct from the class of innovation that is the focus of Thiel\u2019s book. Bitcoin is a monetary protocol built on digital scarcity, the impact of which will be far broader than steam engines and computer processors."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "There\u2019s a new meme floating around the internet; whatever the problem, bitcoin fixes this. Negative yielding debt? Bitcoin fixes this. Wealth inequality? Bitcoin fixes this. Endless global war? Bitcoin fixes this. Financial crises? Bitcoin fixes this. Rage culture? Bitcoin fixes this. We\u2019re not exactly sure how just yet, but it\u2019s an articulation of the balancing effect a sound and stable monetary system will have on every aspect of society. Money is the coordination function of society. It allows hundreds of millions of people to cooperate who otherwise would not have a basis to do so. And, bitcoin is the tool that will allow for more peaceable coordination because it is both unmanipulable and devoid of moral hazard. How it globalizes is the \u201c1 to n\u201d problem (not in the express sense as Thiel describes), but the solutions to scale bitcoin will naturally be incremental. The non-zero sum collective benefit that follows may not literally cure every ill in the world, but the invention of a step-function change monetary network is fundamentally different than any single product because money is the economic good that coordinates all other economic activity."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "\u201cThe problem is precisely how to extend the span of our utilization of resources\nbeyond the span of the control of any one mind; and therefore how to dispense with the need of conscious control  and how to provide inducements which will make the individuals do the desirable things without anyone having to tell them what to do.\u201d\n\u2013\nF.A. Hayek, The Use of Knowledge in Society"}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Hayek writes about the invention of money and the price mechanism as the tool that allows society to dispense with the need of \u201cconscious control.\u201d Bitcoin is the superior successor to this mechanism, and its zero to one innovation is digital scarcity, not payments or speed of transactions. While bitcoin\u2019s property of scarcity still needs further stress testing, it is a profound achievement and what makes bitcoin unique. Never before bitcoin has any asset, let alone a digital one, been finitely scarce; the end result of its innovation is the hardest form of money that has ever existed. That is the zero to one achievement and a phenomenon that almost certainly will not be repeated."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Every other problem that bitcoin will have to overcome is more pedestrian relative to scarcity. Digital payments? The idea that human ingenuity can create digital scarcity but that we then cannot layer on payments technology does not logically follow. Payments technology is just one of the many 1 to n innovations that will be built on top of bitcoin to globalize its adoption. Not only are payments easier to solve, it is also not a critical path that needs solving today. The primary use case for bitcoin today is as a savings mechanism, not payments. Over time, as adoption increases and as more infrastructure is built, bitcoin will evolve into a more transactional currency, but that process will occur gradually, not suddenly. And as the shift occurs, bitcoin adopters will continue to leverage legacy monetary systems and legacy payments rails."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "The bitcoin blockchain will never be a layer for mass payments, but there is a considerable amount of debate on this topic. Many hold the view that for bitcoin to be \u201csuccessful\u201d it needs to be a one-stop shop, combining the roles of currency issuer, settlement layer and payments rail. While bitcoin fulfills the first two functions beautifully (currency issuer + settlement layer), it is categorically not a payments rail.  Both for reasons of speed and scale, bitcoin fails the payments test. The good news? We don\u2019t need the bitcoin network to be a payments rail."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Much of the confusion in the philosophical (rather than technical) debate stems from the opening salvo of the bitcoin whitepaper: \u201ca Peer-to-Peer Electronic Cash System.\u201d Peer-to-peer has been interpreted by some to imply that bitcoin needs to be able to handle every last transaction in the world between any two peers. Separately, others believe that if bitcoin transactions cannot occur at the scale or speed of Visa or Mastercard, it is structurally flawed. Essentially, according to skeptics, if bitcoin cannot meet both of these standards, it fails on its promise. Thankfully it does not."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "For additional background, bitcoin blocks are solved every 10 minutes on average; however, bitcoin blocks are not solved precisely every 10 minutes on a fixed schedule. The next block may be solved in 1 minute or 20 minutes, 30 seconds or 36 minutes. The network adjusts such that blocks are solved on average every 10 minutes. How could a merchant or transaction processor live in a world either this slow or unpredictable? Separately, bitcoin blocks have a limited amount of space to include transactions. While there is not a fixed transaction capacity in bitcoin by count, each bitcoin transaction consumes a limited amount of block space; as a function of limited capacity, blocks include approximately 2,700 transactions on average. With ten-minute average block intervals, six blocks per hour, 24 hours per day, 365 days per year, that equates to a network capacity of approximately 145 million transactions per year which is the equivalent of approximately 4.6 transactions per second. Visa on the other hand processes 124 billion transactions per year at a rate of ~4,000 transactions per second (see here). "}
{"prompt": "Bitcoin is Not Too Slow", "completion": "How can bitcoin be the purely peer to peer engine that powers the global financial system, if it operates at nearly one one-thousandth the scale and speed of Visa alone? The reality has always been that, if bitcoin were to have a non-zero value, the consequence would be a system so valuable that any base layer would not be able to handle all transactions without sacrificing decentralization or censorship resistance. Without these properties, bitcoin would not be a zero to one innovation and its value function would break down. Ultimately, the bitcoin protocol layer provides the function of currency issuance and final settlement, but it is not capable of storing every small purchase, including your Starbucks, for the rest of time for everyone."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "If it were the latter, all transactions by all people, no matter how big or how small, would have to be validated and stored by every other person on earth. Without a mechanism to align the interests of network participants, a tragedy of the commons problem would exist and the end result would be a less secure currency system subject to centralization. Instead, we accept a mechanism to limit transaction throughput at the base layer, shifting aspects of bitcoin\u2019s peer-to-peer transactional architecture to separate layers that integrate with bitcoin. These tradeoffs have been made in order to secure the foundation of bitcoin\u2019s monetary system (decentralization \u2192 censorship resistance \u2192 fixed supply)."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Many point to this text from the bitcoin whitepaper released by its pseudonymous founder as evidence that bitcoin was always intended to fulfill every payment by every possible network peer. It does say \u201cpurely peer-to-peer\u201d after all. However, more important to bitcoin than anything written in this summary (or any interpretation) is bitcoin\u2019s consensus mechanism. Everything critical in bitcoin is enforced by a consensus of network participants, including its fixed supply and ultimately the capacity within each bitcoin block, which limits the number of transactions it can process. This is the fundamental difference between bitcoin and the legacy financial system: monetary policy by consensus rather than by fiat. Bitcoin\u2019s founder created a system that ultimately removed critical decisions from any central authority, instead deferring to the wisdom of market consensus. It is a system that is flexible enough to be adapted but rigid enough that any material change is very difficult. As a consequence, network peers have to decide, on a decentralized basis, how best to scale bitcoin. It is through this consensus mechanism that bitcoin dispenses of the need for \u201cconscious control.\u201d   "}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Everything comes with trade-offs. In bitcoin, there are two holy grails: a fixed 21 million supply and preventing the currency from being spent multiple times (the double spend problem). The value of bitcoin is derived from its ability to secure both of these functions on a decentralized, trustless basis and both are inextricably linked to bitcoin\u2019s fixed network capacity. Think of the capacity within each bitcoin block as valuable digital real estate. All market participants seeking to clear bitcoin transactions have to compete for block capacity. Scarcity in network capacity is the function by which bitcoin\u2019s shared resource is optimized. Or, think of it as bitcoin\u2019s solution to the tragedy of the commons. Competition for this scarce resource ensures that the resource is used efficiently and that its value is maximized. Ultimately, scarcity causes market participants to compete with each other, bidding up the value of the network\u2019s capacity, rather than shifting negative externalities on to the rest of the network."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "In bitcoin\u2019s free market, the highest value and most profitable transactions are prioritized. Without scarcity in transaction capacity, this value function would break down. It is less important that we optimize for transaction capacity and more critical that scarcity exists. No one really knows the optimal amount of transaction capacity at any point in time, partly because demand is ever changing but also because it is generally growing over time. The critical piece is that capacity is known and scarce, which allows market participants to plan and ultimately, to compete. The commons is never depleted; instead participants compete and innovate to figure out how best to utilize a scarce asset. Scarcity ensures that the commons is not abused and creates a predictable rate of growth in the overall size of bitcoin\u2019s blockchain, which ultimately protects and promotes decentralization."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "As discussed in a prior edition (see here), miners secure the bitcoin network by devoting real world energy resources to run cryptographic hashing functions and to solve bitcoin blocks. By solving blocks, miners validate history and clear current transactions which are then checked and validated by the rest of the network. In return, miners are paid in bitcoin. Devote resources to secure the network and get paid in the network\u2019s native currency (bitcoin). The actual compensation paid to miners comes in two forms: newly issued bitcoin and transaction fees. In order to devote resources today to secure the network, miners have to reliably expect that aggregate compensation will hold its value into the future."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Approximately every four years, the newly issued bitcoin paid to miners gets cut in half (the bitcoin \u201chalvening\u201d).  Today, with each block, 12.5 new bitcoin are issued. In approximately eight months, when the next halvening event occurs (see here), that amount will be reduced to 6.25 new bitcoin per block. Approximately four years after that, 3.125 new bitcoin per block will be issued. This process will continue until we reach the smallest unit of bitcoin (1/100,000,000th) and thereafter no new bitcoin will be issued. This is the issuance function that governs bitcoin\u2019s fixed supply (21 million), and as a derivative function, it also shifts compensation to secure the network from (mostly) new bitcoin today to ultimately a system relying completely on transaction fees."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "But how does this relate to Visa and transaction capacity? If it were not for the scarcity of capacity in each bitcoin block, there would not be a mechanism to create a transaction fee market. Scarcity in block space creates competition between market participants to clear transactions which causes them to bid up the value of real estate and to use it efficiently. Without a fee market, the only mechanism to pay miners to secure the network would be to alter bitcoin\u2019s fixed monetary policy and increase supply. But recall that scarcity in bitcoin\u2019s fixed supply (21 million) is the basis of its store of value property, which is where the rubber meets the road. By creating scarcity in network capacity, we also ensure the integrity of bitcoin\u2019s fixed supply, which makes the whole value cycle function. Working within this reality, scarcity is a far more important property than either the speed or ultimate capacity of transaction throughput."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Fixed Network Capacity \u2192 Limited Transaction Capacity \u2192 Fee Market \u2192 Fixed Supply of Bitcoin"}
{"prompt": "Bitcoin is Not Too Slow", "completion": "And because the real problem bitcoin is intending to solve is that of money and global QE (not payments), those that store wealth in bitcoin would much rather secure the money supply than sacrifice its long-term integrity and credibility for transaction throughput.  In short, the future of bitcoin is far more secure in a world where all market participants can depend on it having a reliably fixed and scarce supply, while accepting lower transaction throughput or speed as trade-offs. What good is high transaction throughput and faster speeds if the fundamental value of the underlying currency is at risk? The existing financial system has already made the opposite trade-off for us. High transaction throughput and fast transactions by way of centralization but with the cost of an architecture susceptible to systemic monetary debasement. Bitcoin represents the alternative, and we are not about to make the same mistake twice."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Ultimately, bitcoin is not competing with Visa for supremacy in global payments. Instead, bitcoin is competing with the dollar, euro, yen and gold as money, and any comparison to Visa, its transaction volume or transaction speed is fundamentally flawed. Bitcoin fulfills the role of currency issuer and final settlement. As a result, the proper comparison would be between bitcoin and the Fed as currency issuer and as a clearing mechanism. No one makes the mistake of confusing the functions of Visa for that of the New York Fed, but for some reason, the comparison is often made between Visa and bitcoin."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "While it would require time and investment, Visa\u2019s payment network could sit on top of the bitcoin network to fulfill payments much the same way it sits on top of the existing banking system. Rather than clearing the currency through a central bank, final settlement of transactions would clear through the bitcoin network. In the existing architecture, the payments layer (Visa) and the settlement layer (banking network/central banks) are separate and distinct. The principal problem bitcoin intends to solve has little to do with the former, but instead, with the mechanism by which currency is issued and cleared (think the Fed and QE). Visa helps move dollars but Visa is not the dollar. It is a technology company that provides a service; it has 17,000 employees. Bitcoin has none."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Whether credit or debit, Visa is an inherently trust-based credit system. While consumers generally associate swiping a Visa card (or the equivalent) at a point of sale terminal as payment, it really is not. Instead, balances are checked, transactions are authorized and settlement occurs later. Dollars are not actually cleared through a central bank or settled at the point of sale every time a transaction is processed. Individual transactions are also never really cleared. Instead, transactions are batched together, netted and settled at a later point in time; only then are accounts credited with proper balances. So when someone attempts to equate a Visa transaction with final settlement, that is just not the way the world works. But that is the comparison that is implicitly being made when someone attempts to compare Visa with bitcoin."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "When compared against its real competition (the Fed, ECB, BOJ, etc.), bitcoin begins to look like a Ferrari. Final global settlement approximately every 10 minutes, 24 hours per day, 7 days a week, 365 days a year on a permissionless basis. Compare this to the existing permissioned financial system, which is subject to multiple layers of bank and central bank intermediaries and only open during \u201cbusiness\u201d hours. This is the great misnomer that exists within bitcoin. Those that believe bitcoin to be too slow or lacking in network capacity are comparing bitcoin to the wrong application. We could set up a network of banks on top of the bitcoin network and the payments system could function as it does today."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "The push back on this point is the risk of centralization. If bitcoin were to just sit in centralized banks, it would increase the possibility that the bitcoin network could be co-opted and undermined by a network of banks and central banks, whether to force changes to network consensus rules or to censor end users. Ultimately, this was gold\u2019s failure as a monetary medium. It was susceptible to centralization, which then spawned fiat currencies, which have turned out to be easily manipulable. While this is unlikely (and hopefully not) how bitcoin scales, money and payments technology are distinct problems. The fundamental reason being that there are two sides to every value transfer; one side almost always involving money and the other as the fulfillment of goods and services. Payments layers help provide a bridge."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Because of the nature of trade, the two sides of a value transfer generally, and naturally, occur by different processes and at different points in time. Think about the settlement of currency on one side and the transfer of title to a home or car on the other. Or, payment for a good on Amazon and the fulfillment of that good two days later. Two different processes, occurring at two different times. And, it is important to recognize that bitcoin has no knowledge of the outside world, whether identities or the second leg of a value transfer; all bitcoin knows how to do is issue and validate currency (whether a bitcoin is a bitcoin). This is really the function and limitation of any base currency system. Payments layers provide a bridge between currency settlement (the Fed or bitcoin) and the fulfillment of goods and services. Gold solved mass payments via bank centralization, the dollar, the Fed and large payments processors such as Visa. Bitcoin likely solves payments through a technologically superior mechanism, but we have time to solve what is a separate and distinct problem from that of money."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "If we solve the problem of money through digital scarcity first (zero to one), the technology advancements to scale transactions and ultimately solve payments are 1 to n. It is not credible to think that human ingenuity can solve the former but then fail on the incremental derivatives. It is not just a matter of hope and faith; instead, it is one of reason and logic, considering both the advancements in scaling solutions that are already being pursued and the challenges relative to the problem bitcoin has already solved. Permissionless innovation and the economic incentives inherent in bitcoin will coordinate and accelerate solutions to any number of future challenges. Market participants have an incentive to increase the value of the network and to innovate to scale the network, but the solutions will have to work within the network\u2019s consensus or garner sufficient consensus to change the rules."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Because of the nature of bitcoin\u2019s economic incentives, it is far more likely that scaling solutions work within existing consensus rules. One such example of an advancement to scale bitcoin within the network\u2019s consensus is the lightning network. The lightning network builds on top of bitcoin as a trust-minimized layer to scale transaction capacity, which still remains fundamentally distinct from payments fulfillment. However, if successful, lightning will be used to create bitcoin payment channels that enable far greater transaction throughput at far lower cost, the scale and speed of which would rival Visa. While it may not be the ultimate solution, it is an example of the innovation that bitcoin is fostering. Lightning is also only one of many solutions that are actively being developed, and competition will drive us toward the best scaling solutions, of which there may be a combination of many."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "The approach to scaling bitcoin is a slow and conservative process. Bitcoin is too important to follow the Silicon Valley mantra of move fast and break things. Instead, it\u2019s move slowly and don\u2019t break anything.  If a global financial system is to be built on a decentralized monetary system, the foundation must be protected at all cost. Ensure the security of the base monetary layer (bitcoin) first and then allow network participants to innovate on top of it in a permissionless manner. Remember that bitcoin is only ten years old; we are in the very inception of bitcoin\u2019s monetization event, and infrastructure is still being built to allow for the proliferation of this new technology. "}
{"prompt": "Bitcoin is Not Too Slow", "completion": "It\u2019s a little ridiculous to contemplate the problem bitcoin has already solved and then immediately pivot to a \u201cbut why not mass payments today\u201d line of thinking. Especially when considering that bitcoin, in its clearing function, is already faster and more reliable than comparable mechanisms for final settlement of dollars, euros, yen or gold. Then, when understanding that the fundamental use case for bitcoin today is as a long-term savings mechanism (not to fulfill payments), it becomes more clear that not only is the problem misdiagnosed but also that the desired solutions can wait. We will need the ability to fulfill payments in the future, but we have time before we get there. In due time, we\u2019re going to have our cake and eat it too."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Next week: The Jackson Hole Dilemma and Negative Interest Rates"}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Views presented are expressly my own and not those of Unchained Capital or my colleagues. Thanks to Will Cole and Phil Geiger for continuing to review my rambling thoughts and for providing valuable feedback."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin is Not Too Slow", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin Fixes This", "completion": "This past week marked that time of year when global central bankers, establishment economists and CNBC, et al. descend on Jackson Hole, Wyoming to discuss the systemic issues that plague our economy. Never seeming to find an answer but constantly in search of it; it is the perennial Jackson Hole dilemma. There is always much fanfare and this year was no different. The whole spectacle may have been highlighted by Lawrence Summers, former U.S. Treasury Secretary and former President of Harvard University. In a 28-part twitter thread, Summers questioned a number of foundational assumptions made by the establishment economic mainstream, of which he is a resident member. In the game of Marco Polo, Summers is getting warmer but he\u2019s still on the wrong side of the pool. Identifying symptoms of the problem maybe, but as with most mainstream economists, the obvious question is never asked. Could the whole apparatus of central bank policy be the root cause of the problem rather than the ever-elusive solution?"}
{"prompt": "Bitcoin Fixes This", "completion": "The baseline question from Summers: can central banking as we know it be the primary tool of macroeconomic stabilization in the industrial world over the next decade? Summers doubts that it can, but what if the better question were: is central banking the primary cause of macroeconomic instability? Since the financial crisis, quantitative easing has been the primary tool central banks have used in an attempt to stabilize the economy and to manufacture inflation. The playbook is as follows: increase the money supply, reduce interest rates and reflate asset values such that existing debt levels can be sustained and more debt can be created. "}
{"prompt": "Bitcoin Fixes This", "completion": "However, despite record low interest rates, the global economy has once again begun to deteriorate and the effectiveness of quantitative easing is naturally being questioned by many. As Summers notes, what has long been taught as axiomatic is now very much in doubt. Contrary to popular belief, the function of quantitative easing actually creates the instability it seeks to avoid. When understanding its base operation, it becomes clear that quantitative easing has always been a fool\u2019s errand.  As Nassim Taleb writes in the foreword to The Bitcoin Standard, the macroeconomic experts are not only not experts, they don\u2019t know it either."}
{"prompt": "Bitcoin Fixes This", "completion": "\u201cThe risk that the economy has entered a substantial\ndownturn appears to have diminished over the past month or so.\u201d\n\u2013 Former Fed Chair Ben Bernanke, June 2008"}
{"prompt": "Bitcoin Fixes This", "completion": "History has consistently established that the experts are limited in the field of their own expertise, yet policies such as quantitative easing continue to be pursued, largely because macroeconomics and central banking is a monoculture, as Taleb describes. The mainstream policy position starts with the assumption that central banking is core to the function of an economy; then debate centers on what levers to pull and how best to manage the economy via central bank planning. Active management of the money supply via quantitative easing is taken as a given; it\u2019s a question of how much and when, rather than if. "}
{"prompt": "Bitcoin Fixes This", "completion": "However, there remains an opposing economic view which argues that the very function of a central bank and the active management of the money supply is harmful to the economy. The opposing viewpoint cannot practically co-exist within a central bank because it is antithetical to the very function, which is why the monoculture exists and why a different course is never charted. Ultimately, the economic debate played out over the course of the 20th century and ended with what has become the current mainstream position. The consequence has been an economic system that relies heavily on monetary debasement and credit creation, both of which are achieved through quantitative easing."}
{"prompt": "Bitcoin Fixes This", "completion": "Now that bitcoin exists, it is no longer merely the subject of an intellectual debate. Instead, we now have two competing monetary systems that present great contrasts: one attempts to create stability through active management of the money supply, while the other tolerates interim volatility in the interest of maintaining a fixed supply. For the last ten years, the bootstrapping upstart has been gaining ground on the incumbent system, as demonstrated by its adoption and steadily increasing value relative to other currencies. Opting in to bitcoin means opting out of quantitative easing, and while it may be a volatile path, the long-term trend will continue because central banks continue to pursue the very policy tool which bitcoin prevents."}
{"prompt": "Bitcoin Fixes This", "completion": "While attempting to be a source of macroeconomic stabilization, central bankers inadvertently create instability through the manipulation of the money supply. By manipulating the supply of money, all global pricing mechanisms become distorted. As Hayek describes in The Use of Knowledge in Society, the price mechanism is the greatest distribution system of knowledge in the world. When the price mechanism becomes distorted, false signals are distributed throughout the economic system and the result is an imbalance between supply and demand which ultimately creates instability and fragility. Today, this instability has primarily been created and sustained as a function of quantitative easing. The financial crisis made it clear that the size of the credit system was both unstable and unsustainable; rather than allow the system to naturally deleverage, the Fed reflated asset prices and induced further credit expansion, such that existing debt levels could be sustained. Practically speaking, the central banking approach to solving a problem of too much debt was to induce the creation of even more debt, which was the original source of instability. Fortunately, bitcoin fixes this."}
{"prompt": "Bitcoin Fixes This", "completion": "In the most simplistic terms, quantitative easing is a technical term that describes how the Federal Reserve creates new dollars. It isn\u2019t technically \u201cprinting money,\u201d but it is functionally the same. The Fed digitally creates new digital dollars on a ledger (literally out of thin air) and uses those dollars to purchase financial assets, such as U.S. treasuries (government debt) or mortgage-backed securities. Following the financial crisis, the Fed introduced $3.6 trillion new dollars into the banking system via QE, quintupling the size of its balance sheet. As a net effect, more dollars exist within the banking system in the form of bank reserves and those reserves can then be used to lend or to purchase other assets. In simple terms, more dollars exist, which causes the value of each individual dollar to decrease."}
{"prompt": "Bitcoin Fixes This", "completion": "Quantitative easing is the root cause of why your dollar purchases less tomorrow; however, the effects of quantitative easing are transmitted gradually through the economy via the expansion of the credit system. Said another way, quantitative easing is designed to allow banks to expand credit; for every dollar that is created through quantitative easing, the credit system can expand by multiples of each dollar added. This incremental credit (think auto loans, mortgages, student loans, etc.) is then used to purchase goods in the real economy, which causes the prices of goods to rise and the value of the dollar to decline on a relative basis."}
{"prompt": "Bitcoin Fixes This", "completion": "The short answer is no. While many believe that quantitative easing was necessary, it merely kicked the can down the road and guaranteed more QE would be necessary in the future. The root cause of the crisis was a financial system that had become far too leveraged. At the time of the financial crisis, every dollar in the banking system had been leveraged and lent 150:1 (see Fed Z.1 & H.8 reports). There was too much debt and too few dollars, and the degree of leverage was only made possible as an indirect function of the Fed sustaining economic imbalances. With every recessionary business cycle in the decades leading up to the crisis, the Fed increased the supply of dollars to lower interest rates and to induce credit expansion. Rather than allow the system to course correct as a natural market function, the Fed\u2019s continual response was to reflate asset values by increasing the money supply such that existing debt levels could be sustained and more credit could be created."}
{"prompt": "Bitcoin Fixes This", "completion": "Through this function, the Fed inadvertently created the instability that existed in the financial system in 2008 because it created the environment which allowed for an unsustainable degree of system leverage to accumulate over the course of decades. While it has pursued similar policies for decades, the financial crisis created an environment that triggered a more drastic response from the Fed. Practically speaking, the Fed needed a bigger boat and in response to the market turmoil, it increased the supply of dollars by $3.6 trillion in order to stave off an impending financial collapse. This time was different; while the subprime crisis steals the headlines, the real issue was the cumulative effect of sustained imbalances in the credit system which had accumulated over many cycles and the overall degree of system leverage."}
{"prompt": "Bitcoin Fixes This", "completion": "In the Fed\u2019s economy, the credit system has become the marginal price mechanism. And because the Fed has a mandate to maintain price stability, it must implicitly maintain the size of the credit system in order to sustain general price levels. During the financial crisis, the credit system began to contract and asset price levels rapidly declined in a disorderly fashion. In order to reverse the impact, the Fed was forced to drastically increase the money supply (quantitative easing) in an effort to maintain the size of the credit system. Even after the height of the crisis, the Fed determined it was necessary to add trillions more in new dollars to continue to support a languishing system, despite acknowledging the limitations of its monetary policy tools. This is the Fed\u2019s catch-22; even when it seemingly knows betters, the Fed\u2019s default position is to err on the side of more quantitative easing, not less. "}
{"prompt": "Bitcoin Fixes This", "completion": "\u201cI\u2019m perfectly willing to accept the argument that monetary policy is not the main tool,\nthat this is not the main thing wrong with the economy, but it\u2019s our duty to do what we can, to be palliative, to help where we can, even if we can\u2019t solve fiscal, structural, and other problems.\u201d"}
{"prompt": "Bitcoin Fixes This", "completion": "Ben Bernanke, Former Fed Chair \u2013 August 2011"}
{"prompt": "Bitcoin Fixes This", "completion": "\u201cI don\u2019t think it is literally the case that monetary policy is completely ineffective.\nI think we can see the effects on financial markets, which in turn must be affecting wealth, confidence, and some other determinants of spending and production. To the extent that transmission is weaker, that could be used to argue for more stimulus rather than less stimulus.\u201d"}
{"prompt": "Bitcoin Fixes This", "completion": "Ben Bernanke, Former Fed Chair \u2013 September 2011"}
{"prompt": "Bitcoin Fixes This", "completion": "By responding with quantitative easing, the Fed induced a credit system already saddled with too much debt to expand massively. Today, the U.S. credit system supports approximately $73 trillion of fixed maturity debt (system wide), which represents an increase of $20 trillion (+40%) above pre-crisis levels (Fed Z.1 report, pg. 7). This debt is stacked against only $1.7 trillion of actual dollars that exist within the banking system (Fed H.8 report). As a consequence, there remains far too much debt and too few dollars. Because QE induces the creation of trillions more in debt, it is more like heroin than an antibiotic; the more that is applied to a financial system, the more dependent on it that system becomes and the worse off when it is removed."}
{"prompt": "Bitcoin Fixes This", "completion": "Prior to 2009, everyone was forced to opt-in to this system, and there was not a viable off-ramp. This is ultimately the option that bitcoin provides, and it exists largely as a response mechanism to global QE. There is no more simple explanation to the question of why bitcoin exists. While bitcoin would have presented a superior alternative even in the absence of quantitative easing, the global monetary debasement which occurred in response to the crisis sharpens the contrast. It is this contrast that makes the mere existence of bitcoin far more intuitive than it otherwise may be. Bitcoin literally exists because some highly intelligent individuals identified a problem and set the wheels in motion to create a solution. However, bitcoin practically exists because it presents a fundamentally better solution to the problem of money."}
{"prompt": "Bitcoin Fixes This", "completion": "Because of the leverage that remains inherent in the existing financial system, future QE is not merely a possibility; it is a certainty. Future QE from the Fed, and central banks all over the world, is a \u201cwhen\u201d not \u201cif\u201d question. The credit system was unstable and unsustainable in 2008. As a function of QE, it has expanded massively and now supports $20 trillion more debt in the U.S. alone. Every time the Fed, or any central bank, announces subsequent rounds of QE, that is the reinforcing market signal of why bitcoin exists. It is the choice between holding a form of currency that is continually and systematically debased by central banks or a form of currency with a fixed supply that is unmanipulable. Bitcoin is the check, balance and ultimate opt out path to the problem QE presents."}
{"prompt": "Bitcoin Fixes This", "completion": "In The Pretense of Knowledge, a speech delivered by Friedrich Hayek at the ceremony awarding him the Nobel Prize in economics in 1974, he articulates the first principles of why the disparate knowledge of all market participants is greater than that which any single mind possesses. It is through this reasoning that he explains why the dominant macroeconomic theory and monetary policy which guides central banks is inherently flawed. And, why the policy tools used by central banks, particularly quantitative easing, create more harm than good. I highly recommend reading the full speech as it provides the counter-narrative to the monoculture of today\u2019s economic policy making. Our current system entrusts the allocation of trillions of dollars to just a few individuals. It is not that these individuals lack a significant amount of knowledge; instead, it is that any small group of individuals necessarily possesses far less knowledge than the hundreds of millions of individuals that actually make up an economy."}
{"prompt": "Bitcoin Fixes This", "completion": "The Pretense of Knowledge, Hayek (Nobel Prize Lecture, 1974)"}
{"prompt": "Bitcoin Fixes This", "completion": "By attempting to manage an economy through the manipulation of the money supply, the knowledge of many is not only replaced by that of a few; instead, the collective knowledge base as a whole becomes distorted. The mechanisms that govern supply and demand can no longer function efficiently, which creates imbalances that can only be sustained so long as the market remains manipulated. In the end, the ultimate negative impact to the economy is far greater than it otherwise would have been in the absence of central bank intervention. The financial crisis is patient zero and the quantitative easing response has only left us in a more precarious situation today. The first order impact is the devaluation of the currency, but the ultimate impact is the deterioration of the underlying economic structure. Bitcoin is designed to fix this but no one should expect a seamless or painless transition away from a system saddled with decades of accumulated imbalances."}
{"prompt": "Bitcoin Fixes This", "completion": "Bitcoin creates a system that allows for undistorted economic activity, and it achieves this through a fixed monetary supply, which is ultimately governed by a market consensus mechanism. It is through this consensus mechanism that bitcoin dispenses with the need for conscious control of central bankers, instead relying on the distributed knowledge of all market participants. It is also completely voluntary. If you like your financial system, you can keep it (for now at least). However, monetary systems tend to one medium so if a critical mass converge on bitcoin as the most credible long-term store of value, it may become less of a choice in the future. As individuals increasingly opt in to bitcoin, it will only make the issues present in the existing system more evident, which likely accelerates the need for quantitative easing. The greater the inclination to store wealth in bitcoin, the lower the demand to store wealth in the assets that support the existing credit system. In essence, an increasing shift to bitcoin will directly impact the system-wide credit impulse, which will accelerate the need for the legacy financial system to rely on quantitative easing to sustain itself. "}
{"prompt": "Bitcoin Fixes This", "completion": "Bitcoin may be the sly round about way around the Fed\u2019s economic system, but it comes at the direct expense of the legacy system. And, the interim consequence of the shift to bitcoin may very well be macroeconomic volatility. Bitcoin may be mistakenly blamed for the ills of the legacy system but really, withdrawal is just a painful and necessary process. The Jackson Hole crowd may not like this; however, positive externalities will be waiting on the other side. And besides, it\u2019s in the hands of the free market now."}
{"prompt": "Bitcoin Fixes This", "completion": "\u201cI don\u2019t believe we shall ever have a good money again before we take the thing\nout of the hands of government, that is, we can\u2019t take them violently out of the hands of government, all we can do is by some sly roundabout way introduce something that they can\u2019t stop.\u201d -F. A. Hayek"}
{"prompt": "Bitcoin Fixes This", "completion": "Next week: Bitcoin is better than gold and digital gold"}
{"prompt": "Bitcoin Fixes This", "completion": "Views presented are expressly my own and not those of Unchained Capital or my colleagues. Special thanks to Phil Geiger, Adam Tzagournis and Will Cole for reviewing and for providing valuable feedback. If interested in reading more about quantitative easing and the financial crisis, I wrote a longer research piece in 2017 on the subject (see here)."}
{"prompt": "Bitcoin Fixes This", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin Fixes This", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin Cannot be Banned", "completion": "The idea that somehow bitcoin can be banned by governments is the final stage of grief, right before acceptance. The consequence of the statement is an admission that bitcoin \u201cworks.\u201d In fact, it posits that bitcoin works so well that it will threaten the incumbent government-run monopolies on money in which case governments will regulate it out of existence to eliminate the threat. Think about the claim that governments will ban bitcoin as conditional logic. Is bitcoin functional as money? If not, governments have nothing to ban. If yes, then governments will attempt to ban bitcoin. So the anchor point for this line of criticism assumes that bitcoin is functional as money. And then, the question becomes whether or not government intervention could successfully cause an otherwise functioning bitcoin to fail."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "As a starting point, anyone trying to understand how, why, or if bitcoin works should assess the question entirely independent from the implications of government regulation or intervention. While bitcoin will undoubtedly have to co-exist alongside various regulatory regimes, imagine governments did not exist. On a standalone basis, would bitcoin be functional as money, if left to the free market? This will inevitably lead to a number of rabbit hole questions. What is money? What are the properties that make a particular medium a better or worse form of money? Does bitcoin share those properties? Is bitcoin a better form of money based on its properties? If the ultimate conclusion becomes that bitcoin is not functional as money, the implications of government intervention are irrelevant. However, if bitcoin is functional as money, the question then becomes relevant to the debate, and anyone considering the question would need that prior context as a baseline to evaluate whether or not it would be possible."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "By design, bitcoin exists beyond governments. But bitcoin is not just beyond the control of governments, it functions without the coordination of any central third parties. It is global and decentralized. Anyone can access bitcoin on a permissionless basis and the more widespread it becomes, the more difficult it becomes to censor the network. The architecture of bitcoin is practically purpose-built to resist and immunize any attempts by governments to ban it. This is not to say that governments all over the world will not attempt to regulate, tax or even ban its use. There will certainly be a fight to resist bitcoin adoption. The Fed and the Treasury (and their global counterparts) are not just going to lay down as bitcoin increasingly threatens the monopolies of government money. However, before debunking the idea that governments could outright ban bitcoin, first understand the very consequence of the statement and the messenger."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "The skeptic\u2019s narrative consistently shifts over time. Stage one of grief: bitcoin could never work \u2013 it is backed by nothing. It is nothing more than a present-day tulip mania.  With each hype cycle, the value of bitcoin rises dramatically and is then followed by a correction. Often extolled as a crash by skeptics, bitcoin fails to die and in each instance, it finds support at levels higher than prior adoption waves. The tulip narrative becomes tired and the skeptics move on to more nuanced issues, re-anchoring the debate.  Stage two of grief follows: bitcoin is flawed as a currency. It is too volatile to be money, or it is too slow to be a payments system, or it cannot scale to satisfy all the payments in the world, or it wastes energy. The list goes on. This second step is a progression of denial and it is a significant departure from the idea that bitcoin is nothing more than nothingness."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Despite the supposed flaws, the value of the bitcoin network continues to rise over time. Each time it does not die, it gains strength. While the skeptics are busy pointing out flaws, bitcoin never sleeps. An increase in value is driven by a very simple market dynamic: more buyers than sellers. That is all and it is a function of increasing adoption. More and more people figure out why there is fundamental demand for bitcoin and why/how it works. This is what creates long-term demand for bitcoin. As more people increasingly demand it as a store of wealth, there is no supply response. There will only ever be 21 million bitcoin. No matter how many people demand bitcoin, the supply side is completely fixed and inelastic. As the skeptics continue to shout the same tired lines, the crowd continues to parse the noise and demand bitcoin due to the strengths of its monetary properties. And no constituency is more well-versed in the arguments against bitcoin than adopters of bitcoin themselves."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Bitcoin FUD (Fear, Uncertainty & Doubt) Dice v1 and v2, courtesy of Nic Carter."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Desperation begins to kick in, and the debate re-anchors once again. The narrative predictably shifts. It is no longer that bitcoin is not backed by anything, nor that it is flawed as a currency; instead, the debate centers on regulation and government authorities. In the final stage of grief, it is actually that bitcoin works too well, and as a consequence, the government will never let it happen and ban it. Really? So human ingenuity somehow re-invents money in a technologically superior medium, the consequences of which are mind-bending, and the government is somehow going to ban that? Recognize that in claiming as much, the skeptics are admitting defeat. It is the dying whimper in a series of failed arguments. The skeptics simultaneously accept that there is fundamental demand for bitcoin and then pivot to the unfounded belief that governments can ban it."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Play this one out. When exactly would developed world governments actually step in and attempt to ban bitcoin? Today, the Fed and the Treasury do not view bitcoin as a serious threat to dollar supremacy. In their collective mind, bitcoin is a cute little toy and is not functional as a currency. Presently, the bitcoin network represents a total purchasing power of less than $200 billion. Gold on the other hand has a purchasing power of approximately $8 trillion (40x the size of bitcoin) and broad money supply of dollars (M2) is approximately $15 trillion (75x the size of bitcoin). When does the Fed or Treasury start seriously considering bitcoin a credible threat? Is it when bitcoin collectively represents $1 trillion of purchasing power? $2 trillion or $3 trillion? Pick your level, but the implication is that bitcoin will be far more valuable, and held by far more people globally, before government powers that be view it as a credible competitor or threat.  "}
{"prompt": "Bitcoin Cannot be Banned", "completion": "President Trump & Treasury Secretary Mnuchin on Bitcoin (2019)"}
{"prompt": "Bitcoin Cannot be Banned", "completion": "So the skeptic logic follows: bitcoin does not work, but if it does work, the government will ban it. But, governments in the free world will not attempt to ban bitcoin until it becomes more apparent that it is a threat. At which time, bitcoin will be more valuable and undoubtedly harder to ban, as it will be held by far more people in far more places. So, ignore fundamentals and the asymmetry inherent in a global monetization event because in the event you turn out to be right, the government will step in to regulate bitcoin out of existence. Which side of the fence would a rational economic actor rather be on? Owning a monetary asset that has increased in value so dramatically that it threatens the global reserve currency, or the opposite \u2013 not owning that asset? Assuming an individual possesses the knowledge to understand why it is a fundamental possibility (and increasingly a probability), which is the more defensible and logical position? The asymmetry alone dictates the former and any fundamental understanding of the demand for bitcoin only reinforces the same position."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Think about what bitcoin actually represents and then what a ban of bitcoin would represent. Bitcoin represents the conversion of subjective value, created and exchanged in the real world, for digital keys. Said more plainly, it is the conversion of an individual\u2019s time into money. When someone demands bitcoin, they are at the same time forgoing demand for some other good, whether it be a dollar, a house, a car, or food, etc. Bitcoin represents monetary savings that comes with the opportunity cost of other goods and services. Banning bitcoin would be an affront to the most basic freedoms it is designed to both provide and preserve. Imagine the response by all those that have adopted bitcoin: \u201cWell that was fun, the tool that the experts said would never work, now works too well, and the same experts and authorities say we can\u2019t use it. Everyone go home. Show\u2019s over folks.\u201d To believe that all the people in the world that have adopted bitcoin for the financial freedom and sovereignty it provides would suddenly lay down and accept the ultimate infringement of that freedom is not rational."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "\u201cMoney is one of the greatest instruments of freedom ever invented by man. It is money which in existing society opens an astounding range of choice to the poor man \u2013 a range greater than that which not many generations ago was open to the wealthy..\u201d \u2013 F.A. Hayek"}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Governments could not successfully ban the consumption of alcohol, the use of drugs, the purchase of firearms, or the ownership of gold. A government can marginally restrict access, or even make possession illegal, but it cannot make something of value demanded by a broad and disparate group of people magically go away. When the U.S. made the private ownership of gold illegal in 1933, gold did not lose its value or disappear as a monetary medium. It actually increased in value relative to the dollar, and just thirty years later, the ban was lifted. Not only does bitcoin provide a greater value proposition relative to any other good that any government has ever attempted to ban (including gold); but by its nature, it is also far harder to ban. Bitcoin is global and decentralized. It is without borders and it is secured by nodes and cryptographic keys. The act of banning bitcoin would require preventing open source software code from being run and preventing digital signatures (created by cryptographic keys) from being broadcast on the internet. And it would have to be coordinated across numerous jurisdictions, except there is no way to know where the keys actually reside or to prevent more nodes from popping up in different jurisdictions. Setting aside the constitutional issues, it would be technically infeasible to enforce a ban of bitcoin in any meaningful way."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Bitcoin Node Concentration by Country (earn.com)"}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Even if all countries in the G-20 coordinated to ban bitcoin in unison, it would not kill bitcoin. Instead, it would be the fait accompli for the fiat system. It would reinforce to the masses that bitcoin is a formidable currency, and it would set off a global and hopeless game of whack-a-mole. There is no central point of failure in bitcoin; bitcoin miners, nodes and keys are distributed throughout the world. Every aspect of bitcoin is decentralized, which is why running nodes and controlling keys is core to bitcoin. The more keys and the more nodes that exist, the more decentralized bitcoin becomes, and the more immune bitcoin is to attack. The more jurisdictions in which mining exists, the less risk any single jurisdiction represents to bitcoin\u2019s security function. A coordinated state level attack would only serve to build the strength of bitcoin\u2019s immune system. It would ultimately accelerate the shift away from the legacy financial system (and legacy currencies), and it would accelerate innovation within the bitcoin economic system. With each passing threat, bitcoin innovates to immunize the threat. A coordinated state level attack would be no different."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Permissionless innovation on a globally decentralized basis is the reason bitcoin gains strength from every attack. It is the attack vector itself which causes bitcoin to innovate. It is Adam Smith\u2019s invisible hand on steroids. Individual actors may believe themselves to be motivated by a greater cause, but in reality, the utility embedded in bitcoin creates a sufficiently powerful incentive structure to ensure its survival. The self-interests of millions, if not billions, of uncoordinated individuals aligned by their individual and collective need for money incentivizes permissionless innovation on top of bitcoin. Today, it may seem like a cool new technology or a nice-to-have portfolio investment, but even if most people do not yet recognize it, bitcoin is a necessity. It is a necessity because money is a necessity, and legacy currencies are fundamentally broken. Two months ago, the repo markets in the U.S. broke, and the Fed quickly responded by increasing the supply of dollars by $250 billion, with more to come. It is precisely why bitcoin is a necessity, not a luxury. When an innovation happens to be a basic necessity to the functioning of an economy, there is no government force that could ever hope to stop its proliferation. Money is a very basic necessity, and bitcoin represents a step-function change innovation in the global competition for money."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "And more practically, any attempt to ban bitcoin or heavily regulate its use by any jurisdiction would directly benefit a competing jurisdiction. The incentive to defect from any coordinated effort to ban bitcoin would be far too high to sustain such an agreement across jurisdictions. If the United States made the possession of bitcoin illegal tomorrow, would it slow down proliferation, development and adoption of bitcoin and would it cause the value of the network to decline intermittently? Probably. Would it kill bitcoin? No. Bitcoin represents the most mobile capital in the world. Countries and jurisdictions that create regulatory certainty and place the least amount of restrictions on the use of bitcoin will benefit significantly from capital inflows. "}
{"prompt": "Bitcoin Cannot be Banned", "completion": "                           Banning Bitcoin Prisoner\u2019s Dilemma"}
{"prompt": "Bitcoin Cannot be Banned", "completion": "In practice, the prisoner\u2019s dilemma is not one-to-one. It is multi-dimensional involving numerous jurisdictions, all with competing interests, making any attempts to successfully ban bitcoin that much more impractical. Human capital, physical capital and monetary capital will flow to the countries and jurisdictions with the least restrictive regulations on bitcoin. It may not happen overnight, but attempting to ban bitcoin is the equivalent of a country cutting off its nose to spite its face. It doesn\u2019t mean that countries will not try. India has already tried to ban bitcoin. China has attempted to heavily restrict its use. Others will follow. But each time a country takes an action to restrict the use of bitcoin, it actually has the unintended effect of promoting bitcoin adoption. Attempts to ban bitcoin are an extremely effective marketing tool for bitcoin. Bitcoin exists as a non-sovereign, censorship-resistant form of money. It is designed to exist beyond the state. Attempts to ban bitcoin merely serve to reinforce bitcoin\u2019s reason for existence and ultimately, its value proposition. "}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Banning bitcoin is a fool\u2019s errand. Some will try; all will fail. And the very attempts to ban bitcoin will accelerate its adoption and proliferation. It will be the hundred mile-per-hour wind that fuels the wildfire. It will also make bitcoin stronger and more reliable, further immunizing it from attack and reinforcing its antifragile nature. And in any case, believing governments will ban bitcoin, if it becomes a credible threat to global reserve currencies, is an irrational reason to discount it as a savings technology. It both cedes that bitcoin is viable as money, while at the same time ignoring the principal reasons as to why: decentralization and censorship-resistance. Imagine understanding the greatest present secret in the world and not capitalizing on the asymmetry and utility that bitcoin provides in fear of government. More likely, either someone understands why bitcoin works and that it will not fail at the hands of a government, or a knowledge gap exists as to how bitcoin is able to function in the first place. Begin by understanding the fundamentals, and then apply that as a baseline to assess any potential risk posed by future government intervention or regulation. And never discount the value of asymmetry; the only winning move is to play."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Next edition: Bitcoin is Not for Criminals (\u2026it\u2019s for everyone)"}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Views presented are expressly my own and not those of Unchained Capital or my colleagues. Thanks to Phil Geiger for reviewing and for providing valuable feedback."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Well written!"}
{"prompt": "Bitcoin Cannot be Banned", "completion": "A terrific educational article \u2013 for newbies and those in the know."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Nicely Done!"}
{"prompt": "Bitcoin Cannot be Banned", "completion": "You say that India has tried to ban Bitcoin, well my understanding is that they\u2019ve done a damn good job and it\u2019s very difficult to get there. Even if you can get it, you might pay as much as a 30% markup over spot. At least, that is what I\u2019ve read (have not researched it deeply)."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "No government can shut Bitcoin down but if they all make it damn difficult to use, that achieves the same thing I think. If they nip it in the bud, say in the next few years, before true mass adoption, and they make it very difficult to acquire and illegal to own, average Joe who lives in Minnesota is never going to buy it. And tens of millions of others like him."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Some of your argument seems to be that it would be irrational for governments to ban Bitcoin, money outflows to other countries! It\u2019s the best tech! Well sure, good thing governments never do anything absurdly irrational\u2026"}
{"prompt": "Bitcoin Cannot be Banned", "completion": "In fact I mostly agree with what you\u2019re saying, I just think that your argument is a little bit too sure of itself. I don\u2019t think Bitcoin has yet or will for at least five or ten years reach the truly momentous level at which point it will be very apparent it\u2019s unstoppable."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin Cannot be Banned", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin is a Rally Cry", "completion": "\u201cTo the People of Texas and all Americans in the world.\u201d In his open call to arms from the Alamo, Lt. Colonel William B. Travis began with an expression of America as an idea extending beyond borders, to all Americans in the world. It was a plea to all those that valued the fight for liberty and freedom. Outnumbered ten-to-one, Travis responded to a demand for surrender with a cannon shot. He was no more than 27 years old at the time. Texas declared its independence a week later, but within days, the Alamo fell. The Travis letter became the rallying cry of a revolution. Remember the Alamo. Ultimately, Texas won its independence. Always outnumbered, it is a reminder that the endless pursuit of freedom is a most powerful equalizer. And it is something inherent to the character of Americans in all the world."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "(Opening of the Travis Letter from the Alamo, February 24, 1836)"}
{"prompt": "Bitcoin is a Rally Cry", "completion": "Minus the lionized heroes and a literal declaration of independence, bitcoin is still very much a fight for freedom, and it is similarly becoming a rally cry to all those that refuse to sit back and accept the fate of our tenuous financial system. The very idea of freedom may be the single most important tenet underpinning the monetary revolution to which bitcoin is giving rise. When the war is won, it will likely find its way directly into a constitutional amendment (even though it\u2019s already covered by the first amendment). The right of the people to keep and bear bitcoin. Prior to bitcoin, everyone had no practical choice but to opt into a flawed currency system. That changed when bitcoin was released into the wild in 2009. Bitcoin is completely voluntary, it is controlled by no one, and it affords everyone the ability to store and transfer value in a form of currency that cannot be manipulated. Bitcoin may not be synonymous with the right to life, liberty and the pursuit of happiness but for those that choose to rely upon it as a better path forward, it is a fundamental and inalienable right."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "While bitcoin is valued for different reasons by different people, it consistently appeals to those that have identified the inherent level of freedom afforded by such a powerful tool, particularly in a world full of never-ending economic calamities. As the fragility and instability of the global financial system becomes more apparent by the day, central bankers and politicians scramble in a race to see who can provide more stimulus to an economy that is flatlining. Lest we not forget, the instability in the financial system is not just appearing; it is reappearing. The structural issues resurfacing are the same that existed during the 2008 financial crisis. Before the oil war and the global pandemic, the repo funding markets broke in September 2019. The writing was not just on the wall, it was in the repo markets. If it were not these recent events acting as the accelerant, it would have been some other random \u201cact of god\u201d which would have made evident what remained under the surface all along: a highly-levered financial system primed to break at the first signs of any material stress."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "Even before the global shutdown (i.e. government-accelerated panic), the Fed had already supplied ~$500 billion in emergency funding to the repo markets. Now the fuel is really being dumped on the fire. But it is not just the scale that is alarming; it is the clear demonstration of control being lost through a meandering path of incrementalism. After the stock market crashed initially, the Fed issued an emergency 50bps interest rate cut; the market crashed some more and the Fed then announced an incremental $1.5 trillion in short-term funding (1-3 months) to be supplied in the repo markets. The market crashed again and three days later, a formal $700 billion \u201cquantitative easing\u201d program was announced to outright purchase $500 billion in U.S. government treasuries and $200 billion in mortgage-backed securities. Coinciding with this move, short-term rates were cut 100bps (all the way to zero)."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "Yep, the market crashed again, credit markets dislocated and the Fed followed with its \u201cwhatever it takes\u201d response, announcing an unlimited QE program. Its three most aggressive moves to date all transpired within a 10-day window. And in its latest unprecedented act, the Fed will begin buying corporate bonds on the secondary market as well as participate in primary issuances of corporate credit. It also expanded its purchases of mortgage backed securities to include commercial mortgage backed securities (commercial real estate). In addition, the Fed established a facility to issue asset backed securities to purchase student loans, auto loans, credit card loans, etc. All of this without a price tag, and just a promise to do whatever it takes. It would be funny if it weren\u2019t so serious, but the real question is, if the Fed were in control, why was it so reactionary? Why did its plans change so drastically in a ten-day period if it ever understood the extent of the issue? Never mind the unintended consequences, it is merely a demonstration that the Fed is not in control. Why would it have announced a $700 billion program if it didn\u2019t expect it to work? It\u2019s a classic game of guess and check, except the consequences can never be checked (only the immediate market reactions). The problem is our economy is at stake."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "\u201cThere\u2019s an infinite amount of cash at the Federal Reserve\u201d\n\u2013 Neel Kashkari, Minneapolis Fed President \u2013 March 22, 2020 (60 Minutes)"}
{"prompt": "Bitcoin is a Rally Cry", "completion": "\u201cTo lend to a bank, we simply use the computer to mark up the size of the account they have with the Fed [\u2026] it\u2019s much more akin to printing money than it is borrowing.\u201d \u2013 Ben Bernanke, Former Fed Chair \u2013  March 15, 2009 (60 Minutes)"}
{"prompt": "Bitcoin is a Rally Cry", "completion": "Make no mistake, the $1.5 trillion supplied to the repo markets will be converted to increment the Fed\u2019s formal quantitative easing program, and the entire unquantified program should conservatively be expected to exceed $4 trillion when all is said and done. The Fed cannot put out the fire that is a liquidity crisis through short-term funding, and it will have no other choice but to monetize a larger share of the credit system than it did in 2008 because the problem is now larger. In addition, while not yet passed, Congress is working on an initial $2.0 trillion stimulus package in response to the global pandemic. With a market already suffering a liquidity crisis, the banking system does not magically have this cash on hand to finance a massive expansion of the Federal government\u2019s deficit. There is a liquidity crisis unfolding after all. As a result, the Fed will be forced to finance any fiscal response through an ever-expanding quantitative easing program. It is the only way for the banks to get the cash needed to finance such a fiscal stimulus. All roads lead back to the Fed and endless QE."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "This is the new normal and there is nothing sustainable about it. It is also not a reality we have to accept. There is a better way. As the world looks on, amidst the fear and panic, it often seems that there is no alternative. It is unclear when so many began to view the government\u2019s role as one of fighting global pandemics (rather than the free market) but that is the world for which so many seem to aggressively demand. It is a symptom of failing to understand the root problem. It is misdiagnosing the fallout of a global pandemic and falsely believing the only hope is to allocate money created out of thin air by central banks and governments. It is predictably irrational. There is no reason even a few-month, complete economic shutdown should put the world on the brink of a global depression. Instead, it is the output of an inherently fragile financial system, one dependent on perpetual credit expansion necessary to sustain itself and without which it would begin to collapse. It is the fragility of the global financial system itself that is the problem, not a global pandemic. Do not be fooled. This isn\u2019t a pandemic induced failure of the financial system. This was a 100% eventuality, pandemic or not.  If not for its heavy dependence on credit and an unsustainable degree of leverage, the world would not be waking up to the S&P 500 futures locked limit down with seeming regularity."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "And the economic dependence on credit as well as the high degree of system leverage are not a natural function of either capitalism or a free market. This market setup is a function of central banks everywhere. The instability is not by design but the market structure is. In response to every economic slow down (or crisis) which has appeared over the last four decades, central banks (including the Fed) have responded by increasing the money supply and reducing interest rates, such that existing debt levels could be sustained and such that more credit could be created. Every time the system as a whole attempted to deleverage, central banks worked to prevent it through monetary stimulus, ultimately kicking the can down the road and allowing decades of economic imbalance to accumulate in the credit system. This is the root cause of the inherent fragility in the financial system (see here). And it is why each time an economic disruption surfaces, the monetary response from central banks need be larger and more extreme. With greater imbalance comes the need for a bigger boat."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "In doing so, the entire system is pushed further and further out onto the same ledge. The terminal risk to the system (the stability of the underlying currency) becomes greater and greater. Everyone is unwittingly forced to be along for this most unnerving of rides, but for those paying attention to the real game that is being played, bitcoin is increasingly becoming the clearest path to opt out of the insanity. Simplified down to the least common denominator, quantitative easing is a forced debasement (or devaluation) of monetary savings. It distorts every pricing mechanism within an economy and its intended goal is the expansion of credit. When history books are written of this pre-bitcoin era, the failure to understand the consequence of distorting global pricing mechanisms will be identified as the source of all other critically flawed assumptions in modern central banking doctrine. There is no escaping it. You can only hope to manage the fallout. But where don\u2019t-tread-on-me meets the come-and-take-it mentality, freedom loving Americans of all the world and of all walks of life are beginning to say enough is enough. There has to be a better way because there always is."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "That is core to the very idea of hope and the very nature of human ingenuity.  It is an unwillingness to accept the new normal as a fait accompli. If quantitative easing can be simplified down to a debasement of monetary savings; bitcoin can be simplified down to the freedom to convert value into a form of currency that cannot be manipulated. In the Road to Serfdom, Hayek describes the function of money most aptly: \u201cIt would be much truer to say that money is one of the greatest instruments of freedom ever invented by man.\u201d As he goes on to further explain, it is money that ultimately affords people a range of choice far greater than could otherwise be imaginable. It does so by distributing knowledge through its pricing mechanism, the single most important market signal (in aggregate) which facilitates economic coordination and the allocation of resources. However, as the freedoms afforded by one monetary medium become impaired, it should be no surprise that human ingenuity would find a way to route around and spawn a new creation that performs that same function more effectively. That is bitcoin and there is no going back. The proverbial cat is out of the bag and the distribution of knowledge is naturally exponential."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "The promise of bitcoin is a more stable monetary system. There are no promises of what its value will be on any given day; the only assurance it provides is that its supply is not subject to manipulation or systematic debasement by a central bank (or anyone else). There is the seemingly constant question as to whether bitcoin is a \u201csafe-haven\u201d and more recently, why bitcoin has become correlated to the broader (collapsing) financial markets. The simple reality is that bitcoin is not a safe-haven, at least not as commonly defined in the mainstream. It is not held widely enough for it to possibly be a safe-haven. It remains nascent and it is perfectly predictable that at the onset of a global deleveraging event, a liquid asset would be sold along with everything else."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "However, what remains true is that bitcoin is the antifragile competitor to the inherently fragile financial system. "}
{"prompt": "Bitcoin is a Rally Cry", "completion": "In his book under the same name, Nassim Taleb describes antifragility as not just robust or resilient, but as the opposite of fragile. Antifragile systems actually gain strength and feed on volatility. The recent volatility in bitcoin is likely just the beginning but what it really represents is uninterrupted and unceasing price discovery. There are no circuit breakers in bitcoin and there are no bailouts. Each individual participant is maximally accountable and it is a market devoid of moral hazard. When the dust settles, what does not kill bitcoin only makes it stronger. In a literal sense. It is surviving and thriving in the wild, without any central coordination. It is not for the faint of heart, but it is the land of the free and the home of the brave. When it survives, there will still only be 21 million bitcoin, and its very survival will reinforce its place in the world. Increasingly, with each monetary stimulus injected into the legacy financial system, bitcoin\u2019s core value function will become more apparent and more intuitive to more people. It will not just be by chance; it will be so because of the stark contrast bitcoin provides. Even with all its volatility, it is laying the foundation of a more stable monetary system. "}
{"prompt": "Bitcoin is a Rally Cry", "completion": "Bitcoin Price Chart (Source: Coinbase Pro Exchange, 6 hour intervals)"}
{"prompt": "Bitcoin is a Rally Cry", "completion": "Because the supply of bitcoin cannot be manipulated, its price and its supply of credit will similarly and forever be unmanipulable. Both will be determined on the market. As a result, the size of the bitcoin credit system will never sustain otherwise unsustainable imbalances. Beyond the nature of its fixed supply, this is where the contrast lies in practical application. The accumulation of sustained credit system imbalances (induced by central banks) is the inherent source of fragility in the global economy today. In a market built on the foundation of a currency that cannot be manipulated, as soon as imbalances arise, economic forces will naturally course correct, preventing the system-wide and systemic credit risk that plagues the legacy financial system. Rather than impair the future by allowing imbalances to accumulate beneath the surface, the unmanipulable supply of bitcoin will act as a governor to stamp out fires as soon as they appear. The fragile individual components of the system will be sacrificed and the system as a whole will become more antifragile by that very function."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "For Joe Squawk (your modern-day average joe), it was Facebook\u2019s Libra that made bitcoin more intuitive. For others, it is hyperinflation in Venezuela. And now for many, it will increasingly become the incessant reality that financial crises and QE are a recurring fact of life. No matter how many cycles of quantitative easing the Fed and its global counterparts have in their bag of tricks, bitcoin is inevitably becoming a rallying cry for all those that see the train wreck coming and are unwilling to stand idly by. It is not just a collective act of civil disobedience; it is an individual recognition of the need to act in self-preservation. There is a point in time for most everyone when common sense and survival instinct naturally take the reins. The avenue may be different for each individual, but at the end of the day, bitcoin is a means to preserve some form of freedom that is otherwise being impaired or infringed. Whether governments attempt to ban bitcoin or it is mistakenly blamed for the failures of the legacy system, always remember the simplicity of what bitcoin represents. It is nothing more than the individual freedom to convert real world value into a form of money that cannot be manipulated. It is a most basic and fundamental freedom but one that must be earned. So to all Americans in the world, stay humble, stack sats, and hold the damn line. Whatever it takes."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "\u201cThe enemy has demanded a surrender [\u2026] I have answered the demand with a cannon shot\u201d\n\u2013 Lt. Colonel William B. Travis (February 24, 1836) Link to Full Travis Letter"}
{"prompt": "Bitcoin is a Rally Cry", "completion": " "}
{"prompt": "Bitcoin is a Rally Cry", "completion": "Next Edition: Bitcoin is Common Sense"}
{"prompt": "Bitcoin is a Rally Cry", "completion": "Views presented are expressly my own and not those of Unchained Capital or my colleagues. Thanks to Will Cole and Phil Geiger for reviewing and for providing valuable feedback."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin is a Rally Cry", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "As kids, we all learn that money doesn\u2019t grow on trees. As a society on the other hand, we have become conditioned to believe that it\u2019s not only possible but that it\u2019s a normal, necessary and productive function of our economy. Before bitcoin, this privilege was reserved to global central banks (see here for example). Post bitcoin, every Tom, Dick & Harry seems to think that they can create money too. At a root level, this is the audacity of everyone that attempts to create a copy of bitcoin. Whether by hard-forking out of consensus (bitcoin cash), cloning bitcoin (litecoin) or creating a new protocol with \u201cbetter\u201d features (ethereum), each is an attempt to create a new form of money. If bitcoin could do it, why can\u2019t we?"}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "We sit here, in 2019, witnessing the monetization event of an economic good (bitcoin) on the free market for the first time in thousands of years (h/t gold). Rather than stopping to contemplate the weight of that reality or to understand how or why that is possible, many people skip right past it to focus on some derivative or some way to improve upon a problem they didn\u2019t see in the first place. Everyone wants to get rich quick, and so long as there is money, there will also be alchemists. Those that attempt to copy bitcoin are our modern day alchemists."}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "\u201cEveryone wants to get rich quick, and so long as there is money, there will also be alchemists.\u201d"}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "They tell us that bitcoin is too slow so they create a copy that is \u201cfaster\u201d. Or they tell us that bitcoin does not have the capacity to handle the number of transactions required by the global economy so they create a copy that has \u201cgreater\u201d scale. Then they tell us that bitcoin is too volatile to be a currency so they create a \u201cmore stable\u201d version. It goes on and on. Next its that bitcoin is too rigid and that it needs to be more programmable so they create a copy that is \u201cmore flexible\u201d.  They often even tell us that their creation is not money but instead, it\u2019s a vehicle for \u201cpayments\u201d or a \u201cutility\u201d or maybe a \u201cglobal computer fueled by gas\u201d. They also try to convince us of a world that has hundreds, if not thousands, of currencies. But make no mistake, in each case, it is their own attempt to create money. "}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "If an asset\u2019s primary (if not sole) utility is the exchange for other goods and services and if it does not have a claim on the income stream of a productive asset (such as a stock or bond), it must compete as a form of money and will only store value if it possesses credible monetary properties. With each \u201cfeature\u201d change, those that attempt to copy bitcoin signal a failure to understand the properties that make bitcoin valuable or viable as money. When bitcoin\u2019s software code was released, it wasn\u2019t money. To this day, bitcoin\u2019s software code is not money. You can copy the code tomorrow or create your own variant with a new feature and no one that has adopted bitcoin as money will treat it as such. Bitcoin has become money over time only as the bitcoin network developed emergent properties that did not exist at inception and which are next to impossible to replicate now that bitcoin exists.  "}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "\u201cThose that attempt to copy bitcoin signal a failure to understand the properties that make bitcoin valuable or viable as money.\u201d"}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "These properties emerged organically and spontaneously as individual economic actors all over the world evaluated bitcoin and determined to store a portion of their wealth in it. As bitcoin\u2019s value increased, it became decentralized and as it became decentralized, it also became increasingly difficult to alter the network\u2019s consensus rules or to invalidate, or prevent, otherwise valid transactions (often referred to as censorship-resistance).  There remains reasonable debate as to whether bitcoin is sufficiently decentralized or sufficiently censorship-resistant, but while this may be the case, there are other considerations less subject to debate:"}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "Every other fiat currency, commodity money or cryptocurrency is competing for the exact same use case as bitcoin whether it is understood or not and monetary systems tend to a single medium because their utility is liquidity rather than consumption or production. When evaluating monetary networks, it would be irrational to store value in a smaller, less liquid and less secure network if a larger, more liquid and more secure network existed as an attainable option."}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "Apply a common sense test. If you worked for two weeks and your employer offered to pay you in a form of currency accepted by 1 billion people all over the world or a currency accepted by 1 million people, which would you take?  Would you request 99.9% of one and 0.1% of the other, or would you take your chances with your billion friends? If you are a U.S. resident but travel to Europe one week a year, do you request your employer pay you 1/52nd in euros each week or do you take your chances with dollars? The practical reality is that almost all individuals store value in a single monetary asset, not because others do not exist but rather because it is the most liquid asset within their market economy.  "}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "Anyone with Venezuelan bolivars or Argentine pesos would opt into the dollar system if they could. And similarly, anyone choosing to speculate in a copy of bitcoin is making the irrational decision to voluntarily opt-in to a less liquid, less secure monetary network. While certain monetary networks are larger and more liquid than bitcoin today (e.g. the dollar, euro, yen), individuals choosing to store a percentage of their wealth in bitcoin are doing so, on average, because of the belief that it is more secure (decentralized \u2192 censorship-resistant \u2192 fixed supply \u2192 store of value). And, because of the expectation that others (e.g. a billion soon-to-be friends) will also opt-in, increasing liquidity and trading partners."}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "\u201cAnyone choosing to speculate in a copy of bitcoin is making the irrational decision to voluntarily opt-in to a less liquid, less secure monetary network.\u201d"}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "Many individuals creating digital currencies neither accept or admit that what they are creating has to be money to succeed; others that are speculating in these assets fail to understand that monetary systems tend to one medium or naively believe that their currency can out-compete bitcoin. None of them can explain how their digital currency of choice becomes more decentralized, more censorship-resistant or develops more liquidity than bitcoin. To take that further, no other digital currency will likely ever achieve the minimum level of decentralization or censorship-resistance required to have a credibly enforced monetary policy. And to literally steal a page from The Bitcoin Standard:"}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "Bitcoin is valuable, not because of a particular feature, but instead, because it achieved finite, digital scarcity, through which it derives its store of value property. The credibility of bitcoin\u2019s scarcity (and monetary policy) only exists because it is decentralized and censorship-resistant, which in itself has very little to do with software. In aggregate, this drives incremental adoption and liquidity which reinforces and strengthens the value of the bitcoin network. As part of this process, individuals are, at the same time, opting out of inferior monetary networks. This is fundamentally why the emergent properties in bitcoin are next to impossible to replicate and why bitcoin cannot be copied or out-competed: because bitcoin already exists as an option and its monetary properties become stronger over time (and with greater scale), while also at the direct expense of inferior monetary networks."}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "One would likely never come to this conclusion without first developing their own understanding of the following: i) that bitcoin is finitely scarce (how/why); ii) that bitcoin is valuable because it is scarce; and iii) that monetary networks tend to one medium. You may come to different conclusions, but this is the appropriate framework to consider when contemplating whether it is possible to copy (or out-compete) bitcoin rather than a framework based on any particular feature set. It\u2019s also important to recognize that any individual\u2019s conclusions, including your own or my own, has very little bearing in the equation. Instead, what matters is what the market consensus believes and what it converges on as the most credible long-term store of value."}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "The empirical evidence (price mechanism & value) demonstrates that the market continues to determine why bitcoin is different, despite a significant amount of noise. Before speculating, try to understand why bitcoin works and why it\u2019s unique. When someone inevitably tells you about a better bitcoin or some differentiating feature, remember that the market, which has come to this same crossroad over the last decade before you, has considered those trade-offs and chosen bitcoin over the field for very rational reasons."}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "Nassim Taleb writes about how a very small intransigent minority can force its preference on the majority, referring to it as the minority rule and explaining why The Most Intolerant Wins. Bitcoin (and monetary systems) are a perfect example of this phenomenon. If a very small minority converges on the belief that bitcoin has superior monetary properties and will not accept your form of digital (or traditional) currency as money, while less convicted market participants accept both bitcoin and other currencies, the intolerant minority wins. This is exactly what is happening in the global competition for digital currency supremacy. A small minority of market participants has determined that only bitcoin is viable, rejecting the monetary properties of all other digital currencies, while the majority is willing to accept bitcoin along with the field. Because of its intransigence, the minority is slowly forcing its preference on the majority. In the world of digital currencies, diversifying by picking the field is the equivalent of letting the crowd (or the intolerant minority) choose what your future money will be, while resigning yourself to only a fraction of what you otherwise would have saved. Evaluate the trade-offs and consider the minority rule before trading in your hard-earned value for a flyer. Money doesn\u2019t grow on trees."}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "\u201cBitcoin is a remarkable cryptographic achievement, and the ability to create something that is not duplicable in the digital world has enormous value.\u201d \u2013 Eric Schmidt (Former Google CEO)."}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": " "}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "Next Week: Bitcoin is not too volatile to be a currency"}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "Views presented are expressly my own and not those of Unchained Capital or my colleagues."}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin Can\u2019t Be Copied", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Have you ever had a financial advisor (or maybe even a parent) tell you that you need to make your money grow? This idea has been so hardwired in the minds of hard-working people all over the world that it has become practically second nature to the very idea of work."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "The line has been repeated so many times that it is now a de facto part of working culture. Get a salaried position, max out your 401-K contribution (maybe your employer matches 3%!), select a few mutual funds with catchy marketing names and watch your money grow. Most folks navigate this path every two weeks on auto-pilot, never questioning the wisdom nor being conscious of the risks. It is just what \u201csmart people\u201d do. Many now associate the activity with savings but in reality, financialization has turned retirement savers into perpetual risk-takers and the consequence is that financial investing has become a second full-time job for many, if not most."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Financialization has been so errantly normalized that the lines between saving (not taking risk) and investing (taking risk) have become blurred to the extent that most people think of the two activities as being one in the same. Believing that financial engineering is a necessary path to a happy retirement might lack common sense, but it is the conventional wisdom."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Or maybe you just need a better form of money\u2122?"}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Over the course of the past several decades, economies everywhere, but particularly those in the developed world (and specifically the United States), have become increasingly financialized. Increased financialization has become the necessary companion to the idea that you must make your money grow. But the idea itself\u200a\u2014\u200athat \u2018you must make your money grow\u2019\u200a\u2014\u200aonly really emerged in the mainstream consciousness as everyone similarly became conditioned to the unfortunate reality that money loses its value over time."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Money Loses Value \u2192 Need to Make Money Grow \u2192 Need Financial Products to Make Money Grow \u2192 Repeat."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Purchasing Power of the U.S. Dollar Over Time (1970 to 2020)"}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "The extent to which the need even exists is largely a function of money losing its value over time; that is the starting point, and the most unfortunate part is that central banks intentionally engineer this outcome. Most global central banks target the devaluation of their local currencies by approximately 2% per year and do so by increasing the money supply. How or why is less relevant; it is a reality and there are consequences. Rather than simply being able to save for a rainy day, future retirement funds are invested and put at constant risk, often just as a means to keep up with the very inflation manufactured by central banks."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "The demand function is perversely driven by central banks devaluing money to induce such investments. An over financialized economy is the logical conclusion of monetary inflation, and it has induced perpetual risk taking while disincentivizing savings. A system which disincentivizes saving and forces people into a position of risk taking creates instability, and it is neither productive nor sustainable. It should be obvious to even the untrained eye, but the overarching force driving the trend toward financialization and financial engineering more broadly is the broken incentive structure of the monetary medium which underpins all economic activity."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "At a fundamental level, there is nothing inherently wrong with joint-stock companies, bond offerings, or any pooled investment vehicle for that matter. While individual investment vehicles may be structurally flawed, there can be (and often is) value created through pooled investment vehicles and capital allocation functions. Pooled risk isn\u2019t the issue, nor is the existence of financial assets. Instead, the fundamental problem is the degree to which the economy has become financialized, and that it is increasingly an unintended consequence of otherwise rational responses to a broken and manipulated monetary structure."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "The Dollar Hamster Wheel"}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "What happens when hundreds of millions of market participants come to understand that their money is artificially, yet intentionally, engineered to lose 2% of its value every year? It is either accept the inevitable decay or try to keep up with inflation by taking incremental risk. And what does that mean? Money must be invested, meaning it must be put at risk of loss. Because monetary debasement never abates, this cycle persists. Essentially, people take risk through their \u201cday\u201d jobs and then are trained to put any money they do manage to save at risk, just to keep up with inflation, if nothing more. It is the definition of a hamster wheel. Run hard just to stay in the same place. It may be insane but it is the present reality. And it is not without consequence."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "While the relationship between savings and risk is often misunderstood, risk must be taken in order for any individual to accumulate savings in the first place. Risk comes in the form of investing time and energy in some pursuit that others value (and must continue to value) in order to be paid (and continue to be paid). It starts with education, training and ultimately perfecting a craft over time that others value."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "That is risk taking. Investing time and energy in an attempt to earn a living and to produce value for others, while also implicitly accepting high degrees of future uncertainty. If successful, it ends with a classroom of students, a product on a shelf, a world-class performance, a full day of hard manual labor or anything else that others value. The risk is taken on the front end with the hope and expectation that someone else will compensate you for your time spent and value delivered."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Compensation typically comes in the form of money because money, as an economic good, allows individuals to convert their own value into a wide range of value created by others. In a world in which money is not manipulated, monetary savings would best be described as the difference between the value one has produced for others and the value one has consumed from others. Savings is simply consumption or investment deferred into the future; or said another way, it represents the excess of what one has produced but not yet consumed. That however is not the world that exists today. With modern money, there is a fly in the ointment."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Central banks create more and more money which causes savings to be perpetually devalued. The entire incentive structure of money is manipulated, including the integrity of the scorecard that tracks who has created and consumed what value. Value created today is ensured to purchase less in the future as central banks allocate more units of the currency arbitrarily. Money is intended to store value, not lose value and with monetary economics engineered by central banks, everyone is unwittingly forced into the position of taking risk as a means to replace savings as it is debased. The unending devaluation of monetary savings forces unwanted and unwarranted risk taking on to those that make up the economy. Rather than simply benefiting from risks already taken, everyone is forced to take incremental risk."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Pierre Rochard & Nic Carter Discussing Savings vs. Investing on Bitcoin Twitter"}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Forcing risk taking on practically all individuals within an economic system is not natural nor is it fundamental to the functioning of an economy. It is the opposite and it is detrimental to the stability of the system as a whole. As an economic function, risk taking itself is productive, necessary, and inevitable. The unhealthy part is specifically when individuals are forced into taking risk as a byproduct of central banks manufacturing money to lose value, whether those taking risk are conscious of the cause and effect or not. Risk taking is productive when it is intentional, voluntary and undertaken in the pursuit of accumulating capital. While deciphering between productive investment and that which is induced by monetary inflation is inherently grey, you know it when you see it. Productive investment occurs naturally as market participants work to improve their own lives and the lives of those around them. The incentives to take risk in a free market already exist. There is nothing to be gained, and a lot to lose, through central bank intervention."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "The operation of risk taking becomes counterproductive when it is borne more out of a hostage taking situation than it is free will. That should be intuitive and it is exactly what occurs when investment is induced by monetary debasement. Recognize that 100% of all future investment (and consumption for that matter) comes from savings. Manipulating monetary incentives, and specifically creating a disincentive to save, merely serves to distort the timing and terms of future investment. It forces the hand of savers everywhere and unnecessarily lights a shortened fuse on all monetary savings. It inevitably creates a game of hot potatoes, with no one wanting to hold money because it loses value, when the opposite should be true. What kind of investment do you think that world produces? Rather than having a proper incentive to save, the melting ice cube of central bank currency has induced a cycle of perpetual risk taking, whereby the majority of all savings are almost immediately put back at risk and invested in financial assets, either directly by an individual or indirectly by a deposit-taking financial institution. Made worse, the two operations have become so sufficiently confused and conflated that most people consider investments, and particularly those in financial assets, as savings."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Without question, investments (in financial assets or otherwise) are not the equivalent of savings and there is nothing normal or natural about risk taking induced by central banks which create a disincentive to save. Anyone with common sense and real world experience understands that. Even still, it doesn\u2019t change the fact that money loses its value every year (because it does) and the knowledge of that fact very rationally dictates behavior. Everyone has been forced to accept a manufactured dilemma. The idea that you must make your money grow is one of the greatest lies ever told. It isn\u2019t true at all. Central banks have created that false dilemma. The greatest trick that central banks ever pulled was convincing the world that individuals must perpetually take risk just to preserve value already created (and saved). It is insane, and the only practical solution is to find a better form of money which eliminates the negative asymmetry inherent to systemic currency debasement. That is what bitcoin represents. A better form of money that provides all individuals with a credible path to opt out and to get off the hamster wheel."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Whether one considers the game to be rigged or simply acknowledges that persistent monetary debasement is a reality, economies all over the world have been forced to adapt to a world in which money loses its value. While the intention is to induce investment and spur growth in \u201caggregate demand,\u201d there are always unintended consequences when economic incentives become manipulated by exogenous forces. Even the greatest cynic probably wishes that the world\u2019s problems could be solved by printing money, but then again, only kids believe in fairy tales. Rather than print money and have problems magically disappear, the proverbial can has been kicked down the road time and time again. Economies have been structurally and permanently altered as a function of money creation."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "The Fed might have thought it could print money as a means to induce productive investment, but what it actually produced was malinvestment and a massively over-financialized economy. Economies have become increasingly financialized as a direct result of monetary debasement and the impact that has had in manipulating the cost of credit. One would have to be blind not to see the connection: the necessary cause and effect between a money manufactured to lose its value, a disincentive to hold money and the rapid expansion of financial assets, including within the credit system."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Banking and wealth management industries have metastasized by this same function. It is like a drug dealer that creates his own market by giving the first hit away for free. Drug dealers create their own demand by getting the addict hooked. That is the Fed and the financialization of the developed world economy via monetary inflation. By manufacturing money to lose value, markets for financial products emerge that otherwise would not. Products have emerged to help people financially engineer their way out of the very hole created by the Fed. The need arises to take risk and to attempt to produce returns to replace what is lost via monetary inflation."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Source: Statistica."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Source: Statistica."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "The financial sector has captured a larger percentage of the economy over time because there is greater demand for financial services in a world in which money is constantly impaired. Stocks, corporate bonds, treasuries, sovereign bonds, mutual funds, equity ETFs, bond ETFs, levered ETFs, triple levered ETFs, fractional shares, mortgage-backed securities, CDOs, CLOs, CDS, CDX, synthetic CDS/CDX, etc. All of these products represent the financialization of the economy, and they become more relevant (and in greater demand) when the monetary function is broken."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Source: Statistica."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Each incremental shift to pool, package and repackage risk can be tied back to the broken incentive structure inherent to the money underpinning an economy and the manufactured need to make money grow. Again, it is not to say that certain financial products or structures do not create value; instead, the problem is that the degree to which financial products are utilized and the extent to which risk has been layered on top of risk is largely a function of an intentionally broken monetary incentive structure."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "While the vast majority of all market participants have been lulled to sleep as the Fed has normalized its 2% per year inflation target, consider the consequence of that policy over a decade or two decades. It represents a compounded 20% and 35% loss of monetary savings over 10 or 20 years, respectively. What would one expect to occur if everyone, society wide, were collectively put in a position of needing to recreate or replace 20 to 35% of their savings just to remain in the same place?"}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "The aggregate impact is massive malinvestment; investment in activities that would not have occurred if people were not forced into a position of taking ill-advised risk merely to replace the expected future loss of current savings. On an individual level, it is the doctor, nurse, engineer, teacher, butcher, grocer, builder, etc. being turned into a financial investor, plowing the majority of their savings into Wall St. financial products that bear risk while perceiving there to be none. Over time, stocks only go up, real estate only goes up, and interest rates only go down."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "For the record, the author is a Dave Portnoy fan."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "How or why is a mystery to the Davey Day traders of the world, and it matters not, because that\u2019s just the way the world is perceived to work, and everyone acts accordingly. Rest assured, it will all end badly, but most individuals have come to believe investments in financial assets are just a better (and necessary) way to save, which dictates behavior. A \u201cdiversified portfolio\u201d has become so synonymous with savings that it is not perceived to bear risk, nor is it perceived to be a risk-taking activity. While that couldn\u2019t be further from the truth, the choice is either to take risk via investments or to leave savings in a monetary medium that is sure to purchase less and less in the future. From an actual savings perspective, it is where damned if you do meets damned if you don\u2019t. It is an unnerving game that everyone is either forced to play or sit it out and lose either way."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Forcing everyone to live in a world in which money loses value creates a negatively reinforcing feedback loop; by eliminating the very possibility of saving money as a winning proposition, it makes all outcomes far more negative in aggregate. Just holding money is a non-credible threat when money is engineered to lose its value. People still do it, but it\u2019s a losing hand by default. So is perpetual risk-taking as a forced substitute to saving. Effectively, all hands become losing hands when one of the options is not winning by saving money. Recall that each individual with money has already taken risk to get it in the first place. A positive incentive to save (and not invest) is not equivalent to rewarding people for not taking risk, quite the opposite. It is rewarding people who have already taken risk with the option of merely holding money without the express promise of its purchasing power declining in the future."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "In a free market, money might increase or decrease in value over a particular time horizon, but guaranteeing that money loses value creates an extreme negative outcome, where the majority of participants within an economy lack actual savings. Because money loses its value, opportunity cost is often believed to be a one way street. Spend your money now because it is going to purchase less tomorrow. The very idea of holding cash (formerly known as saving) has been conditioned in mainstream financial circles to be a near crazy proposition as everyone knows that money loses its value. How crazy is that? While money is intended to store value, no one wants to hold it because the predominant currencies used today do the opposite. Rather than seek out a better form of money, everyone just invests instead!"}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "\u201cI still think that cash is trash relative to other alternatives, particularly those that will retain their value or increase their value during reflationary periods\u201d\u200a\u2014\u200aRay Dalio (April 2020)"}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Even the most revered Wall St. investors are susceptible to getting caught up in the madness and can act a fool. Risk taking for inflation\u2019s sake is no better than buying lottery tickets, but that is the consequence of creating a disincentive to save. Economic opportunity cost becomes harder to measure and evaluate when monetary incentives are broken. Today, decisions are rationalized because of broken incentives. Investment decisions are made and financial assets are often purchased merely because the dollar is expected to lose its value. But, the consequence extends far beyond savings and investment. Every economic decision point becomes impaired when money is not fulfilling its intended purpose of storing value."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "All spending versus savings decisions, including day-to-day consumption, become negatively biased when money loses its value on a persistent basis. By reintroducing a more explicit opportunity cost to spending money (i.e. an incentive to save), everyone\u2019s risk calculus necessarily changes. Every economic decision becomes sharper when money is fulfilling its proper function of storing value. When a monetary medium is credibly expected to maintain value at minimum, if not increase in value, every spend versus save decision becomes more focused and ultimately informed by a better aligned incentive structure."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "\u201cOne of the greatest mistakes is to judge policies and programs by their intentions rather than their results\u201d\u200a\u2014\u200aMilton Friedman"}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "It is a world that Keynesian economists fear, believing that investments will not be made if an incentive to save exists. The flawed theory goes that if people are incentivized to \u201choard\u201d money, no one will ever spend money, and investments deemed \u201cnecessary\u201d will not be made. If no one spends money and risk-taking investments are not made, unemployment will rise! It truly is economic theory reserved for the classroom; while counterintuitive to the Keynesian, risk will be taken in a world in which savings are incentivized."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Not only that, the quality of investment will actually be greater as both consumption and investment benefit from undistorted price signals and with the opportunity cost of money being more clearly priced by a free market. When all spending decisions are evaluated against an expectation of potentially greater purchasing power in the future (rather than less), investments will be steered toward the most productive activities and day-to-day consumption will be filtered with greater scrutiny."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Conversely, when the decision point of investment is heavily influenced by not wanting to hold dollars, you get financialization. Similarly, when consumption preferences are guided by the expectation that money will lose its value rather than increase in value, investments are made to cater toward those distorted preferences. Ultimately, short-term incentives beat out long-term incentives; incumbents are favored over new entrants, and the economy stagnates, which increasingly fuels financialization, centralization and financial engineering rather than productive investment. It is cause and effect; intended behavior with unintended but predictable consequences."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Make money lose its value and people will do dumb shit because doing dumb shit becomes more rational, if not encouraged. People that would otherwise be saving are forced to take incremental risk because their savings are losing value. In that world, savings become financialized. And when you create the incentive not to save, do not be surprised to wake up in a world in which very few people have savings. The empirical evidence shows exactly this, and despite how much it might astound a tenured economics professor, the lack of savings induced by a disincentive to save is very predictably a major source of the inherent fragility in the legacy financial system."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "The lack of savings and economic instability is all driven by the broken incentives of the underlying currency, and this is the principal problem which bitcoin fixes. By eliminating the possibility of monetary debasement, incentives that were broken become aligned; there will only ever be 21 million and that alone is sufficiently powerful to begin to reverse the trend of financialization. While each bitcoin is divisible into 100 million units (or down to 8 decimal points), the nominal supply of bitcoin is capped at 21 million. Bitcoin can be divided into smaller and smaller units as more and more people adopt it as a monetary standard, but no one can arbitrarily create more bitcoin. Consider a terminal state in which all 21 million bitcoin are in circulation; technically, no more than 21 million bitcoin can be saved, but the consequence is that 100% of all bitcoin are always being saved\u200a\u2014\u200aby someone at any particular point in time. Bitcoin (including fractions thereof) will transfer from person to person or company to company but the total supply will be static (and perfectly inelastic)."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "By creating a world in which there is a fixed money supply such that no more or no less can be saved in aggregate, the incentive and propensity to save increases measurably on the individual level. It is a paradox; if more money cannot be saved in aggregate, more people will save on an individual basis. On one hand, it may appear to be a simple statement that individuals value scarcity. But in reality, it is more so an explanation that an incentive to save creates savers, even if more money can\u2019t be saved in aggregate. And in order for someone to save, someone else must spend existing savings. After all, all consumption and investment comes from savings; the incentive to save creates savers, and the existence of more savers in turn creates more people with the means to consume and invest. At an individual level, if someone expects a monetary unit to increase in purchasing power, he or she might reasonably defer either consumption or investment to the future (the key word being \u2018defer\u2019). That is the incentive to save creating savers. It doesn\u2019t eliminate consumption or investment; it merely ensures that the decision is evaluated with greater scrutiny when future purchasing power is expected to increase, not decrease. Imagine every single person simultaneously operating with that incentive mechanism, compared to the opposite which exists today."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "While Keynesians worry that an appreciating currency will disincentivize consumption and investment in favor of savings and to the detriment of the economy at large, the free market actually works better in practice than it does when applying flawed Keynesian theory. In practice, a currency that is appreciating will be used everyday to facilitate consumption and investment because there is an incentive to save, not despite that fact. High present demand for both consumption and investment is dictated by positive time preference and there being an express incentive to save; everyone is always trying to earn everyone else\u2019s money and everyone needs to consume real goods every day."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Time preference as a concept is described at length in the Bitcoin Standard by Saifedean Ammous. While the book is a must read and no summary can do it justice, individuals can have lower time preference (weighting the future over the present) or a higher time preference (weighting the present over the future), but everyone has a positive time preference. As a tool, money is merely a utility in coordinating the economic activity necessary to produce the things that people actually value and consume in their daily lives. Given that time is inherently scarce and that the future is uncertain, even those that plan and save for the future (low time preference) are predisposed to value the present over the future on the margin. Taken to an extreme just to make the point, if you made money and literally never spent a dime (or a sat), it wouldn\u2019t have done you any good. So even if money were increasing in value over time, consumption or investment in the present has an inherent bias over the future, on average, because of positive time preference and the existence of daily consumption needs that must be satisfied for survival (if not for want)."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Now, imagine this principle applying to everyone simultaneously and in a world of bitcoin with a fixed money supply. 7 billion plus people and only 21 million bitcoin. Everyone both has an incentive to save because there is a finite amount of money and everyone has a positive time preference as well as daily consumption needs. In this world, there would be a fierce competition for money. Each individual would have to produce something sufficiently valuable in order to entice someone else to part with their hard-earned money, but he or she would be incentivized to do so because the roles would then be reversed. That is the contract bitcoin provides."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "The incentive to save exists but the existence of savings necessarily requires producing something of value demanded by others. If at first you don\u2019t succeed, try, try again. The interests and incentives align perfectly between those that have the currency and those providing goods and services, particularly because the script is flipped on the other side of each exchange. Paradoxically, everyone would be incentivized to \u201csave more\u201d in a world in which more money technically could not be saved. Over time, each person would hold less and less of the currency in nominal terms on average but with each nominal unit purchasing more and more over time (rather than less). The ability to defer consumption or investment and be rewarded (or rather simply not be penalized) is the lynchpin that aligns all economic incentives."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "The primary incentive to save bitcoin is that it represents an immutable right to own a fixed percentage of all the world\u2019s money indefinitely. There is no central bank to arbitrarily increase the supply of the currency and debase savings. By programming a set of rules that no human can alter, bitcoin will be the catalyst that causes the trend toward financialization to reverse course. The extent to which economies all over the world have become financialized is a direct result of misaligned monetary incentives, and bitcoin reintroduces the proper incentives to promote savings. More directly, the devaluation of monetary savings has been the principal driver of financialization, full stop. When the dynamic that created this phenomenon is corrected, it should be no surprise that the reverse set of operations will naturally course correct."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "If monetary debasement induced financialization, it should be logical that a return to a sound monetary standard would have the opposite effect. The tide of financialization is already on its way out, but the groundswell is just beginning to form as most people do not yet see the writing on the wall. For decades, the conventional wisdom has been to invest the vast majority of all savings, and that doesn\u2019t change overnight. But as the world learns about bitcoin, at the same time that global central banks create trillions of dollars and anomalies like $17 trillion in negative yielding debt continue to exist, the dots are increasingly going to be connected."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "\u201cThe market value of the Bloomberg Barclays Global Negative Yielding Debt Index rose to $17.05 trillion [November 2020], the highest level ever recorded and narrowly eclipsing the $17.04 trillion it reached in August 2019.\u201d\n\u2014 Bloomberg News"}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "More and more people are going to begin to question the idea of investing retirement savings in risky financial assets. Negative yielding debt doesn\u2019t make sense; central banks creating trillions of dollars in a matter of months doesn\u2019t make sense either. All over the world, people are beginning to question the entire construction of the financial system. It might be conventional wisdom, but what if the world didn\u2019t have to work that way? What if this whole time it were all backwards, and rather than everyone buying stocks, bonds and layered financial risk with their savings, all that was ever really needed was just a better form of money?"}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Rather than taking open-ended risk, if each individual had access to a form of money that was not programmed to lose value, sanity in an insane world could finally be restored and the byproduct would be greater economic stability. Simply go through the thought exercise. How rational is it for practically every person to be investing in large public companies, bonds or structured financial products? How much of it was always a function of broken monetary incentives? How much of the retirement risk taking game came about in response to the need to keep up with monetary inflation and the devaluation of the dollar? Financialization was the lead up to, and the blow up which caused, the great financial crisis. While not singularly responsible, the incentives of the monetary system caused the economy to become highly financialized. Broken incentives increased the amount of highly leveraged risk taking and created a broad-based lack of savings, which was a principal source of fragility and instability. Very few had savings for a rainy day, and everyone learns the acute difference between monetary assets and financial assets in the middle of a liquidity crisis. The same dynamic played out early in 2020 as liquidity crises re-emerged."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Fool me once shame on you. Fool me twice, shame on me, the saying goes. It all comes back to the breakdown of the monetary system and the moral hazard introduced by a financial system that spawned as a result of misaligned monetary incentives. There is no mistaking it; the instability in the broader economic system is a function of the monetary system, and as more of these episodes continue to play out, more and more people will continue to seek a better, more sustainable path forward. Now with bitcoin increasingly at center stage, there is a market mechanism that will de-financialize and heal the economic system. The process of definancialization will occur as wealth stored in financial assets is converted into bitcoin and as each market participant increasingly expresses a preference for holding a more reliable form of money over risk assets. Definancialization will principally be observed through growing bitcoin adoption, the appreciation of bitcoin relative to every other asset and the deleveraging of the financial system as a whole. Almost everything will lose purchasing power in bitcoin-denominated terms as bitcoin becomes adopted globally as a monetary standard. Most immediately, bitcoin will gain share from financial assets, which have acted as near stores of value; it is only logical that the assets which have long served as monetary substitutes will increasingly be converted to bitcoin. As part of this process, the financial system will shrink in size relative to the purchasing power of the bitcoin network. The existence of bitcoin as a more sound monetary standard will not only cause a rotation out of financial assets, but bitcoin will also impair future demand for the same type of assets. Why purchase near-zero yielding sovereign debt, illiquid corporate bonds or equity-risk premium when you can own the scarcest asset (and form of money) that has ever existed?"}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "It might start with the most obviously over-priced financial assets, such as negative yielding sovereign debt, but everything will be on the chopping block. As the rotation occurs, non-bitcoin asset prices will experience downward pressure, which will similarly create downward pressure on the value of debt instruments supported by those assets. The demand for credit will be impaired broadly, which will cause the credit system as a whole to contract (or attempt to contract). That in turn will accelerate the need for quantitative easing (increase in the base money supply) to help sustain and prop up credit markets, which will further accelerate the shift out of financial assets and into bitcoin. The process of definancialization will feed on itself and accelerate because of the feedback loop between the value of financial assets, the credit system and quantitative easing."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "More substantively, as time passes and as knowledge distributes, individuals will increasingly opt for the simplicity of bitcoin (and its 21 million fixed supply) over the complexity of financial investing and structured financial risk. Financial assets bear operational risk and counterparty risk, whereas bitcoin is a bearer asset, perfectly fixed in supply, highly divisible, and easily transferable. The utility of money is fundamentally distinct from that of a financial asset. A financial asset has a claim on the income stream of a productive asset, denominated in a particular form of money. The holder of a financial asset is taking risk with the goal of earning more money in the future. Owning and holding money is just that; it is valuable in its ability to be exchanged in the future for goods & services. In short, money can buy groceries; your favorite stock, bond or treasury cannot, and there\u2019s a reason."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "There is and always has been a fundamental difference between saving and investment; savings are held in the form of monetary assets and investments are savings which are put at risk. The lines may have been blurred as the economic system financialized, but bitcoin will unblur the lines and make the distinction obvious once again. Money with the right incentive structure will overwhelm demand for complex financial assets and debt instruments. The average person will very intuitively and overwhelmingly opt for the security provided by a monetary medium with a fixed supply. As individuals opt out of financial assets and into bitcoin, the economy will definancialize. It will naturally shift the balance of power away from Wall St. and back to Main St."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "The banking sector will no longer reside at the epicenter of the economy as a rent-seeking endeavor, and instead, it will sit alongside every other industry and more directly compete for capital. Today, monetary capital is largely captive to the banking system, and that will no longer be true in a bitcoinized world. As part of the transition, the flow of money will increasingly disintermediate from the banking sector; money will more freely and directly flow among the economic participants that actually contribute value."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "The function of credit markets, stock markets and financial intermediation will still exist, but it will all be right-sized. As the financialized economy consumes fewer and fewer resources and as monetary incentives better align with those that create real economic value, bitcoin will fundamentally restructure the economy. There have been societal consequences to disincentivizing savings, but now the ship is headed in the right direction and toward a brighter future. In that future, gone will be the days of everyone constantly thinking about their stock and bond portfolios, and more time can be spent getting back to the basics of life and the things that really matter."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "The difference between saving in bitcoin (not taking risk) and financial investing (taking risk) is night and day. There is something cathartic about saving in a form of money that works in your favor rather than against it. It is akin to a massive weight being lifted off your shoulders that you didn\u2019t even know existed. It might not be apparent immediately, but over time, saving in a form of money with proper incentives ultimately allows one to think and worry about money less, rather than obsess over it. Imagine a world in which billions of people, all using a common currency, can focus more on creating value for those around them rather than worrying about making money and financial investing. What that future looks like exactly, no one knows, but bitcoin will definancialize the economy, and it will no doubt be a renaissance."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "This version of Gradually, then Suddenly is the 17th essay in the series and was first published as part of the Bitcoin Times (Ed. 3). I want to thank Aleks Svetski (CEO of Amber Labs) for organizing and inviting me to participate in the Bitcoin Times. I also want to thank Aleks in addition to Phil Geiger, Robert Breedlove and Will Cole for providing valuable feedback on this edition of the Gradually, Then Suddenly series. Lastly, I\u2019d like to recognize the other contributors to the Bitcoin Times: Jimmy Song, Erik Cason, Jeff Booth, Giacomo Zucco and Aleks, himself (as well as Makena Rhodes for editing and design). I\u2019m lucky to call these brave men friends, teammates, clients, twitter friends, fellow bitcoiners or a combination in certain cases. It\u2019s an honor just to be included. Views presented are expressly my own and not those of my colleagues at Unchained Capital."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Best, Parker\n@parkeralewis\nwww.unchained-capital.com"}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin is the Great Definancialization", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "A few years ago, I received an email from a friend asking for my opinion about an investment opportunity that a mutual contact of ours was considering. After a quick search on the internet and after having watched a few videos, I explained that it looked like a pyramid scheme. This was my shorthand for \u201cavoid at all cost.\u201d The information was forwarded along to our mutual contact and the reply back was not what I was expecting: \u201cAre all pyramid schemes bad?\u201d Some pyramid schemes are harder to identify than others, but even those that are easy to identify find prey in unassuming victims. A good rule of thumb is to run, not walk, away from anything that even hints of being a pyramid scheme. Thankfully, bitcoin is not one of them. While it may seem obvious, not everyone understands what a pyramid scheme actually is, what the warning signs may be, or why such schemes always fail."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Definition of a Pyramid Scheme \u2013 Securities & Exchange Commission"}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Warning Signs of a Pyramid Scheme \u2013 Federal Trade Commission"}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Not all multi-level marketing programs are pyramid schemes, but all pyramid schemes are in some fashion a multi-level marketing program. With pyramid schemes, there is always some company and it is selling a product for which the end demand falls far short of the available supply. The company recruits participants to purchase inventory and to recruit new participants. The participants are all sales people, and compensation is tied mostly to recruiting, rather than selling the actual product. Often the sale of product is purposefully woven into the recruitment process. "}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "In a normal sales-driven business, the company takes on the inventory risk and pays commissions based on sales to end users. In a pyramid scheme, the sales people take on the inventory risk, rather than the company, and compensation is paid for recruiting more sales people and selling product through to new participants. It all falls apart because sufficient end demand for the product does not actually exist. Everyone up the chain can make money at the expense of the new recruits at the end of the line. This is a pyramid scheme. Bitcoin is not. Bitcoin is not a company. It has no employees and its supply is finitely scarce. No matter how many people adopt it, there will only ever be 21 million bitcoin."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "The distinctions should be glaringly obvious, but because bitcoin is complex and the very idea of money is not well understood, it can easily be confused. Bitcoin will only become a global reserve currency if hundreds of millions (if not billions) more adopt it. And seemingly everyone that goes down the bitcoin rabbit hole ends up on the other side explaining it to their family and friends, pitching it as a better form of money. Sounds kind of like a pyramid scheme, right? Wrong. When Dell started selling PCs on its website in 1996 and everyone told their friends to get a Dell, was it a pyramid scheme? When Apple released the first iPhone in 2007 and everyone told their friends to drop the Blackberry for its superior successor, was it a pyramid scheme? "}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Technological shifts often happen fast. Ten and twenty years later, smartphones and PCs are ubiquitous. It is all about the quality of the product and the incentive structure. If someone owned Apple stock or Dell stock, did it change the fact that the product itself provided a real value proposition? Was there a direct benefit for telling people about a new technological innovation? The value proposition of an innovation trumps all else. It does not matter how you learn about it; all that matters is whether the innovation provides utility. If it does, people will want to use it; if it doesn\u2019t, they won\u2019t. That is what makes a market."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Bitcoin\u2019s utility is as money. It has a market because it solves a problem inherent in modern money. Not only is bitcoin not a pyramid scheme; it is fundamentally distinct from the class of innovation that could be offered by any individual company. Bitcoin is not Dell and it is not Apple. It is not a tech stock. There is no company that exists behind bitcoin. Bitcoin is not a company selling a product and there is no income stream to pay future dividends. Bitcoin is not about making money; instead, bitcoin is money, or at least it has become money to those choosing to store a portion of their wealth in it. And it\u2019s not a get-rich-quick scheme; it is fundamentally about storing the value you have already created. Bitcoin is a bearer asset; however, unlike a bearer bond, there is no income stream. "}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Bitcoin\u2019s innovation is that it represents a superior form of money, but there are no future promises beyond being in possession of a digital bearer instrument. The only utility of bitcoin is in holding it as a currency and transacting with it in the future, whether that be in exchange for legacy currencies or other goods and services. Bitcoin is only useful as a form of money, and it will only maintain value if others demand it in the future. But this is true of any form of money (not just bitcoin). Money is not a collective hallucination or merely a belief system; monetary goods have distinct properties which make them more or less effective in facilitating exchange. However, monetary properties are not absolute; the relative strength of monetary properties is the fundamental basis of demand. When the market evaluates bitcoin, it does so relative to other monetary mediums (the dollar, euro, yen, gold, etc.)."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "The supply of bitcoin, and its rigid supply constraint, is the foundation of bitcoin\u2019s utility and fundamental demand; it is also why bitcoin is not a pyramid scheme. There will only ever be 21 million bitcoin. That is bitcoin\u2019s schelling point. Everyone knows it; everyone remembers it. Everyone can also verify it at any point in time. For discussion of how and why bitcoin has a credibly fixed supply, see Bitcoin, Not Blockchain and Bitcoin is Not Backed by Nothing. But for now, just work on the assumption that the supply of bitcoin is capped at 21 million. In contrast, no one knows the supply of dollars. The Fed estimates the current supply of dollars, but no one knows how many dollars will exist in the future. There is no constraint on the supply of the dollar, other than the Federal Reserve, and all we know for sure is that many more dollars will exist in the future; it is a limitless function. In the end, there is fundamental demand for bitcoin because its monetary policy is i) optimally engineered and ii) credibly enforced.  Relative to its competition, bitcoin is a vastly superior monetary medium. "}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Exhibit A \u2013 Dollar Historical Supply"}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Exhibit B \u2013 Bitcoin Supply Schedule"}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "The monetary base in fiat systems changes unpredictably whereas the monetary base in bitcoin is governed by a well-defined supply schedule. Think about the monetary base as setting the foundation of a global economic system. The unpredictable changes in the supply of dollars is not merely akin to shifting the proverbial goal posts. Instead, it is more similar to building the field on a 1980s-style water bed, and then shifting the goal posts. The whole game is distorted, not just the end points. Bitcoin, on the other hand, is a bedrock as a function of its fixed supply, and over time, the foundation becomes stronger and stronger. The credibility of its supply schedule is reinforced with each passing bitcoin block. As it becomes more evident that bitcoin\u2019s supply schedule is credibly enforced, more people adopt bitcoin as a form of money, and those that already have increasingly use it as a store of wealth. Fixed supply + increasing adoption = increased value. As adoption increases and as value rises, bitcoin becomes further decentralized. And as bitcoin decentralizes over time, it becomes harder to change, reinforcing the credibility of its foundation: its fixed supply."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "In a pyramid scheme, the people selling the scheme are the scammers. These scammers are selling the promise of future monetary gains through high-pressure sales tactics and by recruiting new members to the scheme as the primary compensation mechanism. In bitcoin, the people buying bitcoin are the scammers, as described in Michael Goldstein\u2019s timeless piece, Everyone\u2019s a Scammer.  If this is you, you are the scammer. In most cases today, whenever someone buys bitcoin, they are directly trading a fractionally reserved form of currency (with the promise of future debasement) in return for a bearer asset with a finite supply and a vastly superior monetary policy. The person on the other end of the line is getting the raw deal. It is not to say that literally everyone that sells a bitcoin does so without good reason. It is money after all, and its utility is in exchange; by definition, market participants have a wide variety of present needs for liquidity and real value is transferred every time a bitcoin is transacted, whether for dollars or for goods and services. However, on average and over the longer-term, it is information asymmetry in full effect. Bitcoin\u2019s monetary policy is optimally engineered and credibly enforced, though few understand it, which is why it represents the greatest asymmetry in the world today."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "A monetary medium with the lowest rate of change is most effective in communicating economic signals, and a fixed supply (zero rate of change) is the optimal monetary policy end game. While the monoculture that is modern mainstream academia disagrees with this view, a fixed supply currency is superior to a currency that increases in supply over time (and at unpredictable rates). In any economy, supply and demand for goods and services relative to the supply and demand of money dictates prices. Price is what ultimately coordinates economic activity, and money is the foundation of the pricing mechanism within an economy. A currency with a fixed supply would remove the noise created by changes to the money supply in the price system, thus creating more reliable market signals. Because a monetary good facilitates the exchange between goods used for the purpose of either consumption or production, the form of money with the lowest rate of change will most accurately reflect changes in supply and demand of all other goods. Essentially, money is used to communicate the relative value of other goods and services, and changes in the money supply distort the communication of this information by introducing an extraneous variable to the equation."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "For example, an iPhone costs approximately $1,000, whereas a barrel of oil costs approximately $50. The information communicated through a monetary medium is that an iPhone costs approximately 20 times more than a barrel of oil. Money communicates opportunity cost (economic trade-offs) through its price system, and the more constant the quantity of money (lower rate of change), the more reliable the communication of information and economic trade-offs. If the money supply increased by 10% and prices adjusted equally, an iPhone would cost $1,100 and a barrel oil would cost $55. An iPhone would still cost 20 times more than a barrel of oil, and that is the relevant information which all market participants rely upon. In the real world, the problem is that prices do not adjust equally as the money supply changes. Instead, price signals become distorted. In a world with a constant money supply, changes in price would more accurately reflect changes in supply and demand in underlying markets for goods and services rather than also reflecting the unequal impact of a changing money supply. Changes in the money supply create noise extraneous to the underlying economic activity. Price coordinates economic trade-offs, and the reliability of a pricing system is dependent on the stability of the form of money used to communicate information."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "In that regard, monetary goods are differentiated (at least those that emerge on the free market); it is why money is an effective communication tool. The market structure for money is different than that of all other goods. A consumption good is consumed and a production good is ultimately consumed in the production of other consumption goods. Whereas, the utility of money is in exchange; it is functional in the coordination of trade by and between consumption and production goods, rather than being consumed itself. Because the utility of money is in exchange, scarcity is more important than the nominal amount of money in an economy. As demand for money increases and as its price rises, there is not a commensurate supply response because of natural supply constraints. The same is not true for any individual good or service. The relative supply constraint of money is what allows it to communicate relative value between other goods and services. Consumption goods and production goods can be substituted for each other, but money facilitates virtually all exchange between all other goods. The value of a money may fluctuate relative to goods and services but relative scarcity of a money supply allows price to be communicated in terms of the money itself."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Prior to bitcoin, no form of money was finitely scarce. Bitcoin has a fixed supply, capped at 21 million. Finite scarcity creates a constant where none existed previously. Imagine the supply of one good being perfectly constant while the supply of all other goods fluctuates. Demand for all goods changes, but only one constant exists: the supply of bitcoin. In this world, everything would be measured against the constant. The purchasing power of money would communicate far more perfect information through this pricing mechanism than if the supply of the money itself were changing. By creating one constant, everything else can be more reliably measured. And the desired information is not the absolute value of any one good. All value is subjective. Instead, the critical information communicated through a pricing mechanism is the relative value (or relative price) of many goods to each other. While price levels are ever changing due to constantly shifting supply and demand, the stability of the pricing mechanism itself allows for economic coordination via the communication of opportunity cost (i.e. how we know, or learn, that an iPhone costs approximately 20 times more than a barrel of oil)."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "In our current system, the supply of money changes unpredictably and increases over time. This is core to the central banking monetary model, and it derives from monetarist economic theory which argues that an active management of the money supply stimulates aggregate demand and ultimately promotes full employment. What it technically does is manipulate interest rates downward by increasing the supply of money. Lower interest rates increase the willingness and incentive to borrow; however, all else being equal, a lower interest would otherwise decrease the willingness to lend. Essentially, by inflating the money supply, the central bank artificially manipulates the function of credit, creating a sustained imbalance between the incentive to borrow and the willingness to lend. The more pervasive consequence is the distortion of the pricing mechanism that coordinates economic activity. By manipulating the supply of money and the supply of credit, central banks distort all prices throughout the market. False signals (and bad information) are distributed to all market participants. "}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "The entire supply and demand structure of the economy becomes distorted as hundreds of millions of people respond to manipulated price signals and when resources within the economy are re-allocated based on those signals. When the money supply is increased, new money (and credit) enters the system through various channels and at unpredictable times. The quantity and rate of change is unknown to most market participants. Instead, market participants react to price signals; that is how information is communicated. A price signal may be the cost of a good at the supermarket or it may be a salary an employer is willing to pay for a certain job. The change in the money supply creates a distortion of prices such that market participants cannot effectively understand whether changes in price are driven by changes in underlying supply and demand structures, or to what extent changes in price are merely a function of more or less money in the system. Regardless, everyone reacts to distorted signals."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "For a more tangible example, the Fed purchased $1.7 trillion of mortgage-backed securities (~17% of all mortgages) following the financial crisis as part of its quantitative easing program, which ultimately increased the base money supply by $3.6 trillion. Most people recall that prior to the financial crisis there was a housing bubble. By directly purchasing mortgages and by inflating the money supply, the Fed manipulated interest rates lower. Housing relies heavily on the supply of credit and ultimately on the cost of interest. With lower interest rates and more money available to lend, housing prices were manipulated higher. As a result, distorted price signals were sent to both buyers and sellers. Developers of housing respond by building more homes (increasing supply) and buyers of homes believe they can take on more debt at lower rates to purchase homes. More resources in the economy are devoted to the function of housing because of higher price levels. However, any increase in demand can only be sustained so long as the cost of credit is continually manipulated downward as a function of an increasing money supply."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Despite wide recognition of the unsustainable housing bubble in 2007, the national home price index is now 15% higher than it was at the prior peak. This is the manipulation of price levels on full display, and it happens as an intended function of central bank monetary policy. The Fed increases the money supply, lowers interest rates, and inflates asset prices such that the amount of existing debt in the credit system can be sustained. Credit expansion is the Fed\u2019s objective in stimulating growth, and net new credit cannot be created unless existing debt levels can be sustained, which is why the Fed must inflate asset prices to achieve its objectives. Asset prices support existing debt levels. When everyone figures out that the price signals are unsustainable and unreliable, it causes a shock to the system. This is what happened in 2007 and it is likely to happen again as the market signals have become even further distorted. But it is not some evil scheme; the Fed is not a purposively malicious actor. The Fed ultimately intends to promote \u201cfull employment\u201d through its policies, but what it actually does is manipulate relative price signals which creates imbalances in the underlying supply and demand structures of the economy, creating sudden and more chronic unemployment."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Hayek spoke on this subject in his 1974 Nobel Prize winning speech, the Pretense of Knowledge. As a function of manipulated prices, more resources are devoted to a segment of the economy than could otherwise be sustained naturally; when the central bank changes the course of its monetary policy, prices begin to respond and the market corrects. Because price levels have been manipulated on a sustained basis, a demand shock becomes inevitable and everyone figures out imbalances exist. In the case of the housing example, supply (both of goods and labor) significantly exceeds sustainable demand at current price levels. More broadly, imbalances are everywhere. It becomes apparent that supply and demand are significantly out of balance and unemployment increases rapidly. The market cannot find an equilibrium because all markets have been manipulated on a sustained basis for extended periods of time."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "This is what occurred during, and in the aftermath of, the financial crisis. It was the boiling over point after the Fed had manipulated the supply of money and the supply of credit for decades. As portrayed in the Big Short, the financial crisis often gets blamed on the subprime crisis, but the not-often-discussed 800-pound gorilla in the room is central bank monetary policy. Following the crisis, the Fed responded by pursuing the same policy action it had pursued for decades but on a much greater scale; it massively increased the money supply, further manipulating price signals. When the money supply is manipulated, recognize that not all price levels respond ratably. Money enters the system through different channels and the expansion of credit impacts certain segment of the economy more than others. All prices are manipulated, but not equally. It is fundamentally the distortion of relative prices which disrupt the underlying supply and demand function of a market. Price communicates information. It is how market participants communicate what they value on a relative basis. And, it is how all market participants then respond to those preferences on the supply side: what skills people train themselves with, what businesses people choose to build, what employment opportunities people seek. The Fed may not intend to do harm by manipulating the money supply, but ultimately, it is the unavoidable consequence of distorting the price mechanism within an economy."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Bitcoin is the white knight. Or at least, it has the potential to be. By creating a fixed supply, bitcoin has the potential to be the greatest pricing mechanism the world has ever known. Once bitcoin reaches its maximum supply of 21 million, changes to the money supply will be removed entirely from the equation of price signals. It should be axiomatic that the creation of money does nothing to generate real economic activity. It doesn\u2019t matter whether the change in the money supply is predictably small or whether the money supply increases significantly and unpredictably. Printing money does nothing to generate economic activity; it only serves to distort supply and demand. The utility of money is in exchange. Whether present exchange or future exchange, that is all. Money is not consumed; it is used to coordinate the economic activity that allows for capital to be accumulated. Whether it be physical capital required to produce real goods or human capital which advances arts, science, mathematics etc. That capital is the true savings of a society and it is fundamental to the function of an economy."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Most people think of savings in monetary terms because money is a unit of account, but real savings is represented by the accumulated capital that enriches the lives of individuals, families, and communities. In a world with a fixed money supply, monetary savings would be constant. Money would transfer from individual to individual, family to family, or business to business. But, in total, the money supply would neither increase or decrease. Economic activity would be coordinated as a function of money and with an undistorted pricing mechanism. The aggregate preferences of all markets would be more accurately communicated without the distortion of a changing money supply. Imbalances in supply and demand would be naturally corrected and not sustained over long periods of time; as a consequence, imbalances would also be smaller and not systemic to the economy as a whole. It does not mean all prices would always be perfect or that other variables, such as government spending or taxes, could not influence or distort economic activity. However, it would eliminate the primary mechanism that distorts price signals and market structures."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Bitcoin\u2019s fixed supply is the foundation of its more reliable pricing system but it is also issued at a predictable rate. In the future state, when bitcoin reaches its maximum supply, the rate of change thereafter will be zero. But on its way to that future state, bitcoin imbeds a stable and predictable supply schedule, which is a distinct and equally important part of the equation. Bitcoin are issued through a mining process that helps to secure the network and the network adjusts to ensure that bitcoin are issued on average every ten minutes. If more mining resources are added to the network, the network adjusts to prevent bitcoin from being issued at a faster rate. More mining results in greater levels of network security, rather than increasing the rate of issuance or increasing the total amount of bitcoin that will ultimately be issued. This allows the entire economic system to plan for the future. It allows miners building security infrastructure to forecast future compensation, but it also allows all market participants to predictably know the rate of change of the currency at any point in time."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Rather than allowing bitcoin to be issued rapidly or at an unpredictable rate, the network ensures that bitcoin will be issued steadily over time and as a consequence, on a more distributed basis. Most importantly, it constantly reinforces the credibility of the overall issuance structure. Every ten minutes (on average), a certain number of bitcoin are issued. Approximately every four years that number is cut in half until ultimately no incremental bitcoin will be issued. On the path to 21 million, the enforcement of the fixed supply every ten minutes builds credibility in the future state supply over time. All market participants come to understand that the fixed supply will be enforced not because of a magical point in time when the maximum is actually reached, but instead because the network enforces its monetary policy every 10 minutes. By creating a predictable supply schedule, the rate of change predictably decreases, and all market participants can observe for themselves that the system is functioning as intended."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "This process which constantly reinforces the credibility of bitcoin\u2019s monetary system is occurring in parallel to the dysfunction of legacy monetary systems. Central banks everywhere are increasing the money supply of their respective economies at unpredictable rates. As discussed previously, the Fed increased the money supply in the U.S. by $3.6 trillion following the financial crisis, from 2008 to 2014. Despite the Fed forecasting its plans, no one knew what the total would ultimately be. Everyone was guessing. The Fed didn\u2019t even know. And, after increasing the money supply by several multiples, the Fed then began removing $50 billion dollars from the economy each month, a process which began in October 2017. Again, no one knew exactly how much money would actually be removed from the system, in total or for how long. In aggregate, approximately $700 billion in base money was removed over the course of approximately two years. And now, as of October 2019, the Fed has once again shifted course and has begun to add more money back into the system. Just recently, the Fed signaled plans to add $60 billion dollars to the financial system each month (planned for the next six months). But once again, no one really knows for how long this will go on or whether the amounts will change. Realistically, the Fed does not know because it is impossible to know."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "All we practically know is that from this point forward the money supply will increase (and by a lot). But recognize, most market participants have no idea any of this has occurred or is occurring. All market participants really know is what is communicated to them via prices and employment opportunities. Those that have an understanding of the Fed\u2019s actions may be in a better position to forecast or predict the directional consequences, but economic systems are complex. We all react to the pricing mechanisms around us and no one has anywhere close to perfect knowledge; this is the pretense of knowledge. The aggregate knowledge of millions of people is communicated through price which is ultimately a function of ever-changing preferences of the individuals that make up an economy."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Individuals are inherently limited in the knowledge they possess. And this is certainly true of central banks. In the central banking monetary model, twelve individuals (or thereabout) determine how and when to create billions, if not trillions, of dollars despite possessing inherently limited knowledge. No matter how well-intentioned or how much knowledge possessed, the net consequence is the distortion of the fundamental mechanism (i.e. the pricing mechanism) which aggregates knowledge possessed by the market as a whole. For everyone relying upon the dollar as a unit of account and as a mechanism to communicate economic trade-offs, the very foundation changes unpredictably, unbeknownst to most of its participants. Distorted price signals are communicated gradually through millions of markets impacting the decisions made by hundreds of millions and the centralized mechanism that dictates monetary policy is a root cause of the distortion."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "And even if a reasonable person believed active money supply management to be a net benefit, bitcoin is now operating alongside the legacy economic system: a decentralized system vs. a centralized system. Monetary policy by consensus vs. monetary policy by central bank. While the money supply of the legacy system is unpredictably changing, the bitcoin network is operating flawlessly with a known supply and with a predictable rate of change. Rather than it being a philosophical or economic debate, there are now two competing systems, and the market will have the last say. While bitcoin may be complicated and the very subject of money may not be well understood, the flaws in the existing system are independent of bitcoin. The $17 trillion of negative yielding debt should be evidence enough and it only exists as a direct consequence of central bank monetary policy. Ultimately, the currencies that support the legacy system will be the release valve because central banks will be forced to increase the money supply in order to sustain what is an otherwise unsustainable credit system."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "With the legacy system coordinated by central banks, all one can rely on is that the money supply will change and at unpredictable rates. With bitcoin, everyone can verify the supply and the predictable rate of change. By running a bitcoin full node, anyone can verify the number of valid bitcoin that exist in circulation and the amount of new bitcoin issued in each block. Anyone and everyone can verify this information without trusting anyone else. This is how bitcoin works. Each node not only verifies information; it also validates information independently. Bitcoin\u2019s monetary policy is enforced on a decentralized basis by all nodes within the network. With precision, everyone can calculate when future blocks will be solved and when the rate of issuance will change. The fact that everyone can verify and validate the money supply, regardless of the nominal amount, reinforces the credibility of the monetary system. This reinforcement occurs every 10 minutes, 6 times an hour, 144 times a day, 4,320 times a month, 52,560 times a year, with each passing bitcoin block. The monetary system hardens as market participants validate that the monetary policy is enforced, over and over again, every ten minutes. "}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Supply & rate of issuance verified on four year-old Apple laptop (supply: 17,988,755; block subsidy = 12.5 bitcoin or 1,250,000,000 satoshis)"}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "A fixed supply is of little meaning without the credibility of its enforcement. Anyone can copy bitcoin\u2019s architecture and code base. But what cannot be replicated is the credibility of its monetary properties. The consensus mechanism which governs bitcoin is the foundation of its credibility and what ultimately sets bitcoin apart from its competition. Even if an individual remained unconvinced that a currency with a fixed supply would communicate better information through its pricing mechanism, it does not matter what any individual believes. Bitcoin entrusts its monetary policy to a consensus mechanism. While the maximum supply of bitcoin is practically capped at 21 million, the supply is ultimately governed by a consensus of those that hold bitcoin as a currency."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "If the market, which unquestionably possesses more information than any individual, collectively determined that it would be better to change the supply schedule rather than implementing a fixed cap, it is theoretically possible. However, the market would have to come to an overwhelming consensus to effect that change, and practically speaking, a decentralized network of rational economic actors would not form an overwhelming consensus to debase its own currency. Bitcoin\u2019s monetary policy is flexible enough to change but it is impossible to do so without an overwhelming consensus. Bitcoin ultimately represents the contrast between monetary policy by consensus and monetary policy by central bank. The information possessed by a market consensus mechanism will always exceed that of a small number of individuals, which is why bitcoin out-competes the legacy system at every step."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "So no, bitcoin is not a pyramid scheme. It is not organized by a sketchy company, pushing high pressure sales tactics. It is not peddling some inferior consumer good, with abundant supply, where compensation is directly tied to recruiting new members to the scheme. Bitcoin is money and its supply is finitely scarce. It does not matter how many people adopt bitcoin; as adoption increases, the same pie is distributed across more and more people, and on average, more people control a smaller and smaller share of the network. Its value increases as a function adoption, and adoption is increasing because its monetary properties are superior to the competition. Bitcoin has a fixed supply, its supply schedule is predictable, and its monetary policy is governed and enforced by consensus. Bitcoin\u2019s pricing mechanism is unmanipulable and cannot be distorted because of its fixed supply. Everything changes around bitcoin but bitcoin\u2019s fixed supply is the constant. Because bitcoin\u2019s supply is fixed and cannot be manipulated, it will eventually become the most reliable pricing mechanism in the world, and consequently, the greatest distribution system of knowledge. "}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "That is the promise which bitcoin provides, and it will only proliferate if it creates utility for those that adopt it. Today and into future, that utility will continue to be the ability to reliably store wealth in a monetary medium that cannot be debased. When people make the claim that bitcoin could be \u201cbigger-than-the-internet,\u201d it is generally not a linear application, but instead rooted in the idea that a sovereign, unmanipulable form of money has the potential to be one of the greatest instruments of freedom ever invented. The success of bitcoin is not a given, but if successful in delivering on its promise, it will facilitate more effective and more peaceable coordination by and amongst people throughout the world. At the end of the day, bitcoin is a communication tool. That is the function of money. Bitcoin simply provides an alternative system, operating on a decentralized basis which no one controls. It is the lack of control and the lack of conscious direction which will allow bitcoin to accumulate and communicate knowledge more effectively than any pre-existing monetary medium. Current volatility is nothing more than the logical path of price discovery, as adoption increases exponentially over time and as we advance toward that future state of full adoption."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "\u201cMany of the greatest things man has achieved are the result not of consciously directed thought, and still less the product of a deliberately coordinated effort of many individuals, but of a process in which the individual plays a part which he can never fully understand. They are greater than any individual because they result from the combination of knowledge more extensive than a single mind can master.\u201d\n\u2013 Hayek, The Counter-Revolution of Science"}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Next week: Bitcoin Cannot Be Banned"}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Views presented are expressly my own and not those of Unchained Capital or my colleagues. Thanks to Phil Geiger and Adam Tzagournis for reviewing and for providing valuable feedback."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin is Not a Pyramid Scheme", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Has anyone you respect ever told you that bitcoin doesn\u2019t make any sense? Maybe you\u2019ve seen the price of bitcoin rise exponentially and then seen it crash. You write it off, believe your friend was right, don\u2019t hear about it for a while and think bitcoin must have died. But then you wake up a few years later, bitcoin hasn\u2019t died and somehow its value is a lot higher again. And you start thinking maybe your skeptical friend wasn\u2019t right?"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "The list of bitcoin skeptics is long and distinguished (see here), but the noise contributes directly to the antifragile nature of bitcoin. People that store wealth in bitcoin are forced to think through first principles in order to understand characteristics of bitcoin which otherwise seem, on the surface, to contradict an establishment view of money, which ultimately hardens convictions. Bitcoin volatility is one of these oft-criticized characteristics. A common refrain among skeptics, including central bankers, is that bitcoin is too volatile to be a store of value, medium of exchange or unit of account. Given its volatility, why would anyone hold bitcoin as a savings mechanism? And, how could bitcoin be effective as a transactional currency for payments if its value could reasonably drop tomorrow?"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "The principal use case for bitcoin today is not as a payments rail but instead as a store of value, and the time horizon for those that store wealth in bitcoin is not a day, week, quarter or even a year. Bitcoin is a long-term savings mechanism and stability in the value of bitcoin will only be realized over time as mass adoption occurs. In the interim, volatility is the natural function of price discovery as bitcoin advances down the path of its monetization event and toward full adoption. Separately, bitcoin does not exist in a vacuum; most individuals or businesses are not singularly exposed to bitcoin and exposure to multiple assets, like any portfolio, mutes volatility of any single asset."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "It is fair to say that volatility and store of value are often confused as mutually exclusive. However, they most certainly are not. If an asset is volatile, it does not mean that asset will be an ineffective store of value.  The opposite is also true; if an asset is not volatile, it will not necessarily be an effective store of value. The dollar is a prime example: not volatile (today at least), bad store of value."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "\u201cVolatile things are not necessarily risky, and the reverse is also true.\u201d\nNassim Taleb (Skin in the Game)"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "The Fed has been highly effective in very slowly devaluing the dollar, but always remember, gradually, then suddenly. And, not volatile \u2260 store of value.  This is a critical mental block that many people experience when thinking about bitcoin as a currency, and it is largely a function of time horizon. While central bankers all over the world point to bitcoin as a poor store of value and not functional as a currency because of volatility, they think in days, weeks, months and quarters while the rest of us plan for the long-term: years, decades and generations."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Despite the logical explanations, volatility is one area that particularly confounds the experts. Bank of England Governor, Mark Carney recently commented that bitcoin \u201chas pretty much failed thus far on [\u2026] the traditional aspects of money. It is not a store of value because it is all over the map. Nobody uses it as a medium of exchange,\u201d (see here).  The European Central Bank (ECB) has also mused on Twitter that bitcoin is \u201cnot a currency\u201d, noting that it is \u201cvery volatile\u201d while at the same time reassuring everyone that it can \u201ccreate\u201d money to buy assets, the very function by which its currency actually loses value and why it\u2019s a poor store of value."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "The lack of self-awareness is not lost on anyone here but Mark Carney and the ECB are not alone. From former Fed Chairs, Bernanke and Yellen, to current Treasury Secretary Mnuchin to the President himself. All have, at times, trumpeted the idea that bitcoin is flawed as a currency (or as a store of value) because of its volatility. None seem to fully appreciate, or at least admit, that bitcoin is a direct response to the systemic problem of governments creating money via central banks or that bitcoin volatility is a necessary and healthy function of price discovery."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "But luckily for all of us, bitcoin is not too volatile to be a currency and often the experts are not experts at all. Setting logic aside, the empirical evidence shows that bitcoin has proven to be an exceptional store of value over any extended time horizon despite its volatility. So how could an asset such as bitcoin be both highly volatile and an effective store of value?"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Consider why there is fundamental demand for bitcoin and why bitcoin is naturally volatile. Bitcoin is valuable because it has a fixed supply and it is also volatile for the same reason. The fundamental demand driver for bitcoin is in its scarcity. To revisit bitcoin\u2019s value function from a previous edition, decentralization and censorship-resistance reinforce the credibility of bitcoin\u2019s scarcity (and fixed supply schedule) which is the basis of bitcoin\u2019s store of value property:"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "While demand is increasing by orders of magnitude, there is no supply response because bitcoin\u2019s supply schedule is fixed. The disparity in the rate of increase in demand (variable) vs. supply (fixed) combined with imperfect knowledge amongst market participants causes volatility as a function of price discovery. As Nassim Taleb writes in The Black Swan of Cairo: \u201cVariation is information. When there is no variation, there is no information.\u201d As bitcoin\u2019s value increases, it communicates information despite the volatility; the variation is the information. Higher value (dependent on variation) causes bitcoin to become relevant to new pools of capital and new entrants which then stokes an adoption wave."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Knowledge distribution and infrastructure fuel adoption waves and vice versa. It is a virtuous feedback loop and a function of both time and value. As value rises, bitcoin captures the attention and mindshare of a much wider audience of potential adopters, which then begin to learn about the fundamentals of bitcoin. Similarly, an appreciating asset base attracts additional capital not only as a store of wealth but also to build incremental infrastructure (e.g. more on-ramps & off-ramps, custody solutions, payments layers, hardware, mining, etc.). Developing an understanding of bitcoin is a slow process, as is building infrastructure, but both fuel adoption which then further distributes knowledge and justifies additional infrastructure."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Knowledge  \u2192  Infrastructure  \u2192  Adoption  \u2192  Value  \u2192  Knowledge  \u2192  Infrastructure"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Today, bitcoin is still nascent and current adoption likely represents <1% of terminal adoption. As a billion people adopt bitcoin, new adoption will represent orders of magnitude for any foreseeable future period which will continue to drive significant volatility; however, with each new adoption wave, the value of bitcoin will also reset higher because of higher base demand. Bitcoin volatility will only decline as the holder base reaches maturity and as the rate of new adoption stabilizes. Said another way, for a billion people to be using bitcoin, adoption will have had to increase by ~20x, but the subsequent 100 million adopters will only represent an additional 10% of the base. All while the supply of bitcoin remains on a fixed schedule. So long as adoption represents orders of magnitude, volatility is unavoidable, but on that path, volatility will naturally and gradually decline."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "As Vijay Boyapati explained on Stephan Livera\u2019s podcast, \u201cestablishment economists deride the fact that bitcoin is volatile, as if you can go from something that didn\u2019t exist to a stable form of money overnight; it\u2019s completely ludicrous.\u201d What happens between adoption waves is the natural function of price discovery as the market converges on a new equilibrium, which is never static. In bitcoin hype cycles, the rise, fall, stabilization and rise again is almost rhythmic. It is also naturally explained by speculative fear, followed by accumulation of fundamental knowledge and the addition of incremental infrastructure. Rome wasn\u2019t built in a day; in bitcoin, volatility and price discovery are core to the process."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "For a more tangible explanation of the relationship between volatility and value, it is helpful to think about the most recent adoption wave from the end of 2016 to present (2019)."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "While adoption can never really be quantified, a rough but fair estimate would be that bitcoin adoption increased from ~5 million people to ~60 million (an increase in demand of ~12 times) from 2016 to present, yet the supply of bitcoin only increased by approximately 10% over the same period. And naturally, the information and capital possessed by market participants varies significantly. As a massive adoption wave occurred, it was met by bitcoin\u2019s fixed supply schedule.  What would one expect to happen when demand increases by an order of magnitude but supply only increases by 10%? And what would happen if the knowledge and capital of the new entrants naturally varies greatly?"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "The very logical end result is higher volatility and a higher terminal value, if even a small percentage of new entrants convert to long-term holders (which is exactly what happened). New adopters who initially purchased bitcoin in its astronomical rise, slowly accumulate knowledge and convert to long-term holders, stabilizing base demand at a far higher terminal value compared to the prior adoption cycle."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Because bitcoin is nascent, the aggregate wealth stored in bitcoin on a relative basis is still very small (~$200 billion) which allows for the rate of change between marginal buyers and sellers (price discovery) to represent a significant percentage of the base demand (volatility). As base demand increases, the rate of change will begin to represent a smaller and smaller percentage of the base, reducing volatility over time and only after several more adoption cycles."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "If we can accept that bitcoin volatility is both natural and healthy, why doesn\u2019t current volatility prevent the adoption required to transition bitcoin to a stable form of money? Very simply: diversification, portfolio allocation theory and time horizon. There exists a global network (bitcoin) through which you can transfer value over a communication channel to anyone in the world, and it is currently valued, in total, at less than $200 billion. Facebook alone, on the other hand, is worth in excess of $500 billion. For further frame of reference, U.S. household assets are estimated to be valued at $125 trillion (see here, page 138)."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "In a theoretical world, bitcoin volatility would be an issue if it existed in a vacuum. In the real world, it doesn\u2019t. Diversification comes in the form of real productive assets as well as other monetary and financial assets, which mutes the impact of bitcoin\u2019s present volatility. Separately, information asymmetry exists and those that understand bitcoin also understand that, in time, the cavalry is coming. These concepts are obvious to those that have exposure to bitcoin and actively account for its volatility in short and long-term planning, but it\u2019s apparently less obvious to the skeptics, who struggle to grasp that bitcoin adoption is not an all or nothing proposition."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "While bitcoin will continue to steal share in the global competition for store of value because of its superior monetary properties, the function of an economy is to accumulate capital that actually makes our lives better, not money. Money is merely the economic good that allows for coordination to accumulate that capital. Because bitcoin is a fundamentally better form of money, it will gain purchasing power relative to inferior monetary assets (and monetary substitutes) and increasingly take market share in the economic coordination function, despite being less functional as a transactional currency today."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Bitcoin will also likely induce the de-financialization of the global economy, but it will neither eliminate financial assets nor real assets. During its monetization, these assets will continue to represent the diversification which will mute the impact of bitcoin\u2019s day-to-day volatility. See example here which highlights the risk/return of a 1% bitcoin + 99% dollar portfolio compared to gold, U.S. treasuries and the S&P 500 (@100trillionUSD). Also see The Case for a Small Allocation to Bitcoin by Xapo CEO Wences Casares. Both provide a look through into how volatility and risk can be managed should bitcoin experience a significant drawdown or even fail (which is still a possibility)."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "While failure is a possibility and significant drawdowns are an inevitability, each day that bitcoin doesn\u2019t fail, its survival becomes more and more likely (Lindy Effect). And over time, as bitcoin\u2019s value and liquidity increase due to its fundamental strengths, its purchasing power will also increase in terms of real goods, but as its purchasing power represents a larger and larger share of the economy, its volatility relative to other assets will proportionally decrease."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Bitcoin will become a transactional currency over time but in the interim, it would be far more logical to spend a depreciating asset (dollars, euro, yen, gold) and save an appreciating asset (bitcoin). Establishment economists and central bankers really struggle with this one; but I digress. On bitcoin\u2019s path to full monetization, store of value must come as a logical first order and bitcoin has proven to be an incredible store of value despite its volatility. As adoption matures, volatility will naturally fall, and bitcoin will increasingly become a medium of direct exchange."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Consider the person or business that would demand bitcoin in direct exchange for goods and services. This person or business collectively represent those that have first determined that bitcoin will hold its value over a particular time horizon. If one did not believe in the fundamental demand case for bitcoin as a store of value, why would they trade real-world goods and services in return? Bitcoin will transition to a transactional currency only as its liquidity gradually shifts from other monetary asset to goods and services which will occur along the path to mass adoption. It will not be a flash cut or a binary process. On a more standard path, adoption fuels infrastructure and infrastructure fuels adoption. Transactional infrastructure is already being built but more material investment will only be prioritized as a sufficient number of individuals first adopt bitcoin as a store of wealth."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Ultimately, bitcoin\u2019s lack of a price stability mandate and fixed supply will continue to result in near-term volatility but will drive long-term price stability. It is the literal opposite model pursued by Mark Carney of the BOE, the ECB (and its twitter account), the Federal Reserve and the Bank of Japan. And, it is why bitcoin is antifragile; there are no bailouts and it\u2019s a market devoid of moral hazard, which drives maximum accountability and long-term efficiency. Central banks manage currencies to mute short-term volatility, which creates the instability that leads to long-term volatility. Volatility in bitcoin is the natural function of monetary adoption and this volatility ultimately strengthens the resilience of the bitcoin network, driving long-term stability. Variation is information."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Nassim Taleb & Mark Blyth (Black Swan of Cairo)"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "\u201cComplex systems that have artificially suppressed volatility tend to become extremely fragile,\nwhile at the same time exhibiting no visible risks.\u201d"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "\u201cThis is one of life\u2019s packages: there is no freedom without noise\n\u2014and no stability without volatility.\u201d"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Ben Bernanke, Chairman of the Federal Reserve (during the Great Financial Crisis)"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "\u201cThe Federal Reserve is not currently forecasting a recession.\u201d \u2013 January 10, 2008"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "\u201cThe risk that the economy has entered a substantial downturn appears to have diminished\nover the past month or so.\u201d \u2013 June 9, 2008 "}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": " Next week: Bitcoin does not consume too much energy."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Views are expressly my own and not those of Unchained Capital or my colleagues. Thanks to Will Cole, Phil Geiger, Adam Tzagournis and Ethan Packard who have reviewed past and present releases of Gradually, Then Suddenly and provided valuable feedback."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Sign up to receive email notifications for future"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Gradually, Then Suddenly releases"}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "What an absolute masterpiece of an article this is. Thank you for sharing your thoughts, the various links and a solid argument for bitcoin."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin Is Not Too Volatile", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Have you ever heard a smart sounding friend say that they aren\u2019t sure about bitcoin but they believe in blockchain technology? This is like saying you believe in airplanes but you\u2019re not sure about the wings; and there\u2019s a good chance that anyone who thinks that may not understand either. In reality, bitcoin and its blockchain are dependent on each other. However, if new to bitcoin, understanding how it works and parsing the landscape can be incredibly difficult. Frankly, it can be overwhelming; given the complexity and sheer volume of projects, who has the time to possibly evaluate everything? There is in fact a manageable path but you have to know where to start. While there are seemingly thousands of cryptocurrencies and blockchain initiatives, there is really only one that matters: bitcoin. Ignore everything else like it didn\u2019t exist and first try to develop an understanding of why bitcoin exists and how it works; that is the best foundation to then be able to think about the entirety of everything else."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "It is also the most practical entry point; before taking a flyer and risking hard-earned value, take the time to understand bitcoin and then use that knowledge to evaluate the field. There is no promise that you will come to the same conclusions, but more often than not, those who take the time to intuitively understand how and why bitcoin works more easily recognize the flaws inherent in the field. And even if not, starting with bitcoin remains your best hope of making an informed and independent assessment. Ultimately, bitcoin is not about making money and it\u2019s not a get-rich-quick scheme; it is fundamentally about storing the value you have already created, and no one should risk that without a requisite knowledge base. Within the world of digital currencies, bitcoin has the longest track record to assess and the greatest amount of resources to educate, which is why bitcoin is the best tool to learn."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "To start on this journey, first realize that bitcoin was created to specifically address a problem that exists with modern money. The founder of bitcoin set out to create a peer-to-peer digital cash system without the need for a trusted third-party, and a blockchain was one critical part of the solution. In practice, bitcoin (the currency) and its blockchain are interdependent. One does not exist without the other; bitcoin needs its blockchain to function and there would not be a functioning blockchain without a native currency (bitcoin) to properly incentivize resources to protect it. That native currency must be viable as a form of money because it is exclusively what pays for security, and it must have credible monetary properties in order to be viable.  "}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Without the money, there is no security and without the security, the value of the currency and the integrity of the chain both break down. It is for this reason that a blockchain is only useful within the application of money, and money does not magically grow on trees. Yep, it is that simple. A blockchain is only good for one thing, removing the need for a trusted third-party which only works in the context of money. A blockchain cannot enforce anything that exists outside the network. While a blockchain would seem to be able to track ownership outside the network, it can only enforce ownership of the currency that is native to its network. Bitcoin tracks ownership and enforces ownership. If a blockchain cannot do both, any records it keeps will be inherently insecure and ultimately subject to change. In this sense, immutability is not an inherent trait of a blockchain but instead, an emergent property. And if a blockchain is not immutable, its currency will never be viable as a form of money because transfer and final settlement will never be reliably possible. Without reliable final settlement, a monetary system is not functional and will not attract liquidity."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Ultimately, monetary systems converge on one medium because their utility is liquidity rather than consumption or production. And liquidity consolidates around the most secure, long-term store of value; it would be irrational to store wealth in a less secure, less liquid monetary network if a more secure, more liquid network existed as an attainable option. The aggregate implication is that only one blockchain is viable and ultimately necessary. Every other cryptocurrency is competing for the identical use case as bitcoin, that of money; some realize it while others do not but value continues to consolidate around bitcoin because it is the most secure blockchain by orders of magnitude and all are competing for the same use case. Understanding these concepts is fundamental to bitcoin and it also provides a basic foundation to then consider and evaluate the noise beyond bitcoin. With basic knowledge of how bitcoin actually works, it becomes clear why there is no blockchain without bitcoin. "}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Often, bitcoin\u2019s transaction ledger is thought of as a public blockchain that lives somewhere in the cloud like a digital public square where all transactions are aggregated. However, there is no central source of truth; there are no oracles and there is no central public blockchain to which everyone independently commits transactions. Instead, every participant within the network constructs and maintains its own independent version of the blockchain based on a common set of rules; no one trusts anyone and everyone validates everything. Everyone is able to come to the same version of the truth without having to trust any other party. This is core to how bitcoin solves the problem of removing third-party intermediaries from a digital cash system."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Every participant running a node within the bitcoin network independently verifies every transaction and every block; by doing so, each node aggregates its own independent version of the blockchain. Consensus is reached across the network because each node validates every transaction (and each block) based on a core set of rules (and the longest chain wins). If a node broadcasts a transaction or block that does not follow consensus rules, other nodes will reject it as invalid. It is through this function that bitcoin is able to dispose with the need for a central third-party; the network converges on the same consistent state of the chain without anyone trusting any other party. However, the currency plays an integral role in coordinating bitcoin\u2019s consensus mechanism and ordering blocks which ultimately represents bitcoin\u2019s full and valid transaction history (or its blockchain).  "}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Think of a block as a dataset that links the past to the present. Technically, individual blocks record changes to the overall state of bitcoin ownership within a given time interval. In aggregate, blocks record the entire history of bitcoin transactions as well as ownership of all bitcoin at any point in time. Only changes to the state are recorded in each passing block. How blocks are constructed, solved and validated is critical to the process of network consensus, and it also ensures that bitcoin maintains a fixed supply (21 million). Miners compete to construct and solve blocks that are then proposed to the rest of the network for acceptance. To simplify, think of the mining function as a continual process of validating history and clearing pending bitcoin transactions; with each block, miners add new transaction history to the blockchain and validate the entire history of the chain. It is through this process that miners secure the network; however, all network nodes then check the work performed by miners for validity, ensuring network consensus is enforced. More technically, miners construct blocks that represent data sets which include three critical elements (again simplifying):"}
{"prompt": "Bitcoin, Not Blockchain", "completion": "To solve blocks, miners perform what is known as a proof of work function by expending energy resources. In order for blocks to be valid, all inputs must be valid and each block must satisfy the current network difficulty. To satisfy the network difficulty, a random value (referred to as a nonce) is added to each block and then the combined data set is run through bitcoin\u2019s cryptographic hashing algorithm (SHA-256); the resulting output (or hash) must achieve the network\u2019s difficulty in order to be valid. Think of this as a simple guess and check function, but probabilistically, trillions of random values must be guessed and checked in order to create a valid proof for each proposed block. The addition of a random nonce may seem extraneous. But, it is this function that forces miners to expend significant energy resources in order to solve a block, which ultimately makes the network more secure by making it extremely costly to attack."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Adding a random nonce to a proposed block, which is an otherwise static data set, causes each resulting output (or hash) to be unique; with each different nonce checked, the resulting output has an equally small chance of achieving the network difficulty (i.e. representing a valid proof). While it is often referred to as a highly complicated mathematical problem, in reality, it is difficult only because a valid proof requires guessing and checking trillions of possible solutions. There are no shortcuts; energy must be expended. A valid proof is easy to verify by other nodes but impossible to solve without expending massive amount of resources; as more mining resources are added to the network, the network difficulty increases, requiring more inputs to be checked and more energy resources to be expended to solve each block. Essentially, there is material cost to miners in solving blocks but all other nodes can then validate the work very easily at practically no cost.  "}
{"prompt": "Bitcoin, Not Blockchain", "completion": "In aggregate, the incentive structure allows the network to reach consensus. Miners must incur significant upfront cost to secure the network but are only paid if valid work is produced; and the rest of the network can immediately determine whether work is valid or not based on consensus rules without incurring cost. While there are a number of consensus rules, if any pending transaction in a block is invalid, the entire block is invalid. For a transaction to be valid, it must have originated from a previous, valid bitcoin block and it cannot be a duplicate of a previously spent transaction; separately, each block must build off the most up to date version of history in order to be valid and it must also include a valid coinbase transaction. A coinbase transaction rewards miners with newly issued bitcoin in return for securing the network but it is only valid if the work is valid."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Coinbase rewards are governed by a predetermined supply schedule and currently, 12.5 new bitcoin are issued in each valid block; in approximately eight months, the reward will be cut in half to 6.25 new bitcoin, and every 210,000 blocks (or approximately every four years), the reward will continue to be halved until it ultimately reaches zero. If miners include an invalid reward in a proposed block, the rest of the network will reject it as invalid which is the base mechanism that governs a capped total supply of 21 million bitcoin. However, software alone is insufficient to ensure either a fixed supply or an accurate transaction ledger; economic incentives hold everything together. "}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Why is this so important? Within one integrated function, miners validate history, clear transactions and get paid for security on a trustless basis; the integrity of bitcoin\u2019s fixed supply is embedded in its security function, and because the rest of the network independently validates the work, consensus can be reached on a decentralized basis. If a miner completes valid work, it can rely on the fact that it will be paid on a trustless basis. Conversely, if a miner completes invalid work, the rest of the network enforces the rules, essentially withholding payment until valid work is completed. And supply of the currency is baked into validity; if a miner wants to be paid, it must also enforce the fixed supply of the currency, further aligning the entire network. The incentive structure of the currency is so strong that everyone is forced to adhere to the rules, which is the chief facilitator of decentralized consensus."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "If a miner solves and proposes an invalid block, specifically one that either includes invalid transactions or an invalid coinbase reward, the rest of the network will reject it as invalid. Separately, if a miner builds off a version of history that does not represent the longest chain with the greatest proof of work, any proposed block would also be considered invalid. Essentially, as soon as a miner sees a new valid block proposed in the network, it must immediately begin to work on top of that block or risk falling behind and performing invalid work at a sunk cost. As a consequence, in either scenario, if a miner were to produce invalid work, it would incur real cost but would be compensated nothing in return."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Through this mechanism, miners are maximally incentivized to produce honest, valid work and to work within the consensus of the chain at all times; it is either be paid or receive nothing. It is also why the higher the cost to perform the work, the more secure the network becomes. The more energy required to write or rewrite bitcoin\u2019s transaction history, the lower the probability that any single miner could (or would) undermine the network. The incentive to cooperate increases as it becomes more costly to produce work which would otherwise be considered invalid by the rest of the network. As network security increases, bitcoin becomes more valuable. As the value of bitcoin rises and as the costs to solve blocks increases, the incentive to produce valid work increases (more revenue but more cost) and the penalty for invalid work becomes more punitive (no revenue and more cost). "}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Why don\u2019t the miners collude? First, they can\u2019t. Second, they tried. But third, the fundamental reason is that as the network grows, the network becomes more fragmented and the economic value compensated to miners in aggregate increases; from a game theory perspective, more competition and greater opportunity cost makes it harder to collude and all network nodes validate the work performed by miners which is a constant check and balance. Miners are merely paid to perform a service and the more miners there are, the greater the incentive to cooperate because the probability that a miner is penalized for invalid work increases as more competition exists. And recall that random nonce value; it seemed extraneous at the time but it is core to the function that requires energy resources be expended. It is this tangible cost (skin in the game) combined with the value of the currency which incentivizes valid work and which allows the network to reach consensus."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Because all network nodes independently validate blocks and because miners are maximally penalized for invalid work, the network is able to form a consensus as to the accurate state of the chain without relying on any single source of knowledge or truth. None of this decentralized coordination would be possible without bitcoin, the currency; all the bitcoin network has to compensate miners in return for security is its native currency, whether that is largely in the form of newly issued bitcoin today or exclusively in the form of transaction fees in the future. If the compensation paid to miners were not reasonably considered to be a reliable form of money, the incentive to make the investments to perform the work would not exist."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Recall from Bitcoin Can\u2019t Be Copied, if an asset\u2019s primary (if not sole) utility is the exchange for other goods and services, and if it does not have a claim on the income stream of a productive asset (such as a stock or bond), it must compete as a form of money and will only store value if it possesses credible monetary properties. Bitcoin is a bearer asset, and it has no utility other than the exchange for other goods or services. It also has no claim on the income stream of a productive asset. As such, bitcoin is only valuable as a form of money and it only holds value because it has credible monetary properties (read The Bitcoin Standard, chapter 1). By definition, this is true of any blockchain; all any blockchain can offer in return for security is a monetary asset native to the network, without any enforceable claims outside the network, which is why a blockchain can only be useful in connection to the application of money. The chart below from The Bitcoin Standard articulates this point:"}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Without a native currency, a blockchain must rely on trust for security which eliminates the need for a blockchain in the first place. In practice, the security function of bitcoin (mining), which protects the validity of the chain on a trustless basis, requires significant upfront capital investment in addition to high marginal cost (energy consumption). In order to recoup that investment and a rate of return in the future, the payment in the form of bitcoin must more than offset the aggregate costs, otherwise the investments would not be made. Essentially, what the miners are paid to protect (bitcoin) must be a reliable form of money in order to incentivize security investments in the first place. "}
{"prompt": "Bitcoin, Not Blockchain", "completion": "This is also fundamental to the incentive structure that aligns the network; miners have an embedded incentive to not undermine the network because it would directly undermine the value of the currency in which miners are compensated. If bitcoin were not valued as money, there would be no miners, and without miners, there would be no chain worth protecting. The validity of the chain is ultimately what miners are paid to protect; if the network could not reasonably come to a consensus and if ownership were subject to change, no one could reasonably rely on bitcoin as a value transfer mechanism. The value of the currency ultimately protects the chain, and the immutability of the chain is foundational to the currency having value. It\u2019s an inherently self-reinforcing relationship."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Immutability is an emergent property in bitcoin, not a trait of a blockchain. A global, decentralized monetary network with no central authority could not function without an immutable ledger (i.e. if the history of the blockchain were insecure and subject to change). If settlement of the unit of value (bitcoin) could not reliably be considered final, no one would reasonably trade real world value in return. As an example, consider a scenario in which one party purchased a car from another in return for bitcoin. Assume the title for the car transfers, and the individual that purchased the car takes physical possession. If bitcoin\u2019s record of ownership could easily be re-written or altered (i.e. changing the history of the blockchain), the party that originally transferred the bitcoin in return for the car could wind up in possession of both the bitcoin and the car, while the other party could end up with neither. This is why immutability and final settlement is critical to bitcoin\u2019s function."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Remember that bitcoin has no knowledge of the outside world; all bitcoin knows how to do is issue and validate currency (whether a bitcoin is a bitcoin). Bitcoin is not capable of enforcing anything that exists outside the network (nor is any blockchain); it is an entirely self-contained system and the bitcoin network can only ever validate one side of a two-sided value transfer. If bitcoin transfers could not reliably be considered final, it would be functionally impossible to ever trade anything of value in return for bitcoin. This is why the immutability of bitcoin\u2019s blockchain is inextricably linked to the value of bitcoin as a currency. Final settlement in bitcoin is possible but only because its ledger is reliably immutable. And its ledger is only reliably immutable because its currency is valuable. The more valuable bitcoin becomes, the more security it can afford; the greater the security, the more reliable and trusted the ledger."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Ultimately, immutability is an emergent property, but it is dependent on other emergent network properties. As bitcoin becomes more decentralized, it becomes increasingly difficult to alter the network\u2019s consensus rules and increasingly difficult to invalidate or prevent otherwise valid transactions (often referred to as censorship-resistance). As bitcoin proves to be increasingly censorship-resistant, confidence in the network grows, which fuels adoption, which further decentralizes the network, including its mining function. In essence, bitcoin becomes more decentralized and more censorship-resistant as it grows, which reinforces the immutability of its blockchain. It becomes increasingly difficult to change the history of the blockchain because each participant gradually represents a smaller and smaller share of the network; regardless of how concentrated ownership of the network and mining may be at any point in time, both decentralize over time so long as value increases, which causes bitcoin to become more and more immutable."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "This multi-dimensional incentive structure is complicated but it is critical to understanding how bitcoin works and why bitcoin and its blockchain are dependent on each other. Why each is a tool that relies on the other. Without one, the other is effectively meaningless. And this symbiotic relationship only works for money. Bitcoin as an economic good is only valuable as a form of money because it has no other utility. This is true of any asset native to a blockchain. The only value bitcoin can ultimately provide is through present or future exchange. And the network is only capable of a single aggregate function: validating whether a bitcoin is a bitcoin and recording ownership. "}
{"prompt": "Bitcoin, Not Blockchain", "completion": "The bitcoin network is a closed loop and an entirely independent system; its only connection to the physical world is through its security and clearing function. The blockchain maintains a record of ownership and the currency is used to pay for the security of those records. It is through the function of its currency that the network can afford a level of security to ensure immutability of the blockchain, which allows network participants to more easily and consistently reach consensus without the need for trust in any third-parties. The cumulative effect is a decentralized and trustless monetary system with a fixed supply that is global in reach and accessible on a permissionless basis."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Every other fiat currency, commodity money or cryptocurrency is competing for the exact same use case as bitcoin whether it is understood or not, and monetary systems tend to a single medium because their utility is liquidity rather than consumption or production. When evaluating monetary networks, it would be irrational to store value in a smaller, less liquid and less secure network if a larger, more liquid and more secure network existed as an attainable option. Bitcoin is valuable, not because of a particular feature, but instead, because it achieved finite, digital scarcity. This is the backbone of why bitcoin is secure as a monetary network and it is a property that is dependent on many other emergent properties."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "A blockchain on the other hand is simply an invention native to bitcoin that enables the removal of trusted third parties. It serves no other purpose. It is only valuable in bitcoin as a piece to a larger puzzle and it would be useless if not functioning in concert with the currency. The integrity of bitcoin\u2019s scarcity and the immutability of its blockchain are ultimately dependent on the value of the currency itself. Confidence in the aggregate function drives incremental adoption and liquidity which reinforces and strengthens the value of the bitcoin network as a whole. As individuals opt in to bitcoin, they are at the same time, opting out of inferior monetary networks. This is fundamentally why the emergent properties in bitcoin are next to impossible to replicate and why its monetary properties become stronger over time (and with greater scale), while also at the direct expense of inferior monetary networks."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "\u201cI don\u2019t believe we shall ever have a good money again before we take the thing out of the hands of government, that is, we can\u2019t take them violently out of the hands of government, all we can do is by some sly roundabout way introduce something that they can\u2019t stop.\u201d -F. A. Hayek"}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Ultimately, a blockchain is only useful in the application of money because it is dependent on a native currency for security. Bitcoin represents the most secure blockchain by orders of magnitude. Because all other blockchains are competing for the same fundamental use case of money and because bitcoin\u2019s network effects only continue to increase its security and liquidity advantage over the field, no other digital currency can compete with bitcoin. Liquidity begets liquidity and monetary systems tend to one medium as a derivative function. Bitcoin\u2019s security and liquidity obsoleted any other cryptocurrencies before they left the proverbial gates. Find me a cryptocurrency that comes close to bitcoin relative to security, liquidity or the credibility of its monetary properties, and I will find you a unicorn."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "The real competition for bitcoin has and will remain the legacy monetary networks, principally the dollar, euro, yen and gold. Think about bitcoin relative to these legacy monetary assets as part of your education. Bitcoin does not exist in a vacuum; it represents a choice relative to other forms of money. Evaluate it based on the relative strengths of its monetary properties and once a baseline is established between bitcoin and the legacy systems, this will then provide a strong foundation to more easily evaluate any other blockchain related project."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "To learn more, I suggest reading, The Bitcoin Standard (Saifedean Ammous), Inventing Bitcoin (Yan Pritzker) and Mastering Bitcoin (Andreas Antonopolous), probably in that order."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Next week: Bitcoin is Not Backed by Nothing"}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Thanks to Will Cole, Phil Geiger and Adam Tzagournis for reviewing and providing valuable feedback. Also thanks to Saif, Yan and Andreas for their books which are incredible resources."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Views presented are expressly my own and not those of Unchained Capital or my colleagues."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin, Not Blockchain", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Contrary to popular belief, bitcoin is in fact backed by something. It is backed by the only thing that backs any form of money: the credibility of its monetary properties. Money is not a collective hallucination nor merely a belief system. Over the course of history, various mediums have emerged as money, and each time, it has not just been by coincidence. Goods that emerge as money possess unique properties that differentiate them from other market goods. While The Bitcoin Standard provides a more full discussion, monetary goods possess unique properties that make them particularly useful as a means of exchange; these properties include scarcity, durability, divisibility, fungibility and portability, among others. With each emergent money, inherent properties of one medium improve upon and obsolete the monetary properties inherent in a pre-existing form of money, and every time a good has monetized, another has demonetized. Essentially, the relative strengths of one monetary medium out-compete that of another, and bitcoin is no different. It represents a technological advancement in the global competition for money; it is the superior successor to gold and the fiat money systems that leveraged gold\u2019s monetary properties."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Bitcoin is out-competing its analog predecessors on the basis of its monetary properties. Bitcoin is finitely scarce, and it is more easily divisible and more easily transferable than its incumbent competitors. It is also more decentralized, and as a derivative, more resistant to censorship or corruption. There will only ever be 21 million bitcoin, and each bitcoin is divisible to eight decimal points (1 one-hundred millionth).  Value can be transferred to anyone and anywhere in the world on a permissionless basis, and final settlement does not rely on any third-party. In aggregate, its monetary properties are vastly superior to any other form of money used today. And, these properties do not exist by chance, nor do they exist in a vacuum. The emergent monetary properties in bitcoin are secured and reinforced through a combination of cryptography, a network of decentralized nodes enforcing a common set of consensus rules, and a robust mining network ensuring the integrity and immutability of bitcoin\u2019s transaction ledger. The currency itself is the keystone which binds the system together, creating economic incentives that allow the security columns to function as a whole.  But even still, bitcoin\u2019s monetary properties are not absolute; instead, these properties are evaluated by the market relative to the properties inherent in other monetary systems."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Coinbase Pro: bitcoin exchange rate for dollars over the last six months (as of September 27, 2019)."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Recognize that every time a dollar is sold for bitcoin, the exact same number of dollars and bitcoin exist in the world. All that changes is the relative preference of holding one currency versus another. As the value of bitcoin rises, it is an indication that market participants increasingly prefer holding bitcoin over dollars. A higher price of bitcoin (in dollar terms) means more dollars must be sold to acquire an equivalent amount of bitcoin. In aggregate, it is an evaluation by the market of the relative strength of monetary properties. Price is the output. Monetary properties are the input. As individuals evaluate the monetary properties of bitcoin, the natural question becomes: which possesses more credible monetary properties? Bitcoin or the dollar? Well, what backs the dollar (or euro or yen, etc.) in the first place? When attempting to answer this question, the retort is most often that the dollar is backed by the government, the military (guys with guns), or taxes. However, the dollar is backed by none of these. Not the government, not the military and not taxes. Governments tax what is valuable; a good is not valuable because it is taxed. Similarly, militaries secure what is valuable, not the other way around. And a government cannot dictate the value of its currency; it can only dictate the supply of its currency."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Venezuela, Argentina, and Turkey all have governments, militaries and the authority to tax, yet the currencies of each have deteriorated significantly over the past five years. While it\u2019s not sufficient to prove the counterfactual, each is an example that contradicts the idea that a currency derives its value as a function of government. Each and every episode of hyperinflation should be evidence enough of the inherent flaws in fiat monetary systems, but unfortunately it is not. Rather than understanding hyperinflation as the logical end game of all fiat systems, most simply believe hyperinflation to be evidence of monetary mismanagement. This simplistic view ignores first principles, as well as the dynamics which ensure monetary debasement in fiat systems. While the dollar is structurally more resilient as the global reserve currency, the underpinning of all fiat money is functionally the same, and the dollar is merely the strongest of a weak lot. Once the mechanism(s) that back the dollar (and all fiat systems) is better understood, it provides a baseline to then evaluate the mechanisms that back bitcoin."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "The value of the dollar did not emerge on the free market. Instead, it emerged as a fractional representation of gold (and silver initially). Essentially, the dollar was a solution to the inherent limitations in the convertibility and transferability of gold; its inception was dependent on the monetary properties of base metals, rather than properties inherent in the dollar itself. It was also initially a system based on trust: accept dollars and trust that it could be converted back to gold at a fixed amount in the future. Gold\u2019s limitation and ultimate failure as money is the dollar system, and without gold, the dollar would have never existed in its current construct. For a quick review of the dollar\u2019s history with gold:"}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Over the course of the twentieth century, the dollar transitioned from a reserve-backed currency to a debt-backed currency. While most people never stop to consider why the dollar has value in the post gold era, the most common explanation remains that it is either a collective hallucination (i.e. the dollar has value simply because we all believe it does), or that it is a function of the government, the military, and taxes. Neither explanation has any basis in first principles, nor is it the fundamental reason why the dollar retains value. Instead, today, the dollar maintains its value as a function of debt and the relative scarcity of dollars to dollar-denominated debt. In the dollar world, everything is a function of the credit system. Nominal GDP is functionally dependent on the size, and growth of the credit system, and taxes are a derivative of nominal GDP. The mechanisms that fund the government (taxes and deficit spending) are both dependent on the credit system, and it is the credit system that allows the dollar to function in its current construct."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "The size of the credit system is several times larger than nominal GDP. Because the credit system is also orders of magnitude larger than the base money supply, economic activity is largely coordinated by the allocation and expansion of credit. However, the growth of the credit system has far outpaced the growth of GDP over the course of the last three decades. The chart below indexes the rate of change of the credit system compared to the rate of change of both nominal GDP and federal tax receipts (from 1987 to today). In the Fed\u2019s system, credit expansion drives nominal GDP which ultimately dictates the nominal level of federal tax receipts."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Today, there is $73 trillion of debt (fixed maturity / fixed liability) in the U.S. credit system according to the Federal Reserve (z.1 report), but there are only $1.6 trillion actual dollars in the banking system. This is how the Fed manages the relative stability of the dollar. Debt creates future demand for dollars. In the Fed\u2019s system, each dollar is leveraged approximately 40:1. If you borrow dollars today, you need to acquire dollars in the future to repay that debt, and currently, each dollar in the banking system is owed 40 times over. The relationship between the size of the credit system relative to the amount of dollars gives the dollar relative scarcity and stability. In aggregate, everyone needs dollars to repay dollar denominated credit."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "The system as a whole owes far more dollars than exist, creating an environment where on net there is a very high present demand for dollars. If consumers did not pay debt, their homes would be foreclosed upon, or their cars would be repossessed. If a corporation did not pay debt, company assets would be forfeited to creditors via a bankruptcy process, and equity could be entirely wiped out. If a government did not pay debt, basic government functions would be shut down due to lack of funding. In most cases, the consequence of not securing the future dollars necessary to repay debt means losing the shirt on your back. Debt creates the ultimate incentive to demand dollars. So long as dollars are scarce relative to the amount of outstanding debt, the dollar remains relatively stable. This is how the Fed\u2019s economy works, incentivize credit creation and you create the source of future demand for the underlying currency.  In a sense, it\u2019s kind of like a drug dealer. Get an addict hooked on your drug and he will keep coming back for more. In this case, the drug is debt, and it forces everyone, on net, to stay on the dollar hamster wheel."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "The problem for the Fed\u2019s economy (and the dollar) is that it depends on the functioning of a highly leveraged credit system. And in order to sustain it, the Fed must increase the amount of base dollars. This is what quantitative easing is and why it exists. In order to sustain the amount of debt in the system, the Fed has to systematically increase the supply of actual dollars, otherwise the credit system would collapse. Increasing the amount of base dollars has the immediate effect of deleveraging the credit system, but it has the longer-term effect of inducing more credit. It also has the effect of devaluing the dollar gradually over time. This is all by design. Credit is ultimately what backs the dollar because what the credit actually represents is claims on real assets, and consequently, people\u2019s livelihoods. Come with dollars in the future or risk losing your house is an incredible incentive to work for dollars."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "The relationship between dollars and dollar credit keeps the Fed\u2019s game in play, and central bankers believe this can go on forever. Create more dollars; create more debt. Too much debt? Create more dollars, and so on. Ultimately, in the Fed\u2019s (or any central bank\u2019s) system, the currency is the release valve. Because there is $73 trillion of debt and only $1.6 trillion dollars in the U.S. banking system, more dollars will have to be added to the system to support the debt. The scarcity of dollars relative to the demand for dollars is what gives the dollar its value. Nothing more, nothing less. Nothing else backs the dollar. And while the dynamics of the credit system create relative scarcity of the dollar, it is also what ensures dollars will become less and less scarce on an absolute basis."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Too much debt \u2192 Create more money \u2192 More debt \u2192 Too much debt"}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "As is the case with any monetary asset, scarcity is the monetary property that backs the dollar, but the dollar is only scarce relative to the amount of dollar-denominated debt that exists. And it now has real competition in the form of bitcoin. The dollar system and its lack of inherent monetary properties provides a stark contrast to the monetary properties emergent and inherent in bitcoin. Dollar scarcity is relative; bitcoin scarcity is absolute. The dollar system is based on trust; bitcoin is not. The dollar\u2019s supply is governed by a central bank, whereas bitcoin\u2019s supply is governed by a consensus of market participants. The supply of dollars will always be wed to the size of its credit system, whereas the supply of bitcoin is entirely divorced from the function of credit. And, the cost to create dollars is marginally zero, whereas the cost to create bitcoin is tangible and ever increasing. Ultimately, bitcoin\u2019s monetary properties are emergent and increasingly unmanipulable, whereas the dollar is inherently and increasingly manipulable."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "The hardest mental hurdle to overcome, when evaluating bitcoin as money, is often that it is digital. Bitcoin is not tangible, and on the surface, it is not intuitive. How could something entirely digital be money? While the dollar is mostly digital, it remains far more tangible than bitcoin in the mind of most. While the digital dollar emerged from its paper predecessor and physical dollars remain in circulation, bitcoin is natively digital. With the dollar, there is a physical representation that anchors our mental models in the tangible world; with bitcoin, there is not. While bitcoin possesses far more credible monetary properties than the dollar, the dollar has always been money (for most of us), and as a consequence, its digital representation is seemingly a more intuitive extension from the physical to the digital world. While the dollar\u2019s basis as money is anchored in time and while its digital nature may seem more tangible, bitcoin represents finite scarcity. The supply of the dollar on the other hand has no limits."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Remember that the dollar does not have any inherent monetary properties. It leveraged the monetary properties of gold in its ascent to global reserve status, but in itself, there are no unique properties that ground the dollar as a stable form of money, other than its relative scarcity in the construct of its credit-linked monetary system. When evaluating bitcoin, the first principle question to consider is whether something digital could share the quintessential properties that made gold a store of value (and a form of money). Did gold emerge as money because it was physical or because it possessed transcendent properties beyond being physical? Of all the physical objects in the world, why gold? Gold emerged as money not because it was physical, but instead because its aggregate properties were unique. Most importantly, gold is scarce, fungible and highly durable. While gold possessed many properties which made it superior to any money that came before it, its fatal flaw was that it was difficult to transport and susceptible to centralization, which is ultimately why the dollar emerged as its transactional counterpart."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "\u201cAs a thought experiment, imagine there was a base metal as scarce as gold but with the following properties: \u2013 boring grey in colour \u2013 not a good conductor of electricity \u2013 not particularly strong, but not ductile or easily malleable either \u2013 not useful for any practical or ornamental purpose and one special, magical property: \u2013 can be transported over a communications channel\u201d\n\u2013 Satoshi Nakamoto (August 27, 2010)"}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Bitcoin shares the monetary properties that caused gold to emerge as a monetary medium, but it also improves upon gold\u2019s flaws. While gold is relatively scarce, bitcoin is finitely scarce and both are extremely durable. While gold is fungible, it is difficult to assay; bitcoin is fungible and easy to assay. Gold is difficult to transfer and highly centralized. Bitcoin is easy to transfer and highly decentralized. Essentially, bitcoin possesses all of the desirable traits of both physical gold and the digital dollar combined in one, but without the critical flaws of either. When evaluating monetary mediums, first principles are fundamental. Ignore the conclusion or end point, and start by asking yourself: if bitcoin were actually scarce and finite, ignoring that it is digital, could that be an effective measure of value and ultimately a store of value? Is scarcity a sufficiently powerful property that bitcoin could emerge as money, regardless of whether the form of that scarcity is digital?"}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "While money may be an intangible concept, so long as there are benefits from trade and specialization, there is real demand and utility in money. Money is the tool we use to be the arbiter in determining relative value among more abundant consumption goods and capital goods. It is the good that coordinates all other economic activity. The absolute quantity of money is less important than its properties of being scarce and measurable. Scarcity is money\u2019s most important property. If supply of the unit of measure were constantly and unpredictably changing, it would be very difficult to measure the value of goods relative to it, which is why scarcity, on its own, is an incredibly valuable property. While the value of the underlying measurement unit may fluctuate relative to goods and services, stability in the supply of money results in the least amount of noise in the relative price signal of other goods."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Despite being digital, bitcoin is designed to provide absolute scarcity, which is why it has the potential to be such an effective form of money (and measure of value). There will only ever be 21 million bitcoin, and 21 million is a scarily small number in relative and absolute terms. The Fed created $100 billion dollars just last week, with the click of a button. That is approximately $5,000 per bitcoin that will ever exist, created in just a week (and by only one central bank). To provide broader context, the Federal Reserve, the Bank of Japan and the European Central bank have collectively created $10 trillion dollars-worth of new money since the financial crisis, the equivalent of approximately $500,000 per bitcoin. Despite dollars, euro, yen and bitcoin all being digital, bitcoin is the only medium that is tangibly scarce and the only one with inherent monetary properties."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "However, it is insufficient to simply claim that bitcoin is finitely scarce; nor should anyone simply accept this as fact. It is important to understand how and why that is the case. Why can\u2019t more than 21 million bitcoin be created and why can\u2019t it be copied? Why is bitcoin secure and why can\u2019t it be manipulated? While there are countless building blocks that collectively allow bitcoin to function with a reliably fixed supply, there are three key columns of security within the bitcoin network which are woven together and reinforced by the economic incentives of the currency itself:"}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "21 million is not just a number guaranteed by software. Instead, bitcoin\u2019s fixed 21 million supply is governed by a consensus mechanism, and all market participants have an economic incentive to enforce the rules of the bitcoin network. While a consensus of the bitcoin network could theoretically determine to increase the supply of bitcoin such that it exceeds 21 million, an overwhelming majority of bitcoin users would have to collectively agree to debase their own currency in order to do so. In practice, a global and decentralized network of rational economic actors, operating within a voluntary, opt-in currency system would not collectively and overwhelmingly form a consensus to debase the currency which they have all independently and voluntarily determined to use as a store of wealth. This reality then underpins and reinforces bitcoin\u2019s economic incentives, technical architecture and network effect."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "In bitcoin, a full node is a computer or server that maintains a full version of the bitcoin blockchain. Full nodes independently aggregate a version of the blockchain based on a common set of network consensus rules. While not everyone that holds bitcoin runs a full node, everyone is able to do so, and each node validates all transactions and all blocks. By running a full node, anyone can access the bitcoin network and broadcast transactions (or blocks) on a permissionless basis. And nodes do not trust any other nodes. Instead, each node independently verifies the complete history of bitcoin transactions based on a common set of rules, allowing the network to converge on a consistent and accurate version of history on a trustless basis."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "This is the mechanism by which the bitcoin network removes trust in any centralized third-party and hardens the credibility of its fixed supply. All nodes maintain a history of all transactions, allowing each node to determine whether any future transaction is valid. In aggregate, bitcoin represents the most secure computing network in the world because anyone can access it and no one trusts anyone. The network is decentralized and there are no single points of failure. Every node represents a check and balance on the rest of the network, and without a central source of truth, the network is resistant to attack and corruption. Any node could fail or could become corrupted, and the rest of the network would remain unimpacted. The more nodes that exists, the more decentralized bitcoin becomes, which increases redundancy, making the network harder and harder to corrupt or censor."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Each full node enforces the consensus rules of the network, a critical element of which is the currency\u2019s fixed supply. Each bitcoin block includes a pre-defined number of bitcoin to be issued and each bitcoin transaction must have originated from a previously valid block in order to be valid. Every 210,000 blocks, the bitcoin issued in each valid block is cut in half until the amount of bitcoin issued ultimately reaches zero in approximately 2140, creating an asymptotic, capped supply schedule. Because each node independently validates every transaction and each block, the network collectively enforces the fixed 21 million supply. If any node broadcasts an invalid transaction or block, the rest of the network would reject it and that node would fall out of consensus. Essentially, any node could attempt to create excess bitcoin, but every other node has an interest in ensuring the supply of bitcoin is consistent with the pre-defined fixed limit, otherwise the currency would be arbitrarily debased at the direct expense of the rest of the network."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Separately, anyone within or outside the network could copy bitcoin\u2019s software to create a new version of bitcoin, but any units created by such a copy would be considered invalid by the nodes operating within the bitcoin network. Any subsequent copies or units would not be considered valid, nor would anyone accept the currency as bitcoin. Each bitcoin node independently validates whether a bitcoin is a bitcoin, and any copy of bitcoin would be invalid, as it would not have originated from a previously valid bitcoin block. It would be like trying to pass off monopoly money as dollars. You can wish it to be money all you want, but no one would accept it as bitcoin, nor would it share the emergent properties of the bitcoin network. Running a bitcoin full node allows anyone to instantly assay whether a bitcoin is valid, and any copy of bitcoin would be immediately identified as counterfeit. The consensus of nodes determines the valid state of the network within a closed-loop system; anything that occurs beyond its walls is as if it never happened."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "As part of the consensus mechanism, certain nodes (referred to as miners) perform bitcoin\u2019s proof of work function to add new bitcoin blocks to the blockchain. This function validates the complete history of transactions and clears pending transactions. The process of mining is ultimately what anchors bitcoin security in the physical world. In order to solve blocks, miners must perform trillions of cryptographic computations, which require expending significant energy resources. Once a block is solved, it is proposed to the rest of the network for validation. All nodes (including other miners) verify whether a block is valid based on a common set of network consensus rules discussed previously. If any transaction in the block is invalid, the entire block is invalid. Separately, if a proposed block does not build on the latest valid block (i.e. the longest version of the block chain), the block is also invalid."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "For context, at 90 exahashes per second, the bitcoin network currently consumes approximately 9 gigawatts of power, which translates to ~$11 million per day (or ~$4 billion per year) of energy at a marginal cost of 5 cents per kWh (rough estimates). Blocks are solved on average every ten minutes, which translates to approximately 144 blocks per day. Across the network, each block costs approximately $75,000 to solve, and the reward per block is approximately $100,000 (12.5 new bitcoin x $8,000 per bitcoin, excluding transaction fees). The higher the cost to solve a block, the more costly the network is to attack. The cost to solve a block represents the tangible resources it requires to write history to the bitcoin transaction ledger. As the network grows, the network becomes more fragmented, and the economic value compensated to miners in aggregate increases. From a game theory perspective, more competition and greater opportunity cost makes it harder to collude, and all network nodes validate the work performed by miners, which serves as a constant check and balance."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "And recall that a pre-defined number of bitcoin are issued in each valid block (that is, until the 21 million limit is reached). The bitcoin issued in each block combined with network transaction fees represent the compensation to miners for performing the proof-of-work function. The miners are paid in bitcoin to secure the network. As part of the block construction and proposal process, miners include the pre-defined number of bitcoin to be issued as compensation for expending tangible, real world resources to secure the network. If a miner were to include an amount of bitcoin inconsistent with the pre-defined supply schedule as compensation, the rest of the network would reject the block as invalid. As part of the security function, miners must validate and enforce the fixed supply of the currency in order to be compensated. Miners have material skin-in-the-game in the form of upfront capital costs (and energy expenditure), and invalid work is not rewarded."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "For a technical example, the valid reward paid to miners is halved every 210,000 blocks with the next halvening (a \u201ctechnical\u201d term) scheduled to occur at block 630,000 (or approximately in May 2020). At the time and scheduled block of the next halvening, the valid reward will be reduced from 12.5 bitcoin to 6.25 bitcoin per block. Thereafter, if any miner includes an invalid reward (an amount other than 6.25 bitcoin), the rest of the network will reject it as invalid. The halvening is important not just because the supply of newly issued bitcoin is reduced, but also because it demonstrates that the economic incentives of the network continue to effectively coordinate and enforce the fixed supply of the currency on an entirely decentralized basis. If any miner attempts to cheat, it will be maximally penalized by the rest of the network. Nothing other than the economic incentives of the network coordinate this behavior; that it occurs on a decentralized basis without the coordination of any central authority reinforces the security of the network."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Because mining is decentralized and because all miners are constantly competing with all other miners, it is not practical for miners to collude. Separately, all nodes validate the work performed by miners, instantly and at practically no cost, which creates a very powerful check and balance that is divorced from the mining function itself. Blocks are costly to solve but easy to validate; in aggregate, this is a fundamental differentiator between bitcoin and the monetary systems with which bitcoin competes, whether gold or the dollar. And the compensation paid to miners for securing the network and enforcing the network\u2019s fixed supply is exclusively in the form of bitcoin. The economic incentives of the currency (compensation) is so strong and the penalty is both so severe and so easily enforced that miners are maximally incentivized to cooperate and perform valid work. By introducing tangible cost to the mining process, by incorporating the supply schedule in the validation process (which all nodes verify), and by divorcing the mining function from ownership of the network, the network as a whole reliably and perpetually enforces the fixed supply (21 million) of the currency on a trustless basis, while also able to reach consensus on a decentralized basis. "}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "While miners construct, solve and propose blocks and while nodes check and validate work performed by miners, private keys control access to the unit of value itself. Private keys control the rights to the 21 million bitcoin (technically only 18.0 million have been mined to date). In bitcoin, there are no identities; bitcoin knows nothing of the outside world. The bitcoin network validates signatures and keys. That is all. Only someone in control of a private key can create a valid bitcoin transaction by creating a valid signature. Valid transactions are included in blocks, which are solved by miners and validated by each node, but only those in possession of private keys can produce valid transactions."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "When a valid transaction is broadcast, bitcoin are spent (or transferred) to specific bitcoin public addresses. Public addresses are derived from public keys, which are derived from private keys. Public keys and public addresses can be calculated using a private key, but a private key cannot be calculated from a public key or public address. It is a one-way function secured by strong cryptography. Public keys and public addresses can be shared without revealing anything about the private keys. When a bitcoin is spent to a public address, it is essentially locked in a safe, and in order to unlock the safe to spend the bitcoin, a valid signature must be produced by the corresponding private key (every public key and address has a unique private key). The owner of the private key produces a unique signature, without actually revealing the secret itself. The rest of the network can verify that the holder of the private key produced a valid signature, without actually knowing any details of the private key itself. Public and private key pairs are the foundation of bitcoin. And ultimately, private keys are what control access rights to the economic value of the network."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "It doesn\u2019t matter whether someone has one-tenth of a bitcoin or ten thousand bitcoin. Either and each are secured and validated by the same mechanism and by the same rules. Everyone has equal rights. Regardless of the economic value, each bitcoin (and bitcoin address) is treated identically within the bitcoin network. If a valid signature is produced, the transaction is valid and it will be added to the blockchain (if a transaction fee is paid). If an invalid signature is produced, the network will reject it as invalid. It does not matter how powerful or how weak any particular participant may be. Bitcoin is apolitical. All it validates is keys and signatures. Someone with more bitcoin may be able to pay a higher fee to have a transaction prioritized, but all transactions are validated based on the same set of consensus rules. Miners prioritize transactions based on value and profitability, nothing else. If a transaction is equally valuable, it will be prioritized based on a time sequence. But importantly, the mining function, which clears transactions, is divorced from ownership. Bitcoin is not a democracy; ownership is controlled by keys and every bitcoin transaction is evaluated based on the same criteria within the network. It is either valid or it is not. And every bitcoin must have originated within a block consistent with the 21 million supply schedule in order to be valid."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "This is why users controlling keys is such a significant ethos in bitcoin. Bitcoin are extremely scarce, and private keys are the gatekeeper to the transfer of every bitcoin. The saying goes: not your keys, not your bitcoin. If a third-party party controls your keys, such as a bank, that entity is in control of your access to the bitcoin network, and it would be very easy to restrict access or seize funds in such a scenario. While many people choose to trust a bank-like entity, the security model of bitcoin is unique; not only can each user control their own private keys, but each user can also access the network on a permissionless basis and transfer funds to anyone anywhere in the world. This is only possible if a user is in control of a private key. In aggregate, users controlling private keys decentralize the control of the network\u2019s economic value, which increases the security of the network as a whole. The more distributed access is to the network, the more challenging it becomes to corrupt or co-opt the network. Separately, by holding a private key, it becomes extremely difficult for anyone to restrict access or seize funds held by any individual. Every bitcoin in circulation is secured by a private key; miners and nodes may enforce that 21 million bitcoin will ever exist, but the valid bitcoin that do exist are ultimately controlled and secured by a private key."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "In summary, the supply of bitcoin is governed by a network consensus mechanism, and miners perform a proof-of-work function that grounds bitcoin\u2019s security in the physical world. As part of the security function, miners get paid in bitcoin to solve blocks, which validate history and clear pending bitcoin transactions. If a miner attempts to compensate themselves in an amount inconsistent with bitcoin\u2019s fixed supply, the rest of the network will reject the miner\u2019s work as invalid. The supply of the currency is integrated into bitcoin\u2019s security model, and real world energy resources must be expended in order for miners to be compensated. Still yet, every node within the network validates the work performed by all miners, such that no one can cheat without a material risk of penalty. Bitcoin\u2019s consensus mechanism and validation process ultimately governs the transfer of ownership of the network, but ownership of the network is controlled and protected by individual private keys held by users of the network."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Set aside any preconceived notions of what money is, and imagine a currency system that has an enforceably scarce and fixed supply. Anyone in the world can connect to the network on a permissionless basis and anyone can send transactions to anyone anywhere in the world; everyone can also independently and easily validate the supply of the currency as well as ownership across the network. Imagine a global economy where billions of people, disparately located throughout the world, can transact across one common decentralized network, and everyone can arrive at the same consensus of the ownership of the network, without the coordination of any central party. How valuable would that network be? Bitcoin is valuable because it is finite, and it is finite because it is valuable. The economic incentives and governance model of the network reinforce each other; the cumulative effect is a decentralized and trustless monetary system with a fixed supply that is global in reach and accessible by anyone."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Because bitcoin has inherent and emergent monetary properties, it is distinct from all other digital monies. While the supply of bitcoin remains fixed and finitely scarce, central banks will be forced to expand the monetary base in order to sustain the legacy system. Bitcoin will become a more and more attractive option, as more market participants figure out that future rounds of quantitative easing are not just a central bank tool but a necessary function to sustain the alternate and inferior option. Before bitcoin, everyone was forced to opt in to this system by default. Now that bitcoin exists, there is a viable alternative. Each time the Fed returns with more quantitative easing to sustain the credit system, more and more individuals will discover that the monetary properties of bitcoin are vastly superior to the legacy system, whether the dollar, euro or yen. Is A better than B? That is the test. In the global competition for money, bitcoin has inherent monetary properties that the fiat monetary system lacks. Ultimately, bitcoin is backed by something, and it\u2019s the only thing that backs any money: the credibility of its monetary properties."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Next week: Bitcoin is Not a Pyramid Scheme"}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Views presented are expressly my own and not those of Unchained Capital or my colleagues. Thanks to Phil Geiger, Adam Tzagournis and Will Cole for reviewing and for providing valuable feedback."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "That was the best article I\u2019ve ever read on Bitcoin. No hyperboles. This is a masterpiece and will refer as many people as possible to this article. Great work Parker?"}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Parker, I\u2019ve been studying blockchain and finance for four years, and this article deepened my understanding of what gives the dollar value more than anything I\u2019d ever read before it. I\u2019m hosting a new tv show called Web3TV. I\u2019d love for you to come on, talk about what you wrote about in this piece, allow me to ask you some more related questions, and plug your business(es). Please get in touch if you\u2019re open to discussing it."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Amazing article! As far as I know this line is slightly incorrect: \u201d Thereafter, if any miner includes an invalid reward (an amount other than 6.25 bitcoin), the rest of the network will reject it as invalid.\u201d Shouldn\u2019t it be \u201c(an amount bigger than 6.25 bitcoin)\u201d? A miner could voluntarily or due to a bug in the mining software include a coinbase tx that is less than the allowance."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin is Not Backed by Nothing", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin is Not for Criminals", "completion": "If you have ever heard (or happen to believe) that bitcoin is primarily a tool used by criminals, stop and take a quick sample of your friends and family that you suspect may own bitcoin, and then ask yourself how many are known criminals. There have in fact been widely publicized cases in which criminals have used bitcoin, and because skeptics cannot otherwise explain why anyone else would use it, use for illicit purposes becomes the default assumption. It is generally founded on a view that bitcoin is inferior to the dollar, either because of the belief that it is too volatile or too slow, or because it is not widely accepted for day-to-day transactions; with a flawed mental framework, the logical explanation then becomes that, from a practical perspective, someone would only use bitcoin for the purpose of facilitating some illicit activity, generally as a means to evade law enforcement. Your favorite Senator or Treasury Secretary may occasionally make the claim, but thankfully, bitcoin is not for criminals; it is however for everyone."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "\u201cThe clear ends of Bitcoin for either transacting in illegal goods and services or speculative gambling make me weary of its use.\u201d\n\u2013 Letter to regulators from Senator Joe Manchin (February 2014)"}
{"prompt": "Bitcoin is Not for Criminals", "completion": "If bitcoin were principally used for illicit purposes, it may more logically follow that bitcoin is primarily used by criminals. Because it is not, the typical follow-on arguments that bitcoin should be banned in order to prevent such activity similarly do not hold water.  The very foundation of the idea is based on the false premise that bitcoin is inferior to the dollar; when in fact, it is superior to any form of money that has previously existed, principally as a function of its fixed supply (see Bitcoin is Not Backed by Nothing or Bitcoin is Not a Pyramid Scheme). Bitcoin\u2019s fixed supply forms the basis of the fundamental demand for bitcoin, whether it be related to criminal activity or otherwise. And regardless of how many point-of-sale transactions bitcoin may facilitate daily, it is used every day as a censorship-resistant and inflation-resistant form of savings. Without doubt, bitcoin is definitely used by the likes of drug dealers and nefarious characters on the dark web. However, it would be irrational to believe that is its primary use or to believe bitcoin should be banned because of it. It is logically inconsistent to form a view that bitcoin is sufficiently functional to be viable as a currency for criminals, while at the same time deny the implication that such a view would merely establish that bitcoin is functional for everyone."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "But before turning the drugs narrative completely upside down, let\u2019s all first admit that criminals rely upon any number of commonly-trafficked access points and not just bitcoin. Roads, the internet, the postal service, airports, the banking system, etc.? Yep, all used by criminals and often used to facilitate crimes. But then again, criminals also use all of the above not to commit crimes as well. And that is where the logic that bitcoin must be banned because it enables criminal activity completely breaks down. Crimes are crimes. There is nothing inherent about the tools used to facilitate crimes that makes them criminal in themselves. Using the mail to send a letter to mom is not a crime. But using the mail to send drugs is mail fraud. Similarly, using the dollar to purchase flowers for mom, perfectly fine. But buying narcotics with dollars (or bitcoin), that\u2019s crime. Despite criminal use, no one is calling for the ban of roads, the internet, mail, etc. And you definitely do not see any prominent defenders of the public interest calling for a ban of the dollar, which just happens to be the preferred funding currency of criminals everywhere. Sure, fear of criminal activity has been used to infringe on the rights of law-abiding citizens seemingly everywhere, but believing bitcoin should be banned because drug dealers use it would be no different than calling for a ban on the dollar for the same reason. "}
{"prompt": "Bitcoin is Not for Criminals", "completion": "Such a view becomes that much more untenable once it is understood that bitcoin is not actually for criminals, but in order to understand that, it must also be understood that bitcoin is for criminals. It\u2019s a paradox. The very idea is turned on its head when viewed through the proper lens. The fact that criminals can use (and have used) bitcoin to facilitate commerce merely demonstrates that bitcoin can be used to facilitate any form of commerce. That a very early, and well publicized, use case for bitcoin involved the Silk Road website, which facilitated transactions involving drugs and other illicit goods using bitcoin as a means of payment, changes nothing about the broader implication: that bitcoin worked. But rather than focus here, bitcoin research often attempts to prove the counterfactual, that only a small percentage of bitcoin transactions are used for illicit purposes. For example, a headline from last year:"}
{"prompt": "Bitcoin is Not for Criminals", "completion": "\u201cA new study finds less than 1% of bitcoin transactions to exchanges are illicit.\u201d (Coincenter, January 2018)"}
{"prompt": "Bitcoin is Not for Criminals", "completion": "The substance may be true, but these counter-narratives fight the battle along the wrong lines. If the Silk Road demonstrated anything, it was simply that individuals would accept bitcoin as a form of payment in return for goods and services. It does not matter that the goods sold on the Silk Road website were generally illicit. The Silk Road, which is estimated to have facilitated in excess of a million transactions, was one of the earliest demonstrations of a mass real-world use case for bitcoin. So yes, bitcoin is (and was) used for drug deals but it is merely one use case that has helped prove bitcoin\u2019s general utility, nothing more. And when it comes to buying drugs, the dollar remains far preferred to bitcoin among drug dealers despite them all generally being aware of bitcoin and capable of accepting it. Whether it be in response to the Silk Road or otherwise, anyone that comes away with the narrow conclusion that \u201cbitcoin works for drugs\u201d is failing to see the forest through the trees. The more consequential and assumption-shattering implication is simply that bitcoin works. Period."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "If bitcoin could work for drug dealers to facilitate commerce, could it not \u201cwork\u201d to facilitate any other form of commerce? It does not require much imagination to carry forward the logic. If Person A would accept bitcoin for Good B, is it possible that any person might be willing to accept bitcoin for any good regardless of who or what? In the case of the Silk Road, drug dealers may not have fully understood why bitcoin \u201cworked,\u201d but it worked sufficiently well that they were willing to trade drugs for it. What they seemingly understood was that there was sufficient market demand for bitcoin to make it viable as a medium of exchange. And because it provided an electronic mechanism to facilitate transactions, it opened up a market and market mechanism that may have otherwise been unavailable. Love it or hate it, it was just a market taking advantage of new technology."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "Despite the existence of bitcoin, drug dealers have not magically stop accepting dollars as their preferred funding currency. Nor have they stop laundering dollars back into the banking system. Drug dealers on the Silk Road did not use bitcoin merely to evade law enforcement nor did the dollar drug trade suddenly disappear; they used bitcoin because it was functional and because it satisfied a market need. If bitcoin were not functional and if it were not expected to hold a certain threshold of value over a particular time horizon, it would not have been used as a medium of exchange on the Silk Road. Drug dealers are not in the money losing business after all. But more importantly, anytime anyone decries that bitcoin is used by criminals for illicit purposes, whether it be a U.S. Senator or Treasury Secretary, the default question to ask should be: why does bitcoin work as a medium to facilitate commerce in the first place?"}
{"prompt": "Bitcoin is Not for Criminals", "completion": "Focusing on criminals distracts from the more fundamental question and consequence. If bitcoin could work for a criminal, it could work for anyone, and in order for bitcoin to be viable as a currency, it has to work for everyone, including criminals. However, this is not a promotion of criminal activity using bitcoin as a funding mechanism; it is merely a recognition of the properties that allow bitcoin to function in the first place. Think of criminal activity as a litmus test. If bitcoin does not work for drug dealers, it doesn\u2019t work for anyone. But if it works for drug dealers, it can work for everyone. If it were possible to censor (or prevent) bitcoin transactions related to certain activity or certain individuals, it would be possible to censor any activity and any individuals. And if there were a prime target of activities or individuals to censor, it would be that of a criminal enterprise. The attempts have already begun."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "\u201cThe U.S. Treasury Department\u2019s Office of Foreign Assets Control (OFAC) has sanctioned three Chinese nationals and their cryptocurrency addresses, alleging they violated money laundering and drug smuggling laws [\u2026] The agency also listed a number of bitcoin addresses [\u2026] that the agency claims belong to the Chinese citizens.\u201d (Coindesk, August 2019)"}
{"prompt": "Bitcoin is Not for Criminals", "completion": "Recognize that in this context, bitcoin \u201cworking\u201d is specifically a reference to the network protocol layer. Whether a company or individual is willing to accept bitcoin from an address sanctioned by OFAC, or whether a third-party financial institution freezes an account associated with such an address is of little consequence to the long-term viability of bitcoin. What is consequential is whether the network would validate a transaction originated from a sanctioned address or validate a block that includes such a transaction. Stated another way, whether bitcoin miners or nodes would reject such a transaction despite it otherwise being valid based on the network\u2019s consensus rules. Bitcoin is only viable as a currency because it is decentralized. But decentralization is not an end in itself. The end game is censorship-resistance. And it is not an end game to protect criminals. It is an end game to protect the very root level functioning of the currency system."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "Censorship-resistance is the network\u2019s most critical property because it ensures that the rules of the network will neither change arbitrarily or be enforced inconsistently, without which the system would be inoperable. Most important of these rules is the finite scarcity of the currency itself. Censorship-resistance reinforces scarcity and scarcity reinforces censorship-resistance. Bitcoin becomes more resistant to censorship as it scales because the network becomes more decentralized over time. As adoption increases, each individual (on average) controls an ever-diminishing share of the network\u2019s fixed supply, and it is the scarcity of the currency which primarily drives adoption. As the network becomes further decentralized, it becomes increasingly difficult for any individual or business to censor the network. However, at any point in time, whether bitcoin is sufficiently censorship-resistant is ultimately unknown and practically unknowable. Instead, censorship-resistance can only be measured through the test of time and through each failed attempt to censor the network."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "From a practical perspective, the risk of censorship principally comes in two forms: forcing changes to the network\u2019s consensus rules, or invalidating (or preventing) otherwise valid transactions. By design, anyone can access the bitcoin network on a permissionless basis by running a bitcoin full node. Each node can broadcast transactions to the rest of the network, and every node validates a full history of the blockchain with each passing block based on a common set of rules. Through this operation, nodes distributed throughout the world are able to come to a common consensus regarding the valid state of bitcoin ownership across the network, on a decentralized basis and without anyone trusting any other participant. The consensus rules of bitcoin are the common language that coordinate all peers within the network, but no single party dictates the rules; everyone opts in voluntarily. If it were possible for any single party or central authority(s) to force a change on to the network or to influence activity within the network in such a way that would invalidate an otherwise valid transaction, it would demonstrate that the network was not sufficiently decentralized to prevent censorship."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "But what about the criminals and what does this have to do with that? If it were possible to censor criminal-related activity within the network, either by inhibiting access to the network or by preventing otherwise valid transactions from being confirmed, it would demonstrate that the network is not sufficiently decentralized to ensure censorship-resistance. The bitcoin network has no understanding of criminality or who defines it. It is amoral and apolitical. All bitcoin understands (when validating transactions) is its consensus rules; it is a closed loop system. A bitcoin transaction is valid if it is consistent with the network\u2019s consensus rules; if it were not, all bets would be off. If criminal activity could be censored, it simply would prove that any activity could be censored. But that is not where it ends. If any activity within the network could be censored, the network as a whole would be censorable. By demonstrating that a single transaction could be prevented or censored, it would establish that the network\u2019s consensus rules would also be at risk."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "Bitcoin can\u2019t be a little bit censorship-resistant, just like you can\u2019t be a little bit pregnant."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "Censorship resistance is an all or nothing proposition. It either is or it is not. And if it is not, then everything is at risk, including bitcoin\u2019s fixed 21 million supply. That number and the reliability of its scarcity underpins every other economic incentive that allows the bitcoin network to function and accumulate value, including the mechanism by which the network comes to consensus. Accepting that the bitcoin network will always to some extent be used for illicit purposes is not some libertarian bent. Instead, it is a recognition that in order for bitcoin to be functional and viable as a currency system, it has to be so for everyone. If anyone could prevent anyone else from utilizing the network, whether an individual, an organization or a nation-state, bitcoin would be at risk of failure. Censorship within bitcoin at the protocol layer is not the equivalent of PayPal de-platforming an individual or company; nor is it the equivalent of Bank of America shutting down a checking account or Visa not authorizing a transaction. Bitcoin is a currency issuer and settlement layer. Any effective form of censorship would undermine the system as a whole, which is why the activity most susceptible to censorship forms a litmus test for the rest of the network. If it were not possible to censor the most at-risk activity, it reinforces that bitcoin reliably works in all cases."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "Ultimately, bitcoin represents a technological advancement in the global competition for money; it is the superior successor to existing fiat monetary systems, even if not well or widely understood today. And as an extension of an idea discussed in Bitcoin Cannot Be Banned, anyone who calls for a ban on bitcoin due to the belief that it enables criminal activity is concurrently admitting that bitcoin is functional as a currency. Consequently, if bitcoin is functional in facilitating commerce associated with illicit activities, and despite the best efforts of a powerful regulatory authority, ipso facto, it can be functional in facilitating any other form of commerce as well, including by law abiding citizens. Practically, operating within that reality and recognizing that bitcoin is a finitely scarce resource, it does not logically follow that it will be confined to the dark web, nor is it today."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "The competition for bitcoin is global. Over time, those that produce the most relative value will accumulate the greatest share of bitcoin. To think that those involved in illicit activities will account for a larger share of the future bitcoin economy than today\u2019s dollar economy is not rational. And calling for a ban on bitcoin is somewhat like being scared of your own shadow. Not only would it not be practical to enforce, but the activity such a policy would seek to prevent is enabled today in far greater proportions by the dollar. It would be analogous to throwing the baby out with the bath water. We accept the good with the bad, recognizing that due to the very nature of bitcoin, we do not get to decide. There are always trade-offs, and in this case, that bitcoin will unavoidably be used for illicit purposes is the trade-off we gladly accept in exchange for the economic stability that an unmanipulable global currency will provide. As with every technology, value will accrue to those that utilize bitcoin in its highest and best use, a function which only the market can determine. The net benefit will not be zero-sum and just as the internet is not for drug dealers and terrorists, bitcoin is not for criminals. It is for everyone."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "\u201cIt is more important that innocence be protected than it is that guilt be punished, for guilt and crimes are so frequent in this world that they cannot all be punished. But if innocence itself is brought to the bar and condemned, perhaps to die, then the citizen will say, \u2018whether I do good or whether I do evil is immaterial, for innocence itself is no protection,\u2019 and if such an idea as that were to take hold in the mind of the citizen that would be the end of security whatsoever.\u201d \u2013 John Adams"}
{"prompt": "Bitcoin is Not for Criminals", "completion": "\u201cGovern wisely, and as little as possible\u201d \u2013 Sam Houston"}
{"prompt": "Bitcoin is Not for Criminals", "completion": "Final thought (stealing a page from @martybent\u2019s playbook): History will look back far more favorably on Ross Ulbricht, the alleged founder of the Silk Road, than central bankers everywhere. Not for the drugs but for the bitcoin."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "Next Edition: Bitcoin Obsoletes All Other Money"}
{"prompt": "Bitcoin is Not for Criminals", "completion": "Views presented are expressly my own and not those of Unchained Capital or my colleagues. Thanks to Phil Geiger and Will Cole for reviewing and for providing valuable feedback."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin is Not for Criminals", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin is Common Sense", "completion": "\u201cPerhaps the sentiments contained in the following pages, are not yet sufficiently fashionable to procure them general favor; a long habit of not thinking a thing wrong, gives it a superficial appearance of being right, and raises at first a formidable outcry in defense of custom. But the tumult soon subsides. Time makes more converts than reason.\u201d \u2013 Thomas Paine, Common Sense (February 24, 1776)."}
{"prompt": "Bitcoin is Common Sense", "completion": "These were the opening remarks of Thomas Paine\u2019s call for American independence in early 1776. At the time, a declaration of independence was far from a certainty, but in Paine\u2019s view, there was no question. It wasn\u2019t a debate; there was only one path forward. Still, he understood that public opinion had not yet caught up and naturally remained anchored to the status quo, with a preference for reconciliation rather than independence. Old habits die hard. The status quo has a tendency of being defended, regardless of merit, merely by its anchoring in time to the way things have always been. However, truths have a way of becoming self-evident in time, more often due to common sense rather than any amount of reason or logic. One day, the truth is more likely to smack you in the face, becoming painfully obvious through some firsthand experience which opens up a perspective that otherwise would not have existed. While Paine was undoubtedly attempting to persuade an undecided populous with reason and logic, it was at the same time an appeal to not overthink that which stands in opposition to what is already self-evident."}
{"prompt": "Bitcoin is Common Sense", "completion": "In Paine\u2019s view, independence was not a modern-day IQ test, nor was its relevance confined to the American colonies; instead, it was a common sense test and its interest was universal to \u201cthe cause of all mankind,\u201d as Paine put it. In many ways, the same is true of bitcoin. It is not an IQ test; instead, bitcoin is common sense and its implications are near universal. Few people have ever stopped to question or understand the function of money. It facilitates practically every transaction anyone has ever made, yet no one really knows the why of that equation, nor the properties that allow money to effectively coordinate economic activity. Its function is taken for granted, and as a result, it is a subject not widely taught or explored. Yet despite a limited baseline of knowledge, there is often a visceral reaction to the very idea of bitcoin as money. The default position is predictably no. Bitcoin is an anathema to all notions of existing custom. On the surface, it is entirely inconsistent with what folks know money to be. For most, money is just money because it always has been. In general, for any individual, the construction of money is anchored in time and it is very naturally not questioned. "}
{"prompt": "Bitcoin is Common Sense", "completion": "But enter bitcoin, and everyone suddenly becomes an expert in what is and isn\u2019t money, and to the fly-by-night expert, it certainly is not bitcoin.  Bitcoin is natively digital, it is not tied to a government or central bank, it is volatile and perceived to be \u201cslow,\u201d it is not used en masse to facilitate commerce, and it is not inflationary.  This is one of those rare instances when a thing does not walk like a duck or quack like a duck but it\u2019s actually a duck, and what you thought was a duck all along was mistakenly something entirely different. When it comes to modern money, the long habit of not thinking a thing wrong, gives it a superficial appearance of being right."}
{"prompt": "Bitcoin is Common Sense", "completion": "In all perceived-to-be successful applications today, money is issued by a central bank; it is relatively stable and capable of near infinite transaction throughput; it facilitates day-to-day commerce; and by the grace of god, its supply can be rapidly inflated to meet the needs of an ever-changing economy. Bitcoin has none of these traits (some not presently, others not ever), and as a result, it is most often dismissed as not meeting the standards of modern-day money. This is where overthinking a problem can cripple the highest of IQs. Pattern recognition fails because the game fundamentally changed, but the players do not yet realize it. It is akin to getting lost in the weeds or failing to see the forest through the trees. Bitcoin is finitely scarce, it is highly divisible and it is capable of being sent over a communication channel (and on a permissionless basis). There will only ever be 21 million bitcoin. Rocket scientists and the most revered investors of our time could look at this equation relative to other applications in the market and be confounded, not seeing its value. While at the same time, if posed with a very simple question, would you rather be paid either in a currency with a fixed supply that cannot be manipulated or in a currency that is subject to persistent, systemic and significant debasement, an overwhelming majority of individuals would choose the former all day, every day."}
{"prompt": "Bitcoin is Common Sense", "completion": "On bitcoin: \u201cIt\u2019s probably rat poison squared\u201d\n\u2013 Warren Buffett"}
{"prompt": "Bitcoin is Common Sense", "completion": "\u201cBitcoin \u2013 there\u2019s even less you can do with it [\u2026] I\u2019d rather have bananas, I can eat bananas\u201d\n\u2013 Mark Cuban"}
{"prompt": "Bitcoin is Common Sense", "completion": "As kids, we all learn that money doesn\u2019t grow on trees but on a societal level, or as a country, any remnant of common sense seems to have left the building. Just in the last two months, central banks in the United States, Europe and Japan (the Fed, ECB and BOJ) have collectively inflated the supply of their respective currencies by $3.3 trillion in aggregate \u2013 an increase of over 20% in just eight weeks. The Fed alone has accounted for the majority, minting $2.5 trillion dollars and increasing the base money supply by over 60%. And it\u2019s far from over; trillions more will be created. It is not a possibility; it is a certainty. Common sense is that deep feeling of uncertainty many are experiencing that says, \u201cthis doesn\u2019t make any sense\u201d or \u201cthis doesn\u2019t end well.\u201d Few carry that thought process out to its logical conclusion, often because it is uncomfortable to think about, but it is reverberating throughout the country and the world. While not everyone is connecting the equation to 21 million bitcoin, a growing number of people are. Time makes more converts than reason. Individuals don\u2019t have to understand how or why there will only ever be 21 million bitcoin; all that has to be recognized in practical experience is that dollars are going to be worth significantly less in the future, and then the idea of having a currency with a fixed supply begins to make sense. Understanding how it is possible that bitcoin has a fixed supply comes after making that initial connection, but even still, no one needs to understand the how to understand that it is valuable. It is the light bulb turning on."}
{"prompt": "Bitcoin is Common Sense", "completion": "For each individual, there is a choice to either exist in a world in which someone gets to produce new units of money for free (but just not them) or a world where no one gets to do that (including them). From an individual perspective, there is not a marginal difference in those two worlds; it is night and day, and anyone conscious of the decision very intuitively opts for the latter, recognizing that the former is neither sustainable, nor to his or her advantage. Imagine there were 100 individuals in an economy, each with different skills. All have determined to use a common form of money to facilitate trade in exchange for goods and services produced by others. With the one exception that a single individual has a superpower to print money, requiring no investment of time and at practically no cost. Given human time is an inherently scarce resource and that it is a required input in the production of any good or service demanded in trade, such a scenario would mean that one person would get to purchase the output of all the others for free. Why would anyone agree to such an arrangement? That the individual is an enterprise, and more specifically, a central bank expected to act in the public interest does not change the fundamental operation. If it does not make sense on a micro level, it does not magically transform into a different fundamental fact merely because there are greater degrees of separation. If no individual would bestow that power in another, neither would a conscious decision be made to bestow it in a central bank."}
{"prompt": "Bitcoin is Common Sense", "completion": "Everything beyond this fundamental reality strays into abstract theory, relying on leaps of faith, hypotheticals and big words that no one understands, all while divorced from individual decision points. It is not that one individual is more trusted than another or one central bank relative to another; it is simply that, on an individual level, no individual is advantaged by someone else having the ability to print money, regardless of identity or interests. That this is true leaves only one alternative, that each individual would be advantaged by ensuring that no other individual or entity has this power. The Fed may have the ability to create dollars at zero cost, but money still doesn\u2019t grow on trees. It is more likely that a particular form of money is not actually money than it is that money miraculously started growing on trees. And at an individual level, everyone is incentivized to ensure that is not the case. While there is a long habit of not thinking this particular thing wrong, the errant defense of custom can only stray so far. Time converts everyone back into reality. At present, it is the Fed\u2019s \u201cshock and awe\u201d campaign contrasted by the simplicity in bitcoin\u2019s fixed supply of 21 million. There is no amount of reason that can replace an observed divergence in two distinct paths."}
{"prompt": "Bitcoin is Common Sense", "completion": "\u201cThere\u2019s money and there\u2019s credit. The only thing that matters is spending and you can\nspend money and you can spend credit. And when credit goes down, you better put money into the system so you can have the same level of spending. That\u2019s what they did through the financial system (referencing QE in response to the past crisis) and that thing worked.\u201d\n\u2013 Ray Dalio, CNBC September 19, 2017"}
{"prompt": "Bitcoin is Common Sense", "completion": "As more people become aware of the Fed\u2019s activities, it only begins to raise more questions. $2,500,000,000,000 is a big number, but what is actually happening? Who gets the money? What will the effects be and when? What are the consequences? Why is this even possible? How does it make any sense? All very valid questions, but none of these questions change the fact that many more dollars exist and that each dollar will be worth materially less in the future. That is intuitive. However, at an even more fundamental level, recognize that the operation of printing money (or creating digital dollars) does nothing to generate economic activity. To really simplify it, imagine a printing press just running on a loop. Or, imagine keying in an amount of dollars on a computer (which is technically all that the Fed does when it creates \u201cmoney\u201d). That very operation can definitionally do nothing to produce anything of value in the real world. Instead, that action can only induce an individual to take some other action. "}
{"prompt": "Bitcoin is Common Sense", "completion": "Recognize that any tangible good or service produced is produced by some individual. Human time is the input, capital production is the output. Whether it is software applications, manufacturing equipment, a service or an end consumer good, all along the value chain, an individual contributed time to produce some good or service. That time and value is ultimately what money tracks and prices. Entering a large number into the computer does not produce software, hardware, cars or homes. People produce those things and money coordinates the preferences of all individuals within an economy, compensating value to varying degrees for time spent. "}
{"prompt": "Bitcoin is Common Sense", "completion": "When the Fed creates $2.5 trillion in a matter of weeks, it is consolidating the power to price and value human time. Seems cryptic but it is not a suggestion that the individuals at the Fed are consciously or deliberately operating maliciously. It is just the root level consequence of the Fed\u2019s actions, even if well intentioned. Again, the Fed\u2019s operation (arbitrarily adding zeros to various bank account balances) cannot actually generate economic activity; all it can do is determine how to allocate new dollars. By doing so, it is advantaging some individual, enterprise or segment of the economy over another. In allocating new dollars that it creates, it is replacing a market function, one priced by billions of people, with a centralized function, greatly influencing the balance of power as to who controls the monetary capital that coordinates economic activity. Think about the distribution of money as the balance of control influencing and ultimately determining what gets built, by whom and at what price. At the moment of creation, there exists more money but there exists no more human time or goods and services as a consequence of that action. Similarly, over time, the Fed\u2019s actions do not create more jobs, there are just more dollars to distribute across the labor force, but with a different distribution of those holding the currency. The Fed can print money (technically, create digital dollars), but it can\u2019t print time nor can it do anything but artificially manipulate the allocation of resources within an economy.   "}
{"prompt": "Bitcoin is Common Sense", "completion": "Since 2007, the Fed balance sheet has increased seven-fold, but the labor force has only increased 6%. There are roughly the same number of people contributing output (human time) but far more dollars to compensate for that time. Do not be confused by impossible-to-quantify theory concerning the idea of a job saved versus a job lost; this is the U.S. labor force, defined by the Bureau of Labor Statistics as all persons 16 years of age and older, both employed and unemployed. The inevitable result is that the value of each dollar declines, but it does not create more workers, and all prices do not adjust ratably to the increase in the money supply, including the price of labor. "}
{"prompt": "Bitcoin is Common Sense", "completion": "In a theoretical world, if the Fed were to distribute the money in equal proportion to each individual that held the currency previously, it would not shift the balance of power. In practical application, the distribution of ownership shifts dramatically, heavily favoring the holders of financial assets (which is what the Fed buys in the process of creating new dollars) as well as those with cheap access to credit (the government, large corporations, high net-worth individuals, etc.). In aggregate, the purchasing power of every dollar declines, just not immediately, while a small subset benefits at the cost of the whole (see the Cantillon Effect). Despite the consequences, the Fed takes these actions in an attempt to support a credit system that would otherwise collapse without the supply of more dollars. In the Fed\u2019s economy, the credit system is the price setting mechanism as the amount of dollar-denominated debt far outstrips the supply of dollars, which is also why the purchasing power of each dollar does not immediately respond to the increase in the money supply."}
{"prompt": "Bitcoin is Common Sense", "completion": "Instead, the effects of increasing the money supply are transmitted, over time, through an expansion of the credit system. The credit system attempting to contract is the market and the individuals within an economy adjusting and re-pricing value; the Fed attempting to reverse that natural course by flooding the market with dollars is, by definition, overriding the market\u2019s price setting function, fundamentally altering the structure of the economy.  The market solution to the problem is to reduce debt (expression of preference) and the Fed\u2019s solution is to increase the supply of dollars such that existing debt levels can be sustained. The goal is to stabilize the credit system such that it can then expand, and it is a redux to the 2008 financial crisis, which provides a historical roadmap. In the immediate aftermath of the prior crisis, the Fed created $1.3 trillion new dollars in a matter of months. Despite this, the dollar initially strengthened as deflationary pressures in the credit system overwhelmed the increase in the money supply, but then, as the credit system began to expand, the dollar\u2019s purchasing power resumed its gradual decline. At present, the cause and effect of the Fed\u2019s monetary stimulus is principally transmitted through the credit system. It was the case in the years following the 2008 crisis, and it will hold true this time so long as the credit system remains intact."}
{"prompt": "Bitcoin is Common Sense", "completion": "How the effects manifest in the real economy is very complicated, but it does not take any sophistication to recognize the general direction of the end game or its foundational flaws. More dollars result in each dollar becoming worth less, and the value of any good naturally trends toward its cost to produce. The marginal cost for the Fed to produce a dollar is zero. With all the bailouts from both the Fed and Congress, whether to individuals or companies, someone is paying for everything. It is axiomatic that printing money (or creating digital dollars) does nothing to generate economic activity; it only shifts the balance of powers as to who allocates the money and prices risk. It strips power from the people and centralizes it to the government. It also fundamentally impairs the economy\u2019s ability to function as it distorts prices everywhere. But most importantly, it puts the stability of the underlying currency at risk, which is the cost that everyone collectively pays. The Fed may be able to create dollars for free and the Treasury may be able to borrow at near-zero interest rates as a direct result, but there is still no such thing as a free lunch. Someone still has to do the work, and all printing money does is shift who has the dollars to coordinate and price that work. "}
{"prompt": "Bitcoin is Common Sense", "completion": "The Moon is a Harsh Mistress, by Robert Heinlein"}
{"prompt": "Bitcoin is Common Sense", "completion": "\u201cGospodin,\u201d he said presently, \u201cyou used an odd word earlier\u2013odd to me, I mean\u2026\u201d"}
{"prompt": "Bitcoin is Common Sense", "completion": "\u201cOh, tanstaafl. Means there ain\u2019t no such thing as a free lunch. And isn\u2019t,\u201d I added, pointing to a FREE LUNCH sign across room, \u201cor these drinks would cost half as much. Was reminding her that anything free costs twice as much in long run or turns out worthless.\u201d"}
{"prompt": "Bitcoin is Common Sense", "completion": "\u201cAn interesting philosophy.\u201d"}
{"prompt": "Bitcoin is Common Sense", "completion": "\u201cNot philosophy, fact. One way or other, what you get, you pay for.\u201d"}
{"prompt": "Bitcoin is Common Sense", "completion": "Among its perceived flaws as a currency, bitcoin is viewed by many to be too complicated to ever achieve widespread adoption. In reality, the dollar is complicated; bitcoin is not. It becomes very simple when abstracted to the least common denominator: 21 million bitcoin; and who controls the money supply: no one. Not the Fed or anyone else. At the end of the day, that is all that matters. Bitcoin is in fact complicated at a technical level. It involves higher level mathematics and cryptography and it relies on a \u201cmining\u201d process that makes very little sense on the surface. There are blocks, nodes, keys, elliptic curves, digital signatures, difficulty adjustments, hashes, nonces, merkle trees, addresses and more. "}
{"prompt": "Bitcoin is Common Sense", "completion": "But with all this, bitcoin is very simple. If the supply of bitcoin remains fixed at 21 million, more people will demand it and its purchasing power will increase; there is nothing about the complexity underneath the hood that will prevent adoption. Most participants in the dollar economy, even the most sophisticated, have no practical understanding of the dollar system at a technical level. Not only is the dollar system far more complex than bitcoin, it is far less transparent. Similar degrees of complexity and many of the same primitives that exist in bitcoin underly an iPhone, yet individuals manage to successfully use the application without understanding how it actually works at a technical level. The same is true of bitcoin; the innovation in bitcoin is that it achieved finite digital scarcity, while being easy to divide and transfer. 21 million bitcoin ever, period.  That compared to $2.5 trillion new dollars created in two months, by one central bank, is the only common sense application anyone really needs to know."}
{"prompt": "Bitcoin is Common Sense", "completion": "Exhibit A \u2013 Dollar Supply"}
{"prompt": "Bitcoin is Common Sense", "completion": "Plus Exhibit B \u2013 Bitcoin Supply"}
{"prompt": "Bitcoin is Common Sense", "completion": "Equals Exhibit C \u2013 Purchasing Power of Bitcoin Relative to Dollars"}
{"prompt": "Bitcoin is Common Sense", "completion": "There is a lot happening in the background, but these three charts are what drives everything. People all over the world are connecting these dots. The Fed is creating trillions of dollars at the same time the rate of issuance in bitcoin is about to be cut in half (see the bitcoin halvening). While most may not be aware of these two divergent paths, a growing number are (knowledge distributes with time) and even a small number of people figuring it out ultimately puts a significant imbalance between the demand for bitcoin and its supply. When this happens, the value of bitcoin goes up. It is that simple and that is what draws everyone else in: price. Price is what communicates information. All those otherwise not paying attention react to price signals. The underlying demand is ultimately dictated by fundamentals (even if speculation exists), but the majority do not need to understand those fundamentals to recognize that the market is sending a signal. "}
{"prompt": "Bitcoin is Common Sense", "completion": "Once that signal is communicated, then it becomes clear that bitcoin is easy. Download an app, link a bank account, buy bitcoin. Get a piece of hardware, hardware generates address, send money to address. No one can take it from you and no one can print more. In that moment, bitcoin becomes far more intuitive. Seems complicated from the periphery, but it is that easy, and anyone with common sense and something to lose will figure it out; the benefit is so great and money is such a basic necessity that the bar on a relative basis only gets lower and lower in time. Self-preservation is the only motivation necessary; it ultimately breaks down any barriers that otherwise exist."}
{"prompt": "Bitcoin is Common Sense", "completion": "The stable foundation that underpins everything is a fixed supply which cannot be forged, capable of being secured without any counterparty risk and resistant to censorship and seizure. With that bedrock, it does not require a lot of imagination to see how bitcoin evolves from a volatile novelty into a stable economic juggernaut. A hard-capped monetary supply versus endless debasement; a currency that becomes exponentially more expensive to produce compared to a currency whose cost to produce is anchored forever at zero by its very nature. At the end of the day, a currency whose supply (and derivatively its price system) cannot be manipulated. Fundamental demand for bitcoin begins and ends at this singular cross-section. One by one, people wake up and recognize that a bill of goods has been sold, always by some far away expert and never reconciling with day-to-day economic reality. "}
{"prompt": "Bitcoin is Common Sense", "completion": "With bitcoin as a backdrop, it becomes self-evident that there is no advantage either in ceding the power to print money or in allowing a central bank to allocate resources within an economy, and in the stead of the people themselves that make up that economy. As each domino falls, bitcoin adoption grows. As a function of that adoption, bitcoin will transition from volatile, clunky and novel to stable, seamless and ubiquitous. But the entire transition will be dictated by value, and value is derived from the foundation that there will only ever be 21 million bitcoin. It is impossible to predict exactly how bitcoin will evolve because most of the minds that will contribute to that future are not yet even thinking about bitcoin. As bitcoin captures more mindshare, its capabilities will expand exponentially beyond the span of resources that currently exist. But those resources will come at the direct expense of the legacy system. It is ultimately a competition between two monetary systems and the paths could not be more divergent. "}
{"prompt": "Bitcoin is Common Sense", "completion": "Bananas grow on trees. Money does not, and bitcoin is the force that reawakens everyone to the reality that was always the case. Similarly, there is no such thing as a free lunch. Everything is being paid for by someone. When governments and central banks can no longer create money out of thin air, it will become crystal clear that backdoor monetary inflation was always just a ruse to allocate resources for which no one was actually willing to be taxed. In common sense, there is no question. There may be debate but bitcoin is the inevitable path forward. Time makes more converts than reason."}
{"prompt": "Bitcoin is Common Sense", "completion": "\u201cYou can fool all the people some of the time, and some of the people all the time, but you cannot fool all the people all the time.\u201d\n\u2013 Abraham Lincoln"}
{"prompt": "Bitcoin is Common Sense", "completion": " \u201cThese proceedings may at first seem strange and difficult, but like all other steps which we have already passed over, will in a little time become familiar and agreeable: and until an independance is declared, the Continent will feel itself like a man who continues putting off some unpleasant business from day to day, yet knows it must be done, hates to set about it, wishes it over, and is continually haunted with the thoughts of its necessity.\u201d \u2013 Thomas Paine, Common Sense"}
{"prompt": "Bitcoin is Common Sense", "completion": " "}
{"prompt": "Bitcoin is Common Sense", "completion": "Views presented are expressly my own and not those of Unchained Capital or my colleagues. Thanks to Will Cole and Phil Geiger for reviewing and for providing valuable feedback."}
{"prompt": "Bitcoin is Common Sense", "completion": "Love the article. Gradually then suddenly!"}
{"prompt": "Bitcoin is Common Sense", "completion": "Fantastic read! Thank you for taking the time and sharing your thoughts. ds"}
{"prompt": "Bitcoin is Common Sense", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin is Common Sense", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Bitcoin is Antifragile", "completion": "If one thing is certain, it is that bitcoin is humbling. It humbles everyone. Some sooner than others, but everyone eventually. Individuals you respect may have called bitcoin a fraud or compared it to rat poison but if it hasn\u2019t been walked back yet, it will in time. For most everyone first considering bitcoin, the reality is that the proper context to evaluate it is practically non-existent, even for the most revered financiers of our time. Is bitcoin like a stock, bond, tech startup, the internet or merely a figment of everyone\u2019s imagination? At first glance, bitcoin admittedly makes very little sense. It is very reasonably believed by many to be one massive collective hallucination. There exist two fundamental problems. Almost everyone lacks the baseline to evaluate bitcoin because there has never been anything like it, and very few, prior to bitcoin, have ever consciously considered what money is. Every day, people evaluate whether to invest in stocks, bonds or real estate, or whether or not to buy a home or car, or whether to purchase some consumer good, or conversely, whether to save. While there are exceptions to every rule, practically everyone is unequipped to evaluate bitcoin because it does not fit any prior mental framework. It is like asking someone with no concept of mathematics what 2 + 2 equals. It may be obvious to those that know math, but if not, it\u2019s unrelatable. To make it even more difficult, bitcoin is so abstract an application and so far from a tangible phenomenon, that it is like staring into the abyss. Bitcoin is both difficult to see and impossible to unsee once discovered. But often the path from one end of the extreme to the other is a journey, where the impossible first becomes possible, then probable and ultimately inevitable."}
{"prompt": "Bitcoin is Antifragile", "completion": "Eventually, some chord is struck or some dot connected. As the fog begins to lift, there naturally remains the idea that, while bitcoin is possible, it is surely subject to high degrees of chance and more likely to fail than succeed. It is perceived to be inherently fragile and risky. Many believe that bitcoin could vanish as quickly as it appeared on scene. At the beginning of the journey, it seems to live somewhere between an aspiring long-shot and just one unidentified silver bullet away from complete and utter collapse. Bitcoin is novel and it is often thought of as untested and unproven. Launched in 2009, bitcoin seemingly lacks permanence. It is not yet anchored in time. But on the other hand, bitcoin has been around for going on twelve years and has a total purchasing power (or value) of $180 billion. Twelve years of operating history and hundreds of billions in value may still be an upstart, but it is far from untested and unproven. Instead, it is thriving in the wild without any central coordination, and it is the lack of central coordination that gives bitcoin its lifeblood; decentralization not only allows bitcoin to function, but it is also what causes it to gain strength rather than falter when stressed."}
{"prompt": "Bitcoin is Antifragile", "completion": "That bitcoin is natively digital and powered by computers running software capable of being shut down lends to the default impression that bitcoin is inherently fragile. The mental image of a computer network being unplugged creates the false sense that one day and suddenly, somehow bitcoin as a system could cease to exist when the opposite is true for the very same reason. That bitcoin both exists everywhere and nowhere, that it is controlled by no one, that anyone is capable of running the open source software from anywhere, and that hundreds of thousands of people do, relied upon by tens of millions (and growing) is what gives bitcoin permanence. With no single point of failure, bitcoin is practically impossible to stop because it is impossible to control, and it is a dynamic system that only becomes more redundant and further decentralized in time and with increasing adoption. In short, bitcoin is more permanent than risky because it is an antifragile system. An idea popularized by Nassim Taleb, antifragility describes systems or phenomena that gain strength from disorder, which is bitcoin to its core. There is no silver-bullet that kills bitcoin; there is no competitor that can magically overtake it; there is no government that can shut it down. But it does not stop there; each attack vector and shock to the system actually causes bitcoin to become stronger."}
{"prompt": "Bitcoin is Antifragile", "completion": "\u201cSome things benefit from shocks; they thrive and grow when exposed to volatility, randomness, disorder, and stressors and love adventure, risk, and uncertainty. Yet, in spite of the ubiquity of the phenomenon, there is no word for the exact opposite of fragile. Let us call it antifragile. Antifragility is beyond resilience or robustness. The resilient resists shocks and stays the same; the antifragile gets better. This property is behind everything that has changed with time: evolution, culture, ideas, revolutions, political systems, technological innovation, cultural and economic success, corporate survival, good recipes (say, chicken soup or steak tartare with a drop of cognac), the rise of cities, cultures, legal systems, equatorial forests, bacterial resistance \u2026 even our own existence as a species on this planet. And antifragility determines the boundary between what is living and organic (or complex), say, the human body, and what is inert, say, a physical object like the stapler on your desk. [\u2026] The antifragile loves randomness and uncertainty, which also means\u2014crucially\u2014a love of errors, a certain class of errors.\u201d  \u2013 Nassim Taleb, Antifragile"}
{"prompt": "Bitcoin is Antifragile", "completion": "Bitcoin is an adaptive and evolving system; it is not static. No one controls the network and there are no leaders capable of forcing changes onto the network. It is decentralized at every layer, and as a result, it has shown to be immune to any type of attack. However, it is not just immune to attack or errors, bitcoin actually becomes stronger as: i) external forces attempt to influence or coopt the network; ii) as individuals within the network make errors; and, iii) as a very function of its volatility, which is often perceived to be a limiting, if not critical, flaw. As bitcoin survives shocks and as individuals learn from errors and adapt to its volatility, bitcoin becomes tangibly more reliable; its demonstration of resilience and immunity causes trust to be reinforced in the network, which increases adoption and makes bitcoin more resistant to future attack or individual errors. It is a positive, self-reinforcing feedback loop. With every failed attempt to coopt or coerce the network, the bitcoin protocol hardens and confidence increases. Every time bitcoin doesn\u2019t die, that very event propels bitcoin forward, and in a fundamentally stronger state than previously existed."}
{"prompt": "Bitcoin is Antifragile", "completion": "Each exogenous shock to the network provides learnings that cause bitcoin to adapt in a spontaneous way, which can only be endemic to a decentralized system. Because bitcoin is decentralized and because it becomes increasingly decentralized as a function of time (and adoption), not only is there no single point of failure, but the increasing levels of redundancy ensure network survival and fortify it against future attacks. There is a positive correlation between time and the degree of network decentralization. Similarly, there is a positive correlation between the degree of decentralization and the network\u2019s ability to fend off more formidable attacks. Essentially, as the network becomes more decentralized over time, it also becomes resistant to threats it may not have been capable of surviving in prior states. "}
{"prompt": "Bitcoin is Antifragile", "completion": "Separately, each error within the system is isolated to the responsible parties, and as bitcoin grows, each potential point of failure becomes less critical to the proper functioning of the network as a whole. Weak points in the network are sacrificed and the system strengthens in aggregate. The entire process is made more effective and efficient because it is never a conscious decision. It is simply structural to the system architecture. No one picks winners and losers. Decentralization eliminates moral hazard and ensures system survival at the same time. At all times, network participants are maximally accountable for their own errors. There are no bailouts. Incentives and accountability optimize for innovation and naturally drive toward consistently better outcomes in aggregate. It doesn\u2019t eliminate error, but it ensures that errors are productive, as the mere fact of survival affords that the network as a whole has the opportunity to adapt to threats and to immunize around them. Whether borne from exogenous shocks or internal errors, bitcoin feeds on disorder, stressors, volatility and randomness, collectively a hallmark of an antifragile system."}
{"prompt": "Bitcoin is Antifragile", "completion": "The lack of social order in bitcoin may be its single greatest asset. There is no CEO of bitcoin nor is there a centralized authority that controls it. There is no person or organization to drag in front of Congress, whether to answer questions or demand action. In fact, there is no Congress or legislative body with any influence over bitcoin, preferential or otherwise. It does not mean that any individual or company is immune from influence; nor does it prevent any country from attempting to regulate (or ban) bitcoin, but disorder insulates the network from external threats. While Facebook\u2019s Libra is fundamentally plagued as a currency for reasons independent of government influence, the CEO and other top executives were quickly brought before Congress soon after its announcement to answer questions and with key legislators demanding the project be delayed, if not scrapped, over concerns of \u201cnational security\u201d and other regulatory issues. It is not that CEOs and companies cannot coexist with government; instead, it is that the mere existence creates influence that could never exist in bitcoin at a protocol level, and the absence of which allows bitcoin to be viable as a currency."}
{"prompt": "Bitcoin is Antifragile", "completion": "\u201cThe root problem with conventional currency is all the trust that\u2019s required to make it work. The central bank must be trusted not to debase the currency, but the history of fiat currencies is full of breaches of that trust.\u201d \u2013 Satoshi Nakamoto (February 11th, 2009)"}
{"prompt": "Bitcoin is Antifragile", "completion": "With no central counterparties controlling the network, bitcoin functions on a decentralized basis and in a state that eliminates the need for, and dependence on, trust. Its distributed architecture reduces the network\u2019s attack surface by eliminating central points of failure that would otherwise expose the system to critical risk. By being built on a foundation of social disorder and only in the absence of control is bitcoin able to function on a secure basis. It is the precise opposite of the trust-based central bank model. Bitcoin is a monetary system built on a market consensus mechanism, rather than centralized control. There are certain consensus rules that govern the network. Each participant opts in voluntarily and everyone can independently verify (and enforce) that the rules are being followed. If any market participant changes a rule that is inconsistent with the rest of the network, that participant falls out of consensus. The network consensus rules ultimately define what is and what is not a bitcoin, and because each participant is capable of enforcing the rules independently, it is the aggregate function of enforcement on a decentralized basis that ensures there will only ever be 21 million bitcoin. By eliminating trust in centralized counterparties, all network participants are able to rely upon and ultimately trust that the monetary policy is secure and that it will not be subject to arbitrary change. It may seem like a paradox but it is perfectly rational. The system is trusted because it is trustless and it would not be trustless without high degrees of social disorder. Ultimately, a spontaneous order emerges out of disorder and strengthens as each exogenous system shock is absorbed."}
{"prompt": "Bitcoin is Antifragile", "completion": "For example, in 2017, there was a civil war of sorts that emerged in bitcoin. Many of the largest companies that provide bitcoin custody and exchange services aligned with large bitcoin miners that controlled 85%+ of the network\u2019s mining capacity (or hash rate) in an attempt to force a change to the consensus rules. This group of power brokers wanted to double the bitcoin block size as a means to increase the network\u2019s transaction capacity. However, an increase to the block size would have required a change to the network consensus rules, which would have split (or hard-forked) the network. As part of a negotiated \u201cagreement,\u201d the group proposed to activate a significant network upgrade (referred to as Segwit \u2013 an upgrade that would not change the consensus rules) at the same time the block size would be doubled (which would have changed the consensus rules). With most all large service providers and miners onboard, plans were set in motion to effect the changes. However, a curve ball was thrown when a user-led effort prompted the activation of the Segwit network upgrade without changing the network consensus rules and without increasing the block size (read more here). The effort to change the network\u2019s consensus rules failed miserably and bitcoin steadily marched forward undisturbed. In practice, it often cannot be known whether bitcoin is resistant to various threats until the threats present themselves. In this case, it was disorder that prevented coordinated forces from influencing the network, and at the same time, everyone learned the extent to which bitcoin was resistant to censorship, which further strengthened the network."}
{"prompt": "Bitcoin is Antifragile", "completion": "This episode in bitcoin\u2019s history demonstrated that no one was in control of the network.  Not even the most powerful companies and miners, practically all aligned, could change bitcoin. It was an incontrovertible demonstration of the network\u2019s resistance to censorship. It may have seemed like an inconsequential change. A majority of participants probably supported the increase in the block size (or at least the idea), but it was always a marginal issue, and when it comes to change, bitcoin\u2019s default position is no. Only an overwhelming majority of all participants (naturally with competing priorities) can change the network\u2019s consensus rules. And it really was never a debate about block size or transaction capacity. What was at stake was whether or not bitcoin was sufficiently decentralized to prevent external and powerful forces from influencing the network and changing the consensus rules. See, it\u2019s a slippery slope. If bitcoin were susceptible to change by the dictate of a few centralized companies and miners, it would have established that bitcoin were censorable. And if bitcoin were censorable, then all bets would be off. There would have been no reasonable basis to believe that other future changes would not be forced on the network, and ultimately, it would have impaired the credibility of bitcoin\u2019s fixed 21 million supply."}
{"prompt": "Bitcoin is Antifragile", "completion": "That the most powerful players in bitcoin could not influence the network reinforced its viability, and it was only possible because of the disorder inherent to the system itself. It was impossible to collude or to coopt the network because of decentralization. And it did not just show bitcoin to be resilient, the failure itself made the network stronger. It educated the entire network on the importance of censorship resistance and demonstrated just how uncensorable bitcoin had become. It also informs future behavior as the economic costs and consequences are both real and permanent. Resources to support the effort turned into sunk costs, reputations were damaged, and costly trades were made. All said, confidence in bitcoin increased as a function of the failed attempts to control the network, and confidence is not just a passive descriptor. It dissuades future attempts to coopt the network and drives adoption. Increasing adoption further decentralizes the network, making it even more resistant to censorship and outside influence. It may seem like chaos, but really, social disorder was and will continue to be an asset that secures the network from unpredictable and undesired change."}
{"prompt": "Bitcoin is Antifragile", "completion": "Attempts to influence the network consensus rules may be the most acute stressor, as it is these rules that underpin the entire system and create order out of disorder, but bitcoin is consistently exposed to a myriad of smaller stressors that similarly strengthen the network as a whole and over time. There are many different forms of stress, but because bitcoin is exposed to stress on a consistent basis and of a wide variety, it forces the network to constantly adapt and evolve while also building its immune system from the outside in."}
{"prompt": "Bitcoin is Antifragile", "completion": " "}
{"prompt": "Bitcoin is Antifragile", "completion": "Each form of stress hardens the bitcoin network and often for different reasons. Whenever governments take action in an attempt to ban bitcoin or otherwise restrict its use, the network continues to function unperturbed. China and India, countries with a combined population of 2.7 billion people, have both taken material actions to curb the spread of bitcoin. Despite this, the network as a whole continues to function without flaw, and bitcoin continues to be used in both countries. After the RBI (Central Bank of India) restricted the ability for banks to service bitcoin or cryptocurrency-related companies, the Supreme Court in India ultimately overturned the ban as unconstitutional. It sets precedent in more ways than one. First, that the central bank was overruled; second, that the ban was ultimately unsuccessful as people continued to find ways to access bitcoin; and third, that despite these actions, the network was unphased. Separately, China has taken measures to restrict the ability of exchanges to facilitate bitcoin trading and has expressed an interest in eliminating bitcoin mining. Similar to India, people continue to use bitcoin in China and the bitcoin network has been undeterred. Naturally, as government regulation in China has become more restrictive, miners have begun to look to more stable jurisdictions. Bitcoin mining in the United States (among other regions) continues to grow, and Peter Thiel recently backed a startup that is building out mining operations in West Texas. Regardless of the threat, bitcoin exists beyond countries (and governments). The network adapts to jurisdictional risks and continues to function without interruption. As network participants observe the failed attempts to inhibit bitcoin\u2019s growth and witness how it adapts, bitcoin does not merely remain static; it actually becomes more resilient through this process by routing around and immunizing each passing threat."}
{"prompt": "Bitcoin is Antifragile", "completion": "An entirely different type of stress comes in the form of competing cryptocurrencies. Since bitcoin was launched in 2009, there have been no fewer than a thousand competing digital currencies. While often (but not always) espousing different purposes and \u201cuse cases,\u201d in each instance, every single one has in reality been competing with bitcoin as money. In many cases, the creators do in fact call out perceived flaws in bitcoin and how a particular competing protocol intends to improve on its \u201climitations\u201d. Despite thousands of competitors, bitcoin accounts for ~70% of all cryptocurrencies in terms of market value, and when adjusted for liquidity, the estimate is closer to ~90%. Whereas one currency accounts for 70% to 90% of value depending on the metric, thousands of competing cryptocurrencies account for 10% to 30%. That is the market distinguishing between bitcoin and the field. Competition is inherently good for bitcoin. Not only does each attempt to create a better bitcoin fail, the repeated failures actually inform market participants that there is something which distinguishes bitcoin from the rest of the field. Even if the what or why is not immediately self-evident, the market provides useful information. Bitcoin does not just withstand the competition; it beats the competition. While bitcoin cannot be copied, that fact is more easily learned through market functions and market tests than any amount of reason and logic. Through the failed experiences of competing currencies, bitcoin accumulates more human capital, and the network grows as a direct result. If bitcoin were never tested or challenged, it would not have the opportunity to benefit from stress. That it is constantly challenged and stressed through competition creates a more resilient network and a larger holder base."}
{"prompt": "Bitcoin is Antifragile", "completion": "While stress exposed to the network from external threats creates positive externalities, bitcoin also benefits from more regular and consistent stressors from within the network, typically arising in the form of malicious attacks or unintentional error. Attacks aimed at participants within the network, whether companies or individuals, occur practically at a constant clip. Each participant is maximally and independently responsible for the security of their bitcoin holdings, whether choosing to trust a third-party or whether taking on that responsibility directly. Many of the largest exchanges in the world have been hacked as have many individuals within the network. For those that have not, the threat always exists. As participants are compromised, hacked or otherwise have access to bitcoin restricted, it does not impact the functioning of the network, but like all stressors, the attack vectors directly cause the network to adapt and become stronger."}
{"prompt": "Bitcoin is Antifragile", "completion": "With numerous critical exchange failures, market participants increasingly shift to taking on the responsibility of holding their own bitcoin, independent from third-party service providers. The same is true in response to individual accounts at exchanges getting hacked. Not dissimilarly, as threats are identified for those that secure their own bitcoin, more secure wallets are developed and users opt toward more secure ways to safely secure their bitcoin by reducing or eliminating single points of failure. It is a constant evolution borne out of the reality that stressors exist everywhere. The network is not exposed to any critical failures because the entire network iterates through trial and error around the clock, with free competition and endless market opportunity incentivizing innovation. And, with each failure, everyone is on their own and personally accountable. The incentive structure dictates that everyone constantly seeks out better ways of securing bitcoin. Through this process of stress, the network very naturally and organically strengthens."}
{"prompt": "Bitcoin is Antifragile", "completion": "Similar to the benefit provided by consistent stressors, volatility tangibly builds the immunity of the system. While it is often lamented as a critical flaw, volatility is really a feature and not a bug. Volatility is price discovery and in bitcoin, it is unceasing and uninterrupted. There are no Fed market operations to rescue investors, nor are there circuit breakers. Everyone is individually responsible for managing volatility and if caught offsides, no one is there to offer bailouts. Because there are no bailouts, moral hazard is eliminated network-wide. Bitcoin may be volatile, but in a world without bailouts, the market function of price discovery is far more true because it cannot be directly manipulated by external forces. It is akin to a child touching a hot stove; that mistake will likely not be made more than once, and it is through experience that market participants quickly learn how unforgiving the volatility can be. And, should the lesson not be learned, the individual is sacrificed for the benefit of the whole. There is no \u201ctoo big to fail\u201d in bitcoin. Ultimately, price communicates information and all market participants observe the market forces independently, each adapting or individually paying the price."}
{"prompt": "Bitcoin is Antifragile", "completion": "But information is not just communicated through price volatility. Volatility is also how bitcoin gets distributed and how the network becomes further decentralized. Every time a bitcoin is sold, someone else is buying. Consistently over time, the ownership of the network becomes more decentralized, and this occurs most acutely in bouts of volatility. In very tangible ways, the volatility strengthens bitcoin by decentralizing it and reinforcing that while tulips may die, bitcoin never does. As the network becomes more decentralized, it similarly becomes more censorship resistant and each individual within the network holds a smaller and smaller share of the currency (on average) resulting in a dynamic in which, over time, price is less exposed to the preferences of a few large holders. It is not to say that there do not remain large holders that can singularly influence price and volatility, but as a directional trend, the impact of any individual on price diminishes over time and often directly through the distributive function of volatility itself."}
{"prompt": "Bitcoin is Antifragile", "completion": "And when network participants, individually and as a whole, observe that bitcoin survives, even after extreme downside volatility, that mere fact strengthens confidence in the network. At some price, individuals were willing to step in and catch the falling knife. Through these episodes, bitcoin accumulates more human capital. The weak hands are shaken out and the strongest hands always survive (often in the form of new holders), causing the network to become more resilient and not merely remaining static or simply absorbing the disruption. Bitcoin actually feeds on the chaos. In the end, near-term volatility directly contributes to long-term stability. By maintaining a fixed supply with highly variable present demand, the market performs price discovery 24 hours a day, 7 days a week. It is the intermittent stress that trains and hardens all individual owners and which prevents the network from being exposed to systemic risk. All while the opposite is true of fiat currencies. Central banks manage currencies to maintain short-term stability but ultimately, by suppressing volatility, imbalances accumulate below the surface leading to fragility and greater systemic shocks in the long-term, as has been witnessed with increasing regularity over the last two decades. The contrast between the two competing systems could not be more extreme and it is volatility in bitcoin that communicates information with the least distortion, and without which long-term stability would not be possible. "}
{"prompt": "Bitcoin is Antifragile", "completion": "\u201cComplex systems that have artificially suppressed volatility tend to become extremely fragile, while at the same time exhibiting no visible risks [\u2026] Such environments eventually experience massive blowups, catching everyone off-guard and undoing years of stability\u201d"}
{"prompt": "Bitcoin is Antifragile", "completion": "\u201cVariation is information. When there is no variation, there is no information [\u2026] there is no freedom without noise\u2014and no stability without volatility.\u201d \u2013 Taleb & Blythe, Foreign Affairs, May/June 2011 Issue"}
{"prompt": "Bitcoin is Antifragile", "completion": "\u201cMany of the greatest things man has achieved are the result not of consciously directed thought, and still less the product of a deliberately coordinated effort of many individuals, but of a process in which the individual plays a part which he can never fully understand. They are greater than any individual precisely because they result from the combination of knowledge more extensive than a single mind can master.\u201d \u2013 Hayek, The Counter-Revolution of Science"}
{"prompt": "Bitcoin is Antifragile", "completion": "Lastly, randomness. While most people recognize that there is intelligent design in bitcoin\u2019s foundation, what is often missed is the randomness through which it evolved and that what it became (money) was largely a function of that randomness. Lightning was caught in a bottle; it was a result of thousands of people making thousands of independent decisions very early on. But the process also continues to this day. From cryptographers and developers contributing time and energy, to companies and investors building infrastructure, and to users just wanting to find a better way to store value. If the reset button was hit going all the way back to 2008 when the bitcoin white paper was released, and the same initial code was released, placing the same people in the same rooms, bitcoin would very likely not be what it is today. It may be \u201cbetter\u201d or \u201cworse,\u201d but ultimately it was and continues to be a product of randomness. It is not the product of consciously directed thought, and it expands beyond the resources of individual minds because of that fact. For those that perceive flaws in bitcoin and have (or had) ideas of how to make a better bitcoin, the intelligence of bitcoin\u2019s design is often observed and acknowledged. Design can be copied and individual features can be changed out, but randomness cannot be replicated."}
{"prompt": "Bitcoin is Antifragile", "completion": "One week after bitcoin was launched, Hal Finney famously tweeted to the world that he was \u201crunning bitcoin.\u201d In 2011, Ross Ulbricht was alleged to have launched the Silk Road website which ultimately leveraged bitcoin to facilitate online payments for drugs, establishing one of the earliest widespread uses of bitcoin in commerce and undoubtedly playing a material role in the expansion of early adoption and awareness. In 2014, Mt. Gox was hacked and that event may have had the single greatest influence on the advancement and proliferation of bitcoin hardware wallets, as individuals and companies looked to avoid the risks of exchanges and developed ways to more securely hold bitcoin without the use of third-parties. In 2017, after a bitcoin service provider drew the ire of Nicolas Dorier, he set out to build a product that would obsolete that provider and service, spawning one of the most exciting open source projects within bitcoin, BTCPay Server. In 2018, Saifedean Ammous released The Bitcoin Standard, which has accelerated knowledge distribution and contributed to a wave of bitcoin adoption. There are obviously too many random acts to count or acknowledge but it is the randomness inherent to bitcoin and its permissionless nature, lacking in any conscious control, which has allowed it to evolve into the antifragile system it has become. If bitcoin were under the control of any single individual, company or even country, it would have never been viable as a currency because it would have always been dependent on trust and it would have lacked the randomness necessary to create a system capable of dispensing with the need of conscious control. Randomness is irreplicable and the foundation of bitcoin was built on it."}
{"prompt": "Bitcoin is Antifragile", "completion": "In aggregate, as a currency and economic system, bitcoin benefits from disorder. It is the constant exposure to stressors, volatility and randomness which causes bitcoin to evolve, adapt and ultimately to become stronger in near-uniform fashion and in a way that would not be possible in the absence of disorder. Bitcoin may still be young, but it is not temporary. It was released into the wild, and what has spawned is a system that cannot be controlled or shut down. It\u2019s both everywhere and nowhere, all at the same time. It is like an elusive ghost. Its decentralized and permissionless state eliminates single points of failure and drives innovation, ultimately ensuring both its survival and a constant strengthening of its immune system as a function of time, trial and error. Bitcoin is beyond resilient. The resilient resists shocks and stays the same; bitcoin gets better. While it is easy to fall into a trap, believing bitcoin to be untested, unproven and not permanent, it is precisely the opposite. Bitcoin has been constantly tested for going on 12 years, each time proving to be up to the challenge and emerging from each test in a stronger state. At the end of the day, bitcoin is more permanent than it is risky because of antifragility. As a currency system, it manages to extend the utilization of resources beyond the control of deliberately coordinated effort, entirely dispensing with the need of conscious control all together. Bitcoin is the antifragile competitor to the inherently fragile legacy monetary system. On the one hand, a legacy system crippled by moral hazard, dependent on trust and centralized control. One that accumulates imbalance and fragility when exposed to stress and disorder, principally as a function of trillions in bailouts with each passing shock, which only further weakens its immune system. That compared to bitcoin which is a system devoid of moral hazard and which operates flawlessly on a decentralized basis, without trust and without bailouts. It eliminates imbalance and sources of fragility as a constant process, further strengthening the currency system as a whole and as a function of time. What doesn\u2019t kill the legacy monetary system only makes it weaker. What doesn\u2019t kill bitcoin only makes it stronger. "}
{"prompt": "Bitcoin is Antifragile", "completion": " \u201cAntifragility is beyond resilience or robustness. The resilient resists shocks and stays the same;\nthe antifragile gets better.\u201d \u2013 Nassim Taleb, Antifragile"}
{"prompt": "Bitcoin is Antifragile", "completion": "\u201cBut those who clamor for \u201cconscious direction\u201d\u2014and who cannot believe that anything which has evolved without design (and even without our understanding it) should solve problems which we should not be able to solve consciously\u2014should remember this: The problem is precisely how to extend the span of our utilization of resources beyond the span of the control of any one mind; and therefore, how to dispense with the need of conscious control, and how to provide inducements which will make the individuals do the desirable things without anyone having to tell them what to do.\u201d \u2013 Hayek, The Use of Knowledge in Society."}
{"prompt": "Bitcoin is Antifragile", "completion": "Views presented are expressly my own and not those of Unchained Capital or my colleagues. Thanks to Will Cole and Phil Geiger for reviewing and for providing valuable feedback."}
{"prompt": "Bitcoin is Antifragile", "completion": "Save my name, email, and website in this browser for the next time I comment."}
{"prompt": "Bitcoin is Antifragile", "completion": "Unchained Capital, Inc. NMLS ID#1900773 | NMLS Consumer Access"}
{"prompt": "Preface", "completion": "I first stumbled upon bitcoin in mid-2011. My immediate reaction was more or less \"Pfft! Nerd money!\" and I ignored it for another six months, failing to grasp its importance. This is a reaction that I have seen repeated among many of the smartest people I know, which gives me some consolation. The second time I came across bitcoin, in a mailing list discussion, I decided to read the whitepaper written by Satoshi Nakamoto to study the authoritative source and see what it was all about. I still remember the moment I finished reading those nine pages, when I realized that bitcoin was not simply a digital currency, but a network of trust that could also provide the basis for so much more than just currencies. The realization that \"this isn\u2019t money, it\u2019s a decentralized trust network,\" started me on a four-month journey to devour every scrap of information about bitcoin I could find. I became obsessed and enthralled, spending 12 or more hours each day glued to a screen, reading, writing, coding, and learning as much as I could. I emerged from this state of fugue, more than 20 pounds lighter from lack of consistent meals, determined to dedicate myself to working on bitcoin."}
{"prompt": "Preface", "completion": "Two years later, after creating a number of small startups to explore various bitcoin-related services and products, I decided that it was time to write my first book. Bitcoin was the topic that had driven me into a frenzy of creativity and consumed my thoughts; it was the most exciting technology I had encountered since the internet. It was now time to share my passion about this amazing technology with a broader audience."}
{"prompt": "Preface", "completion": "This book is mostly intended for coders. If you can use a programming language, this book will teach you how cryptographic currencies work, how to use them, and how to develop software that works with them. The first few chapters are also suitable as an in-depth introduction to bitcoin for noncoders\u2014those trying to understand the inner workings of bitcoin and cryptocurrencies."}
{"prompt": "Preface", "completion": "The leafcutter ant is a species that exhibits highly complex behavior in a colony super-organism, but each individual ant operates on a set of simple rules driven by social interaction and the exchange of chemical scents (pheromones). Per Wikipedia: \"Next to humans, leafcutter ants form the largest and most complex animal societies on Earth.\" Leafcutter ants don\u2019t actually eat leaves, but rather use them to farm a fungus, which is the central food source for the colony. Get that? These ants are farming!"}
{"prompt": "Preface", "completion": "Although ants form a caste-based society and have a queen for producing offspring, there is no central authority or leader in an ant colony. The highly intelligent and sophisticated behavior exhibited by a multimillion-member colony is an emergent property from the interaction of the individuals in a social network."}
{"prompt": "Preface", "completion": "Nature demonstrates that decentralized systems can be resilient and can produce emergent complexity and incredible sophistication without the need for a central authority, hierarchy, or complex parts."}
{"prompt": "Preface", "completion": "Bitcoin is a highly sophisticated decentralized trust network that can support myriad financial processes. Yet, each node in the bitcoin network follows a few simple mathematical rules. The interaction between many nodes is what leads to the emergence of the sophisticated behavior, not any inherent complexity or trust in any single node. Like an ant colony, the bitcoin network is a resilient network of simple nodes following simple rules that together can do amazing things without any central coordination."}
{"prompt": "Preface", "completion": "The following typographical conventions are used in this book:"}
{"prompt": "Preface", "completion": "Indicates new terms, URLs, email addresses, filenames, and file extensions."}
{"prompt": "Preface", "completion": "Used for program listings, as well as within paragraphs to refer to program elements such as variable or function names, databases, data types, environment variables, statements, and keywords."}
{"prompt": "Preface", "completion": "Shows commands or other text that should be typed literally by the user."}
{"prompt": "Preface", "completion": "Shows text that should be replaced with user-supplied values or by values determined by context."}
{"prompt": "Preface", "completion": "This icon signifies a tip or suggestion."}
{"prompt": "Preface", "completion": "This icon signifies a general note."}
{"prompt": "Preface", "completion": "This icon indicates a warning or caution."}
{"prompt": "Preface", "completion": "The examples are illustrated in Python, C++, and using the command line of a Unix-like operating system such as Linux or macOS. All code snippets are available in the GitHub repository (https://github.com/bitcoinbook/bitcoinbook) in the code subdirectory of the main repo. Fork the book code, try the code examples, or submit corrections via GitHub."}
{"prompt": "Preface", "completion": "All the code snippets can be replicated on most operating systems with a minimal installation of compilers and interpreters for the corresponding languages. Where necessary, we provide basic installation instructions and step-by-step examples of the output of those instructions."}
{"prompt": "Preface", "completion": "Some of the code snippets and code output have been reformatted for print. In all such cases, the lines have been split by a backslash (\\) character, followed by a newline character. When transcribing the examples, remove those two characters and join the lines again and you should see identical results as shown in the example."}
{"prompt": "Preface", "completion": "All the code snippets use real values and calculations where possible, so that you can build from example to example and see the same results in any code you write to calculate the same values. For example, the private keys and corresponding public keys and addresses are all real. The sample transactions, blocks, and blockchain references have all been introduced in the actual bitcoin blockchain and are part of the public ledger, so you can review them on any bitcoin system."}
{"prompt": "Preface", "completion": "This book is here to help you get your job done. In general, if example code is offered with this book, you may use it in your programs and documentation. You do not need to contact us for permission unless you\u2019re reproducing a significant portion of the code. For example, writing a program that uses several chunks of code from this book does not require permission. Selling or distributing a CD-ROM of examples from O\u2019Reilly books does require permission. Answering a question by citing this book and quoting example code does not require permission. Incorporating a significant amount of example code from this book into your product\u2019s documentation does require permission."}
{"prompt": "Preface", "completion": "We appreciate, but do not require, attribution. An attribution usually includes the title, author, publisher, and ISBN. For example: \u201cMastering Bitcoin by Andreas M. Antonopoulos (O\u2019Reilly). Copyright 2017 Andreas M. Antonopoulos, 978-1-491-95438-6.\u201d"}
{"prompt": "Preface", "completion": "Some editions of this book are offered under an open source license, such as CC-BY-NC, in which case the terms of that license apply."}
{"prompt": "Preface", "completion": "If you feel your use of code examples falls outside fair use or the permission given above, feel free to contact us at permissions@oreilly.com."}
{"prompt": "Preface", "completion": "The bitcoin addresses, transactions, keys, QR codes, and blockchain data used in this book are, for the most part, real. That means you can browse the blockchain, look at the transactions offered as examples, retrieve them with your own scripts or programs, etc."}
{"prompt": "Preface", "completion": "However, note that the private keys used to construct addresses are either printed in this book, or have been \"burned.\" That means that if you send money to any of these addresses, the money will either be lost forever, or in some cases everyone who can read the book can take it using the private keys printed in here."}
{"prompt": "Preface", "completion": "DO NOT SEND MONEY TO ANY OF THE ADDRESSES IN THIS BOOK. Your money will be taken by another reader, or lost forever."}
{"prompt": "Preface", "completion": "Safari (formerly Safari Books Online) is a membership-based training and reference platform for enterprise, government, educators, and individuals."}
{"prompt": "Preface", "completion": "Members have access to thousands of books, training videos, Learning Paths, interactive tutorials, and curated playlists from over 250 publishers, including O\u2019Reilly Media, Harvard Business Review, Prentice Hall Professional, Addison-Wesley Professional, Microsoft Press, Sams, Que, Peachpit Press, Adobe, Focal Press, Cisco Press, John Wiley & Sons, Syngress, Morgan Kaufmann, IBM Redbooks, Packt, Adobe Press, FT Press, Apress, Manning, New Riders, McGraw-Hill, Jones & Bartlett, and Course Technology, among others."}
{"prompt": "Preface", "completion": "For more information, please visit https://oreilly.com/safari."}
{"prompt": "Preface", "completion": "Please address comments and questions concerning this book to the publisher:"}
{"prompt": "Preface", "completion": "To comment or ask technical questions about this book, send email to bookquestions@oreilly.com."}
{"prompt": "Preface", "completion": "For more information about our books, courses, conferences, and news, see our website at https://www.oreilly.com."}
{"prompt": "Preface", "completion": "Find us on Facebook: https://facebook.com/oreilly"}
{"prompt": "Preface", "completion": "Follow us on Twitter: https://twitter.com/oreillymedia"}
{"prompt": "Preface", "completion": "Watch us on YouTube: https://www.youtube.com/oreillymedia"}
{"prompt": "Preface", "completion": "You can contact me, Andreas M. Antonopoulos, on my personal site: https://aantonop.com/"}
{"prompt": "Preface", "completion": "Information about Mastering Bitcoin as well as the Open Edition and translations are available on: https://bitcoinbook.info/"}
{"prompt": "Preface", "completion": "Follow me on Facebook: https://facebook.com/AndreasMAntonopoulos"}
{"prompt": "Preface", "completion": "Follow me on Twitter: https://twitter.com/aantonop"}
{"prompt": "Preface", "completion": "Follow me on LinkedIn: https://linkedin.com/company/aantonop"}
{"prompt": "Preface", "completion": "Many thanks to all my patrons who support my work through monthly donations. You can follow my Patreon page here: https://patreon.com/aantonop"}
{"prompt": "Preface", "completion": "This book represents the efforts and contributions of many people. I am grateful for all the help I received from friends, colleagues, and even complete strangers, who joined me in this effort to write the definitive technical book on cryptocurrencies and bitcoin."}
{"prompt": "Preface", "completion": "It is impossible to make a distinction between the bitcoin technology and the bitcoin community, and this book is as much a product of that community as it is a book on the technology. My work on this book was encouraged, cheered on, supported, and rewarded by the entire bitcoin community from the very beginning until the very end. More than anything, this book has allowed me to be part of a wonderful community for two years and I can\u2019t thank you enough for accepting me into this community. There are far too many people to mention by name\u2014people I\u2019ve met at conferences, events, seminars, meetups, pizza gatherings, and small private gatherings, as well as many who communicated with me by Twitter, on reddit, on bitcointalk.org, and on GitHub who have had an impact on this book. Every idea, analogy, question, answer, and explanation you find in this book was at some point inspired, tested, or improved through my interactions with the community. Thank you all for your support; without you this book would not have happened. I am forever grateful."}
{"prompt": "Preface", "completion": "The journey to becoming an author starts long before the first book, of course. My first language (and schooling) was Greek, so I had to take a remedial English writing course in my first year of university. I owe thanks to Diana Kordas, my English writing teacher, who helped me build confidence and skills that year. Later, as a professional, I developed my technical writing skills on the topic of data centers, writing for Network World magazine. I owe thanks to John Dix and John Gallant, who gave me my first writing job as a columnist at Network World and to my editor Michael Cooney and my colleague Johna Till Johnson who edited my columns and made them fit for publication. Writing 500 words a week for four years gave me enough experience to eventually consider becoming an author."}
{"prompt": "Preface", "completion": "Thanks also to those who supported me when I submitted my book proposal to O\u2019Reilly, by providing references and reviewing the proposal. Specifically, thanks to John Gallant, Gregory Ness, Richard Stiennon, Joel Snyder, Adam B. Levine, Sandra Gittlen, John Dix, Johna Till Johnson, Roger Ver, and Jon Matonis. Special thanks to Richard Kagan and Tymon Mattoszko, who reviewed early versions of the proposal and Matthew Taylor, who copyedited the proposal."}
{"prompt": "Preface", "completion": "Thanks to Cricket Liu, author of the O\u2019Reilly title DNS and BIND, who introduced me to O\u2019Reilly. Thanks also to Michael Loukides and Allyson MacDonald at O\u2019Reilly, who worked for months to help make this book happen. Allyson was especially patient when deadlines were missed and deliverables delayed as life intervened in our planned schedule. For the second edition, I thank Timothy McGovern for guiding the process, Kim Cofer for patiently editing, and Rebecca Panzer for illustrating many new diagrams."}
{"prompt": "Preface", "completion": "The first few drafts of the first few chapters were the hardest, because bitcoin is a difficult subject to unravel. Every time I pulled on one thread of the bitcoin technology, I had to pull on the whole thing. I repeatedly got stuck and a bit despondent as I struggled to make the topic easy to understand and create a narrative around such a dense technical subject. Eventually, I decided to tell the story of bitcoin through the stories of the people using bitcoin and the whole book became a lot easier to write. I owe thanks to my friend and mentor, Richard Kagan, who helped me unravel the story and get past the moments of writer\u2019s block. I thank Pamela Morgan, who reviewed early drafts of each chapter in the first and second edition of the book, and asked the hard questions to make them better. Also, thanks to the developers of the San Francisco Bitcoin Developers Meetup group as well as Taariq Lewis and Denise Terry for helping test the early material. Thanks also to Andrew Naugler for infographic design."}
{"prompt": "Preface", "completion": "During the development of the book, I made early drafts available on GitHub and invited public comments. More than a hundred comments, suggestions, corrections, and contributions were submitted in response. Those contributions are explicitly acknowledged, with my thanks, in [github_contrib]. Most of all, my sincere thanks to my volunteer GitHub editors Ming T. Nguyen (1st edition) and Will Binns (2nd edition), who worked tirelessly to curate, manage and resolve pull requests, issue reports, and perform bug fixes on GitHub."}
{"prompt": "Preface", "completion": "Once the book was drafted, it went through several rounds of technical review. Thanks to Cricket Liu and Lorne Lantz for their thorough review, comments, and support."}
{"prompt": "Preface", "completion": "Several bitcoin developers contributed code samples, reviews, comments, and encouragement. Thanks to Amir Taaki and Eric Voskuil for example code snippets and many great comments; Chris Kleeschulte for contributing the Bitcore appendix; Vitalik Buterin and Richard Kiss for help with elliptic curve math and code contributions; Gavin Andresen for corrections, comments, and encouragement; Michalis Kargakis for comments, contributions, and btcd writeup; and Robin Inge for errata submissions improving the second print. In the second edition, I again received a lot of help from many Bitcoin Core developers, including Eric Lombrozo who demystified Segregated Witness, Luke Dashjr who helped improve the chapter on transactions, Johnson Lau who reviewed Segregated Witness and other chapters, and many others. I owe thanks to Joseph Poon, Tadge Dryja, and Olaoluwa Osuntokun who explained Lightning Network, reviewed my writing, and answered questions when I got stuck."}
{"prompt": "Preface", "completion": "I owe my love of words and books to my mother, Theresa, who raised me in a house with books lining every wall. My mother also bought me my first computer in 1982, despite being a self-described technophobe. My father, Menelaos, a civil engineer who just published his first book at 80 years old, was the one who taught me logical and analytical thinking and a love of science and engineering."}
{"prompt": "Preface", "completion": "Thank you all for supporting me throughout this journey."}
{"prompt": "Preface", "completion": "github_contrib.asciidoc"}
{"prompt": "Quick Glossary", "completion": "This quick glossary contains many of the terms used in relation to bitcoin. These terms are used throughout the book, so bookmark this for a quick reference."}
{"prompt": "Quick Glossary", "completion": "A bitcoin address looks like 1DSrfJdB2AnWaFNgSbv3MZC2m74996JafV. It consists of a string of letters and numbers. It\u2019s really an encoded base58check version of a public key 160-bit hash. Just as you ask others to send an email to your email address, you would ask others to send you bitcoin to one of your bitcoin addresses."}
{"prompt": "Quick Glossary", "completion": "Bitcoin Improvement Proposals. A set of proposals that members of the bitcoin community have submitted to improve bitcoin. For example, BIP-21 is a proposal to improve the bitcoin uniform resource identifier (URI) scheme."}
{"prompt": "Quick Glossary", "completion": "The name of the currency unit (the coin), the network, and the software."}
{"prompt": "Quick Glossary", "completion": "A grouping of transactions, marked with a timestamp, and a fingerprint of the previous block. The block header is hashed to produce a proof of work, thereby validating the transactions. Valid blocks are added to the main blockchain by network consensus."}
{"prompt": "Quick Glossary", "completion": "A list of validated blocks, each linking to its predecessor all the way to the genesis block."}
{"prompt": "Quick Glossary", "completion": "An amount included in each new block as a reward by the network to the miner who found the Proof-of-Work solution. Approximately every four years, or more accurately every 210,000 blocks, the block reward is halved. It is currently 6.25 BTC per block."}
{"prompt": "Quick Glossary", "completion": "A reliable computer system must be able to cope with the failure of one or more of its components. A failed component may exhibit a type of behavior that is often overlooked\u2014namely, sending conflicting information to different parts of the system. The problem of coping with this type of failure is expressed abstractly as the Byzantine Generals Problem."}
{"prompt": "Quick Glossary", "completion": "A block that a miner is still trying to mine. It is not yet a valid block, because it does not contain a valid Proof-of-Work."}
{"prompt": "Quick Glossary", "completion": "A special field used as the sole input for coinbase transactions. The coinbase data field allows claiming the block reward and provides up to 100 bytes for arbitrary data. Not to be confused with coinbase transaction or coinbase reward."}
{"prompt": "Quick Glossary", "completion": "The first transaction in a block. Always created by a miner, it includes a single coinbase. Not to be confused with coinbase (coinbase data) or coinbase reward"}
{"prompt": "Quick Glossary", "completion": "Refers to keeping a reserve of bitcoin offline. Cold storage is achieved when bitcoin private keys are created and stored in a secure offline environment. Cold storage is important for anyone with bitcoin holdings. Online computers are vulnerable to hackers and should not be used to store a significant amount of bitcoin."}
{"prompt": "Quick Glossary", "completion": "Once a transaction is included in a block, it has one confirmation. As soon as another block is mined on the same blockchain, the transaction has two confirmations, and so on. Six or more confirmations is considered sufficient proof that a transaction cannot be reversed."}
{"prompt": "Quick Glossary", "completion": "When several nodes, usually most nodes on the network, all have the same blocks in their locally-validated best block chain. Not to be confused with consensus rules."}
{"prompt": "Quick Glossary", "completion": "The block validation rules that full nodes follow to stay in consensus with other nodes. Not to be confused with consensus."}
{"prompt": "Quick Glossary", "completion": "A network-wide setting that controls how much computation is required to produce a proof of work."}
{"prompt": "Quick Glossary", "completion": "A network-wide recalculation of the difficulty that occurs once every 2,016 blocks and considers the hashing power of the previous 2,016 blocks."}
{"prompt": "Quick Glossary", "completion": "A difficulty at which all the computation in the network will find blocks approximately every 10 minutes."}
{"prompt": "Quick Glossary", "completion": "Double spending is the result of successfully spending some money more than once. Bitcoin protects against double-spending by verifying each transaction added to the block chain to ensure that the inputs for the transaction had not previously already been spent."}
{"prompt": "Quick Glossary", "completion": "Elliptic Curve Digital Signature Algorithm or ECDSA is a cryptographic algorithm used by bitcoin to ensure that funds can only be spent by their rightful owners."}
{"prompt": "Quick Glossary", "completion": "As difficulty increased, miners often cycled through all 4 billion values of the nonce without finding a block. Because the coinbase script can store between 2 and 100 bytes of data, miners started using that space as extra nonce space, allowing them to explore a much larger range of block header values to find valid blocks."}
{"prompt": "Quick Glossary", "completion": "The sender of a transaction often includes a fee to the network for processing the requested transaction. Most transactions require a minimum fee of 0.5 mBTC."}
{"prompt": "Quick Glossary", "completion": "Fork, also known as accidental fork, occurs when two or more blocks have the same block height, forking the block chain. Typically occurs when two or more miners find blocks at nearly the same time. Can also happen as part of an attack."}
{"prompt": "Quick Glossary", "completion": "The first block in the blockchain, used to initialize the cryptocurrency."}
{"prompt": "Quick Glossary", "completion": "A halving event occurs when the block reward is cut in half, which happens approximately every four years (or precisely every 210,000 blocks). Bitcoin already had three halving events: in 2012 (from 50 to 25 BTC), in 2016 (from 25 to 12.5 BTC), and in 2020 (from 12.5 to 6.25 BTC)."}
{"prompt": "Quick Glossary", "completion": "Hard fork, also known as Hard-Forking Change, is a permanent divergence in the blockchain, commonly occurs when non-upgraded nodes can\u2019t validate blocks created by upgraded nodes that follow newer consensus rules. Not to be confused with fork, soft fork, software fork or Git fork."}
{"prompt": "Quick Glossary", "completion": "A hardware wallet is a special type of bitcoin wallet which stores the user\u2019s private keys in a secure hardware device."}
{"prompt": "Quick Glossary", "completion": "A digital fingerprint of some binary input."}
{"prompt": "Quick Glossary", "completion": "A hashlock is a type of encumbrance that restricts the spending of an output until a specified piece of data is publicly revealed. Hashlocks have the useful property that once any hashlock is opened publicly, any other hashlock secured using the same key can also be opened. This makes it possible to create multiple outputs that are all encumbered by the same hashlock and which all become spendable at the same time."}
{"prompt": "Quick Glossary", "completion": "The Hierarchical Deterministic (HD) key creation and transfer protocol (BIP-32), which allows creating child keys from parent keys in a hierarchy."}
{"prompt": "Quick Glossary", "completion": "Wallets using the Hierarchical Deterministic (HD Protocol) key creation and transfer protocol (BIP-32)."}
{"prompt": "Quick Glossary", "completion": "HD wallet seed or root seed is a potentially-short value used as a seed to generate the master private key and master chain code for an HD wallet."}
{"prompt": "Quick Glossary", "completion": "A Hashed TimeLock Contract or HTLC is a class of payments that use hashlocks and timelocks to require that the receiver of a payment either acknowledge receiving the payment prior to a deadline by generating cryptographic proof of payment or forfeit the ability to claim the payment, returning it to the payer."}
{"prompt": "Quick Glossary", "completion": "Know your customer (KYC) is the process of a business, identifying and verifying the identity of its clients. The term is also used to refer to the bank regulation which governs these activities."}
{"prompt": "Quick Glossary", "completion": "LevelDB is an open source on-disk key-value store. LevelDB is a light-weight, single-purpose library for persistence with bindings to many platforms."}
{"prompt": "Quick Glossary", "completion": "Lightning Network is an implementation of Hashed Timelock Contracts (HTLCs) with bi-directional payment channels which allows payments to be securely routed across multiple peer-to-peer payment channels. This allows the formation of a network where any peer on the network can pay any other peer even if they don\u2019t directly have a channel open between each other."}
{"prompt": "Quick Glossary", "completion": "Locktime, or more technically nLockTime, is the part of a transaction which indicates the earliest time or earliest block when that transaction may be added to the block chain."}
{"prompt": "Quick Glossary", "completion": "The bitcoin Mempool (memory pool) is a collection of all transaction data in a block that have been verified by bitcoin nodes, but are not yet confirmed."}
{"prompt": "Quick Glossary", "completion": "The root node of a merkle tree, a descendant of all the hashed pairs in the tree. Block headers must include a valid merkle root descended from all transactions in that block."}
{"prompt": "Quick Glossary", "completion": "A tree constructed by hashing paired data (the leaves), then pairing and hashing the results until a single hash remains, the merkle root. In bitcoin, the leaves are almost always transactions from a single block."}
{"prompt": "Quick Glossary", "completion": "A network node that finds valid proof of work for new blocks, by repeated hashing."}
{"prompt": "Quick Glossary", "completion": "The reward miners receive in return for the security provided by mining. Includes the new coins created with each new block, also known as a block reward or coinbase reward, and the transaction fees from all the transactions included in the block."}
{"prompt": "Quick Glossary", "completion": "Multisignature (multisig) refers to requiring a minimum number (M) of keys (N) to authorize an M-of-N transaction."}
{"prompt": "Quick Glossary", "completion": "A peer-to-peer network that propagates transactions and blocks to every bitcoin node on the network."}
{"prompt": "Quick Glossary", "completion": "The \"nonce\" in a bitcoin block is a 32-bit (4-byte) field whose value is set so that the hash of the block will contain a run of leading zeros. The rest of the fields may not be changed, as they have a defined meaning."}
{"prompt": "Quick Glossary", "completion": "An off-chain transaction is the movement of value outside of the block chain. While an on-chain transaction\u2014usually referred to as simply a transaction\u2014modifies the blockchain and depends on the blockchain to determine its validity an off-chain transaction relies on other methods to record and validate the transaction."}
{"prompt": "Quick Glossary", "completion": "Operation codes from the bitcoin Script language which push data or perform functions within a pubkey script or signature script."}
{"prompt": "Quick Glossary", "completion": "The Open Assets Protocol is a simple and powerful protocol built on top of the bitcoin blockchain. It allows issuance and transfer of user-created assets."}
{"prompt": "Quick Glossary", "completion": "An opcode used in one of the outputs in an OP_RETURN transaction. Not to be confused with OP_RETURN transaction."}
{"prompt": "Quick Glossary", "completion": "A transaction type that adds arbitrary data to a provably unspendable pubkey script that full nodes don\u2019t have to store in their UTXO database. Not to be confused with OP_RETURN opcode."}
{"prompt": "Quick Glossary", "completion": "Blocks whose parent block has not been processed by the local node, so they can\u2019t be fully validated yet. Not to be confused with stale block."}
{"prompt": "Quick Glossary", "completion": "Transactions that can\u2019t go into the pool due to one or more missing input transactions."}
{"prompt": "Quick Glossary", "completion": "Output, transaction output, or TxOut is an output in a transaction which contains two fields: a value field for transferring zero or more satoshis and a pubkey script for indicating what conditions must be fulfilled for those satoshis to be further spent."}
{"prompt": "Quick Glossary", "completion": "Transactions that pay a bitcoin address contain P2PKH or Pay To PubKey Hash scripts. An output locked by a P2PKH script can be unlocked (spent) by presenting a public key and a digital signature created by the corresponding private key."}
{"prompt": "Quick Glossary", "completion": "P2SH or Pay-to-Script-Hash is a powerful new type of transaction that greatly simplifies the use of complex transaction scripts. With P2SH the complex script that details the conditions for spending the output (redeem script) is not presented in the locking script. Instead, only a hash of it is in the locking script."}
{"prompt": "Quick Glossary", "completion": "P2SH addresses are Base58Check encodings of the 20-byte hash of a script. They use the version prefix \"5\", which results in Base58Check-encoded addresses that start with a \"3\". P2SH addresses hide all of the complexity, so that the person making a payment does not see the script."}
{"prompt": "Quick Glossary", "completion": "The signature of a P2WPKH (Pay-to-Witness-Public-Key-Hash) contains the same information as a P2PKH spending, but is located in the witness field instead of the scriptSig field. The scriptPubKey is also modified."}
{"prompt": "Quick Glossary", "completion": "The difference between P2SH and P2WSH (Pay-to-Witness-Script-Hash) is about the cryptographic proof location change from the scriptSig field to the witness field and the scriptPubKey that is also modified."}
{"prompt": "Quick Glossary", "completion": "In the most specific sense, a paper wallet is a document containing all of the data necessary to generate any number of bitcoin private keys, forming a wallet of keys. However, people often use the term to mean any way of storing bitcoin offline as a physical document. This second definition also includes paper keys and redeemable codes."}
{"prompt": "Quick Glossary", "completion": "A passphrase is an optional string created by the user that serves as an additional security factor protecting the seed, even when the seed is compromised by a thief. It can also be used as a form of plausible deniability, where a chosen passphrase leads to a wallet with a small amount of funds used to distract an attacker from the \u201creal\u201d wallet that contains the majority of funds."}
{"prompt": "Quick Glossary", "completion": "A micropayment channel or payment channel is a class of techniques designed to allow users to make multiple bitcoin transactions without committing all of the transactions to the bitcoin blockchain. In a typical payment channel, only two transactions are added to the block chain but an unlimited or nearly unlimited number of payments can be made between the participants."}
{"prompt": "Quick Glossary", "completion": "Pooled mining is a mining approach where multiple generating clients contribute to the generation of a block, and then split the block reward according the contributed processing power."}
{"prompt": "Quick Glossary", "completion": "Proof-of-Stake (PoS) is a method by which a cryptocurrency blockchain network aims to achieve distributed consensus. Proof-of-Stake asks users to prove ownership of a certain amount of currency (their \"stake\" in the currency)."}
{"prompt": "Quick Glossary", "completion": "A piece of data that requires significant computation to find. In bitcoin, miners must find a numeric solution to the SHA256 algorithm that meets a network-wide target, the difficulty target."}
{"prompt": "Quick Glossary", "completion": "RIPEMD-160 is a 160-bit cryptographic hash function. RIPEMD-160 is a strengthened version of RIPEMD with a 160-bit hash result, and is expected to be secure for the next ten years or more."}
{"prompt": "Quick Glossary", "completion": "A satoshi is the smallest denomination of bitcoin that can be recorded on the blockchain. It is the equivalent of 0.00000001 bitcoin and is named after the creator of bitcoin, Satoshi Nakamoto."}
{"prompt": "Quick Glossary", "completion": "Satoshi Nakamoto is the name used by the person or people who designed bitcoin and created its original reference implementation, Bitcoin Core. As a part of the implementation, they also devised the first blockchain database. In the process they were the first to solve the double-spending problem for digital currency. Their real identity remains unknown."}
{"prompt": "Quick Glossary", "completion": "Bitcoin uses a scripting system for transactions. Forth-like, Script is simple, stack-based, and processed from left to right. It is purposefully not Turing-complete, with no loops."}
{"prompt": "Quick Glossary", "completion": "ScriptPubKey or pubkey script, is a script included in outputs which sets the conditions that must be fulfilled for those satoshis to be spent. Data for fulfilling the conditions can be provided in a signature script."}
{"prompt": "Quick Glossary", "completion": "ScriptSig or signature script, is the data generated by a spender which is almost always used as variables to satisfy a pubkey script."}
{"prompt": "Quick Glossary", "completion": "The secret number that unlocks bitcoin sent to the corresponding address. A secret key looks like the following:"}
{"prompt": "Quick Glossary", "completion": "Segregated Witness is an upgrade to the Bitcoin protocol in which signature (\"witness\") data is separated from sender/receiver data to further optimize the structure of transactions. Segregated Witness was implemented as a soft fork; a change that technically makes bitcoin\u2019s protocol rules more restrictive."}
{"prompt": "Quick Glossary", "completion": "The Secure Hash Algorithm or SHA is a family of cryptographic hash functions published by the National Institute of Standards and Technology (NIST)."}
{"prompt": "Quick Glossary", "completion": "SPV or simplified payment verification is a method for verifying that particular transactions were included in a block, without downloading the entire block. This method of verification is often used by lightweight bitcoin clients."}
{"prompt": "Quick Glossary", "completion": "soft fork or Soft-Forking Change is a temporary fork in the blockchain which commonly occurs when miners using non-upgraded nodes don\u2019t follow a new consensus rule their nodes don\u2019t know about. Not to be confused with fork, hard fork, software fork or Git fork."}
{"prompt": "Quick Glossary", "completion": "A valid block that was successfully mined but that isn\u2019t included on the current main branch (with most cumulative Proof-of-Work), because some other valid block that was mined at the same height had its chain extended first. The miner of a stale block doesn\u2019t get the block reward or the transactions fees of this block. Not to be confused with orphan block or candidate block."}
{"prompt": "Quick Glossary", "completion": "A timelock is a type of encumbrance that restricts the spending of some bitcoin until a specified future time or block height. Timelocks feature prominently in many bitcoin contracts, including payment channels and hashed timelock contracts."}
{"prompt": "Quick Glossary", "completion": "In simple terms, a transfer of bitcoin from one address to another. More precisely, a transaction is a signed data structure expressing a transfer of value. Transactions are transmitted over the bitcoin network, collected by miners, and included into blocks, made permanent on the blockchain."}
{"prompt": "Quick Glossary", "completion": "An unordered collection of transactions that are not in blocks in the main chain, but for which we have input transactions."}
{"prompt": "Quick Glossary", "completion": "A programming language is called \"Turing complete\" if it can run any program that a Turing machine can run, given enough time and memory."}
{"prompt": "Quick Glossary", "completion": "UTXO is an unspent transaction output that can be spent as an input in a new transaction."}
{"prompt": "Quick Glossary", "completion": "Software that holds all your bitcoin addresses and secret keys. Use it to send, receive, and store your bitcoin."}
{"prompt": "Quick Glossary", "completion": "WIF or Wallet Import Format is a data interchange format designed to allow exporting and importing a single private key with a flag indicating whether or not it uses a compressed public key."}
{"prompt": "Quick Glossary", "completion": "Some contributed definitions have been sourced under a CC-BY license from the bitcoin Wiki or from other open source documentation sources."}
{"prompt": "Introduction", "completion": "Bitcoin is a collection of concepts and technologies that form the basis of a digital money ecosystem. Units of currency called bitcoin are used to store and transmit value among participants in the bitcoin network. Bitcoin users communicate with each other using the bitcoin protocol primarily via the internet, although other transport networks can also be used. The bitcoin protocol stack, available as open source software, can be run on a wide range of computing devices, including laptops and smartphones, making the technology easily accessible."}
{"prompt": "Introduction", "completion": "Users can transfer bitcoin over the network to do just about anything that can be done with conventional currencies, including buying and selling goods, sending money to people or organizations, or extending credit. Bitcoin can be purchased, sold, and exchanged for other currencies at specialized currency exchanges. Bitcoin in a sense is the perfect form of money for the internet because it is fast, secure, and borderless."}
{"prompt": "Introduction", "completion": "Unlike traditional currencies, bitcoin is entirely virtual. There are no physical coins or even digital coins per se. The coins are implied in transactions that transfer value from sender to recipient. Users of bitcoin own keys that allow them to prove ownership of bitcoin in the bitcoin network. With these keys, they can sign transactions to unlock the value and spend it by transferring it to a new owner. Keys are often stored in a digital wallet on each user\u2019s computer or smartphone. Possession of the key that can sign a transaction is the only prerequisite to spending bitcoin, putting the control entirely in the hands of each user."}
{"prompt": "Introduction", "completion": "Bitcoin is a distributed, peer-to-peer system. As such, there is no \"central\" server or point of control. Bitcoins, i.e. units of bitcoin, are created through a process called \"mining,\" which involves competing to find solutions to a mathematical problem while processing bitcoin transactions. Any participant in the bitcoin network (i.e., anyone using a device running the full bitcoin protocol stack) may operate as a miner, using their computer\u2019s processing power to verify and record transactions. Every 10 minutes, on average, a bitcoin miner can validate the transactions of the past 10 minutes and is rewarded with brand new bitcoin. Essentially, bitcoin mining decentralizes the currency-issuance and clearing functions of a central bank and replaces the need for any central bank."}
{"prompt": "Introduction", "completion": "The bitcoin protocol includes built-in algorithms that regulate the mining function across the network. The difficulty of the processing task that miners must perform is adjusted dynamically so that, on average, someone succeeds every 10 minutes regardless of how many miners (and how much processing) are competing at any moment. The protocol also halves the rate at which new bitcoin is created every 4 years, and limits the total number of bitcoin that will be created to a fixed total just below 21 million coins. The result is that the number of bitcoin in circulation closely follows an easily predictable curve that approaches 21 million by the year 2140. Due to bitcoin\u2019s diminishing rate of issuance, over the long term, the bitcoin currency is deflationary. Furthermore, bitcoin cannot be inflated by \"printing\" new money above and beyond the expected issuance rate."}
{"prompt": "Introduction", "completion": "Behind the scenes, bitcoin is also the name of the protocol, a peer-to-peer network, and a distributed computing innovation. The bitcoin currency is really only the first application of this invention. Bitcoin represents the culmination of decades of research in cryptography and distributed systems and includes four key innovations brought together in a unique and powerful combination. Bitcoin consists of:"}
{"prompt": "Introduction", "completion": "A decentralized peer-to-peer network (the bitcoin protocol)"}
{"prompt": "Introduction", "completion": "A public transaction ledger (the blockchain)"}
{"prompt": "Introduction", "completion": "A set of rules for independent transaction validation and currency issuance (consensus rules)"}
{"prompt": "Introduction", "completion": "A mechanism for reaching global decentralized consensus on the valid blockchain (Proof-of-Work algorithm)"}
{"prompt": "Introduction", "completion": "As a developer, I see bitcoin as akin to the internet of money, a network for propagating value and securing the ownership of digital assets via distributed computation. There\u2019s a lot more to bitcoin than first meets the eye."}
{"prompt": "Introduction", "completion": "In this chapter we\u2019ll get started by explaining some of the main concepts and terms, getting the necessary software, and using bitcoin for simple transactions. In the following chapters, we\u2019ll start unwrapping the layers of technology that make bitcoin possible and examine the inner workings of the bitcoin network and protocol."}
{"prompt": "Introduction", "completion": "The emergence of viable digital money is closely linked to developments in cryptography. This is not surprising when one considers the fundamental challenges involved with using bits to represent value that can be exchanged for goods and services. Three basic questions for anyone accepting digital money are:"}
{"prompt": "Introduction", "completion": "Can I trust that the money is authentic and not counterfeit?"}
{"prompt": "Introduction", "completion": "Can I trust that the digital money can only be spent once (known as the \u201cdouble-spend\u201d problem)?"}
{"prompt": "Introduction", "completion": "Can I be sure that no one else can claim this money belongs to them and not me?"}
{"prompt": "Introduction", "completion": "Issuers of paper money are constantly battling the counterfeiting problem by using increasingly sophisticated papers and printing technology. Physical money addresses the double-spend issue easily because the same paper note cannot be in two places at once. Of course, conventional money is also often stored and transmitted digitally. In these cases, the counterfeiting and double-spend issues are handled by clearing all electronic transactions through central authorities that have a global view of the currency in circulation. For digital money, which cannot take advantage of esoteric inks or holographic strips, cryptography provides the basis for trusting the legitimacy of a user\u2019s claim to value. Specifically, cryptographic digital signatures enable a user to sign a digital asset or transaction proving the ownership of that asset. With the appropriate architecture, digital signatures also can be used to address the double-spend issue."}
{"prompt": "Introduction", "completion": "When cryptography started becoming more broadly available and understood in the late 1980s, many researchers began trying to use cryptography to build digital currencies. These early digital currency projects issued digital money, usually backed by a national currency or precious metal such as gold."}
{"prompt": "Introduction", "completion": "Although these earlier digital currencies worked, they were centralized and, as a result, were easy to attack by governments and hackers. Early digital currencies used a central clearinghouse to settle all transactions at regular intervals, just like a traditional banking system. Unfortunately, in most cases, these nascent digital currencies were targeted by worried governments and eventually litigated out of existence. Some failed in spectacular crashes when the parent company liquidated abruptly. To be robust against intervention by antagonists, whether legitimate governments or criminal elements, a decentralized digital currency was needed to avoid a single point of attack. Bitcoin is such a system, decentralized by design, and free of any central authority or point of control that can be attacked or corrupted."}
{"prompt": "Introduction", "completion": "Bitcoin was invented in 2008 with the publication of a paper titled \"Bitcoin: A Peer-to-Peer Electronic Cash System,\"[1] written under the alias of Satoshi Nakamoto (see [satoshi_whitepaper]). Nakamoto combined several prior inventions such as b-money and HashCash to create a completely decentralized electronic cash system that does not rely on a central authority for currency issuance or settlement and validation of transactions. The key innovation was to use a distributed computation system (called a \"Proof-of-Work\" algorithm) to conduct a global \"election\" every 10 minutes, allowing the decentralized network to arrive at consensus about the state of transactions. This elegantly solves the issue of double-spend where a single currency unit can be spent twice. Previously, the double-spend problem was a weakness of digital currency and was addressed by clearing all transactions through a central clearinghouse."}
{"prompt": "Introduction", "completion": "The bitcoin network started in 2009, based on a reference implementation published by Nakamoto and since revised by many other programmers. The implementation of the Proof-of-Work algorithm (mining) that provides security and resilience for bitcoin has increased in power exponentially, and now exceeds the combined processing power of the world\u2019s top supercomputers. Bitcoin\u2019s total market value has at times exceeded $1 trillion US dollars, depending on the bitcoin-to-dollar exchange rate. The largest transaction processed so far by the network was $1.1 billion US dollars, transmitted instantly and processed for a fee of only $0.68."}
{"prompt": "Introduction", "completion": "Satoshi Nakamoto withdrew from the public in April 2011, leaving the responsibility of developing the code and network to a thriving group of volunteers. The identity of the person or people behind bitcoin is still unknown. However, neither Satoshi Nakamoto nor anyone else exerts individual control over the bitcoin system, which operates based on fully transparent mathematical principles, open source code, and consensus among participants. The invention itself is groundbreaking and has already spawned new science in the fields of distributed computing, economics, and econometrics."}
{"prompt": "Introduction", "completion": "Satoshi Nakamoto\u2019s invention is also a practical and novel solution to a problem in distributed computing, known as the \"Byzantine Generals' Problem.\" Briefly, the problem consists of trying to agree on a course of action or the state of a system by exchanging information over an unreliable and potentially compromised network. Satoshi Nakamoto\u2019s solution, which uses the concept of Proof-of-Work to achieve consensus without a central trusted authority, represents a breakthrough in distributed computing and has wide applicability beyond currency. It can be used to achieve consensus on decentralized networks to prove the fairness of elections, lotteries, asset registries, digital notarization, and more."}
{"prompt": "Introduction", "completion": "Bitcoin is an innovation in the ancient technology of money. At its core, money simply facilitates the exchange of value between people. Therefore, in order to fully understand bitcoin and its uses, we\u2019ll examine it from the perspective of people using it. Each of the people and their stories, as listed here, illustrates one or more specific use cases. We\u2019ll be seeing them throughout the book:"}
{"prompt": "Introduction", "completion": "Alice lives in Northern California\u2019s Bay Area. She has heard about bitcoin from her techie friends and wants to start using it. We will follow her story as she learns about bitcoin, acquires some, and then spends some of her bitcoin to buy a cup of coffee at Bob\u2019s Cafe in Palo Alto. This story will introduce us to the software, the exchanges, and basic transactions from the perspective of a retail consumer."}
{"prompt": "Introduction", "completion": "Carol is an art gallery owner in San Francisco. She sells expensive paintings for bitcoin. This story will introduce the risks of a \"51%\" consensus attack for retailers of high-value items."}
{"prompt": "Introduction", "completion": "Bob, the cafe owner in Palo Alto, is building a new website. He has contracted with an Indian web developer, Gopesh, who lives in Bangalore, India. Gopesh has agreed to be paid in bitcoin. This story will examine the use of bitcoin for outsourcing, contract services, and international wire transfers."}
{"prompt": "Introduction", "completion": "Gabriel is an enterprising young teenager in Rio de Janeiro, running a small web store that sells bitcoin-branded t-shirts, coffee mugs, and stickers. Gabriel is too young to have a bank account, but his parents are encouraging his entrepreneurial spirit."}
{"prompt": "Introduction", "completion": "Eugenia is the director of a children\u2019s charity in the Philippines. Recently she has discovered bitcoin and wants to use it to reach a whole new group of foreign and domestic donors to fundraise for her charity. She\u2019s also investigating ways to use bitcoin to distribute funds quickly to areas of need. This story will show the use of bitcoin for global fundraising across currencies and borders and the use of an open ledger for transparency in charitable organizations."}
{"prompt": "Introduction", "completion": "Mohammed is an electronics importer in Dubai. He\u2019s trying to use bitcoin to buy electronics from the United States and China for import into the UAE to accelerate the process of payments for imports. This story will show how bitcoin can be used for large business-to-business international payments tied to physical goods."}
{"prompt": "Introduction", "completion": "Jing is a computer engineering student in Shanghai. He has built a \"mining\" rig to mine for bitcoin using his engineering skills to supplement his income. This story will examine the \"industrial\" base of bitcoin: the specialized equipment used to secure the bitcoin network and issue new currency."}
{"prompt": "Introduction", "completion": "Each of these stories is based on the real people and real industries currently using bitcoin to create new markets, new industries, and innovative solutions to global economic issues."}
{"prompt": "Introduction", "completion": "Bitcoin is a protocol that can be accessed using a client application that speaks the protocol. A \"bitcoin wallet\" is the most common user interface to the bitcoin system, just like a web browser is the most common user interface for the HTTP protocol. There are many implementations and brands of bitcoin wallets, just like there are many brands of web browsers (e.g., Chrome, Safari, Firefox, and Internet Explorer). And just like we all have our favorite browsers (Mozilla Firefox, Yay!) and our villains (Internet Explorer, Yuck!), bitcoin wallets vary in quality, performance, security, privacy, and reliability. There is also a reference implementation of the bitcoin protocol that includes a wallet, known as the \"Satoshi Client\" or \"Bitcoin Core,\" which is derived from the original implementation written by Satoshi Nakamoto."}
{"prompt": "Introduction", "completion": "Bitcoin wallets are one of the most actively developed applications in the bitcoin ecosystem. There is intense competition, and while a new wallet is probably being developed right now, several wallets from last year are no longer actively maintained. Many wallets focus on specific platforms or specific uses and some are more suitable for beginners while others are filled with features for advanced users. Choosing a wallet is highly subjective and depends on the use and user expertise. Therefore it would be pointless to recommend a specific brand or wallet. However, we can categorize bitcoin wallets according to their platform and function and provide some clarity about all the different types of wallets that exist. Better yet, moving keys or seeds between bitcoin wallets is relatively easy, so it is worth trying out several different wallets until you find one that fits your needs."}
{"prompt": "Introduction", "completion": "Bitcoin wallets can be categorized as follows, according to the platform:"}
{"prompt": "Introduction", "completion": "A desktop wallet was the first type of bitcoin wallet created as a reference implementation and many users run desktop wallets for the features, autonomy, and control they offer. Running on general-use operating systems such as Windows and Mac OS has certain security disadvantages, however, as these platforms are often insecure and poorly configured."}
{"prompt": "Introduction", "completion": "A mobile wallet is the most common type of bitcoin wallet. Running on smart-phone operating systems such as Apple iOS and Android, these wallets are often a great choice for new users. Many are designed for simplicity and ease-of-use, but there are also fully featured mobile wallets for power users."}
{"prompt": "Introduction", "completion": "Web wallets are accessed through a web browser and store the user\u2019s wallet on a server owned by a third party. This is similar to webmail in that it relies entirely on a third-party server. Some of these services operate using client-side code running in the user\u2019s browser, which keeps control of the bitcoin keys in the hands of the user. Most, however, present a compromise by taking control of the bitcoin keys from users in exchange for ease-of-use. It is inadvisable to store large amounts of bitcoin on third-party systems."}
{"prompt": "Introduction", "completion": "Hardware wallets are devices that operate a secure self-contained bitcoin wallet on special-purpose hardware. They usually connect to a desktop or mobile device via USB cable or near-field-communication (NFC), and are operated with a web browser or accompanying software. By handling all bitcoin-related operations on the specialized hardware, these wallets are considered very secure and suitable for storing large amounts of bitcoin."}
{"prompt": "Introduction", "completion": "The keys controlling bitcoin can also be printed for long-term storage. These are known as paper wallets even though other materials (wood, metal, etc.) can be used. Paper wallets offer a low-tech but highly secure means of storing bitcoin long term. Offline storage is also often referred to as cold storage."}
{"prompt": "Introduction", "completion": "Another way to categorize bitcoin wallets is by their degree of autonomy and how they interact with the bitcoin network:"}
{"prompt": "Introduction", "completion": "A full client, or \"full node,\" is a client that stores the entire history of bitcoin transactions (every transaction by every user, ever), manages users' wallets, and can initiate transactions directly on the bitcoin network. A full node handles all aspects of the protocol and can independently validate the entire blockchain and any transaction. A full-node client consumes substantial computer resources (e.g., more than 125 GB of disk, 2 GB of RAM) but offers complete autonomy and independent transaction verification."}
{"prompt": "Introduction", "completion": "A lightweight client, also known as a simplified-payment-verification (SPV) client, connects to bitcoin full nodes (mentioned previously) for access to the bitcoin transaction information, but stores the user wallet locally and independently creates, validates, and transmits transactions. Lightweight clients interact directly with the bitcoin network, without an intermediary."}
{"prompt": "Introduction", "completion": "A third-party API client is one that interacts with bitcoin through a third-party system of application programming interfaces (APIs), rather than by connecting to the bitcoin network directly. The wallet may be stored by the user or by third-party servers, but all transactions go through a third party."}
{"prompt": "Introduction", "completion": "Combining these categorizations, many bitcoin wallets fall into a few groups, with the three most common being desktop full client, mobile lightweight wallet, and web third-party wallet. The lines between different categories are often blurry, as many wallets run on multiple platforms and can interact with the network in different ways."}
{"prompt": "Introduction", "completion": "For the purposes of this book, we will be demonstrating the use of a variety of downloadable bitcoin clients, from the reference implementation (Bitcoin Core) to mobile and web wallets. Some of the examples will require the use of Bitcoin Core, which, in addition to being a full client, also exposes APIs to the wallet, network, and transaction services. If you are planning to explore the programmatic interfaces into the bitcoin system, you will need to run Bitcoin Core, or one of the alternative clients."}
{"prompt": "Introduction", "completion": "Alice, who we introduced in Bitcoin Uses, Users, and Their Stories, is not a technical user and only recently heard about bitcoin from her friend Joe. While at a party, Joe is once again enthusiastically explaining bitcoin to all around him and is offering a demonstration. Intrigued, Alice asks how she can get started with bitcoin. Joe says that a mobile wallet is best for new users and he recommends a few of his favorite wallets. Alice downloads \"Bluewallet\" (available for iOS and Android) and installs it on her phone."}
{"prompt": "Introduction", "completion": "When Alice runs her wallet application for the first time, she chooses the option to create a new Bitcoin wallet, and takes a moment away from Joe and all other parties to write down a secret mnemonic phrase in order on a piece of paper. As explained by the mobile wallet and by Joe earlier, the mnemonic phrase allows Alice to restore her wallet in case she loses her mobile device and grants her access to her funds on another device. After creating her wallet and securing her mnemonic phrase, Alice can tap on her wallet to see her bitcoin amount, transaction history, as well as two buttons that allow her to either receive or send bitcoin, shown in Alice uses the Receive screen on her Bluewallet mobile bitcoin wallet, and displays her address to Bob in a QR code format."}
{"prompt": "Introduction", "completion": "A modern bitcoin wallet will provide a mnemonic phrase (also sometimes called a \"seed\" or \"seed phrase\") for Alice to back up. The mnemonic phrase consists of 12-24 English words, selected randomly by the software, and used as the basis for the keys that are generated by the wallet. The mnemonic phrase can be used by Alice to restore all the transactions and funds in her wallet in the case of an event such as a lost mobile device, a software bug, or memory corruption."}
{"prompt": "Introduction", "completion": "The correct term for these backup words is \"mnemonic phrase\". We avoid the use of the term \"seed\" to refer to a mnemonic phrase, because even though its use is common it is incorrect."}
{"prompt": "Introduction", "completion": "Alice needs to be careful to store the mnemonic phrase in a way that balances the need to prevent theft and accidental loss. If she doesn\u2019t protect it enough, her mnemonic will be at risk of being stolen. If she protects it too much, her mnemonic will be at risk of being permanently lost. The recommended way to properly balance these risks is to write two copies of the mnemonic phrase on paper, with each of the words numbered as the order matters."}
{"prompt": "Introduction", "completion": "Once Alice has recorded the mnemonic phrase, she should plan to store each copy in a separate secure location such as a locked desk drawer or a fireproof safe."}
{"prompt": "Introduction", "completion": "Never attempt a \"DIY\" security scheme that deviates in any way from the best practice recommendation in Storing the Mnemonic Safely. Do not cut your mnemonic in half, make screenshots, store on USB drives, email or cloud drives, encrypt it, or try any other non-standard method. You will tip the balance in such a way as to risk permanent loss or theft. Many people have lost funds, not from theft but because they tried a non-standard solution without having the expertise to balance the risks involved. The best practice recommendation is carefully balanced by experts and suitable for the vast majority of users."}
{"prompt": "Introduction", "completion": "The main wallet view displays the bitcoin amount, transaction history, and Receive and Send buttons. In addition, many wallets feature the ability to purchase Bitcoin directly through an exchange or similar service where you can offer fiat money in return for cryptocurrency, which is done by [bitcoin_price] and selling to the wallet user at or above this price. The Buy Bitcoin button would allow Alice to purchase Bitcoin in this fashion."}
{"prompt": "Introduction", "completion": "Alice is now ready to start using her new bitcoin wallet. Her wallet application randomly generated a private key (described in more detail in [private_keys]) which will be used to derive bitcoin addresses that direct to her wallet. At this point, her bitcoin addresses are not known to the bitcoin network or \"registered\" with any part of the bitcoin system. Her bitcoin addresses are simply random numbers that correspond to her private key that she can use to control access to the funds. The addresses are generated independently by her wallet without reference or registration with any service. In fact, in most wallets, there is no association between a bitcoin address and any externally identifiable information including the user\u2019s identity. Until the moment an address is referenced as the recipient of value in a transaction posted on the bitcoin ledger, the bitcoin address is simply part of the vast number of possible addresses that are valid in bitcoin. Only once an address has been associated with a transaction does it become part of the known addresses in the network."}
{"prompt": "Introduction", "completion": "Alice uses the Receive button, which displays a QR code along with a bitcoin address. The QR code is the square with a pattern of black and white dots, serving as a form of barcode that contains the same information in a format that can be scanned by Joe\u2019s smartphone camera. Next to the wallet\u2019s QR code is the bitcoin address it encodes, and Alice may choose to manually send her address to Joe by copying it onto her clipboard with a tap. Of note, when receiving funds to a new mobile wallet for the first time, many wallets will often re-verify that you have indeed secured your mnemonic phrase. This can range from a simple prompt to requiring the user to manually re-enter the phrase."}
{"prompt": "Introduction", "completion": "Bitcoin addresses start with 1, 3, or bc1. Like email addresses, they can be shared with other bitcoin users who can use them to send bitcoin directly to your wallet. There is nothing sensitive, from a security perspective, about the bitcoin address. It can be posted anywhere without risking the security of the account. Unlike email addresses, you can create new addresses as often as you like, all of which will direct funds to your wallet. In fact, many modern wallets automatically create a new address for every transaction to maximize privacy. A wallet is simply a collection of addresses and the keys that unlock the funds within."}
{"prompt": "Introduction", "completion": "==== Getting Her First Bitcoin"}
{"prompt": "Introduction", "completion": "There are several ways Alice can acquire bitcoin:"}
{"prompt": "Introduction", "completion": "She can exchange some of her national currency (e.g. USD) at a cryptocurrency exchange"}
{"prompt": "Introduction", "completion": "She can buy some from a friend, or an acquaintance from a Bitcoin Meetup, in exchange for cash"}
{"prompt": "Introduction", "completion": "She can find a Bitcoin ATM in her area, which acts as a vending machine, selling bitcoin for cash"}
{"prompt": "Introduction", "completion": "She can offer her skills or a product she sells and accepts payment in bitcoin"}
{"prompt": "Introduction", "completion": "She can ask her employer or clients to pay her in bitcoin"}
{"prompt": "Introduction", "completion": "All of these methods have varying degrees of difficulty, and many will involve paying a fee. Some financial institutions will also require Alice to provide identification documents to comply with local banking regulations/anti-money laundering (AML) practices, a process which is known as Know Your Customer (KYC). However, with all these methods, Alice will be able to receive bitcoin."}
{"prompt": "Introduction", "completion": "One of the advantages of bitcoin over other payment systems is that, when used correctly, it affords users much more privacy. Acquiring, holding, and spending bitcoin does not require you to divulge sensitive and personally identifiable information to third parties. However, where bitcoin touches traditional systems, such as currency exchanges, national and international regulations often apply. In order to exchange bitcoin for your national currency, you will often be required to provide proof of identity and banking information. Users should be aware that once a bitcoin address is attached to an identity, all associated bitcoin transactions are also easy to identify and track. This is one reason many users choose to maintain dedicated exchange accounts unlinked to their wallets."}
{"prompt": "Introduction", "completion": "Alice was introduced to bitcoin by a friend so she has an easy way to acquire her first bitcoin. Next, we will look at how she buys bitcoin from her friend Joe and how Joe sends the bitcoin to her wallet."}
{"prompt": "Introduction", "completion": "==== Finding the Current Price of Bitcoin"}
{"prompt": "Introduction", "completion": "Before Alice can buy bitcoin from Joe, they have to agree on the exchange rate between bitcoin and US dollars. This brings up a common question for those new to bitcoin: \"Who sets the bitcoin price?\" The short answer is that the price is set by markets."}
{"prompt": "Introduction", "completion": "Bitcoin, like most other currencies, has a floating exchange rate. That means that the value of bitcoin vis-a-vis any other currency fluctuates according to supply and demand in the various markets where it is traded. For example, the \"price\" of bitcoin in US dollars is calculated in each market based on the most recent trade of bitcoin and US dollars. As such, the price tends to fluctuate minutely several times per second. A pricing service will aggregate the prices from several markets and calculate a volume-weighted average representing the broad market exchange rate of a currency pair (e.g., BTC/USD)."}
{"prompt": "Introduction", "completion": "There are hundreds of applications and websites that can provide the current market rate. Here are some of the most popular:"}
{"prompt": "Introduction", "completion": "A site that provides a simple view of the volume-weighted-average for each currency."}
{"prompt": "Introduction", "completion": "A service listing the market capitalization and exchange rates of hundreds of crypto-currencies, including bitcoin."}
{"prompt": "Introduction", "completion": "A reference rate that can be used for institutional and contractual reference, provided as part of investment data feeds by the CME."}
{"prompt": "Introduction", "completion": "In addition to these various sites and applications, most bitcoin wallets will automatically convert amounts between bitcoin and other currencies. Joe will use his wallet to convert the price automatically before sending bitcoin to Alice."}
{"prompt": "Introduction", "completion": "==== Sending and Receiving Bitcoin"}
{"prompt": "Introduction", "completion": "Alice has decided to exchange $10 US dollars for bitcoin, so as not to risk too much money on this new technology. She gives Joe $10 in cash, opens her Bluewallet mobile wallet application, and selects Receive. This displays a QR code with Alice\u2019s first bitcoin address."}
{"prompt": "Introduction", "completion": "Joe then selects Send on his Bluewallet smartphone wallet and is presented with a screen containing the following inputs:"}
{"prompt": "Introduction", "completion": "The amount to send, in bitcoin (BTC) or his local currency (USD)"}
{"prompt": "Introduction", "completion": "A destination bitcoin address"}
{"prompt": "Introduction", "completion": "A transaction note (description)"}
{"prompt": "Introduction", "completion": "A transaction fee"}
{"prompt": "Introduction", "completion": "In the input field for the bitcoin address, there is a small Scan button. This allows Joe to scan the QR code with his smartphone camera so that he doesn\u2019t have to type in Alice\u2019s bitcoin address, which is quite long and difficult to type. Joe taps the Scan button and it activates the smartphone camera, scanning the QR code displayed on Alice\u2019s smartphone."}
{"prompt": "Introduction", "completion": "Joe now has Alice\u2019s bitcoin address set as the recipient. Joe enters the amount as $10 US dollars and his wallet converts it by accessing the most recent exchange rate from an online service. The exchange rate at the time is $100 US dollars per bitcoin, so $10 US dollars is worth 0.10 bitcoin (BTC), or 100 millibitcoin (mBTC) as shown in the screenshot from Joe\u2019s wallet (see Bluewallet mobile bitcoin wallet send screen)."}
{"prompt": "Introduction", "completion": "In the transaction note/description input, Joe enters \"Alice\". He can use this field to add some information regarding his transaction for future reference. This function is for his record keeping only. The transaction note will be stored in his wallet and only Joe will be able to see it. It will not be sent to Alice, nor stored on the blockchain."}
{"prompt": "Introduction", "completion": "He also selects a transaction fee for his transaction. The higher the transaction fee, the faster his transaction will be confirmed (included in a block by a miner). He selects the minimum transaction fee possible at that time (0 satoshis/byte)."}
{"prompt": "Introduction", "completion": "The price of bitcoin has changed a lot over time, and an incredible amount since the first edition of this book was written. As of March 2021, a person would need approximately $54,000 USD to purchase one whole bitcoin. Many examples in this book reference real-life past transactions, when the price of bitcoin was much lower and transactions with zero fees were still possible. Think about how generous of a friend Joe would have been if he had made the same agreement with Alice today!"}
{"prompt": "Introduction", "completion": "Using Bluewallet, Joe carefully checks to make sure he has entered the correct amount, because he is about to transmit money and mistakes are irreversible. For simplicity sake, we will assume that Joe does not pay any transaction fees. The purpose and setting of transaction fees are covered in subsequent chapters. After double-checking the address and amount, he presses Send to transmit the transaction. Joe\u2019s mobile bitcoin wallet constructs a transaction that assigns 0.10 BTC to the address provided by Alice, sourcing the funds from Joe\u2019s wallet and signing the transaction with Joe\u2019s private keys. This tells the bitcoin network that Joe has authorized a transfer of value to Alice\u2019s new address. As the transaction is transmitted via the peer-to-peer protocol, it quickly propagates across the bitcoin network. In less than a second, most of the well-connected nodes in the network receive the transaction and see Alice\u2019s address for the first time."}
{"prompt": "Introduction", "completion": "Meanwhile, Alice\u2019s wallet is constantly \"listening\" to published transactions on the bitcoin network, looking for any that match the addresses it contains. A few seconds after Joe\u2019s wallet transmits the transaction, Alice\u2019s wallet will indicate that it is receiving 0.10 BTC."}
{"prompt": "Introduction", "completion": "Each bitcoin can be subdivided into 100 million units, each called a \"satoshi\" (singular) or \"satoshis\" (plural). Named for bitcoin\u2019s creator, the Satoshi is the smallest unit of bitcoin, equivalent to 0.00000001 BTC."}
{"prompt": "Introduction", "completion": "At first, Alice\u2019s wallet will show the transaction from Joe as \"Unconfirmed.\" This means that the transaction has been propagated to the network but has not yet been recorded in the bitcoin transaction ledger, known as the blockchain. To be confirmed, a transaction must be included in a block and added to the blockchain, which happens every 10 minutes, on average. In traditional financial terms this is known as clearing. This book will cover in detail the propagation, validation, and clearing (or confirmation) of bitcoin transactions."}
{"prompt": "Introduction", "completion": "Alice is now the proud owner of 0.10 BTC that she can spend. In the next chapter we will look at her first purchase with bitcoin, and examine the underlying transaction and propagation technologies in more detail."}
{"prompt": "How Bitcoin Works", "completion": "The bitcoin system, unlike traditional banking and payment systems, is based on decentralized trust. Instead of a central trusted authority, in bitcoin, trust is achieved as an emergent property from the interactions of different participants in the bitcoin system. In this chapter, we will examine bitcoin from a high level by tracking a single transaction through the bitcoin system and watch as it becomes \"trusted\" and accepted by the bitcoin mechanism of distributed consensus and is finally recorded on the blockchain, the distributed ledger of all transactions. Subsequent chapters will delve into the technology behind transactions, the network, and mining."}
{"prompt": "How Bitcoin Works", "completion": "In the overview diagram shown in Bitcoin Overview, we see that the bitcoin system consists of users with wallets containing keys, transactions that are propagated across the network, and miners who produce (through competitive computation) the consensus blockchain, which is the authoritative ledger of all transactions."}
{"prompt": "How Bitcoin Works", "completion": "Each example in this chapter is based on an actual transaction made on the bitcoin network, simulating the interactions between the users (Joe, Alice, Bob, and Gopesh) by sending funds from one wallet to another. While tracking a transaction through the bitcoin network to the blockchain, we will use a blockchain explorer site to visualize each step. A blockchain explorer is a web application that operates as a bitcoin search engine, in that it allows you to search for addresses, transactions, and blocks and see the relationships and flows between them."}
{"prompt": "How Bitcoin Works", "completion": "Popular blockchain explorers include:"}
{"prompt": "How Bitcoin Works", "completion": "BlockCypher Explorer"}
{"prompt": "How Bitcoin Works", "completion": "Blockchain.com"}
{"prompt": "How Bitcoin Works", "completion": "BitPay Insight"}
{"prompt": "How Bitcoin Works", "completion": "Blockstream Explorer"}
{"prompt": "How Bitcoin Works", "completion": "Each of these has a search function that can take a bitcoin address, transaction hash, block number, or block hash and retrieve corresponding information from the bitcoin network. With each transaction or block example, we will provide a URL so you can look it up yourself and study it in detail."}
{"prompt": "How Bitcoin Works", "completion": "Alice, introduced in the previous chapter, is a new user who has just acquired her first bitcoin. In [getting_first_bitcoin], Alice met with her friend Joe to exchange some cash for bitcoin. The transaction created by Joe funded Alice\u2019s wallet with 0.10 BTC. Now Alice will make her first retail transaction, buying a cup of coffee at Bob\u2019s coffee shop in Palo Alto, California."}
{"prompt": "How Bitcoin Works", "completion": "Bob\u2019s Cafe recently started accepting bitcoin payments by adding a bitcoin option to its point-of-sale system. The prices at Bob\u2019s Cafe are listed in the local currency (US dollars), but at the register, customers have the option of paying in either dollars or bitcoin. Alice places her order for a cup of coffee and Bob enters it into the register, as he does for all transactions. The point-of-sale system automatically converts the total price from US dollars to bitcoin at the prevailing market rate and displays the price in both currencies:"}
{"prompt": "How Bitcoin Works", "completion": "Bob says, \"That\u2019s one-dollar-fifty, or fifteen millibits.\""}
{"prompt": "How Bitcoin Works", "completion": "Bob\u2019s point-of-sale system will also automatically create a special QR code containing a payment request (see Payment request QR code)."}
{"prompt": "How Bitcoin Works", "completion": "Unlike a QR code that simply contains a destination bitcoin address, a payment request is a QR-encoded URL that contains a destination address, a payment amount, and a generic description such as \"Bob\u2019s Cafe.\" This allows a bitcoin wallet application to prefill the information used to send the payment while showing a human-readable description to the user. You can scan the QR code with a bitcoin wallet application to see what Alice would see."}
{"prompt": "How Bitcoin Works", "completion": "Try to scan this with your wallet to see the address and amount but DO NOT SEND MONEY."}
{"prompt": "How Bitcoin Works", "completion": "Alice uses her smartphone to scan the barcode on display. Her smartphone shows a payment of 0.0150 BTC to Bob's Cafe and she selects Send to authorize the payment. Within a few seconds (about the same amount of time as a credit card authorization), Bob sees the transaction on the register, completing the transaction."}
{"prompt": "How Bitcoin Works", "completion": "In the following sections, we will examine this transaction in more detail. We\u2019ll see how Alice\u2019s wallet constructed it, how it was propagated across the network, how it was verified, and finally, how Bob can spend that amount in subsequent transactions."}
{"prompt": "How Bitcoin Works", "completion": "The bitcoin network can transact in fractional values, e.g., from millibitcoin (1/1000th of a bitcoin) down to 1/100,000,000th of a bitcoin, which is known as a satoshi. Throughout this book, we\u2019ll use the term \u201cbitcoin\u201d to refer to any quantity of bitcoin currency, from the smallest unit (1 satoshi) to the total number (21,000,000) of all bitcoin that will ever be mined."}
{"prompt": "How Bitcoin Works", "completion": "You can examine Alice\u2019s transaction to Bob\u2019s Cafe on the blockchain using a block explorer site (View Alice\u2019s transaction on blockchain.com):"}
{"prompt": "How Bitcoin Works", "completion": "In simple terms, a transaction tells the network that the owner of some bitcoin value has authorized the transfer of that value to another owner. The new owner can now spend the bitcoin by creating another transaction that authorizes the transfer to another owner, and so on, in a chain of ownership."}
{"prompt": "How Bitcoin Works", "completion": "Transactions are like lines in a double-entry bookkeeping ledger. Each transaction contains one or more \"inputs,\" which are like debits against a bitcoin account. On the other side of the transaction, there are one or more \"outputs,\" which are like credits added to a bitcoin account. The inputs and outputs (debits and credits) do not necessarily add up to the same amount. Instead, outputs add up to slightly less than inputs and the difference represents an implied transaction fee, which is a small payment collected by the miner who includes the transaction in the ledger. A bitcoin transaction is shown as a bookkeeping ledger entry in Transaction as double-entry bookkeeping."}
{"prompt": "How Bitcoin Works", "completion": "The transaction also contains proof of ownership for each amount of bitcoin (inputs) whose value is being spent, in the form of a digital signature from the owner, which can be independently validated by anyone. In bitcoin terms, \"spending\" is signing a transaction that transfers value from a previous transaction over to a new owner identified by a bitcoin address."}
{"prompt": "How Bitcoin Works", "completion": "Alice\u2019s payment to Bob\u2019s Cafe uses a previous transaction\u2019s output as its input. In the previous chapter, Alice received bitcoin from her friend Joe in return for cash. That transaction created a bitcoin value locked by Alice\u2019s key. Her new transaction to Bob\u2019s Cafe references the previous transaction as an input and creates new outputs to pay for the cup of coffee and receive change. The transactions form a chain, where the inputs from the latest transaction correspond to outputs from previous transactions. Alice\u2019s key provides the signature that unlocks those previous transaction outputs, thereby proving to the bitcoin network that she owns the funds. She attaches the payment for coffee to Bob\u2019s address, thereby \"encumbering\" that output with the requirement that Bob produces a signature in order to spend that amount. This represents a transfer of value between Alice and Bob. This chain of transactions, from Joe to Alice to Bob, is illustrated in A chain of transactions, where the output of one transaction is the input of the next transaction."}
{"prompt": "How Bitcoin Works", "completion": "Many bitcoin transactions will include outputs that reference both an address of the new owner and an address of the current owner, called the change address. This is because transaction inputs, like currency notes, cannot be divided. If you purchase a $5 US dollar item in a store but use a $20 US dollar bill to pay for the item, you expect to receive $15 US dollars in change. The same concept applies to bitcoin transaction inputs. If you purchased an item that costs 5 bitcoin but only had a 20 bitcoin input to use, your wallet would create a single transaction that sends two outputs, one output of 5 bitcoin to the store owner and one output of 15 bitcoin back to yourself as change (less any applicable transaction fee). Importantly, the change address does not have to be the same address as that of the input and for privacy reasons is often a new address from the owner\u2019s wallet."}
{"prompt": "How Bitcoin Works", "completion": "Different wallets may use different strategies when aggregating inputs to make a payment requested by the user. They might aggregate many small inputs, or use one that is equal to or larger than the desired payment. Unless the wallet can aggregate inputs in such a way to exactly match the desired payment plus transaction fees, the wallet will need to generate some change. This is very similar to how people handle cash. If you always use the largest bill in your pocket, you will end up with a pocket full of loose change. If you only use the loose change, you\u2019ll always have only big bills. People subconsciously find a balance between these two extremes, and bitcoin wallet developers strive to program this balance."}
{"prompt": "How Bitcoin Works", "completion": "In summary, transactions move value from transaction inputs to transaction outputs. An input is a reference to a previous transaction\u2019s output, showing where the value is coming from. A transaction usually includes an output that directs a specific value to a new owner\u2019s bitcoin address and a change output back to the original owner. Outputs from one transaction can be used as inputs in a new transaction, thus creating a chain of ownership as the value is moved from owner to owner (see A chain of transactions, where the output of one transaction is the input of the next transaction)."}
{"prompt": "How Bitcoin Works", "completion": "The most common form of transaction is a simple payment from one address to another, which often includes some \"change\" returned to the original owner. This type of transaction has one input and two outputs and is shown in Most common transaction."}
{"prompt": "How Bitcoin Works", "completion": "Another common form of transaction is one that aggregates several inputs into a single output (see Transaction aggregating funds). This represents the real-world equivalent of exchanging a pile of coins and currency notes for a single larger note. Transactions like these are sometimes generated by wallet applications to clean up lots of smaller amounts that were received as change for payments."}
{"prompt": "How Bitcoin Works", "completion": "Finally, another transaction form that is seen often on the bitcoin ledger is a batched transaction, which distributes one input to multiple outputs representing multiple recipients, a technique called \"transaction batching\" (see Transaction distributing funds). Since this type of transaction is useful for saving in transaction fees, it is commonly used by commercial entities to distribute funds, such as when a company is processing payroll payments to multiple employees or when a bitcoin exchange is processing multiple customers' withdrawals in a single transaction."}
{"prompt": "How Bitcoin Works", "completion": "Alice\u2019s wallet application contains all the logic for selecting appropriate inputs and outputs to build a transaction to Alice\u2019s specification. Alice only needs to specify a destination and an amount, and the rest happens in the wallet application without her seeing the details. Importantly, a wallet application can construct transactions even if it is completely offline. Like writing a check at home and later sending it to the bank in an envelope, the transaction does not need to be constructed and signed while connected to the bitcoin network."}
{"prompt": "How Bitcoin Works", "completion": "Alice\u2019s wallet application will first have to find inputs that can pay the amount she wants to send to Bob. Most wallets keep track of all the available outputs belonging to addresses in the wallet. Therefore, Alice\u2019s wallet would contain a copy of the transaction output from Joe\u2019s transaction, which was created in exchange for cash (see [getting_first_bitcoin]). A bitcoin wallet application that runs as a full-node client actually contains a copy of every unspent output from every transaction in the blockchain. This allows a wallet to construct transaction inputs as well as quickly verify incoming transactions as having correct inputs. However, because a full-node client takes up a lot of disk space, most user wallets run \"lightweight\" clients that track only the user\u2019s own unspent outputs."}
{"prompt": "How Bitcoin Works", "completion": "If the wallet application does not maintain a copy of unspent transaction outputs, it can query the bitcoin network to retrieve this information using a variety of APIs available by different providers or by asking a full-node using an application programming interface (API) call. Look up all the unspent outputs for Alice\u2019s bitcoin address shows an API request, constructed as an HTTP GET command to a specific URL. This URL will return all the unspent transaction outputs for an address, giving any application the information it needs to construct transaction inputs for spending. We use the simple command-line HTTP client cURL to retrieve the response."}
{"prompt": "How Bitcoin Works", "completion": "The response in Look up all the unspent outputs for Alice\u2019s bitcoin address shows one unspent output (one that has not been redeemed yet) under the ownership of Alice\u2019s address 1Cdid9KFAaatwczBwBttQcwXYCpvK8h7FK. The response includes the reference to the transaction in which this unspent output is contained (the payment from Joe) and its value in satoshis, at 10 million, equivalent to 0.10 bitcoin. With this information, Alice\u2019s wallet application can construct a transaction to transfer that value to new owner addresses."}
{"prompt": "How Bitcoin Works", "completion": "View the transaction from Joe to Alice."}
{"prompt": "How Bitcoin Works", "completion": "As you can see, Alice\u2019s wallet contains enough bitcoin in a single unspent output to pay for the cup of coffee. Had this not been the case, Alice\u2019s wallet application might have to \"rummage\" through a pile of smaller unspent outputs, like picking coins from a purse until it could find enough to pay for the coffee. In both cases, there might be a need to get some change back, which we will see in the next section, as the wallet application creates the transaction outputs (payments)."}
{"prompt": "How Bitcoin Works", "completion": "A transaction output is created in the form of a script that creates an encumbrance on the value and can only be redeemed by the introduction of a solution to the script. In simpler terms, Alice\u2019s transaction output will contain a script that says something like, \"This output is payable to whoever can present a signature from the key corresponding to Bob\u2019s address.\" Because only Bob has the wallet with the keys corresponding to that address, only Bob\u2019s wallet can present such a signature to redeem this output. Alice will therefore \"encumber\" the output value with a demand for a signature from Bob."}
{"prompt": "How Bitcoin Works", "completion": "This transaction will also include a second output, because Alice\u2019s funds are in the form of a 0.10 BTC output, too much money for the 0.015 BTC cup of coffee. Alice will need 0.085 BTC in change. Alice\u2019s change payment is created by Alice\u2019s wallet as an output in the very same transaction as the payment to Bob. Essentially, Alice\u2019s wallet breaks her funds into two payments: one to Bob and one back to herself. She can then use (spend) the change output in a subsequent transaction."}
{"prompt": "How Bitcoin Works", "completion": "Finally, for the transaction to be processed by the network in a timely fashion, Alice\u2019s wallet application will add a small fee. This is not explicit in the transaction; it is implied by the difference between inputs and outputs. If instead of taking 0.085 in change, Alice creates only 0.0845 as the second output, there will be 0.0005 BTC (half a millibitcoin) left over. The input\u2019s 0.10 BTC is not fully spent with the two outputs, because they will add up to less than 0.10. The resulting difference is the transaction fee that is collected by the miner as a fee for validating and including the transaction in a block to be recorded on the blockchain."}
{"prompt": "How Bitcoin Works", "completion": "The resulting transaction can be seen using a blockchain explorer web application, as shown in Alice\u2019s transaction to Bob\u2019s Cafe."}
{"prompt": "How Bitcoin Works", "completion": "View the transaction from Alice to Bob\u2019s Cafe."}
{"prompt": "How Bitcoin Works", "completion": "The transaction created by Alice\u2019s wallet application is 258 bytes long and contains everything necessary to confirm ownership of the funds and assign new owners. Now, the transaction must be transmitted to the bitcoin network where it will become part of the blockchain. In the next section we will see how a transaction becomes part of a new block and how the block is \"mined.\" Finally, we will see how the new block, once added to the blockchain, is increasingly trusted by the network as more blocks are added."}
{"prompt": "How Bitcoin Works", "completion": "Because the transaction contains all the information necessary to process, it does not matter how or where it is transmitted to the bitcoin network. The bitcoin network is a peer-to-peer network, with each bitcoin client participating by connecting to several other bitcoin clients. The purpose of the bitcoin network is to propagate transactions and blocks to all participants."}
{"prompt": "How Bitcoin Works", "completion": "Any system, such as a server, desktop application, or wallet, that participates in the bitcoin network by \"speaking\" the bitcoin protocol is called a bitcoin node. Alice\u2019s wallet application can send the new transaction to any bitcoin node it is connected to over any type of connection: wired, WiFi, mobile, etc. Her bitcoin wallet does not have to be connected to Bob\u2019s bitcoin wallet directly and she does not have to use the internet connection offered by the cafe, though both those options are possible, too. Any bitcoin node that receives a valid transaction it has not seen before will immediately forward it to all other nodes to which it is connected, a propagation technique known as flooding. Thus, the transaction rapidly propagates out across the peer-to-peer network, reaching a large percentage of the nodes within a few seconds."}
{"prompt": "How Bitcoin Works", "completion": "If Bob\u2019s bitcoin wallet application is directly connected to Alice\u2019s wallet application, Bob\u2019s wallet application might be the first node to receive the transaction. However, even if Alice\u2019s wallet sends the transaction through other nodes, it will reach Bob\u2019s wallet within a few seconds. Bob\u2019s wallet will immediately identify Alice\u2019s transaction as an incoming payment because it contains outputs redeemable by Bob\u2019s keys. Bob\u2019s wallet application can also independently verify that the transaction is well formed, uses previously unspent outputs, and contains sufficient transaction fees to be included in the next block. At this point Bob can assume, with little risk, that the transaction will shortly be included in a block and confirmed."}
{"prompt": "How Bitcoin Works", "completion": "A common misconception about bitcoin transactions is that they must be \"confirmed\" by waiting 10 minutes for a new block, or up to 60 minutes for a full six confirmations. Although confirmations ensure the transaction has been accepted by the whole network, such a delay is unnecessary for small-value items such as a cup of coffee. A merchant may accept a valid small-value transaction with no confirmations, with no more risk than a credit card payment made without an ID or a signature, as merchants routinely accept today."}
{"prompt": "How Bitcoin Works", "completion": "Alice\u2019s transaction is now propagated on the bitcoin network. It does not become part of the blockchain until it is verified and included in a block by a process called mining. See [mining] for a detailed explanation."}
{"prompt": "How Bitcoin Works", "completion": "The bitcoin system of trust is based on computation. Transactions are bundled into blocks, which require an enormous amount of computation to prove, but only a small amount of computation to verify as proven. The mining process serves two purposes in bitcoin:"}
{"prompt": "How Bitcoin Works", "completion": "Mining nodes validate all transactions by reference to bitcoin\u2019s consensus rules. Therefore, mining provides security for bitcoin transactions by rejecting invalid or malformed transactions."}
{"prompt": "How Bitcoin Works", "completion": "Mining creates new bitcoin in each block, almost like a central bank printing new money. The amount of bitcoin created per block is limited and diminishes with time, following a fixed issuance schedule."}
{"prompt": "How Bitcoin Works", "completion": "Mining achieves a fine balance between cost and reward. Mining uses electricity to solve a mathematical problem. A successful miner will collect a reward in the form of new bitcoin and transaction fees. However, the reward will only be collected if the miner has correctly validated all the transactions, to the satisfaction of the rules of consensus. This delicate balance provides security for bitcoin without a central authority."}
{"prompt": "How Bitcoin Works", "completion": "A good way to describe mining is like a giant competitive game of sudoku that resets every time someone finds a solution and whose difficulty automatically adjusts so that it takes approximately 10 minutes to find a solution. Imagine a giant sudoku puzzle, several thousand rows and columns in size. If I show you a completed puzzle you can verify it quite quickly. However, if the puzzle has a few squares filled and the rest are empty, it takes a lot of work to solve! The difficulty of the sudoku can be adjusted by changing its size (more or fewer rows and columns), but it can still be verified quite easily even if it is very large. The \"puzzle\" used in bitcoin is based on a cryptographic hash and exhibits similar characteristics: it is asymmetrically hard to solve but easy to verify, and its difficulty can be adjusted."}
{"prompt": "How Bitcoin Works", "completion": "In [user-stories], we introduced Jing, an entrepreneur in Shanghai. Jing runs a mining farm, which is a business that runs thousands of specialized mining computers, competing for the reward. Every 10 minutes or so, Jing\u2019s mining computers compete against thousands of similar systems in a global race to find a solution to a block of transactions. Finding such a solution, the so-called Proof-of-Work (PoW), requires quadrillions of hashing operations per second across the entire bitcoin network. The algorithm for Proof-of-Work involves repeatedly hashing the header of the block and a random number with the SHA256 cryptographic algorithm until a solution matching a predetermined pattern emerges. The first miner to find such a solution wins the round of competition and publishes that block into the blockchain."}
{"prompt": "How Bitcoin Works", "completion": "Jing started mining in 2010 using a very fast desktop computer to find a suitable Proof-of-Work for new blocks. As more miners started joining the bitcoin network, the difficulty of the problem increased rapidly. Soon, Jing and other miners upgraded to more specialized hardware, with high-end dedicated graphical processing units (GPUs), often used in gaming desktops or consoles. At the time of this writing, the difficulty is so high that it is profitable only to mine with application-specific integrated circuits (ASIC), essentially hundreds of mining algorithms printed in hardware, running in parallel on a single silicon chip. Jing\u2019s company also participates in a mining pool, which much like a lottery pool allows several participants to share their efforts and rewards. Jing\u2019s company now runs a warehouse containing thousands of ASIC miners to mine for bitcoin 24 hours a day. The company pays its electricity costs by selling the bitcoin it is able to generate from mining, creating some income from the profits."}
{"prompt": "How Bitcoin Works", "completion": "New transactions are constantly flowing into the network from user wallets and other applications. As these are seen by the bitcoin network nodes, they get added to a temporary pool of unverified transactions maintained by each node. As miners construct a new block, they add unverified transactions from this pool to the new block and then attempt to prove the validity of that new block, with the mining algorithm (Proof-of-Work). The process of mining is explained in detail in [mining]."}
{"prompt": "How Bitcoin Works", "completion": "Transactions are added to the new block, prioritized by the highest-fee transactions first and a few other criteria. Each miner starts the process of mining a new block of transactions as soon as they receive the previous block from the network, knowing they have lost that previous round of competition. They immediately create a new block, fill it with transactions and the fingerprint of the previous block, and start calculating the Proof-of-Work for the new block. Each miner includes a special transaction in their block, one that pays their own bitcoin address the block reward (currently 6.25 newly created bitcoin) plus the sum of transaction fees from all the transactions included in the block. If they find a solution that makes that block valid, they \"win\" this reward because their successful block is added to the global blockchain and the reward transaction they included becomes spendable. Jing, who participates in a mining pool, has set up his software to create new blocks that assign the reward to a pool address. From there, a share of the reward is distributed to Jing and other miners in proportion to the amount of work they contributed in the last round."}
{"prompt": "How Bitcoin Works", "completion": "Alice\u2019s transaction was picked up by the network and included in the pool of unverified transactions. Once validated by the mining software it was included in a new block, called a candidate block, generated by Jing\u2019s mining pool. All the miners participating in that mining pool immediately start computing Proof-of-Work for the candidate block. Approximately five minutes after the transaction was first transmitted by Alice\u2019s wallet, one of Jing\u2019s ASIC miners found a solution for the candidate block and announced it to the network. Once other miners validated the winning block they started the race to generate the next block."}
{"prompt": "How Bitcoin Works", "completion": "Jing\u2019s winning block became part of the blockchain as block #277316, containing 419 transactions, including Alice\u2019s transaction. The block containing Alice\u2019s transaction is counted as one \"confirmation\" of that transaction."}
{"prompt": "How Bitcoin Works", "completion": "You can see the block that includes Alice\u2019s transaction."}
{"prompt": "How Bitcoin Works", "completion": "Approximately 20 minutes later, a new block, #277317, is mined by another miner. Because this new block is built on top of block #277316 that contained Alice\u2019s transaction, it added even more computation to the blockchain, thereby strengthening the trust in those transactions. Each block mined on top of the one containing the transaction counts as an additional confirmation for Alice\u2019s transaction. As the blocks pile on top of each other, it becomes exponentially harder to reverse the transaction, thereby making it more and more trusted by the network."}
{"prompt": "How Bitcoin Works", "completion": "In the diagram in Alice\u2019s transaction included in block #277316, we can see block #277316, which contains Alice\u2019s transaction. Below it are 277,316 blocks (including block #0), linked to each other in a chain of blocks (blockchain) all the way back to block #0, known as the genesis block. Over time, as the \"height\" in blocks increases, so does the computation difficulty for each block and the chain as a whole. The blocks mined after the one that contains Alice\u2019s transaction act as further assurance, as they pile on more computation in a longer and longer chain. By convention, any block with more than six confirmations is considered irrevocable, because it would require an immense amount of computation to invalidate and recalculate six blocks. We will examine the process of mining and the way it builds trust in more detail in [mining]."}
{"prompt": "How Bitcoin Works", "completion": "Now that Alice\u2019s transaction has been embedded in the blockchain as part of a block, it is part of the distributed ledger of bitcoin and visible to all bitcoin applications. Each bitcoin client can independently verify the transaction as valid and spendable. Full-node clients can track the source of the funds from the moment the bitcoin were first generated in a block, incrementally from transaction to transaction, until they reach Bob\u2019s address. Lightweight clients can do what is called a simplified payment verification (see [spv_nodes]) by confirming that the transaction is in the blockchain and has several blocks mined after it, thus providing assurance that the miners accepted it as valid."}
{"prompt": "How Bitcoin Works", "completion": "Bob can now spend the output from this and other transactions. For example, Bob can pay a contractor or supplier by transferring value from Alice\u2019s coffee cup payment to these new owners. Most likely, Bob\u2019s bitcoin software will aggregate many small payments into a larger payment, perhaps concentrating all the day\u2019s bitcoin revenue into a single transaction. This would aggregate the various payments into a single output (and a single address). For a diagram of an aggregating transaction, see Transaction aggregating funds."}
{"prompt": "How Bitcoin Works", "completion": "As Bob spends the payments received from Alice and other customers, he extends the chain of transactions. Let\u2019s assume that Bob pays his web designer Gopesh in Bangalore for a new web page. Now the chain of transactions will look like Alice\u2019s transaction as part of a transaction chain from Joe to Gopesh, where the output of one transaction is spent as the input of the next transaction."}
{"prompt": "How Bitcoin Works", "completion": "In this chapter, we saw how transactions build a chain that moves value from owner to owner. We also tracked Alice\u2019s transaction, from the moment it was created in her wallet, through the bitcoin network and to the miners who recorded it on the blockchain. In the rest of this book, we will examine the specific technologies behind wallets, addresses, signatures, transactions, the network, and finally mining."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Bitcoin is an open source project and the source code is available under an open (MIT) license, free to download and use for any purpose. Open source means more than simply free to use. It also means that bitcoin is developed by an open community of volunteers. At first, that community consisted of only Satoshi Nakamoto. By 2016, bitcoin\u2019s source code had more than 400 contributors with about a dozen developers working on the code almost full-time and several dozen more on a part-time basis. Anyone can contribute to the code\u2014including you!"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "When bitcoin was created by Satoshi Nakamoto, the software was actually completed before the whitepaper reproduced in [satoshi_whitepaper] was written. Satoshi wanted to make sure it worked before writing about it. That first implementation, then simply known as \"Bitcoin\" or \"Satoshi client,\" has been heavily modified and improved. It has evolved into what is known as Bitcoin Core, to differentiate it from other compatible implementations. Bitcoin Core is the reference implementation of the bitcoin system, meaning that it is the authoritative reference on how each part of the technology should be implemented. Bitcoin Core implements all aspects of bitcoin, including wallets, a transaction and block validation engine, and a full network node in the peer-to-peer bitcoin network."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Even though Bitcoin Core includes a reference implementation of a wallet, this is not intended to be used as a production wallet for users or for applications. Application developers are advised to build wallets using modern standards such as BIP-39 and BIP-32 (see [mnemonic_code_words] and [hd_wallets]). BIP stands for Bitcoin Improvement Proposal."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Bitcoin Core architecture (Source: Eric Lombrozo) shows the architecture of Bitcoin Core."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "If you\u2019re a developer, you will want to set up a development environment with all the tools, libraries, and support software for writing bitcoin applications. In this highly technical chapter, we\u2019ll walk through that process step-by-step. If the material becomes too dense (and you\u2019re not actually setting up a development environment) feel free to skip to the next chapter, which is less technical."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Bitcoin Core\u2019s source code can be downloaded as an archive or by cloning the authoritative source repository from GitHub. On the Bitcoin Core download page, select the most recent version and download the compressed archive of the source code, e.g., bitcoin-0.15.0.2.tar.gz. Alternatively, use the git command line to create a local copy of the source code from the GitHub bitcoin page."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "In many of the examples in this chapter we will be using the operating system\u2019s command-line interface (also known as a \"shell\"), accessed via a \"terminal\" application. The shell will display a prompt; you type a command; and the shell responds with some text and a new prompt for your next command. The prompt may look different on your system, but in the following examples it is denoted by a $ symbol. In the examples, when you see text after a $ symbol, don\u2019t type the $ symbol but type the command immediately following it, then press Enter to execute the command. In the examples, the lines below each command are the operating system\u2019s responses to that command. When you see the next $ prefix, you\u2019ll know it\u2019s a new command and you should repeat the process."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "In this example, we are using the git command to create a local copy (\"clone\") of the source code:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Git is the most widely used distributed version control system, an essential part of any software developer\u2019s toolkit. You may need to install the git command, or a graphical user interface for git, on your operating system if you do not have it already."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "When the git cloning operation has completed, you will have a complete local copy of the source code repository in the directory bitcoin. Change to this directory by typing **cd bitcoin** at the prompt:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "By default, the local copy will be synchronized with the most recent code, which might be an unstable or beta version of bitcoin. Before compiling the code, select a specific version by checking out a release tag. This will synchronize the local copy with a specific snapshot of the code repository identified by a keyword tag. Tags are used by the developers to mark specific releases of the code by version number. First, to find the available tags, we use the git tag command:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The list of tags shows all the released versions of bitcoin. By convention, release candidates, which are intended for testing, have the suffix \"rc.\" Stable releases that can be run on production systems have no suffix. From the preceding list, select the highest version release, which at the time of writing was v0.15.0. To synchronize the local code with this version, use the git checkout command:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "You can confirm you have the desired version \"checked out\" by issuing the command git status:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The source code includes documentation, which can be found in a number of files. Review the main documentation located in README.md in the bitcoin directory by typing **more README.md** at the prompt and using the spacebar to progress to the next page. In this chapter, we will build the command-line bitcoin client, also known as bitcoind on Linux. Review the instructions for compiling the bitcoind command-line client on your platform by typing **more doc/build-unix.md**. Alternative instructions for macOS and Windows can be found in the doc directory, as build-osx.md or build-windows.md, respectively."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Carefully review the build prerequisites, which are in the first part of the build documentation. These are libraries that must be present on your system before you can begin to compile bitcoin. If these prerequisites are missing, the build process will fail with an error. If this happens because you missed a prerequisite, you can install it and then resume the build process from where you left off. Assuming the prerequisites are installed, you start the build process by generating a set of build scripts using the autogen.sh script."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The autogen.sh script creates a set of automatic configuration scripts that will interrogate your system to discover the correct settings and ensure you have all the necessary libraries to compile the code. The most important of these is the configure script that offers a number of different options to customize the build process. Type **./configure --help** to see the various options:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The configure script allows you to enable or disable certain features of bitcoind through the use of the --enable-FEATURE and --disable-FEATURE flags, where FEATURE is replaced by the feature name, as listed in the help output. In this chapter, we will build the bitcoind client with all the default features. We won\u2019t be using the configuration flags, but you should review them to understand what optional features are part of the client. If you are in an academic setting, computer lab restrictions may require you to install applications in your home directory (e.g., using --prefix=$HOME)."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Here are some useful options that override the default behavior of the configure script:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "This overrides the default installation location (which is /usr/local/) for the resulting executable. Use $HOME to put everything in your home directory, or a different path."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "This is used to disable the reference wallet implementation."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "If you are building a wallet, allow the use of an incompatible version of the Berkeley DB library."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Don't build the graphical user interface, which requires the Qt library. This builds server and command-line bitcoin only."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Next, run the configure script to automatically discover all the necessary libraries and create a customized build script for your system:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "If all went well, the configure command will end by creating the customized build scripts that will allow us to compile bitcoind. If there are any missing libraries or errors, the configure command will terminate with an error instead of creating the build scripts. If an error occurs, it is most likely because of a missing or incompatible library. Review the build documentation again and make sure you install the missing prerequisites. Then run configure again and see if that fixes the error."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Next, you will compile the source code, a process that can take up to an hour to complete, depending on the speed of your CPU and available memory. During the compilation process you should see output every few seconds or every few minutes, or an error if something goes wrong. If an error occurs, or the compilation process is interrupted, it can be resumed any time by typing make again. Type **make** to start compiling the executable application:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "On a fast system with more than one CPU, you might want to set the number of parallel compile jobs. For instance, make -j 2 will use two cores if they are available. If all goes well, Bitcoin Core is now compiled. You should run the unit test suite with make check to ensure the linked libraries are not broken in obvious ways. The final step is to install the various executables on your system using the make install command. You may be prompted for your user password, because this step requires administrative privileges:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The default installation of bitcoind puts it in /usr/local/bin. You can confirm that Bitcoin Core is correctly installed by asking the system for the path of the executables, as follows:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Bitcoin\u2019s peer-to-peer network is composed of network \"nodes,\" run mostly by volunteers and some of the businesses that build bitcoin applications. Those running bitcoin nodes have a direct and authoritative view of the bitcoin blockchain, with a local copy of all the transactions, independently validated by their own system. By running a node, you don\u2019t have to rely on any third party to validate a transaction. Moreover, by running a bitcoin node you contribute to the bitcoin network by making it more robust."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Running a node, however, requires a permanently connected system with enough resources to process all bitcoin transactions. Depending on whether you choose to index all transactions and keep a full copy of the blockchain, you may also need a lot of disk space and RAM. As of early 2021, a full-index node needs 2 GB of RAM and a minimum of 360 GB of disk space (see https://www.blockchain.com/charts/blocks-size). Bitcoin nodes also transmit and receive bitcoin transactions and blocks, consuming internet bandwidth. If your internet connection is limited, has a low data cap, or is metered (charged by the gigabit), you should probably not run a bitcoin node on it, or run it in a way that constrains its bandwidth (see Sample configuration of a resource-constrained system)."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Bitcoin Core keeps a full copy of the blockchain by default, with every transaction that has ever occurred on the bitcoin network since its inception in 2009. This dataset is dozens of gigabytes in size and is downloaded incrementally over several days or weeks, depending on the speed of your CPU and internet connection. Bitcoin Core will not be able to process transactions or update account balances until the full blockchain dataset is downloaded. Make sure you have enough disk space, bandwidth, and time to complete the initial synchronization. You can configure Bitcoin Core to reduce the size of the blockchain by discarding old blocks (see Sample configuration of a resource-constrained system), but it will still download the entire dataset before discarding data."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Despite these resource requirements, thousands of volunteers run bitcoin nodes. Some are running on systems as simple as a Raspberry Pi (a $35 USD computer the size of a pack of cards). Many volunteers also run bitcoin nodes on rented servers, usually some variant of Linux. A Virtual Private Server (VPS) or Cloud Computing Server instance can be used to run a bitcoin node. Such servers can be rented for $25 to $50 USD per month from a variety of providers."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Why would you want to run a node? Here are some of the most common reasons:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "If you are developing bitcoin software and need to rely on a bitcoin node for programmable (API) access to the network and blockchain."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "If you are building applications that must validate transactions according to bitcoin\u2019s consensus rules. Typically, bitcoin software companies run several nodes."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "If you want to support bitcoin. Running a node makes the network more robust and able to serve more wallets, more users, and more transactions."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "If you do not want to rely on any third party to process or validate your transactions."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "If you\u2019re reading this book and interested in developing bitcoin software, you should be running your own node."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Bitcoin Core will look for a configuration file in its data directory on every start. In this section we will examine the various configuration options and set up a configuration file. To locate the configuration file, run bitcoind -printtoconsole in your terminal and look for the first couple of lines."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "You can hit Ctrl-C to shut down the node once you determine the location of the config file. Usually the configuration file is inside the .bitcoin data directory under your user\u2019s home directory. It is not created automatically, but you can create a starter config file by copying and pasting from the Sample configuration of a full-index node example, below. You can create or modify the configuration file in your preferred editor."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Bitcoin Core offers more than 100 configuration options that modify the behavior of the network node, the storage of the blockchain, and many other aspects of its operation. To see a listing of these options, run bitcoind --help:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Here are some of the most important options that you can set in the configuration file, or as command-line parameters to bitcoind:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Run a specified command or script to send emergency alerts to the owner of this node, usually by email."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "An alternative location for the configuration file. This only makes sense as a command-line parameter to bitcoind, as it can\u2019t be inside the configuration file it refers to."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Select the directory and filesystem in which to put all the blockchain data. By default this is the .bitcoin subdirectory of your home directory. Make sure this filesystem has several gigabytes of free space."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Reduce the disk space requirements to this many megabytes, by deleting old blocks. Use this on a resource-constrained node that can\u2019t fit the full blockchain."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Maintain an index of all transactions. This means a complete copy of the blockchain that allows you to programmatically retrieve any transaction by ID."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The size of the UTXO cache. The default is 450 MiB. Increase this on high-end hardware and reduce the size on low-end hardware to save memory at the expense of slow disk IO."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Set the maximum number of nodes from which to accept connections. Reducing this from the default will reduce your bandwidth consumption. Use if you have a data cap or pay by the gigabyte."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Limit the transaction memory pool to this many megabytes. Use it to reduce memory use on memory-constrained nodes."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Limit per-connection memory buffer to this many multiples of 1000 bytes. Use on memory-constrained nodes."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Set the minimum fee rate for transaction you will relay. Below this value, the transaction is treated nonstandard, rejected from the transaction pool and not relayed."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "By default, Bitcoin Core builds a database containing only the transactions related to the user\u2019s wallet. If you want to be able to access any transaction with commands like getrawtransaction (see Exploring and Decoding Transactions), you need to configure Bitcoin Core to build a complete transaction index, which can be achieved with the txindex option. Set txindex=1 in the Bitcoin Core configuration file. If you don\u2019t set this option at first and later set it to full indexing, you need to restart bitcoind with the -reindex option and wait for it to rebuild the index."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Sample configuration of a full-index node shows how you might combine the preceding options, with a fully indexed node, running as an API backend for a bitcoin application."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Sample configuration of a resource-constrained system shows a resource-constrained node running on a smaller server."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Once you\u2019ve edited the configuration file and set the options that best represent your needs, you can test bitcoind with this configuration. Run Bitcoin Core with the option printtoconsole to run in the foreground with output to the console:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "You can hit Ctrl-C to interrupt the process once you are satisfied that it is loading the correct settings and running as you expect."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "To run Bitcoin Core in the background as a process, start it with the daemon option, as bitcoind -daemon."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "To monitor the progress and runtime status of your bitcoin node, use the command bitcoin-cli getblockchaininfo:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "This shows a node with a blockchain height of 0 blocks and 83999 headers. The node currently fetches the block headers of the best chain and afterward continues to download the full blocks."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Once you are happy with the configuration options you have selected, you should add bitcoin to the startup scripts in your operating system, so that it runs continuously and restarts when the operating system restarts. You will find a number of example startup scripts for various operating systems in bitcoin\u2019s source directory under contrib/init and a README.md file showing which system uses which script."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The Bitcoin Core client implements a JSON-RPC interface that can also be accessed using the command-line helper bitcoin-cli. The command line allows us to experiment interactively with the capabilities that are also available programmatically via the API. To start, invoke the help command to see a list of the available bitcoin RPC commands:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Each of these commands may take a number of parameters. To get additional help, a detailed description, and information on the parameters, add the command name after help. For example, to see help on the getblockhash RPC command:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "At the end of the help information you will see two examples of the RPC command, using the bitcoin-cli helper or the HTTP client curl. These examples demonstrate how you might call the command. Copy the first example and see the result:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The result is a block hash, which is described in more detail in the following chapters. But for now, this command should return the same result on your system, demonstrating that your Bitcoin Core node is running, is accepting commands, and has information about block 1000 to return to you."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "In the next sections we will demonstrate some very useful RPC commands and their expected output."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Bitcoin Core provides status reports on different modules through the JSON-RPC interface. The most important commands include getblockchaininfo, getmempoolinfo, getnetworkinfo and getwalletinfo."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Bitcoin\u2019s getblockchaininfo RPC command was introduced earlier. The getnetworkinfo command displays basic information about the status of the bitcoin network node. Use bitcoin-cli to run it:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The data is returned in JavaScript Object Notation (JSON), a format that can easily be \"consumed\" by all programming languages but is also quite human-readable. Among this data we see the version numbers for the bitcoin software client (150000) and bitcoin protocol (70015). We see the current number of connections (8) and various information about the bitcoin network and the settings related to this client."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "It will take some time, perhaps more than a day, for the bitcoind client to \"catch up\" to the current blockchain height as it downloads blocks from other bitcoin clients. You can check its progress using getblockchaininfo to see the number of known blocks."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Commands: getrawtransaction, decoderawtransaction"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "In [cup_of_coffee], Alice bought a cup of coffee from Bob\u2019s Cafe. Her transaction was recorded on the blockchain with transaction ID (txid) 0627052b6f28912f2703066a912ea577f2ce4da4caa5a5fbd8a57286c345c2f2. Let\u2019s use the API to retrieve and examine that transaction by passing the transaction ID as a parameter:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "A transaction ID is not authoritative until a transaction has been confirmed. Absence of a transaction hash in the blockchain does not mean the transaction was not processed. This is known as \"transaction malleability,\" because transaction hashes can be modified prior to confirmation in a block. After confirmation, the txid is immutable and authoritative."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The command getrawtransaction returns a serialized transaction in hexadecimal notation. To decode that, we use the decoderawtransaction command, passing the hex data as a parameter. You can copy the hex returned by getrawtransaction and paste it as a parameter to decoderawtransaction:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The transaction decode shows all the components of this transaction, including the transaction inputs and outputs. In this case we see that the transaction that credited our new address with 15 millibits used one input and generated two outputs. The input to this transaction was the output from a previously confirmed transaction (shown as the vin txid starting with 7957a35fe). The two outputs correspond to the 15 millibit credit and an output with change back to the sender."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "We can further explore the blockchain by examining the previous transaction referenced by its txid in this transaction using the same commands (e.g., getrawtransaction). Jumping from transaction to transaction we can follow a chain of transactions back as the coins are transmitted from owner address to owner address."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Commands: getblock, getblockhash"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Exploring blocks is similar to exploring transactions. However, blocks can be referenced either by the block height or by the block hash. First, let\u2019s find a block by its height. In [cup_of_coffee], we saw that Alice\u2019s transaction was included in block 277316."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "We use the getblockhash command, which takes the block height as the parameter and returns the block hash for that block:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Now that we know which block Alice\u2019s transaction was included in, we can query that block. We use the getblock command with the block hash as the parameter:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The block contains 419 transactions and the 64th transaction listed (0627052b...) is Alice\u2019s coffee payment. The height entry tells us this is the 277316th block in the blockchain."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The bitcoin-cli helper is very useful for exploring the Bitcoin Core API and testing functions. But the whole point of an application programming interface is to access functions programmatically. In this section we will demonstrate accessing Bitcoin Core from another program."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Bitcoin Core\u2019s API is a JSON-RPC interface. JSON stands for JavaScript Object Notation and it is a very convenient way to present data that both humans and programs can easily read. RPC stands for Remote Procedure Call, which means that we are calling procedures (functions) that are remote (on the Bitcoin Core node) via a network protocol. In this case, the network protocol is HTTP, or HTTPS (for encrypted connections)."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "When we used the bitcoin-cli command to get help on a command, it showed us an example of using curl, the versatile command-line HTTP client to construct one of these JSON-RPC calls:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "This command shows that curl submits an HTTP request to the local host (127.0.0.1), connecting to the default bitcoin port (8332), and submitting a jsonrpc request for the getblockchaininfo method using text/plain encoding."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "You might notice that curl will ask for credentials to be sent along with the request. Bitcoin Core will create a random password on each start and place it in the data directory under the name .cookie. The bitcoin-cli helper can read this password file given the data directory. Similarly, you can copy the password and pass it to curl (or any higher level Bitcoin Core RPC wrappers). Alternatively, you can create a static password with the helper script provided in ./share/rpcauth/rpcauth.py in Bitcoin Core\u2019s source directory."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "If you\u2019re implementing a JSON-RPC call in your own program, you can use a generic HTTP library to construct the call, similar to what is shown in the preceding curl example."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "However, there are libraries in most every programming language that \"wrap\" the Bitcoin Core API in a way that makes this a lot simpler. We will use the python-bitcoinlib library to simplify API access. Remember, this requires you to have a running Bitcoin Core instance, which will be used to make JSON-RPC calls."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The Python script in Running getblockchaininfo via Bitcoin Core\u2019s JSON-RPC API makes a simple getblockchaininfo call and prints the blocks parameter from the data returned by Bitcoin Core (full node required)."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Running it gives us the following result:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "It tells us that our local Bitcoin Core node has 394075 blocks in its blockchain. Not a spectacular result, but it demonstrates the basic use of the library as a simplified interface to Bitcoin Core\u2019s JSON-RPC API."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Next, let\u2019s use the getrawtransaction and decodetransaction calls to retrieve the details of Alice\u2019s coffee payment. In Retrieving a transaction and iterating its outputs, we retrieve Alice\u2019s transaction and list the transaction\u2019s outputs. For each output, we show the recipient address and value. As a reminder, Alice\u2019s transaction had one output paying Bob\u2019s Cafe and one output for change back to Alice."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Running this code, we get:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Both of the preceding examples are rather simple. You don\u2019t really need a program to run them; you could just as easily use the bitcoin-cli helper. The next example, however, requires several hundred RPC calls and more clearly demonstrates the use of a programmatic interface."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "In Retrieving a block and adding all the transaction outputs, we first retrieve block 277316, then retrieve each of the 419 transactions within by reference to each transaction ID. Next, we iterate through each of the transaction\u2019s outputs and add up the value."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Running this code, we get:"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Our example code calculates that the total value transacted in this block is 10,322.07722534 BTC (including 25 BTC reward and 0.0909 BTC in fees). Compare that to the amount reported by a block explorer site by searching for the block hash or height. Some block explorers report the total value excluding the reward and excluding the fees. See if you can spot the difference."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "There are many alternative clients, libraries, toolkits, and even full-node implementations in the bitcoin ecosystem. These are implemented in a variety of programming languages, offering programmers native interfaces in their preferred language."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The following sections list some of the best libraries, clients, and toolkits, organized by programming languages."}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "The reference implementation of bitcoin"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Cross-platform C++ development toolkit, node, and consensus library"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Libbitcoin\u2019s command-line tool"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "A C language lightweight client library for bitcoin by Jeff Garzik"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "A modular and scalable full-node implementation with API"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Full node, API, and library by Bitpay"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "A pure JavaScript Bitcoin library for node.js and browsers"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "A Java full-node client library"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "A PHP bitcoin library, and related projects"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "A Python bitcoin library, consensus library, and node by Peter Todd"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "A Python bitcoin library by Richard Kiss"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "An archived fork of Python bitcoin library by Vitalik Buterin"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "A Ruby library wrapper for the JSON-RPC API"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "A Go language full-node bitcoin client"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Rust bitcoin library for serialization, parsing, and API calls"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Comprehensive bitcoin library for the .NET framework"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Bitcoin toolkit for ObjC and Swift"}
{"prompt": "Bitcoin Core: The Reference Implementation", "completion": "Many more libraries exist in a variety of other programming languages and more are created all the time."}
{"prompt": "Keys, Addresses", "completion": "You may have heard that bitcoin is based on cryptography, which is a branch of mathematics used extensively in computer security. Cryptography means \"secret writing\" in Greek, but the science of cryptography encompasses more than just secret writing, which is referred to as encryption. Cryptography can also be used to prove knowledge of a secret without revealing that secret (digital signature), or prove the authenticity of data (digital fingerprint). These types of cryptographic proofs are the mathematical tools critical to bitcoin and used extensively in bitcoin applications. Ironically, encryption is not an important part of bitcoin, as its communications and transaction data are not encrypted and do not need to be encrypted to protect the funds. In this chapter we will introduce some of the cryptography used in bitcoin to control ownership of funds, in the form of keys, addresses, and wallets."}
{"prompt": "Keys, Addresses", "completion": "Ownership of bitcoin is established through digital keys, bitcoin addresses, and digital signatures. The digital keys are not actually stored in the network, but are instead created and stored by users in a file, or simple database, called a wallet. The digital keys in a user\u2019s wallet are completely independent of the bitcoin protocol and can be generated and managed by the user\u2019s wallet software without reference to the blockchain or access to the internet. Keys enable many of the interesting properties of bitcoin, including decentralized trust and control, ownership attestation, and the cryptographic-proof security model."}
{"prompt": "Keys, Addresses", "completion": "Most bitcoin transactions require a valid digital signature to be included in the blockchain, which can only be generated with a secret key; therefore, anyone with a copy of that key has control of the bitcoin. The digital signature used to spend funds is also referred to as a witness, a term used in cryptography. The witness data in a bitcoin transaction testifies to the true ownership of the funds being spent."}
{"prompt": "Keys, Addresses", "completion": "Keys come in pairs consisting of a private (secret) key and a public key. Think of the public key as similar to a bank account number and the private key as similar to the secret PIN, or signature on a check, that provides control over the account. These digital keys are very rarely seen by the users of bitcoin. For the most part, they are stored inside the wallet file and managed by the bitcoin wallet software."}
{"prompt": "Keys, Addresses", "completion": "In the payment portion of a bitcoin transaction, the recipient\u2019s public key is represented by its digital fingerprint, called a bitcoin address, which is used in the same way as the beneficiary name on a check (i.e., \"Pay to the order of\"). In most cases, a bitcoin address is generated from and corresponds to a public key. However, not all bitcoin addresses represent public keys; they can also represent other beneficiaries such as scripts, as we will see later in this chapter. This way, bitcoin addresses abstract the recipient of funds, making transaction destinations flexible, similar to paper checks: a single payment instrument that can be used to pay into people\u2019s accounts, pay into company accounts, pay for bills, or pay to cash. The bitcoin address is the only representation of the keys that users will routinely see, because this is the part they need to share with the world."}
{"prompt": "Keys, Addresses", "completion": "First, we will introduce cryptography and explain the mathematics used in bitcoin. Next, we will look at how keys are generated, stored, and managed. We will review the various encoding formats used to represent private and public keys, addresses, and script addresses. Finally, we will look at advanced use of keys and addresses: vanity, multisignature, and script addresses and paper wallets."}
{"prompt": "Keys, Addresses", "completion": "Public key cryptography was invented in the 1970s and is a mathematical foundation for computer and information security."}
{"prompt": "Keys, Addresses", "completion": "Since the invention of public key cryptography, several suitable mathematical functions, such as prime number exponentiation and elliptic curve multiplication, have been discovered. These mathematical functions are practically irreversible, meaning that they are easy to calculate in one direction and infeasible to calculate in the opposite direction. Based on these mathematical functions, cryptography enables the creation of digital secrets and unforgeable digital signatures. Bitcoin uses elliptic curve multiplication as the basis for its cryptography."}
{"prompt": "Keys, Addresses", "completion": "In bitcoin, we use public key cryptography to create a key pair that controls access to bitcoin. The key pair consists of a private key and\u2014derived from it\u2014a unique public key. The public key is used to receive funds, and the private key is used to sign transactions to spend the funds."}
{"prompt": "Keys, Addresses", "completion": "There is a mathematical relationship between the public and the private key that allows the private key to be used to generate signatures on messages. These signatures can be validated against the public key without revealing the private key."}
{"prompt": "Keys, Addresses", "completion": "When spending bitcoin, the current bitcoin owner presents her public key and a signature (different each time, but created from the same private key) in a transaction to spend those bitcoin. Through the presentation of the public key and signature, everyone in the bitcoin network can verify and accept the transaction as valid, confirming that the person transferring the bitcoin owned them at the time of the transfer."}
{"prompt": "Keys, Addresses", "completion": "In most wallet implementations, the private and public keys are stored together as a key pair for convenience. However, the public key can be calculated from the private key, so storing only the private key is also possible."}
{"prompt": "Keys, Addresses", "completion": "A bitcoin wallet contains a collection of key pairs, each consisting of a private key and a public key. The private key (k) is a number, usually picked at random. From the private key, we use elliptic curve multiplication, a one-way cryptographic function, to generate a public key (K). From the public key (K), we use a one-way cryptographic hash function to generate a bitcoin address (A). In this section, we will start with generating the private key, look at the elliptic curve math that is used to turn that into a public key, and finally, generate a bitcoin address from the public key. The relationship between private key, public key, and bitcoin address is shown in Private key, public key, and bitcoin address."}
{"prompt": "Keys, Addresses", "completion": "Why is asymmetric cryptography used in bitcoin? It\u2019s not used to \"encrypt\" (make secret) the transactions. Rather, the useful property of asymmetric cryptography is the ability to generate digital signatures. A private key can be applied to the digital fingerprint of a transaction to produce a numerical signature. This signature can only be produced by someone with knowledge of the private key. However, anyone with access to the public key and the transaction fingerprint can use them to verify the signature. This useful property of asymmetric cryptography makes it possible for anyone to verify every signature on every transaction, while ensuring that only the owners of private keys can produce valid signatures."}
{"prompt": "Keys, Addresses", "completion": "A private key is simply a number, picked at random. Ownership and control over the private key is the root of user control over all funds associated with the corresponding bitcoin address. The private key is used to create signatures that are required to spend bitcoin by proving ownership of funds used in a transaction. The private key must remain secret at all times, because revealing it to third parties is equivalent to giving them control over the bitcoin secured by that key. The private key must also be backed up and protected from accidental loss, because if it\u2019s lost it cannot be recovered and the funds secured by it are forever lost, too."}
{"prompt": "Keys, Addresses", "completion": "The bitcoin private key is just a number. You can pick your private keys randomly using just a coin, pencil, and paper: toss a coin 256 times and you have the binary digits of a random private key you can use in a bitcoin wallet. The public key can then be generated from the private key."}
{"prompt": "Keys, Addresses", "completion": "The first and most important step in generating keys is to find a secure source of entropy, or randomness. Creating a bitcoin key is essentially the same as \"Pick a number between 1 and 2256.\" The exact method you use to pick that number does not matter as long as it is not predictable or repeatable. Bitcoin software uses the underlying operating system\u2019s random number generators to produce 256 bits of entropy (randomness). Usually, the OS random number generator is initialized by a human source of randomness, which is why you may be asked to wiggle your mouse around for a few seconds."}
{"prompt": "Keys, Addresses", "completion": "More precisely, the private key can be any number between 0 and n - 1 inclusive, where n is a constant (n = 1.1578 * 1077, slightly less than 2256) defined as the order of the elliptic curve used in bitcoin (see Elliptic Curve Cryptography Explained). To create such a key, we randomly pick a 256-bit number and check that it is less than n. In programming terms, this is usually achieved by feeding a larger string of random bits, collected from a cryptographically secure source of randomness, into the SHA256 hash algorithm, which will conveniently produce a 256-bit number. If the result is less than n, we have a suitable private key. Otherwise, we simply try again with another random number."}
{"prompt": "Keys, Addresses", "completion": "Do not write your own code to create a random number or use a \"simple\" random number generator offered by your programming language. Use a cryptographically secure pseudorandom number generator (CSPRNG) with a seed from a source of sufficient entropy. Study the documentation of the random number generator library you choose to make sure it is cryptographically secure. Correct implementation of the CSPRNG is critical to the security of the keys."}
{"prompt": "Keys, Addresses", "completion": "The following is a randomly generated private key (k) shown in hexadecimal format (256 bits shown as 64 hexadecimal digits, each 4 bits):"}
{"prompt": "Keys, Addresses", "completion": "The size of bitcoin\u2019s private key space, (2256) is an unfathomably large number. It is approximately 1077 in decimal. For comparison, the visible universe is estimated to contain 1080 atoms."}
{"prompt": "Keys, Addresses", "completion": "To generate a new key with the Bitcoin Core client (see [ch03_bitcoin_client]), use the getnewaddress command. For security reasons it displays the address only, not the private key. To ask bitcoind to expose the private key, use the dumpprivkey command. The dumpprivkey command shows the private key in a Base58 checksum-encoded format called the Wallet Import Format (WIF), which we will examine in more detail in Private key formats. Here\u2019s an example of generating and displaying a private key using these two commands:"}
{"prompt": "Keys, Addresses", "completion": "The dumpprivkey command opens the wallet and extracts the private key that was generated by the getnewaddress command. It is not possible for bitcoind to know the private key from the address unless they are both stored in the wallet."}
{"prompt": "Keys, Addresses", "completion": "The dumpprivkey command does not generate a private key from an address, as this is impossible. The command simply reveals the private key that is already known to the wallet and which was generated by the getnewaddress command."}
{"prompt": "Keys, Addresses", "completion": "You can also use the Bitcoin Explorer command-line tool (see [appdx_bx]) to generate and display private keys with the commands seed, ec-new, and ec-to-wif:"}
{"prompt": "Keys, Addresses", "completion": "The public key is calculated from the private key using elliptic curve multiplication, which is irreversible: K = k * G, where k is the private key, G is a constant point called the generator point, and K is the resulting public key. The reverse operation, known as \"finding the discrete logarithm\"\u2014calculating k if you know K\u2014is as difficult as trying all possible values of k, i.e., a brute-force search. Before we demonstrate how to generate a public key from a private key, let\u2019s look at elliptic curve cryptography in a bit more detail."}
{"prompt": "Keys, Addresses", "completion": "Elliptic curve multiplication is a type of function that cryptographers call a \"one-way\" function: it is easy to do in one direction (multiplication) and impossible to do in the reverse direction (\"division\", or finding the discrete logarithm). The owner of the private key can easily create the public key and then share it with the world knowing that no one can reverse the function and calculate the private key from the public key. This mathematical trick becomes the basis for unforgeable and secure digital signatures that prove ownership of bitcoin funds."}
{"prompt": "Keys, Addresses", "completion": "Elliptic curve cryptography is a type of asymmetric or public key cryptography based on the discrete logarithm problem as expressed by addition and multiplication on the points of an elliptic curve."}
{"prompt": "Keys, Addresses", "completion": "An elliptic curve is an example of an elliptic curve, similar to that used by bitcoin."}
{"prompt": "Keys, Addresses", "completion": "Bitcoin uses a specific elliptic curve and set of mathematical constants, as defined in a standard called secp256k1, established by the National Institute of Standards and Technology (NIST). The secp256k1 curve is defined by the following function, which produces an elliptic curve:"}
{"prompt": "Keys, Addresses", "completion": "or"}
{"prompt": "Keys, Addresses", "completion": "The mod p (modulo prime number p) indicates that this curve is over a finite field of prime order p, also written as \\(\\( \\mathbb{F}_p \\)\\), where p = 2256 \u2013 232 \u2013 29 \u2013 28 \u2013 27 \u2013 26 \u2013 24 \u2013 1, a very large prime number."}
{"prompt": "Keys, Addresses", "completion": "Because this curve is defined over a finite field of prime order instead of over the real numbers, it looks like a pattern of dots scattered in two dimensions, which makes it difficult to visualize. However, the math is identical to that of an elliptic curve over real numbers. As an example, Elliptic curve cryptography: visualizing an elliptic curve over F(p), with p=17 shows the same elliptic curve over a much smaller finite field of prime order 17, showing a pattern of dots on a grid. The secp256k1 bitcoin elliptic curve can be thought of as a much more complex pattern of dots on a unfathomably large grid."}
{"prompt": "Keys, Addresses", "completion": "So, for example, the following is a point P with coordinates (x,y) that is a point on the secp256k1 curve:"}
{"prompt": "Keys, Addresses", "completion": "Using Python to confirm that this point is on the elliptic curve shows how you can check this yourself using Python:"}
{"prompt": "Keys, Addresses", "completion": "In elliptic curve math, there is a point called the \"point at infinity,\" which roughly corresponds to the role of zero in addition. On computers, it\u2019s sometimes represented by x = y = 0 (which doesn\u2019t satisfy the elliptic curve equation, but it\u2019s an easy separate case that can be checked)."}
{"prompt": "Keys, Addresses", "completion": "There is also a + operator, called \"addition,\" which has some properties similar to the traditional addition of real numbers that gradeschool children learn. Given two points P1 and P2 on the elliptic curve, there is a third point P3 = P1 + P2, also on the elliptic curve."}
{"prompt": "Keys, Addresses", "completion": "Geometrically, this third point P3 is calculated by drawing a line between P1 and P2. This line will intersect the elliptic curve in exactly one additional place. Call this point P3' = (x, y). Then reflect in the x-axis to get P3 = (x, \u2013y)."}
{"prompt": "Keys, Addresses", "completion": "There are a couple of special cases that explain the need for the \"point at infinity.\""}
{"prompt": "Keys, Addresses", "completion": "If P1 and P2 are the same point, the line \"between\" P1 and P2 should extend to be the tangent on the curve at this point P1. This tangent will intersect the curve in exactly one new point. You can use techniques from calculus to determine the slope of the tangent line. These techniques curiously work, even though we are restricting our interest to points on the curve with two integer coordinates!"}
{"prompt": "Keys, Addresses", "completion": "In some cases (i.e., if P1 and P2 have the same x values but different y values), the line between P1 and P2 will be exactly vertical, in which case P3 = \"point at infinity.\""}
{"prompt": "Keys, Addresses", "completion": "If P1 is the \"point at infinity,\" then P1 + P2 = P2. Similarly, if P2 is the point at infinity, then P1 + P2 = P1. This shows how the point at infinity plays the role of zero."}
{"prompt": "Keys, Addresses", "completion": "It turns out that + is associative, which means that (A + B) + C = A + (B + C). That means we can write A + B + C without parentheses and without ambiguity."}
{"prompt": "Keys, Addresses", "completion": "Now that we have defined addition, we can define multiplication in the standard way that extends addition. For a point P on the elliptic curve, if k is a whole number, then kP = P + P + P + \u2026 + P (k times). Note that k is sometimes confusingly called an \"exponent\" in this case."}
{"prompt": "Keys, Addresses", "completion": "Starting with a private key in the form of a randomly generated number k, we multiply it by a predetermined point on the curve called the generator point G to produce another point somewhere else on the curve, which is the corresponding public key K. The generator point is specified as part of the secp256k1 standard and is always the same for all keys in bitcoin:"}
{"prompt": "Keys, Addresses", "completion": "where k is the private key, G is the generator point, and K is the resulting public key, a point on the curve. Because the generator point is always the same for all bitcoin users, a private key k multiplied with G will always result in the same public key K. The relationship between k and K is fixed, but can only be calculated in one direction, from k to K. That\u2019s why a bitcoin address (derived from K) can be shared with anyone and does not reveal the user\u2019s private key (k)."}
{"prompt": "Keys, Addresses", "completion": "A private key can be converted into a public key, but a public key cannot be converted back into a private key because the math only works one way."}
{"prompt": "Keys, Addresses", "completion": "Implementing the elliptic curve multiplication, we take the private key k generated previously and multiply it with the generator point G to find the public key K:"}
{"prompt": "Keys, Addresses", "completion": "Public key K is defined as a point K = (x,y):"}
{"prompt": "Keys, Addresses", "completion": "To visualize multiplication of a point with an integer, we will use the simpler elliptic curve over real numbers\u2014remember, the math is the same. Our goal is to find the multiple kG of the generator point G, which is the same as adding G to itself, k times in a row. In elliptic curves, adding a point to itself is the equivalent of drawing a tangent line on the point and finding where it intersects the curve again, then reflecting that point on the x-axis."}
{"prompt": "Keys, Addresses", "completion": "Elliptic curve cryptography: visualizing the multiplication of a point G by an integer k on an elliptic curve shows the process for deriving G, 2G, 4G, and 8G as a geometric operation on the curve."}
{"prompt": "Keys, Addresses", "completion": "Bitcoin uses the secp256k1 optimized C library to do the elliptic curve math."}
{"prompt": "Keys, Addresses", "completion": "A bitcoin address is a string of digits and characters that can be shared with anyone who wants to send you money. Addresses produced from public keys consist of a string of numbers and letters, beginning with the digit \"1\". Here\u2019s an example of a bitcoin address:"}
{"prompt": "Keys, Addresses", "completion": "The bitcoin address is what appears most commonly in a transaction as the \"recipient\" of the funds. If we compare a bitcoin transaction to a paper check, the bitcoin address is the beneficiary, which is what we write on the line after \"Pay to the order of.\" On a paper check, that beneficiary can sometimes be the name of a bank account holder, but can also include corporations, institutions, or even cash. Because paper checks do not need to specify an account, but rather use an abstract name as the recipient of funds, they are very flexible payment instruments. Bitcoin transactions use a similar abstraction, the bitcoin address, to make them very flexible. A bitcoin address can represent the owner of a private/public key pair, or it can represent something else, such as a payment script, as we will see in [p2sh]. For now, let\u2019s examine the simple case, a bitcoin address that represents, and is derived from, a public key."}
{"prompt": "Keys, Addresses", "completion": "The bitcoin address is derived from the public key through the use of one-way cryptographic hashing. A \"hashing algorithm\" or simply \"hash algorithm\" is a one-way function that produces a fingerprint or \"hash\" of an arbitrary-sized input. Cryptographic hash functions are used extensively in bitcoin: in bitcoin addresses, in script addresses, and in the mining Proof-of-Work algorithm. The algorithms used to make a bitcoin address from a public key are the Secure Hash Algorithm (SHA) and the RACE Integrity Primitives Evaluation Message Digest (RIPEMD), specifically SHA256 and RIPEMD160."}
{"prompt": "Keys, Addresses", "completion": "Starting with the public key K, we compute the SHA256 hash and then compute the RIPEMD160 hash of the result, producing a 160-bit (20-byte) number:"}
{"prompt": "Keys, Addresses", "completion": "where K is the public key and A is the resulting bitcoin address."}
{"prompt": "Keys, Addresses", "completion": "A bitcoin address is not the same as a public key. Bitcoin addresses are derived from a public key using a one-way function."}
{"prompt": "Keys, Addresses", "completion": "Bitcoin addresses are almost always encoded as \"Base58Check\" (see Base58 and Base58Check Encoding), which uses 58 characters (a Base58 number system) and a checksum to help human readability, avoid ambiguity, and protect against errors in address transcription and entry. Base58Check is also used in many other ways in bitcoin, whenever there is a need for a user to read and correctly transcribe a number, such as a bitcoin address, a private key, an encrypted key, or a script hash. In the next section we will examine the mechanics of Base58Check encoding and decoding and the resulting representations. Public key to bitcoin address: conversion of a public key into a bitcoin address illustrates the conversion of a public key into a bitcoin address."}
{"prompt": "Keys, Addresses", "completion": "In order to represent long numbers in a compact way, using fewer symbols, many computer systems use mixed-alphanumeric representations with a base (or radix) higher than 10. For example, whereas the traditional decimal system uses the 10 numerals 0 through 9, the hexadecimal system uses 16, with the letters A through F as the six additional symbols. A number represented in hexadecimal format is shorter than the equivalent decimal representation. Even more compact, Base64 representation uses 26 lowercase letters, 26 capital letters, 10 numerals, and 2 more characters such as \u201c``&#x201d; and \"/\" to transmit binary data over text-based media such as email. Base64 is most commonly used to add binary attachments to email. Base58 is a text-based binary-encoding format developed for use in bitcoin and used in many other cryptocurrencies. It offers a balance between compact representation, readability, and error detection and prevention. Base58 is a subset of Base64, using upper- and lowercase letters and numbers, but omitting some characters that are frequently mistaken for one another and can appear identical when displayed in certain fonts. Specifically, Base58 is Base64 without the 0 (number zero), O (capital o), l (lower L), I (capital i), and the symbols &#x201c;``\u201d and \"/\". Or, more simply, it is a set of lowercase and capital letters and numbers without the four (0, O, l, I) just mentioned. Bitcoin\u2019s Base58 alphabet shows the full Base58 alphabet."}
{"prompt": "Keys, Addresses", "completion": "To add extra security against typos or transcription errors, Base58Check is a Base58 encoding format, frequently used in bitcoin, which has a built-in error-checking code. The checksum is an additional four bytes added to the end of the data that is being encoded. The checksum is derived from the hash of the encoded data and can therefore be used to detect and prevent transcription and typing errors. When presented with Base58Check code, the decoding software will calculate the checksum of the data and compare it to the checksum included in the code. If the two do not match, an error has been introduced and the Base58Check data is invalid. This prevents a mistyped bitcoin address from being accepted by the wallet software as a valid destination, an error that would otherwise result in loss of funds."}
{"prompt": "Keys, Addresses", "completion": "To convert data (a number) into a Base58Check format, we first add a prefix to the data, called the \"version byte,\" which serves to easily identify the type of data that is encoded. For example, in the case of a bitcoin address the prefix is zero (0x00 in hex), whereas the prefix used when encoding a private key is 128 (0x80 in hex). A list of common version prefixes is shown in Base58Check version prefix and encoded result examples."}
{"prompt": "Keys, Addresses", "completion": "Next, we compute the \"double-SHA\" checksum, meaning we apply the SHA256 hash-algorithm twice on the previous result (prefix and data):"}
{"prompt": "Keys, Addresses", "completion": "From the resulting 32-byte hash (hash-of-a-hash), we take only the first four bytes. These four bytes serve as the error-checking code, or checksum. The checksum is concatenated (appended) to the end."}
{"prompt": "Keys, Addresses", "completion": "The result is composed of three items: a prefix, the data, and a checksum. This result is encoded using the Base58 alphabet described previously. Base58Check encoding: a Base58, versioned, and checksummed format for unambiguously encoding bitcoin data illustrates the Base58Check encoding process."}
{"prompt": "Keys, Addresses", "completion": "In bitcoin, most of the data presented to the user is Base58Check-encoded to make it compact, easy to read, and easy to detect errors. The version prefix in Base58Check encoding is used to create easily distinguishable formats, which when encoded in Base58 contain specific characters at the beginning of the Base58Check-encoded payload. These characters make it easy for humans to identify the type of data that is encoded and how to use it. This is what differentiates, for example, a Base58Check-encoded bitcoin address that starts with a 1 from a Base58Check-encoded private key WIF that starts with a 5. Some example version prefixes and the resulting Base58 characters are shown in Base58Check version prefix and encoded result examples."}
{"prompt": "Keys, Addresses", "completion": "Bitcoin Address"}
{"prompt": "Keys, Addresses", "completion": "0x00"}
{"prompt": "Keys, Addresses", "completion": "1"}
{"prompt": "Keys, Addresses", "completion": "Pay-to-Script-Hash Address"}
{"prompt": "Keys, Addresses", "completion": "0x05"}
{"prompt": "Keys, Addresses", "completion": "3"}
{"prompt": "Keys, Addresses", "completion": "Bitcoin Testnet Address"}
{"prompt": "Keys, Addresses", "completion": "0x6F"}
{"prompt": "Keys, Addresses", "completion": "m or n"}
{"prompt": "Keys, Addresses", "completion": "Private Key WIF"}
{"prompt": "Keys, Addresses", "completion": "0x80"}
{"prompt": "Keys, Addresses", "completion": "5, K, or L"}
{"prompt": "Keys, Addresses", "completion": "BIP-38 Encrypted Private Key"}
{"prompt": "Keys, Addresses", "completion": "0x0142"}
{"prompt": "Keys, Addresses", "completion": "6P"}
{"prompt": "Keys, Addresses", "completion": "BIP-32 Extended Public Key"}
{"prompt": "Keys, Addresses", "completion": "0x0488B21E"}
{"prompt": "Keys, Addresses", "completion": "xpub"}
{"prompt": "Keys, Addresses", "completion": "Both private and public keys can be represented in a number of different formats. These representations all encode the same number, even though they look different. These formats are primarily used to make it easy for people to read and transcribe keys without introducing errors."}
{"prompt": "Keys, Addresses", "completion": "The private key can be represented in a number of different formats, all of which correspond to the same 256-bit number. Private key representations (encoding formats) shows three common formats used to represent private keys. Different formats are used in different circumstances. Hexadecimal and raw binary formats are used internally in software and rarely shown to users. The WIF is used for import/export of keys between wallets and often used in QR code (barcode) representations of private keys."}
{"prompt": "Keys, Addresses", "completion": "Raw"}
{"prompt": "Keys, Addresses", "completion": "None"}
{"prompt": "Keys, Addresses", "completion": "32 bytes"}
{"prompt": "Keys, Addresses", "completion": "Hex"}
{"prompt": "Keys, Addresses", "completion": "None"}
{"prompt": "Keys, Addresses", "completion": "64 hexadecimal digits"}
{"prompt": "Keys, Addresses", "completion": "WIF"}
{"prompt": "Keys, Addresses", "completion": "5"}
{"prompt": "Keys, Addresses", "completion": "Base58Check encoding: Base58 with version prefix of 0x80 and 4-byte checksum"}
{"prompt": "Keys, Addresses", "completion": "WIF-compressed"}
{"prompt": "Keys, Addresses", "completion": "K or L"}
{"prompt": "Keys, Addresses", "completion": "As above, with added suffix 0x01 before encoding"}
{"prompt": "Keys, Addresses", "completion": "Example: Same key, different formats shows the private key generated in these three formats."}
{"prompt": "Keys, Addresses", "completion": "Hex"}
{"prompt": "Keys, Addresses", "completion": "1e99423a4ed27608a15a2616a2b0e9e52ced330ac530edcc32c8ffc6a526aedd"}
{"prompt": "Keys, Addresses", "completion": "WIF"}
{"prompt": "Keys, Addresses", "completion": "5J3mBbAH58CpQ3Y5RNJpUKPE62SQ5tfcvU2JpbnkeyhfsYB1Jcn"}
{"prompt": "Keys, Addresses", "completion": "WIF-compressed"}
{"prompt": "Keys, Addresses", "completion": "KxFC1jmwwCoACiCAWZ3eXa96mBM6tb3TYzGmf6YwgdGWZgawvrtJ"}
{"prompt": "Keys, Addresses", "completion": "All of these representations are different ways of showing the same number, the same private key. They look different, but any one format can easily be converted to any other format. Note that the \"raw binary\" is not shown in Example: Same key, different formats as any encoding for display here would, by definition, not be raw binary data."}
{"prompt": "Keys, Addresses", "completion": "We use the wif-to-ec command from Bitcoin Explorer (see [appdx_bx]) to show that both WIF keys represent the same private key:"}
{"prompt": "Keys, Addresses", "completion": "The Bitcoin Explorer commands (see [appdx_bx]) make it easy to write shell scripts and command-line \"pipes\" that manipulate bitcoin keys, addresses, and transactions. You can use Bitcoin Explorer to decode the Base58Check format on the command line."}
{"prompt": "Keys, Addresses", "completion": "We use the base58check-decode command to decode the uncompressed key:"}
{"prompt": "Keys, Addresses", "completion": "The result contains the key as payload, the WIF version prefix 128, and a checksum."}
{"prompt": "Keys, Addresses", "completion": "Notice that the \"payload\" of the compressed key is appended with the suffix 01, signalling that the derived public key is to be compressed:"}
{"prompt": "Keys, Addresses", "completion": "To encode into Base58Check (the opposite of the previous command), we use the base58check-encode command from Bitcoin Explorer (see [appdx_bx]) and provide the hex private key, followed by the WIF version prefix 128:"}
{"prompt": "Keys, Addresses", "completion": "To encode into Base58Check as a \"compressed\" private key (see Compressed private keys), we append the suffix 01 to the hex key and then encode as in the preceding section:"}
{"prompt": "Keys, Addresses", "completion": "The resulting WIF-compressed format starts with a \"K.\" This denotes that the private key within has a suffix of \"01\" and will be used to produce compressed public keys only (see Compressed public keys)."}
{"prompt": "Keys, Addresses", "completion": "Public keys are also presented in different ways, usually as either compressed or uncompressed public keys."}
{"prompt": "Keys, Addresses", "completion": "As we saw previously, the public key is a point on the elliptic curve consisting of a pair of coordinates (x,y). It is usually presented with the prefix 04 followed by two 256-bit numbers: one for the x coordinate of the point, the other for the y coordinate. The prefix 04 is used to distinguish uncompressed public keys from compressed public keys that begin with a 02 or a 03."}
{"prompt": "Keys, Addresses", "completion": "Here\u2019s the public key generated by the private key we created earlier, shown as the coordinates x and y:"}
{"prompt": "Keys, Addresses", "completion": "Here\u2019s the same public key shown as a 520-bit number (130 hex digits) with the prefix 04 followed by x and then y coordinates, as 04 x y:"}
{"prompt": "Keys, Addresses", "completion": "Compressed public keys were introduced to bitcoin to reduce the size of transactions and conserve disk space on nodes that store the bitcoin blockchain database. Most transactions include the public key, which is required to validate the owner\u2019s credentials and spend the bitcoin. Each public key requires 520 bits (prefix + x + y), which when multiplied by several hundred transactions per block, or tens of thousands of transactions per day, adds a significant amount of data to the blockchain."}
{"prompt": "Keys, Addresses", "completion": "As we saw in the section Public Keys, a public key is a point (x,y) on an elliptic curve. Because the curve expresses a mathematical function, a point on the curve represents a solution to the equation and, therefore, if we know the x coordinate we can calculate the y coordinate by solving the equation y2 mod p = (x3 + 7) mod p. That allows us to store only the x coordinate of the public key point, omitting the y coordinate and reducing the size of the key and the space required to store it by 256 bits. An almost 50% reduction in size in every transaction adds up to a lot of data saved over time!"}
{"prompt": "Keys, Addresses", "completion": "Whereas uncompressed public keys have a prefix of 04, compressed public keys start with either a 02 or a 03 prefix. Let\u2019s look at why there are two possible prefixes: because the left side of the equation is y2, the solution for y is a square root, which can have a positive or negative value. Visually, this means that the resulting y coordinate can be above or below the x-axis. As you can see from the graph of the elliptic curve in An elliptic curve, the curve is symmetric, meaning it is reflected like a mirror by the x-axis. So, while we can omit the y coordinate we have to store the sign of y (positive or negative); or in other words, we have to remember if it was above or below the x-axis because each of those options represents a different point and a different public key. When calculating the elliptic curve in binary arithmetic on the finite field of prime order p, the y coordinate is either even or odd, which corresponds to the positive/negative sign as explained earlier. Therefore, to distinguish between the two possible values of y, we store a compressed public key with the prefix 02 if the y is even, and 03 if it is odd, allowing the software to correctly deduce the y coordinate from the x coordinate and uncompress the public key to the full coordinates of the point. Public key compression is illustrated in Public key compression."}
{"prompt": "Keys, Addresses", "completion": "Here\u2019s the same public key generated previously, shown as a compressed public key stored in 264 bits (66 hex digits) with the prefix 03 indicating the y coordinate is odd:"}
{"prompt": "Keys, Addresses", "completion": "This compressed public key corresponds to the same private key, meaning it is generated from the same private key. However, it looks different from the uncompressed public key. More importantly, if we convert this compressed public key to a bitcoin address using the double-hash function (RIPEMD160(SHA256(K))) it will produce a different bitcoin address. This can be confusing, because it means that a single private key can produce a public key expressed in two different formats (compressed and uncompressed) that produce two different bitcoin addresses. However, the private key is identical for both bitcoin addresses."}
{"prompt": "Keys, Addresses", "completion": "Compressed public keys are gradually becoming the default across bitcoin clients, which is having a significant impact on reducing the size of transactions and therefore the blockchain. However, not all clients support compressed public keys yet. Newer clients that support compressed public keys have to account for transactions from older clients that do not support compressed public keys. This is especially important when a wallet application is importing private keys from another bitcoin wallet application, because the new wallet needs to scan the blockchain to find transactions corresponding to these imported keys. Which bitcoin addresses should the bitcoin wallet scan for? The bitcoin addresses produced by uncompressed public keys, or the bitcoin addresses produced by compressed public keys? Both are valid bitcoin addresses, and can be signed for by the private key, but they are different addresses!"}
{"prompt": "Keys, Addresses", "completion": "To resolve this issue, when private keys are exported from a wallet, the WIF that is used to represent them is implemented differently in newer bitcoin wallets, to indicate that these private keys have been used to produce compressed public keys and therefore compressed bitcoin addresses. This allows the importing wallet to distinguish between private keys originating from older or newer wallets and search the blockchain for transactions with bitcoin addresses corresponding to the uncompressed, or the compressed, public keys, respectively. Let\u2019s look at how this works in more detail, in the next section."}
{"prompt": "Keys, Addresses", "completion": "Ironically, the term \"compressed private key\" is a misnomer, because when a private key is exported as WIF-compressed it is actually one byte longer than an \"uncompressed\" private key. That is because the private key has an added one-byte suffix (shown as 01 in hex in Example: Same key, different formats), which signifies that the private key is from a newer wallet and should only be used to produce compressed public keys. Private keys are not themselves compressed and cannot be compressed. The term \"compressed private key\" really means \"private key from which only compressed public keys should be derived,\" whereas \"uncompressed private key\" really means \"private key from which only uncompressed public keys should be derived.\" You should only refer to the export format as \"WIF-compressed\" or \"WIF\" and not refer to the private key itself as \"compressed\" to avoid further confusion."}
{"prompt": "Keys, Addresses", "completion": "Example: Same key, different formats shows the same key, encoded in WIF and WIF-compressed formats."}
{"prompt": "Keys, Addresses", "completion": "Hex"}
{"prompt": "Keys, Addresses", "completion": "1E99423A4ED27608A15A2616A2B0E9E52CED330AC530EDCC32C8FFC6A526AEDD"}
{"prompt": "Keys, Addresses", "completion": "WIF"}
{"prompt": "Keys, Addresses", "completion": "5J3mBbAH58CpQ3Y5RNJpUKPE62SQ5tfcvU2JpbnkeyhfsYB1Jcn"}
{"prompt": "Keys, Addresses", "completion": "Hex-compressed"}
{"prompt": "Keys, Addresses", "completion": "1E99423A4ED27608A15A2616A2B0E9E52CED330AC530EDCC32C8FFC6A526AEDD01"}
{"prompt": "Keys, Addresses", "completion": "WIF-compressed"}
{"prompt": "Keys, Addresses", "completion": "KxFC1jmwwCoACiCAWZ3eXa96mBM6tb3TYzGmf6YwgdGWZgawvrtJ"}
{"prompt": "Keys, Addresses", "completion": "Notice that the hex-compressed private key format has one extra byte at the end (01 in hex). While the Base58Check version prefix is the same (0x80) for both WIF and WIF-compressed formats, the addition of one byte on the end of the number causes the first character of the Base58 encoding to change from a 5 to either a K or L. Think of this as the Base58 equivalent of the decimal encoding difference between the number 100 and the number 99. While 100 is one digit longer than 99, it also has a prefix of 1 instead of a prefix of 9. As the length changes, it affects the prefix. In Base58, the prefix 5 changes to a K or L as the length of the number increases by one byte."}
{"prompt": "Keys, Addresses", "completion": "Remember, these formats are not used interchangeably. In a newer wallet that implements compressed public keys, the private keys will only ever be exported as WIF-compressed (with a K or L prefix). If the wallet is an older implementation and does not use compressed public keys, the private keys will only ever be exported as WIF (with a 5 prefix). The goal here is to signal to the wallet importing these private keys whether it must search the blockchain for compressed or uncompressed public keys and addresses."}
{"prompt": "Keys, Addresses", "completion": "If a bitcoin wallet is able to implement compressed public keys, it will use those in all transactions. The private keys in the wallet will be used to derive the public key points on the curve, which will be compressed. The compressed public keys will be used to produce bitcoin addresses and those will be used in transactions. When exporting private keys from a new wallet that implements compressed public keys, the WIF is modified, with the addition of a one-byte suffix 01 to the private key. The resulting Base58Check-encoded private key is called a \"compressed WIF\" and starts with the letter K or L, instead of starting with \"5\" as is the case with WIF-encoded (noncompressed) keys from older wallets."}
{"prompt": "Keys, Addresses", "completion": "\"Compressed private keys\" is a misnomer! They are not compressed; rather, WIF-compressed signifies that the keys should only be used to derive compressed public keys and their corresponding bitcoin addresses. Ironically, a \"WIF-compressed\" encoded private key is one byte longer because it has the added 01 suffix to distinguish it from an \"uncompressed\" one."}
{"prompt": "Keys, Addresses", "completion": "Let\u2019s look at the complete process of creating a bitcoin address, from a private key, to a public key (a point on the elliptic curve), to a double-hashed address, and finally, the Base58Check encoding. The C++ code in Creating a Base58Check-encoded bitcoin address from a private key shows the complete step-by-step process, from private key to Base58Check-encoded bitcoin address. The code example uses the libbitcoin library introduced in [alt_libraries] for some helper functions."}
{"prompt": "Keys, Addresses", "completion": "The code uses a predefined private key to produce the same bitcoin address every time it is run, as shown in Compiling and running the addr code."}
{"prompt": "Keys, Addresses", "completion": "The code in Compiling and running the addr code produces a bitcoin address (1PRTT...) from a compressed public key (see Compressed public keys). If you used the uncompressed public key instead, it would produce a different bitcoin address (14K1y...)."}
{"prompt": "Keys, Addresses", "completion": "The most comprehensive bitcoin library in Python is pybitcointools by Vitalik Buterin. In Key and address generation and formatting with the pybitcointools library, we use the pybitcointools library (imported as \"bitcoin\") to generate and display keys and addresses in various formats."}
{"prompt": "Keys, Addresses", "completion": "Running key-to-address-ecc-example.py shows the output from running this code."}
{"prompt": "Keys, Addresses", "completion": "A script demonstrating elliptic curve math used for bitcoin keys is another example, using the Python ECDSA library for the elliptic curve math and without using any specialized bitcoin libraries."}
{"prompt": "Keys, Addresses", "completion": "Installing the Python ECDSA library and running the ec_math.py script shows the output produced by running this script."}
{"prompt": "Keys, Addresses", "completion": "A script demonstrating elliptic curve math used for bitcoin keys uses os.urandom, which reflects a cryptographically secure random number generator (CSRNG) provided by the underlying operating system. Caution: Depending on the OS, os.urandom may not be implemented with sufficient security or seeded properly and may not be appropriate for generating production-quality bitcoin keys."}
{"prompt": "Keys, Addresses", "completion": "In the following sections we will look at advanced forms of keys and addresses, such as encrypted private keys, script and multisignature addresses, vanity addresses, and paper wallets."}
{"prompt": "Keys, Addresses", "completion": "As we know, traditional bitcoin addresses begin with the number \u201c1\u201d and are derived from the public key, which is derived from the private key. Although anyone can send bitcoin to a \u201c1\u201d address, that bitcoin can only be spent by presenting the corresponding private key signature and public key."}
{"prompt": "Keys, Addresses", "completion": "Bitcoin addresses that begin with the number \u201c3\u201d are pay-to-script hash (P2SH) addresses, sometimes erroneously called multisignature or multisig addresses. They designate the beneficiary of a bitcoin transaction as the hash of a script, instead of the owner of a public key. The feature was introduced in January 2012 with BIP-16 (see [appdxbitcoinimpproposals]), and is being widely adopted because it provides the opportunity to add functionality to the address itself. Unlike transactions that \"send\" funds to traditional \u201c1\u201d bitcoin addresses, also known as a pay-to-public-key-hash (P2PKH), funds sent to \u201c3\u201d addresses require something more than the presentation of one public key and one private key signature as proof of ownership. The requirements are designated at the time the address is created, within the script, and all inputs to this address will be encumbered with the same requirements."}
{"prompt": "Keys, Addresses", "completion": "A P2SH address is created from a transaction script, which defines who can spend a transaction output (for more details, see [p2sh]). Encoding a P2SH address involves using the same double-hash function as used during creation of a bitcoin address, only applied on the script instead of the public key:"}
{"prompt": "Keys, Addresses", "completion": "The resulting \"script hash\" is encoded with Base58Check with a version prefix of 5, which results in an encoded address starting with a 3. An example of a P2SH address is 3F6i6kwkevjR7AsAd4te2YB2zZyASEm1HM, which can be derived using the Bitcoin Explorer commands script-encode, sha256, ripemd160, and base58check-encode (see [appdx_bx]) as follows:"}
{"prompt": "Keys, Addresses", "completion": "P2SH is not necessarily the same as a multisignature standard transaction. A P2SH address most often represents a multi-signature script, but it might also represent a script encoding other types of transactions."}
{"prompt": "Keys, Addresses", "completion": "Currently, the most common implementation of the P2SH function is the multi-signature address script. As the name implies, the underlying script requires a minimum number of signatures to prove ownership and therefore spend funds. The bitcoin multi-signature feature is designed to require M signatures (also known as the \u201cthreshold\u201d) from a total of N keys, known as an M-of-N multisig, where M is equal to or less than N. For example, Bob the coffee shop owner from [ch01_intro_what_is_bitcoin] could use a multisignature address requiring 1-of-2 signatures from a key belonging to him and a key belonging to his spouse, ensuring either of them could sign to spend a transaction output locked to this address. This would be similar to a \u201cjoint account\u201d as implemented in traditional banking where either spouse can spend with a single signature. Or Gopesh, the web designer paid by Bob to create a website, might have a 2-of-3 multisignature address for his business that ensures that no funds can be spent unless at least two of the business partners sign a transaction."}
{"prompt": "Keys, Addresses", "completion": "We will explore how to create transactions that spend funds from P2SH (and multi-signature) addresses in [transactions]."}
{"prompt": "Keys, Addresses", "completion": "Vanity addresses are valid bitcoin addresses that contain human-readable messages. For example, 1LoveBPzzD72PUXLzCkYAtGFYmK5vYNR33 is a valid address that contains the letters forming the word \"Love\" as the first four Base58 letters. Vanity addresses require generating and testing billions of candidate private keys, until a bitcoin address with the desired pattern is found. Although there are some optimizations in the vanity generation algorithm, the process essentially involves picking a private key at random, deriving the public key, deriving the bitcoin address, and checking to see if it matches the desired vanity pattern, repeating billions of times until a match is found."}
{"prompt": "Keys, Addresses", "completion": "Once a vanity address matching the desired pattern is found, the private key from which it was derived can be used by the owner to spend bitcoin in exactly the same way as any other address. Vanity addresses are no less or more secure than any other address. They depend on the same Elliptic Curve Cryptography (ECC) and SHA as any other address. You can no more easily find the private key of an address starting with a vanity pattern than you can of any other address."}
{"prompt": "Keys, Addresses", "completion": "In [ch01_intro_what_is_bitcoin], we introduced Eugenia, a children\u2019s charity director operating in the Philippines. Let\u2019s say that Eugenia is organizing a bitcoin fundraising drive and wants to use a vanity bitcoin address to publicize the fundraising. Eugenia will create a vanity address that starts with \"1Kids\" to promote the children\u2019s charity fundraiser. Let\u2019s see how this vanity address will be created and what it means for the security of Eugenia\u2019s charity."}
{"prompt": "Keys, Addresses", "completion": "It\u2019s important to realize that a bitcoin address is simply a number represented by symbols in the Base58 alphabet. The search for a pattern like \"1Kids\" can be seen as searching for an address in the range from 1Kids11111111111111111111111111111 to 1Kidszzzzzzzzzzzzzzzzzzzzzzzzzzzzz. There are approximately 5829 (approximately 1.4 * 1051) addresses in that range, all starting with \"1Kids.\" The range of vanity addresses starting with \"1Kids\" shows the range of addresses that have the prefix 1Kids."}
{"prompt": "Keys, Addresses", "completion": "From"}
{"prompt": "Keys, Addresses", "completion": "1Kids11111111111111111111111111111"}
{"prompt": "Keys, Addresses", "completion": "1Kids11111111111111111111111111112"}
{"prompt": "Keys, Addresses", "completion": "1Kids11111111111111111111111111113"}
{"prompt": "Keys, Addresses", "completion": "..."}
{"prompt": "Keys, Addresses", "completion": "To"}
{"prompt": "Keys, Addresses", "completion": "1Kidszzzzzzzzzzzzzzzzzzzzzzzzzzzzz"}
{"prompt": "Keys, Addresses", "completion": "Let\u2019s look at the pattern \"1Kids\" as a number and see how frequently we might find this pattern in a bitcoin address (see The frequency of a vanity pattern (1KidsCharity) and average search time on a desktop PC). An average desktop computer PC, without any specialized hardware, can search approximately 100,000 keys per second."}
{"prompt": "Keys, Addresses", "completion": "1"}
{"prompt": "Keys, Addresses", "completion": "1K"}
{"prompt": "Keys, Addresses", "completion": "1 in 58 keys"}
{"prompt": "Keys, Addresses", "completion": "< 1 milliseconds"}
{"prompt": "Keys, Addresses", "completion": "2"}
{"prompt": "Keys, Addresses", "completion": "1Ki"}
{"prompt": "Keys, Addresses", "completion": "1 in 3,364"}
{"prompt": "Keys, Addresses", "completion": "50 milliseconds"}
{"prompt": "Keys, Addresses", "completion": "3"}
{"prompt": "Keys, Addresses", "completion": "1Kid"}
{"prompt": "Keys, Addresses", "completion": "1 in 195,000"}
{"prompt": "Keys, Addresses", "completion": "< 2 seconds"}
{"prompt": "Keys, Addresses", "completion": "4"}
{"prompt": "Keys, Addresses", "completion": "1Kids"}
{"prompt": "Keys, Addresses", "completion": "1 in 11 million"}
{"prompt": "Keys, Addresses", "completion": "1 minute"}
{"prompt": "Keys, Addresses", "completion": "5"}
{"prompt": "Keys, Addresses", "completion": "1KidsC"}
{"prompt": "Keys, Addresses", "completion": "1 in 656 million"}
{"prompt": "Keys, Addresses", "completion": "1 hour"}
{"prompt": "Keys, Addresses", "completion": "6"}
{"prompt": "Keys, Addresses", "completion": "1KidsCh"}
{"prompt": "Keys, Addresses", "completion": "1 in 38 billion"}
{"prompt": "Keys, Addresses", "completion": "2 days"}
{"prompt": "Keys, Addresses", "completion": "7"}
{"prompt": "Keys, Addresses", "completion": "1KidsCha"}
{"prompt": "Keys, Addresses", "completion": "1 in 2.2 trillion"}
{"prompt": "Keys, Addresses", "completion": "3\u20134 months"}
{"prompt": "Keys, Addresses", "completion": "8"}
{"prompt": "Keys, Addresses", "completion": "1KidsChar"}
{"prompt": "Keys, Addresses", "completion": "1 in 128 trillion"}
{"prompt": "Keys, Addresses", "completion": "13\u201318 years"}
{"prompt": "Keys, Addresses", "completion": "9"}
{"prompt": "Keys, Addresses", "completion": "1KidsChari"}
{"prompt": "Keys, Addresses", "completion": "1 in 7 quadrillion"}
{"prompt": "Keys, Addresses", "completion": "800 years"}
{"prompt": "Keys, Addresses", "completion": "10"}
{"prompt": "Keys, Addresses", "completion": "1KidsCharit"}
{"prompt": "Keys, Addresses", "completion": "1 in 400 quadrillion"}
{"prompt": "Keys, Addresses", "completion": "46,000 years"}
{"prompt": "Keys, Addresses", "completion": "11"}
{"prompt": "Keys, Addresses", "completion": "1KidsCharity"}
{"prompt": "Keys, Addresses", "completion": "1 in 23 quintillion"}
{"prompt": "Keys, Addresses", "completion": "2.5 million years"}
{"prompt": "Keys, Addresses", "completion": "As you can see, Eugenia won\u2019t be creating the vanity address \"1KidsCharity\" anytime soon, even if she had access to several thousand computers. Each additional character increases the difficulty by a factor of 58. Patterns with more than seven characters are usually found by specialized hardware, such as custom-built desktops with multiple GPUs. These are often repurposed bitcoin mining \"rigs\" that are no longer profitable for bitcoin mining but can be used to find vanity addresses. Vanity searches on GPU systems are many orders of magnitude faster than on a general-purpose CPU."}
{"prompt": "Keys, Addresses", "completion": "Another way to find a vanity address is to outsource the work to a pool of vanity miners, such as the pool at Vanity Pool. A pool of this type is a service that allows those with GPU hardware to earn bitcoin searching for vanity addresses for others. For a small payment (0.01 bitcoin or approximately $5 at the time of this writing), Eugenia can outsource the search for a seven-character pattern vanity address and get results in a few hours instead of having to run a CPU search for months."}
{"prompt": "Keys, Addresses", "completion": "Generating a vanity address is a brute-force exercise: try a random key, check the resulting address to see if it matches the desired pattern, repeat until successful. Vanity address miner shows an example of a \"vanity miner,\" a program designed to find vanity addresses, written in C++. The example uses the libbitcoin library, which we introduced in [alt_libraries]."}
{"prompt": "Keys, Addresses", "completion": "Vanity address miner uses std::random_device. Depending on the implementation it may reflect a CSRNG provided by the underlying operating system. In the case of a Unix-like operating system such as Linux, it draws from /dev/urandom. The random number generator used here is for demonstration purposes, and it is not appropriate for generating production-quality bitcoin keys as it is not implemented with sufficient security."}
{"prompt": "Keys, Addresses", "completion": "The example code must be compiled using a C++ compiler and linked against the libbitcoin library (which must be first installed on that system). To run the example, run the vanity-miner executable with no parameters (see Compiling and running the vanity-miner example) and it will attempt to find a vanity address starting with \"1kid.\""}
{"prompt": "Keys, Addresses", "completion": "The example code will take a few seconds to find a match for the three-character pattern \"kid,\" as we can see when we use the time Unix command to measure the execution time. Change the search pattern in the source code and see how much longer it takes for four- or five-character patterns!"}
{"prompt": "Keys, Addresses", "completion": "Vanity addresses can be used to enhance and to defeat security measures; they are truly a double-edged sword. Used to improve security, a distinctive address makes it harder for adversaries to substitute their own address and fool your customers into paying them instead of you. Unfortunately, vanity addresses also make it possible for anyone to create an address that resembles any random address, or even another vanity address, thereby fooling your customers."}
{"prompt": "Keys, Addresses", "completion": "Eugenia could advertise a randomly generated address (e.g., 1J7mdg5rbQyUHENYdx39WVWK7fsLpEoXZy) to which people can send their donations. Or, she could generate a vanity address that starts with 1Kids, to make it more distinctive."}
{"prompt": "Keys, Addresses", "completion": "In both cases, one of the risks of using a single fixed address (rather than a separate dynamic address per donor) is that a thief might be able to infiltrate your website and replace it with his own address, thereby diverting donations to himself. If you have advertised your donation address in a number of different places, your users may visually inspect the address before making a payment to ensure it is the same one they saw on your website, on your email, and on your flyer. In the case of a random address like 1J7mdg5rbQyUHENYdx39WVWK7fsLpEoXZy, the average user will perhaps inspect the first few characters \"1J7mdg\" and be satisfied that the address matches. Using a vanity address generator, someone with the intent to steal by substituting a similar-looking address can quickly generate addresses that match the first few characters, as shown in Generating vanity addresses to match a random address."}
{"prompt": "Keys, Addresses", "completion": "Original Random Address"}
{"prompt": "Keys, Addresses", "completion": "1J7mdg5rbQyUHENYdx39WVWK7fsLpEoXZy"}
{"prompt": "Keys, Addresses", "completion": "Vanity (4-character match)"}
{"prompt": "Keys, Addresses", "completion": "1J7md1QqU4LpctBetHS2ZoyLV5d6dShhEy"}
{"prompt": "Keys, Addresses", "completion": "Vanity (5-character match)"}
{"prompt": "Keys, Addresses", "completion": "1J7mdgYqyNd4ya3UEcq31Q7sqRMXw2XZ6n"}
{"prompt": "Keys, Addresses", "completion": "Vanity (6-character match)"}
{"prompt": "Keys, Addresses", "completion": "1J7mdg5WxGENmwyJP9xuGhG5KRzu99BBCX"}
{"prompt": "Keys, Addresses", "completion": "So does a vanity address increase security? If Eugenia generates the vanity address 1Kids33q44erFfpeXrmDSz7zEqG2FesZEN, users are likely to look at the vanity pattern word and a few characters beyond, for example noticing the \"1Kids33\" part of the address. That would force an attacker to generate a vanity address matching at least six characters (two more), expending an effort that is 3,364 times (58 \u00d7 58) higher than the effort Eugenia expended for her 4-character vanity. Essentially, the effort Eugenia expends (or pays a vanity pool for) \"pushes\" the attacker into having to produce a longer pattern vanity. If Eugenia pays a pool to generate an 8-character vanity address, the attacker would be pushed into the realm of 10 characters, which is infeasible on a personal computer and expensive even with a custom vanity-mining rig or vanity pool. What is affordable for Eugenia becomes unaffordable for the attacker, especially if the potential reward of fraud is not high enough to cover the cost of the vanity address generation."}
{"prompt": "Keys, Addresses", "completion": "Paper wallets are bitcoin private keys printed on paper. Often the paper wallet also includes the corresponding bitcoin address for convenience, but this is not necessary because it can be derived from the private key."}
{"prompt": "Keys, Addresses", "completion": "Paper wallets are an OBSOLETE technology and are dangerous for most users. There are many subtle pitfalls involved in generating them, not least of which the possibility that the generating code is compromised with a \"back door\". Hundreds of bitcoin have been stolen this way. Paper wallets are shown here for informational purposes only and should not be used for storing bitcoin. Use a BIP-39 mnemonic phrase to backup your keys. Use a hardware wallet to store keys and sign transactions. DO NOT USE PAPER WALLETS."}
{"prompt": "Keys, Addresses", "completion": "Paper wallets come in many shapes, sizes, and designs, but at a very basic level are just a key and an address printed on paper. Simplest form of a paper wallet\u2014a printout of the bitcoin address and private key shows the simplest form of a paper wallet."}
{"prompt": "Keys, Addresses", "completion": "1424C2F4bC9JidNjjTUZCbUxv6Sa1Mt62x"}
{"prompt": "Keys, Addresses", "completion": "5J3mBbAH58CpQ3Y5RNJpUKPE62SQ5tfcvU2JpbnkeyhfsYB1Jcn"}
{"prompt": "Keys, Addresses", "completion": "Paper wallets come in many designs and sizes, with many different features. An example of a simple paper wallet shows a sample paper wallet."}
{"prompt": "Keys, Addresses", "completion": "Some are intended to be given as gifts and have seasonal themes, such as Christmas and New Year\u2019s themes. Others are designed for storage in a bank vault or safe with the private key hidden in some way, either with opaque scratch-off stickers, or folded and sealed with tamper-proof adhesive foil."}
{"prompt": "Keys, Addresses", "completion": "Other designs feature additional copies of the key and address, in the form of detachable stubs similar to ticket stubs, allowing you to store multiple copies to protect against fire, flood, or other natural disasters."}
{"prompt": "Wallets", "completion": "The word \"wallet\" is used to describe a few different things in bitcoin."}
{"prompt": "Wallets", "completion": "At a high level, a wallet is an application that serves as the primary user interface. The wallet controls access to a user\u2019s money, managing keys and addresses, tracking the balance, and creating and signing transactions."}
{"prompt": "Wallets", "completion": "More narrowly, from a programmer\u2019s perspective, the word \"wallet\" refers to the data structure used to store and manage a user\u2019s keys."}
{"prompt": "Wallets", "completion": "In this chapter we will look at the second meaning, where wallets are containers for private keys, usually implemented as structured files or simple databases."}
{"prompt": "Wallets", "completion": "In this section we summarize the various technologies used to construct user-friendly, secure, and flexible bitcoin wallets."}
{"prompt": "Wallets", "completion": "A common misconception about bitcoin is that bitcoin wallets contain bitcoin. In fact, the wallet contains only keys. The \"coins\" are recorded in the blockchain on the bitcoin network. Users control the coins on the network by signing transactions with the keys in their wallets. In a sense, a bitcoin wallet is a keychain."}
{"prompt": "Wallets", "completion": "Bitcoin wallets contain keys, not coins. Each user has a wallet containing keys. Wallets are really keychains containing pairs of private/public keys (see [private_public_keys]). Users sign transactions with the keys, thereby proving they own the transaction outputs (their coins). The coins are stored on the blockchain in the form of transaction outputs (often noted as vout or txout)."}
{"prompt": "Wallets", "completion": "There are two primary types of wallets, distinguished by whether the keys they contain are related to each other or not."}
{"prompt": "Wallets", "completion": "The first type is a nondeterministic wallet, where each key is independently generated from a random number. The keys are not related to each other. This type of wallet is also known as a JBOK wallet from the phrase \"Just a Bunch Of Keys.\""}
{"prompt": "Wallets", "completion": "The second type of wallet is a deterministic wallet, where all the keys are derived from a single master key, known as the seed. All the keys in this type of wallet are related to each other and can be generated again if one has the original seed. There are a number of different key derivation methods used in deterministic wallets. The most commonly used derivation method uses a tree-like structure and is known as a hierarchical deterministic or HD wallet."}
{"prompt": "Wallets", "completion": "Deterministic wallets are initialized from a random sequence (entropy). To make these easier to use, random sequences are encoded as English words, also known as mnemonic code words."}
{"prompt": "Wallets", "completion": "The next few sections introduce each of these technologies at a high level."}
{"prompt": "Wallets", "completion": "In the first bitcoin wallet (now called Bitcoin Core), wallets were collections of randomly generated private keys. For example, the original Bitcoin Core client pregenerates 100 random private keys when first started and generates more keys as needed, using each key only once. Such wallets are being replaced with deterministic wallets because they are cumbersome to manage, back up, and import. The disadvantage of random keys is that if you generate many of them you must keep copies of all of them, meaning that the wallet must be backed up frequently. Each key must be backed up, or the funds it controls are irrevocably lost if the wallet becomes inaccessible. This conflicts directly with the principle of avoiding address reuse, by using each bitcoin address for only one transaction. Address reuse reduces privacy by associating multiple transactions and addresses with each other. A Type-0 nondeterministic wallet is a poor choice of wallet, especially if you want to avoid address reuse because it means managing many keys, which creates the need for frequent backups. Although the Bitcoin Core client includes a Type-0 wallet, using this wallet is discouraged by developers of Bitcoin Core. Type-0 nondeterministic (random) wallet: a collection of randomly generated keys shows a nondeterministic wallet, containing a loose collection of random keys."}
{"prompt": "Wallets", "completion": "The use of nondeterministic wallets is discouraged for anything other than simple tests. They are simply too cumbersome to back up and use. Instead, use an industry-standard\u2013based HD wallet with a mnemonic random sequence (entropy, or \"initial seed\") for backup."}
{"prompt": "Wallets", "completion": "Deterministic, or \"seeded,\" wallets are wallets that contain private keys that are all derived from a common seed, through the use of a one-way hash function. The seed is a randomly generated number that is combined with other data, such as an index number or \"chain code\" (see HD Wallets (BIP-32/BIP-44)) to derive the private keys. In a deterministic wallet, the seed is sufficient to recover all the derived keys, and therefore a single backup at creation time is sufficient. The seed is also sufficient for a wallet export or import, allowing for easy migration of all the user\u2019s keys between different wallet implementations. Type-1 deterministic (seeded) wallet: a deterministic sequence of keys derived from a seed shows a logical diagram of a deterministic wallet."}
{"prompt": "Wallets", "completion": "Deterministic wallets were developed to make it easy to derive many keys from a single \"seed\". The most advanced form of deterministic wallets is the HD wallet defined by the BIP-32 standard. HD wallets contain keys derived in a tree structure, such that a parent key can derive a sequence of children keys, each of which can derive a sequence of grandchildren keys, and so on, to an infinite depth. This tree structure is illustrated in Type-2 HD wallet: a tree of keys generated from a single seed."}
{"prompt": "Wallets", "completion": "HD wallets offer two major advantages over random (nondeterministic) keys. First, the tree structure can be used to express additional organizational meaning, such as when a specific branch of subkeys is used to receive incoming payments and a different branch is used to receive change from outgoing payments. Branches of keys can also be used in corporate settings, allocating different branches to departments, subsidiaries, specific functions, or accounting categories."}
{"prompt": "Wallets", "completion": "The second advantage of HD wallets is that users can create a sequence of public keys without having access to the corresponding private keys. This allows HD wallets to be used on an insecure server or in a receive-only capacity, issuing a different public key for each transaction. The public keys do not need to be preloaded or derived in advance, yet the server doesn\u2019t have the private keys that can spend the funds."}
{"prompt": "Wallets", "completion": "HD wallets are a very powerful mechanism for managing many keys and addresses. They are even more useful if they are combined with a standardized way of creating seeds from a sequence of English words that are easy to transcribe, export, and import across wallets. This is known as a mnemonic and the standard is defined by BIP-39. Today, most bitcoin wallets (as well as wallets for other cryptocurrencies) use this standard and can import and export seeds for backup and recovery using interoperable mnemonics."}
{"prompt": "Wallets", "completion": "Let\u2019s look at this from a practical perspective. Which of the following seeds is easier to transcribe, record on paper, read without error, export, and import into another wallet?"}
{"prompt": "Wallets", "completion": "As bitcoin wallet technology has matured, certain common industry standards have emerged that make bitcoin wallets broadly interoperable, easy to use, secure, and flexible. These common standards are:"}
{"prompt": "Wallets", "completion": "Mnemonic code words, based on BIP-39"}
{"prompt": "Wallets", "completion": "HD wallets, based on BIP-32"}
{"prompt": "Wallets", "completion": "Multipurpose HD wallet structure, based on BIP-43"}
{"prompt": "Wallets", "completion": "Multicurrency and multiaccount wallets, based on BIP-44"}
{"prompt": "Wallets", "completion": "These standards may change or may become obsolete by future developments, but for now they form a set of interlocking technologies that have become the de facto wallet standard for bitcoin."}
{"prompt": "Wallets", "completion": "The standards have been adopted by a broad range of software and hardware bitcoin wallets, making all these wallets interoperable. A user can export a mnemonic generated on one of these wallets and import it in another wallet, recovering all transactions, keys, and addresses."}
{"prompt": "Wallets", "completion": "Some example of software wallets supporting these standards include (listed alphabetically) Bluewallet, Breadwallet, Copay, and Multibit HD. Examples of hardware wallets supporting these standards include (listed alphabetically) KeepKey, Ledger, and Trezor."}
{"prompt": "Wallets", "completion": "The following sections examine each of these technologies in detail."}
{"prompt": "Wallets", "completion": "If you are implementing a bitcoin wallet, it should be built as a HD wallet, with a seed derived from, and encoded as, a mnemonic code for backup, following the BIP-32, BIP-39, BIP-43, and BIP-44 standards, as described in the following sections."}
{"prompt": "Wallets", "completion": "In [user-stories] we introduced Gabriel, an enterprising young teenager in Rio de Janeiro, who is running a simple web store that sells bitcoin-branded t-shirts, coffee mugs, and stickers."}
{"prompt": "Wallets", "completion": "Gabriel uses a Trezor bitcoin hardware wallet (A Trezor device: a bitcoin HD wallet in hardware) to securely manage his bitcoin. The Trezor is a simple USB device with two buttons that stores keys (in the form of an HD wallet) and signs transactions. Trezor wallets implement all the industry standards discussed in this chapter, so Gabriel is not reliant on any proprietary technology or single vendor solution."}
{"prompt": "Wallets", "completion": "When Gabriel used the Trezor for the first time, the device generated a random sequence (entropy), the associated mnemonic and derived a seed from a built-in hardware random number generator. During this initialization phase, the wallet displayed a numbered sequence of words, one by one, on the screen (see Trezor displaying one of the mnemonic words)."}
{"prompt": "Wallets", "completion": "By writing down this mnemonic, Gabriel created a backup (see Gabriel\u2019s paper backup of the mnemonic) that can be used for recovery in the case of loss or damage to the Trezor device. This mnemonic can be used for recovery in a new Trezor or in any one of the many compatible software or hardware wallets. Note that the sequence of words is important, so mnemonic paper backups have numbered spaces for each word. Gabriel had to carefully record each word in the numbered space to preserve the correct sequence."}
{"prompt": "Wallets", "completion": "1."}
{"prompt": "Wallets", "completion": "army"}
{"prompt": "Wallets", "completion": "7."}
{"prompt": "Wallets", "completion": "garbage"}
{"prompt": "Wallets", "completion": "2."}
{"prompt": "Wallets", "completion": "van"}
{"prompt": "Wallets", "completion": "8."}
{"prompt": "Wallets", "completion": "claim"}
{"prompt": "Wallets", "completion": "3."}
{"prompt": "Wallets", "completion": "defense"}
{"prompt": "Wallets", "completion": "9."}
{"prompt": "Wallets", "completion": "echo"}
{"prompt": "Wallets", "completion": "4."}
{"prompt": "Wallets", "completion": "carry"}
{"prompt": "Wallets", "completion": "10."}
{"prompt": "Wallets", "completion": "media"}
{"prompt": "Wallets", "completion": "5."}
{"prompt": "Wallets", "completion": "jealous"}
{"prompt": "Wallets", "completion": "11."}
{"prompt": "Wallets", "completion": "make"}
{"prompt": "Wallets", "completion": "6."}
{"prompt": "Wallets", "completion": "true"}
{"prompt": "Wallets", "completion": "12."}
{"prompt": "Wallets", "completion": "crunch"}
{"prompt": "Wallets", "completion": "A 12-word mnemonic is shown in Gabriel\u2019s paper backup of the mnemonic, for simplicity. In fact, most hardware wallets generate a more secure 24-word mnemonic. The mnemonic is used in exactly the same way, regardless of length."}
{"prompt": "Wallets", "completion": "For the first implementation of his web store, Gabriel uses a single bitcoin address, generated on his Trezor device. This single address is used by all customers for all orders. As we will see, this approach has some drawbacks and can be improved upon with an HD wallet."}
{"prompt": "Wallets", "completion": "Let\u2019s now examine each of the important industry standards that are used by many bitcoin wallets in detail."}
{"prompt": "Wallets", "completion": "Mnemonic code words are word sequences that represent (encode) a random number used as a seed to derive a deterministic wallet. The sequence of words is sufficient to re-create the seed and from there re-create the wallet and all the derived keys. A wallet application that implements deterministic wallets with mnemonic words will show the user a sequence of 12 to 24 words when first creating a wallet. That sequence of words is the wallet backup and can be used to recover and re-create all the keys in the same or any compatible wallet application. Mnemonic words make it easier for users to back up wallets because they are easy to read and correctly transcribe, as compared to a random sequence of numbers."}
{"prompt": "Wallets", "completion": "Mnemonic words are often confused with \"brainwallets.\" They are not the same. The primary difference is that a brainwallet consists of words chosen by the user, whereas mnemonic words are created randomly by the wallet and presented to the user. This important difference makes mnemonic words much more secure, because humans are very poor sources of randomness."}
{"prompt": "Wallets", "completion": "Mnemonic codes are defined in BIP-39 (see [appdxbitcoinimpproposals]). Note that BIP-39 is one implementation of a mnemonic code standard. There is a different standard, with a different set of words, used by the Electrum wallet and predating BIP-39. BIP-39 was proposed by the company behind the Trezor hardware wallet and is incompatible with Electrum\u2019s implementation. However, BIP-39 has now achieved broad industry support across dozens of interoperable implementations and should be considered the de facto industry standard."}
{"prompt": "Wallets", "completion": "BIP-39 defines the creation of a mnemonic code and seed, which we describe here in nine steps. For clarity, the process is split into two parts: steps 1 through 6 are shown in Generating mnemonic words and steps 7 through 9 are shown in From mnemonic to seed."}
{"prompt": "Wallets", "completion": "Mnemonic words are generated automatically by the wallet using the standardized process defined in BIP-39. The wallet starts from a source of entropy, adds a checksum, and then maps the entropy to a word list:"}
{"prompt": "Wallets", "completion": "Create a random sequence (entropy) of 128 to 256 bits."}
{"prompt": "Wallets", "completion": "Create a checksum of the random sequence by taking the first (entropy-length/32) bits of its SHA256 hash."}
{"prompt": "Wallets", "completion": "Add the checksum to the end of the random sequence."}
{"prompt": "Wallets", "completion": "Split the result into 11-bit length segments."}
{"prompt": "Wallets", "completion": "Map each 11-bit value to a word from the predefined dictionary of 2048 words."}
{"prompt": "Wallets", "completion": "The mnemonic code is the sequence of words."}
{"prompt": "Wallets", "completion": "Generating entropy and encoding as mnemonic words shows how entropy is used to generate mnemonic words."}
{"prompt": "Wallets", "completion": "Mnemonic codes: entropy and word length shows the relationship between the size of the entropy data and the length of mnemonic codes in words."}
{"prompt": "Wallets", "completion": "128"}
{"prompt": "Wallets", "completion": "4"}
{"prompt": "Wallets", "completion": "132"}
{"prompt": "Wallets", "completion": "12"}
{"prompt": "Wallets", "completion": "160"}
{"prompt": "Wallets", "completion": "5"}
{"prompt": "Wallets", "completion": "165"}
{"prompt": "Wallets", "completion": "15"}
{"prompt": "Wallets", "completion": "192"}
{"prompt": "Wallets", "completion": "6"}
{"prompt": "Wallets", "completion": "198"}
{"prompt": "Wallets", "completion": "18"}
{"prompt": "Wallets", "completion": "224"}
{"prompt": "Wallets", "completion": "7"}
{"prompt": "Wallets", "completion": "231"}
{"prompt": "Wallets", "completion": "21"}
{"prompt": "Wallets", "completion": "256"}
{"prompt": "Wallets", "completion": "8"}
{"prompt": "Wallets", "completion": "264"}
{"prompt": "Wallets", "completion": "24"}
{"prompt": "Wallets", "completion": "The mnemonic words represent entropy with a length of 128 to 256 bits. The entropy is then used to derive a longer (512-bit) seed through the use of the key-stretching function PBKDF2. The seed produced is then used to build a deterministic wallet and derive its keys."}
{"prompt": "Wallets", "completion": "The key-stretching function takes two parameters: the mnemonic and a salt. The purpose of a salt in a key-stretching function is to make it difficult to build a lookup table enabling a brute-force attack. In the BIP-39 standard, the salt has another purpose\u2014it allows the introduction of a passphrase that serves as an additional security factor protecting the seed, as we will describe in more detail in Optional passphrase in BIP-39."}
{"prompt": "Wallets", "completion": "The process described in steps 7 through 9 continues from the process described previously in Generating mnemonic words:"}
{"prompt": "Wallets", "completion": "From mnemonic to seed shows how a mnemonic is used to generate a seed."}
{"prompt": "Wallets", "completion": "The key-stretching function, with its 2048 rounds of hashing, is a very effective protection against brute-force attacks against the mnemonic or the passphrase. It makes it extremely costly (in computation) to try more than a few thousand passphrase and mnemonic combinations, while the number of possible derived seeds is vast (2512)."}
{"prompt": "Wallets", "completion": "Tables #mnemonic_128_no_pass, #mnemonic_128_w_pass, and #mnemonic_256_no_pass show some examples of mnemonic codes and the seeds they produce (either with or without a passphrase)."}
{"prompt": "Wallets", "completion": "Entropy input (128 bits)"}
{"prompt": "Wallets", "completion": "0c1e24e5917779d297e14d45f14e1a1a"}
{"prompt": "Wallets", "completion": "Mnemonic (12 words)"}
{"prompt": "Wallets", "completion": "army van defense carry jealous true garbage claim echo media make crunch"}
{"prompt": "Wallets", "completion": "Passphrase"}
{"prompt": "Wallets", "completion": "(none)"}
{"prompt": "Wallets", "completion": "Seed (512 bits)"}
{"prompt": "Wallets", "completion": "5b56c417303faa3fcba7e57400e120a0ca83ec5a4fc9ffba757fbe63fbd77a89a1a3be4c67196f57c39 a88b76373733891bfaba16ed27a813ceed498804c0570"}
{"prompt": "Wallets", "completion": "Entropy input (128 bits)"}
{"prompt": "Wallets", "completion": "0c1e24e5917779d297e14d45f14e1a1a"}
{"prompt": "Wallets", "completion": "Mnemonic (12 words)"}
{"prompt": "Wallets", "completion": "army van defense carry jealous true garbage claim echo media make crunch"}
{"prompt": "Wallets", "completion": "Passphrase"}
{"prompt": "Wallets", "completion": "SuperDuperSecret"}
{"prompt": "Wallets", "completion": "Seed (512 bits)"}
{"prompt": "Wallets", "completion": "3b5df16df2157104cfdd22830162a5e170c0161653e3afe6c88defeefb0818c793dbb28ab3ab091897d0 715861dc8a18358f80b79d49acf64142ae57037d1d54"}
{"prompt": "Wallets", "completion": "Entropy input (256 bits)"}
{"prompt": "Wallets", "completion": "2041546864449caff939d32d574753fe684d3c947c3346713dd8423e74abcf8c"}
{"prompt": "Wallets", "completion": "Mnemonic (24 words)"}
{"prompt": "Wallets", "completion": "cake apple borrow silk endorse fitness top denial coil riot stay wolf luggage oxygen faint major edit measure invite love trap field dilemma oblige"}
{"prompt": "Wallets", "completion": "Passphrase"}
{"prompt": "Wallets", "completion": "(none)"}
{"prompt": "Wallets", "completion": "Seed (512 bits)"}
{"prompt": "Wallets", "completion": "3269bce2674acbd188d4f120072b13b088a0ecf87c6e4cae41657a0bb78f5315b33b3a04356e53d062e5 5f1e0deaa082df8d487381379df848a6ad7e98798404"}
{"prompt": "Wallets", "completion": "Many wallets do not allow for the creation of wallets with more than a 12 word mnemonic phrase. You will notice from the tables above that despite the unique lengths of entropy input, the seed size remains the same (512 bits). From a security perspective, the amount of entropy actually used for the production of HD wallets is roughly 128 bits, which equals 12 words. Providing more than 12 words produces additional entropy which is unnecessary, and this unused entropy is not used for the derivation of the seed in the way that one might intially suspect. From a usability perspective, 12 words is also easier to write down, back up, and store."}
{"prompt": "Wallets", "completion": "The BIP-39 standard allows the use of an optional passphrase in the derivation of the seed. If no passphrase is used, the mnemonic is stretched with a salt consisting of the constant string \"mnemonic\", producing a specific 512-bit seed from any given mnemonic. If a passphrase is used, the stretching function produces a different seed from that same mnemonic. In fact, given a single mnemonic, every possible passphrase leads to a different seed. Essentially, there is no \"wrong\" passphrase. All passphrases are valid and they all lead to different seeds, forming a vast set of possible uninitialized wallets. The set of possible wallets is so large (2512) that there is no practical possibility of brute-forcing or accidentally guessing one that is in use."}
{"prompt": "Wallets", "completion": "There are no \"wrong\" passphrases in BIP-39. Every passphrase leads to some wallet, which unless previously used will be empty."}
{"prompt": "Wallets", "completion": "The optional passphrase creates two important features:"}
{"prompt": "Wallets", "completion": "A second factor (something memorized) that makes a mnemonic useless on its own, protecting mnemonic backups from compromise by a thief."}
{"prompt": "Wallets", "completion": "A form of plausible deniability or \"duress wallet,\" where a chosen passphrase leads to a wallet with a small amount of funds used to distract an attacker from the \"real\" wallet that contains the majority of funds."}
{"prompt": "Wallets", "completion": "However, it is important to note that the use of a passphrase also introduces the risk of loss:"}
{"prompt": "Wallets", "completion": "If the wallet owner is incapacitated or dead and no one else knows the passphrase, the mnemonic code is useless and all the funds stored in the wallet are lost forever."}
{"prompt": "Wallets", "completion": "Conversely, if the owner backs up the passphrase in the same place as the mnemonic code, it defeats the purpose of a second factor."}
{"prompt": "Wallets", "completion": "While passphrases are very useful, they should only be used in combination with a carefully planned process for backup and recovery, considering the possibility of surviving the owner and allowing his or her family to recover the cryptocurrency estate."}
{"prompt": "Wallets", "completion": "BIP-39 is implemented as a library in many different programming languages:"}
{"prompt": "Wallets", "completion": "The reference implementation of the standard by the SatoshiLabs team that proposed BIP-39, in Python"}
{"prompt": "Wallets", "completion": "An implementation of BIP-39, as part of the popular bitcoinJS framework, in JavaScript"}
{"prompt": "Wallets", "completion": "An implementation of BIP-39, as part of the popular Libbitcoin framework, in C++"}
{"prompt": "Wallets", "completion": "HD wallets are created from a single root seed, which is a 128-, 256-, or 512-bit random number. Most commonly, this seed is generated from a mnemonic as detailed in the previous section."}
{"prompt": "Wallets", "completion": "Every key in the HD wallet is deterministically derived from this root seed, which makes it possible to re-create the entire HD wallet from that seed in any compatible HD wallet. This makes it easy to back up, restore, export, and import HD wallets containing thousands or even millions of keys by simply transferring only the mnemonic that the root seed is derived from."}
{"prompt": "Wallets", "completion": "The process of creating the master keys and master chain code for an HD wallet is shown in Creating master keys and chain code from a root seed."}
{"prompt": "Wallets", "completion": "The root seed is input into the HMAC-SHA512 algorithm and the resulting hash is used to create a master private key (m) and a master chain code (c)."}
{"prompt": "Wallets", "completion": "The master private key (m) then generates a corresponding master public key (M) using the normal elliptic curve multiplication process m * G that we saw in [pubkey]."}
{"prompt": "Wallets", "completion": "The chain code (c) is used to introduce entropy in the function that creates child keys from parent keys, as we will see in the next section."}
{"prompt": "Wallets", "completion": "HD wallets use a child key derivation (CKD) function to derive child keys from parent keys."}
{"prompt": "Wallets", "completion": "The child key derivation functions are based on a one-way hash function that combines:"}
{"prompt": "Wallets", "completion": "A parent private or public key (ECDSA compressed key)"}
{"prompt": "Wallets", "completion": "A seed called a chain code (256 bits)"}
{"prompt": "Wallets", "completion": "An index number (32 bits)"}
{"prompt": "Wallets", "completion": "The chain code is used to introduce deterministic random data to the process, so that knowing the index and a child key is not sufficient to derive other child keys. Knowing a child key does not make it possible to find its siblings, unless you also have the chain code. The initial chain code seed (at the root of the tree) is made from the seed, while subsequent child chain codes are derived from each parent chain code."}
{"prompt": "Wallets", "completion": "These three items (parent key, chain code, and index) are combined and hashed to generate children keys, as follows."}
{"prompt": "Wallets", "completion": "The parent public key, chain code, and the index number are combined and hashed with the HMAC-SHA512 algorithm to produce a 512-bit hash. This 512-bit hash is split into two 256-bit halves. The right-half 256 bits of the hash output become the chain code for the child. The left-half 256 bits of the hash are added to the parent key to produce the child private key. In Extending a parent private key to create a child private key, we see this illustrated with the index set to 0 to produce the \"zero\" (first by index) child of the parent."}
{"prompt": "Wallets", "completion": "Changing the index allows us to extend the parent and create the other children in the sequence, e.g., Child 0, Child 1, Child 2, etc. Each parent key can have 2,147,483,647 (231) children (231 is half of the entire 232 range available because the other half is reserved for a special type of derivation we will talk about later in this chapter)."}
{"prompt": "Wallets", "completion": "Repeating the process one level down the tree, each child can in turn become a parent and create its own children, in an infinite number of generations."}
{"prompt": "Wallets", "completion": "Child private keys are indistinguishable from nondeterministic (random) keys. Because the derivation function is a one-way function, the child key cannot be used to find the parent key. The child key also cannot be used to find any siblings. If you have the nth child, you cannot find its siblings, such as the n\u20131 child or the n+1 child, or any other children that are part of the sequence. Only the parent key and chain code can derive all the children. Without the child chain code, the child key cannot be used to derive any grandchildren either. You need both the child private key and the child chain code to start a new branch and derive grandchildren."}
{"prompt": "Wallets", "completion": "So what can the child private key be used for on its own? It can be used to make a public key and a bitcoin address. Then, it can be used to sign transactions to spend anything paid to that address."}
{"prompt": "Wallets", "completion": "A child private key, the corresponding public key, and the bitcoin address are all indistinguishable from keys and addresses created randomly. The fact that they are part of a sequence is not visible outside of the HD wallet function that created them. Once created, they operate exactly as \"normal\" keys."}
{"prompt": "Wallets", "completion": "As we saw earlier, the key derivation function can be used to create children at any level of the tree, based on the three inputs: a key, a chain code, and the index of the desired child. The two essential ingredients are the key and chain code, and combined these are called an extended key. The term \"extended key\" could also be thought of as \"extensible key\" because such a key can be used to derive children."}
{"prompt": "Wallets", "completion": "Extended keys are stored and represented simply as the concatenation of the 256-bit key and 256-bit chain code into a 512-bit sequence. There are two types of extended keys. An extended private key is the combination of a private key and chain code and can be used to derive child private keys (and from them, child public keys). An extended public key is a public key and chain code, which can be used to create child public keys (public only), as described in [public_key_derivation]."}
{"prompt": "Wallets", "completion": "Think of an extended key as the root of a branch in the tree structure of the HD wallet. With the root of the branch, you can derive the rest of the branch. The extended private key can create a complete branch, whereas the extended public key can only create a branch of public keys."}
{"prompt": "Wallets", "completion": "An extended key consists of a private or public key and chain code. An extended key can create children, generating its own branch in the tree structure. Sharing an extended key gives access to the entire branch."}
{"prompt": "Wallets", "completion": "Extended keys are encoded using Base58Check, to easily export and import between different BIP-32\u2013compatible wallets. The Base58Check coding for extended keys uses a special version number that results in the prefix \"xprv\" and \"xpub\" when encoded in Base58 characters to make them easily recognizable. Because the extended key is 512 or 513 bits, it is also much longer than other Base58Check-encoded strings we have seen previously."}
{"prompt": "Wallets", "completion": "Here\u2019s an example of an extended private key, encoded in Base58Check:"}
{"prompt": "Wallets", "completion": "Here\u2019s the corresponding extended public key, encoded in Base58Check:"}
{"prompt": "Wallets", "completion": "As mentioned previously, a very useful characteristic of HD wallets is the ability to derive public child keys from public parent keys, without having the private keys. This gives us two ways to derive a child public key: either from the child private key, or directly from the parent public key."}
{"prompt": "Wallets", "completion": "An extended public key can be used, therefore, to derive all of the public keys (and only the public keys) in that branch of the HD wallet structure."}
{"prompt": "Wallets", "completion": "This shortcut can be used to create very secure public key\u2013only deployments where a server or application has a copy of an extended public key and no private keys whatsoever. That kind of deployment can produce an infinite number of public keys and bitcoin addresses, but cannot spend any of the money sent to those addresses. Meanwhile, on another, more secure server, the extended private key can derive all the corresponding private keys to sign transactions and spend the money."}
{"prompt": "Wallets", "completion": "One common application of this solution is to install an extended public key on a web server that serves an ecommerce application. The web server can use the public key derivation function to create a new bitcoin address for every transaction (e.g., for a customer shopping cart). The web server will not have any private keys that would be vulnerable to theft. Without HD wallets, the only way to do this is to generate thousands of bitcoin addresses on a separate secure server and then preload them on the ecommerce server. That approach is cumbersome and requires constant maintenance to ensure that the ecommerce server doesn\u2019t \"run out\" of addresses."}
{"prompt": "Wallets", "completion": "Another common application of this solution is for cold-storage or hardware wallets. In that scenario, the extended private key can be stored on a paper wallet or hardware device (such as a Trezor hardware wallet), while the extended public key can be kept online. The user can create \"receive\" addresses at will, while the private keys are safely stored offline. To spend the funds, the user can use the extended private key on an offline signing bitcoin client or sign transactions on the hardware wallet device (e.g., Trezor). Extending a parent public key to create a child public key illustrates the mechanism for extending a parent public key to derive child public keys."}
{"prompt": "Wallets", "completion": "The ability to derive a branch of public keys from an xpub is very useful, but it comes with a potential risk. Access to an xpub does not give access to child private keys. However, because the xpub contains the chain code, if a child private key is known, or somehow leaked, it can be used with the chain code to derive all the other child private keys. A single leaked child private key, together with a parent chain code, reveals all the private keys of all the children. Worse, the child private key together with a parent chain code can be used to deduce the parent private key."}
{"prompt": "Wallets", "completion": "To counter this risk, HD wallets use an alternative derivation function called hardened derivation, which \"breaks\" the relationship between parent public key and child chain code. The hardened derivation function uses the parent private key to derive the child chain code, instead of the parent public key. This creates a \"firewall\" in the parent/child sequence, with a chain code that cannot be used to compromise a parent or sibling private key. The hardened derivation function looks almost identical to the normal child private key derivation, except that the parent private key is used as input to the hash function, instead of the parent public key, as shown in the diagram in Hardened derivation of a child key; omits the parent public key."}
{"prompt": "Wallets", "completion": "When the hardened private derivation function is used, the resulting child private key and chain code are completely different from what would result from the normal derivation function. The resulting \"branch\" of keys can be used to produce extended public keys that are not vulnerable, because the chain code they contain cannot be exploited to reveal any private keys. Hardened derivation is therefore used to create a \"gap\" in the tree above the level where extended public keys are used."}
{"prompt": "Wallets", "completion": "In simple terms, if you want to use the convenience of an xpub to derive branches of public keys, without exposing yourself to the risk of a leaked chain code, you should derive it from a hardened parent key, rather than a normal (non-hardened) parent key. As a best practice, the level-1 children of the master keys are always derived through the hardened derivation, to prevent compromise of the master keys."}
{"prompt": "Wallets", "completion": "The index number used in the derivation function is a 32-bit integer. To easily distinguish between keys derived through the normal derivation function versus keys derived through hardened derivation, this index number is split into two ranges. Index numbers between 0 and 231\u20131 (0x0 to 0x7FFFFFFF) are used only for normal derivation. Index numbers between 231 and 232\u20131 (0x80000000 to 0xFFFFFFFF) are used only for hardened derivation. Therefore, if the index number is less than 231, the child is normal, whereas if the index number is equal or above 231, the child is hardened."}
{"prompt": "Wallets", "completion": "To make the index number easier to read and display, the index number for hardened children is displayed starting from zero, but with a prime symbol. The first normal child key is therefore displayed as 0, whereas the first hardened child (index 0x80000000) is displayed as 0&#x27;. In sequence then, the second hardened key would have index 0x80000001 and would be displayed as 1&#x27;, and so on. When you see an HD wallet index i&#x27;, that means 231+i."}
{"prompt": "Wallets", "completion": "Keys in an HD wallet are identified using a \"path\" naming convention, with each level of the tree separated by a slash (/) character (see HD wallet path examples). Private keys derived from the master private key start with \"m.\" Public keys derived from the master public key start with \"M.\" Therefore, the first child private key of the master private key is m/0. The first child public key is M/0. The second grandchild of the first child is m/0/1, and so on."}
{"prompt": "Wallets", "completion": "The \"ancestry\" of a key is read from right to left, until you reach the master key from which it was derived. For example, identifier m/x/y/z describes the private key that is the z-th child of the parent private key m/x/y, which is the y-th child of the parent private key m/x, which is the x-th child of the parent master private key m."}
{"prompt": "Wallets", "completion": "m/0"}
{"prompt": "Wallets", "completion": "The first (0) child private key from the master private key (m)"}
{"prompt": "Wallets", "completion": "m/0/0"}
{"prompt": "Wallets", "completion": "The first (0) child private key from the first child (m/0)"}
{"prompt": "Wallets", "completion": "m/0'/0"}
{"prompt": "Wallets", "completion": "The first (0) normal child from the first hardened child (m/0')"}
{"prompt": "Wallets", "completion": "m/1/0"}
{"prompt": "Wallets", "completion": "The first (0) child private key from the second child (m/1)"}
{"prompt": "Wallets", "completion": "M/23/17/0/0"}
{"prompt": "Wallets", "completion": "The first (0) child public key from the first child (M/23/17/0) from the 18th child (M/23/17) from the 24th child (M/23)"}
{"prompt": "Wallets", "completion": "The HD wallet tree structure offers tremendous flexibility. Each parent extended key can have 4 billion children: 2 billion normal children and 2 billion hardened children. Each of those children can have another 4 billion children, and so on. The tree can be as deep as you want, with an infinite number of generations. With all that flexibility, however, it becomes quite difficult to navigate this infinite tree. It is especially difficult to transfer HD wallets between implementations, because the possibilities for internal organization into branches and subbranches are endless."}
{"prompt": "Wallets", "completion": "Two BIPs offer a solution to this complexity by creating some proposed standards for the structure of HD wallet trees. BIP-43 proposes the use of the first hardened child index as a special identifier that signifies the \"purpose\" of the tree structure. Based on BIP-43, an HD wallet should use only one level-1 branch of the tree, with the index number identifying the structure and namespace of the rest of the tree by defining its purpose. For example, an HD wallet using only branch m/i&#x27;/ is intended to signify a specific purpose and that purpose is identified by index number \"i.\""}
{"prompt": "Wallets", "completion": "Extending that specification, BIP-44 proposes a multiaccount structure as \"purpose\" number 44' under BIP-43. All HD wallets following the BIP-44 structure are identified by the fact that they only used one branch of the tree: m/44'/."}
{"prompt": "Wallets", "completion": "BIP-44 specifies the structure as consisting of five predefined tree levels:"}
{"prompt": "Wallets", "completion": "The first-level \"purpose\" is always set to 44'. The second-level \"coin_type\" specifies the type of cryptocurrency coin, allowing for multicurrency HD wallets where each currency has its own subtree under the second level. There are three currencies defined for now: Bitcoin is m/44'/0', Bitcoin Testnet is m/44&#x27;/1&#x27;, and Litecoin is m/44&#x27;/2&#x27;."}
{"prompt": "Wallets", "completion": "The third level of the tree is \"account,\" which allows users to subdivide their wallets into separate logical subaccounts, for accounting or organizational purposes. For example, an HD wallet might contain two bitcoin \"accounts\": m/44&#x27;/0&#x27;/0&#x27; and m/44&#x27;/0&#x27;/1&#x27;. Each account is the root of its own subtree."}
{"prompt": "Wallets", "completion": "On the fourth level, \"change,\" an HD wallet has two subtrees, one for creating receiving addresses and one for creating change addresses. Note that whereas the previous levels used hardened derivation, this level uses normal derivation. This is to allow this level of the tree to export extended public keys for use in a nonsecured environment. Usable addresses are derived by the HD wallet as children of the fourth level, making the fifth level of the tree the \"address_index.\" For example, the third receiving address for bitcoin payments in the primary account would be M/44&#x27;/0&#x27;/0&#x27;/0/2. BIP-44 HD wallet structure examples shows a few more examples."}
{"prompt": "Wallets", "completion": "M/44&#x27;/0&#x27;/0&#x27;/0/2"}
{"prompt": "Wallets", "completion": "The third receiving public key for the primary bitcoin account"}
{"prompt": "Wallets", "completion": "M/44&#x27;/0&#x27;/3&#x27;/1/14"}
{"prompt": "Wallets", "completion": "The fifteenth change-address public key for the fourth bitcoin account"}
{"prompt": "Wallets", "completion": "m/44&#x27;/2&#x27;/0&#x27;/0/1"}
{"prompt": "Wallets", "completion": "The second private key in the Litecoin main account, for signing transactions"}
{"prompt": "Wallets", "completion": "Let\u2019s see how HD wallets are used by continuing our story with Gabriel\u2019s web store."}
{"prompt": "Wallets", "completion": "Gabriel first set up his web store as a hobby, based on a simple hosted Wordpress page. His store was quite basic with only a few pages and an order form with a single bitcoin address."}
{"prompt": "Wallets", "completion": "Gabriel used the first bitcoin address generated by his Trezor device as the main bitcoin address for his store. This way, all incoming payments would be paid to an address controlled by his Trezor hardware wallet."}
{"prompt": "Wallets", "completion": "Customers would submit an order using the form and send payment to Gabriel\u2019s published bitcoin address, triggering an email with the order details for Gabriel to process. With just a few orders each week, this system worked well enough."}
{"prompt": "Wallets", "completion": "However, the little web store became quite successful and attracted many orders from the local community. Soon, Gabriel was overwhelmed. With all the orders paying the same address, it became difficult to correctly match orders and transactions, especially when multiple orders for the same amount came in close together."}
{"prompt": "Wallets", "completion": "Gabriel\u2019s HD wallet offers a much better solution through the ability to derive public child keys without knowing the private keys. Gabriel can load an extended public key (xpub) on his website, which can be used to derive a unique address for every customer order. Gabriel can spend the funds from his Trezor, but the xpub loaded on the website can only generate addresses and receive funds. This feature of HD wallets is a great security feature. Gabriel\u2019s website does not contain any private keys and therefore does not need high levels of security."}
{"prompt": "Wallets", "completion": "To export the xpub, Gabriel uses the web-based software in conjunction with the Trezor hardware wallet. The Trezor device must be plugged in for the public keys to be exported. Note that hardware wallets will never export private keys\u2014those always remain on the device. Exporting an xpub from a Trezor hardware wallet shows the web interface Gabriel uses to export the xpub."}
{"prompt": "Wallets", "completion": "Gabriel copies the xpub to his web store\u2019s bitcoin shop software. He uses BTCPay Server, which is an open source web-store for a variety of web hosting and content platforms. BTCPay Server uses the xpub to generate a unique address for every purchase."}
{"prompt": "Wallets", "completion": "Gabriel\u2019s business is flourishing. He has provided his extended public key (xpub) to BTCPay Server, which is generating unique addresses for customers to his website. Every time a customer to Gabriel\u2019s website clicks on the \"Checkout\" button with a specified payment modality (in this case, bitcoin), BTCPay Server generates a new address for that customer. More specifically, BTCPay Server iterates on the address_index tree to create a new address to display to the customer, as defined by BIP-44. If the customer decides to switch payment methods or abandon the transaction entirely, this bitcoin address goes unused and will not be used for another customer right away."}
{"prompt": "Wallets", "completion": "At a single moment in time, Gabriel\u2019s website may have a large volume of outstanding addresses for customers making purchases, some of which may go unused and eventually expire. Once these addresses expire, BTCPay Server will go back to reuse these addresses to fill the gap in address_index, but it becomes clear how there can be gaps between the address_index leaves of the hierarchical deterministic tree where the money is actually located."}
{"prompt": "Wallets", "completion": "Let\u2019s say that Gabriel is interested in viewing his total amount of bitcoin earned on a watch-only wallet (one that allows you to view transaction history, but not spend funds) that is separate from BTCPay Server but also conforms to the BIP-44 standard. How should this separate wallet go about searching for funds in this vast hierarchical tree, and when should it stop looking? Most wallets will typically follow an iterative process that utilizes a predefined limit, known as the gap limit. If, while searching for used addresses, the wallet doesn\u2019t find used addresses in a row beyond this limit number, it will stop searching the address chain. The default gap limit is typically set to 20. This is detailed in BIP-44."}
{"prompt": "Wallets", "completion": "Gap limits explain the phenomenon whereby the importing of a wallet may show an incorrect or zero balance. The funds are not lost, but rather, the wallet importing function has not traversed enough leaves to fully detect funds. Many wallets allow this default gap limit to be changed, and Gabriel may need to increase this limit to allow his wallet to fully import his transaction history."}
{"prompt": "Transactions", "completion": "Transactions are the most important part of the bitcoin system. Everything else in bitcoin is designed to ensure that transactions can be created, propagated on the network, validated, and finally added to the global ledger of transactions (the blockchain). Transactions are data structures that encode the transfer of value between participants in the bitcoin system. Each transaction is a public entry in bitcoin\u2019s blockchain, the global double-entry bookkeeping ledger."}
{"prompt": "Transactions", "completion": "In this chapter we will examine all the various forms of transactions, what they contain, how to create them, how they are verified, and how they become part of the permanent record of all transactions. When we use the term \"wallet\" in this chapter, we are referring to the software that constructs transactions, not just the database of keys."}
{"prompt": "Transactions", "completion": "In [ch02_bitcoin_overview], we looked at the transaction Alice used to pay for coffee at Bob\u2019s coffee shop using a block explorer (Alice\u2019s transaction to Bob\u2019s Cafe)."}
{"prompt": "Transactions", "completion": "The block explorer application shows a transaction from Alice\u2019s \"address\" to Bob\u2019s \"address.\" This is a much simplified view of what is contained in a transaction. In fact, as we will see in this chapter, much of the information shown is constructed by the block explorer and is not actually in the transaction."}
{"prompt": "Transactions", "completion": "Behind the scenes, an actual transaction looks very different from a transaction provided by a typical block explorer. In fact, most of the high-level constructs we see in the various bitcoin application user interfaces do not actually exist in the bitcoin system."}
{"prompt": "Transactions", "completion": "We can use Bitcoin Core\u2019s command-line interface (getrawtransaction and decoderawtransaction) to retrieve Alice\u2019s \"raw\" transaction, decode it, and see what it contains. The result looks like this:"}
{"prompt": "Transactions", "completion": "You may notice a few things about this transaction, mostly the things that are missing! Where is Alice\u2019s address? Where is Bob\u2019s address? Where is the 0.1 input \"sent\" by Alice? In bitcoin, there are no coins, no senders, no recipients, no balances, no accounts, and no addresses. All those things are constructed at a higher level for the benefit of the user, to make things easier to understand."}
{"prompt": "Transactions", "completion": "You may also notice a lot of strange and indecipherable fields and hexadecimal strings. Don\u2019t worry, we will explain each field shown here in detail in this chapter."}
{"prompt": "Transactions", "completion": "The fundamental building block of a bitcoin transaction is a transaction output. Transaction outputs are indivisible chunks of bitcoin currency, recorded on the blockchain, and recognized as valid by the entire network. Bitcoin full nodes track all available and spendable outputs, known as unspent transaction outputs, or UTXO. The collection of all UTXO is known as the UTXO set and currently numbers in the millions of UTXO. The UTXO set grows as new UTXO is created and shrinks when UTXO is consumed. Every transaction represents a change (state transition) in the UTXO set."}
{"prompt": "Transactions", "completion": "When we say that a user\u2019s wallet has \"received\" bitcoin, what we mean is that the wallet has detected on the blockchain an UTXO that can be spent with one of the keys controlled by that wallet. Thus, a user\u2019s bitcoin \"balance\" is the sum of all UTXO that user\u2019s wallet can spend and which may be scattered among hundreds of transactions and hundreds of blocks. The concept of a balance is created by the wallet application. The wallet calculates the user\u2019s balance by scanning the blockchain and aggregating the value of any UTXO the wallet can spend with the keys it controls. Most wallets maintain a database or use a database service to store a quick reference set of all the UTXO they can spend with the keys they control."}
{"prompt": "Transactions", "completion": "Transaction chain from Joe to Gopesh being built on the blockchain displays the blockchain in three different moments, as the transaction chain from Joe to Gopesh is being built. Notice how each transaction spends an UTXO that was created in a previous transaction, turning it into a spent transaction output, or STXO. Since transaction #1 (from Joe to Alice) spends a single UTXO (from Joe) and creates a single UTXO (to Alice), it doesn\u2019t modify the UTXO set size. On the other hand, transactions #2 and #3 both create change outputs to the sender, spending a single UTXO and creating two UTXO (the payment and the change output). Therefore, each of them increases the UTXO set size by 1."}
{"prompt": "Transactions", "completion": "A transaction output can have an arbitrary (integer) value denominated as a multiple of satoshis. Just as dollars can be divided down to two decimal places as cents, bitcoin can be divided down to eight decimal places as satoshis. Although an output can have any arbitrary value, once created it is indivisible. This is an important characteristic of outputs that needs to be emphasized: outputs are discrete and indivisible units of value, denominated in integer satoshis. An unspent output can only be consumed in its entirety by a transaction."}
{"prompt": "Transactions", "completion": "If an UTXO is larger than the desired value of a transaction, it must still be consumed in its entirety and change must be generated in the transaction. In other words, if you have an UTXO worth 20 bitcoin and want to pay only 1 bitcoin, your transaction must consume the entire 20-bitcoin UTXO and produce two outputs: one paying 1 bitcoin to your desired recipient and another paying 19 bitcoin in change back to your wallet. As a result of the indivisible nature of transaction outputs, most bitcoin transactions will have to generate change."}
{"prompt": "Transactions", "completion": "Imagine a shopper buying a $1.50 beverage, reaching into her wallet and trying to find a combination of coins and bank notes to cover the $1.50 cost. The shopper will choose exact change if available e.g. a dollar bill and two quarters (a quarter is $0.25), or a combination of smaller denominations (six quarters), or if necessary, a larger unit such as a $5 note. If she hands too much money, say $5, to the shop owner, she will expect $3.50 change, which she will return to her wallet and have available for future transactions."}
{"prompt": "Transactions", "completion": "Similarly, a bitcoin transaction must be created from a user\u2019s UTXO in whatever denominations that user has available. Users cannot cut an UTXO in half any more than they can cut a dollar bill in half and use it as currency. The user\u2019s wallet application will typically select from the user\u2019s available UTXO to compose an amount greater than or equal to the desired transaction amount."}
{"prompt": "Transactions", "completion": "As with real life, the bitcoin application can use several strategies to satisfy the purchase amount: combining several smaller units, finding exact change, or using a single unit larger than the transaction value and making change. All of this complex assembly of spendable UTXO is done by the user\u2019s wallet automatically and is invisible to users. It is only relevant if you are programmatically constructing raw transactions from UTXO."}
{"prompt": "Transactions", "completion": "A transaction consumes previously recorded unspent transaction outputs and creates new transaction outputs that can be consumed by a future transaction. This way, chunks of bitcoin value move forward from owner to owner in a chain of transactions consuming and creating UTXO."}
{"prompt": "Transactions", "completion": "The exception to the output and input chain is a special type of transaction called the coinbase transaction, which is the first transaction in each block. This transaction is placed there by the \"winning\" miner and creates brand-new bitcoin payable to that miner as a reward for mining. This special coinbase transaction does not consume UTXO; instead, it has a special type of input called the \"coinbase.\" This is how bitcoin\u2019s money supply is created during the mining process, as we will see in [mining]."}
{"prompt": "Transactions", "completion": "What comes first? Inputs or outputs, the chicken or the egg? Strictly speaking, outputs come first because coinbase transactions, which generate new bitcoin, have no inputs and create outputs from nothing."}
{"prompt": "Transactions", "completion": "Every bitcoin transaction creates outputs, which are recorded on the bitcoin ledger. Almost all of these outputs, with one exception (see [op_return]) create spendable chunks of bitcoin called UTXO, which are then recognized by the whole network and available for the owner to spend in a future transaction."}
{"prompt": "Transactions", "completion": "UTXO are tracked by every full-node bitcoin client in the UTXO set. New transactions consume (spend) one or more of these outputs from the UTXO set."}
{"prompt": "Transactions", "completion": "Transaction outputs consist of two parts:"}
{"prompt": "Transactions", "completion": "An amount of bitcoin, denominated in satoshis, the smallest bitcoin unit"}
{"prompt": "Transactions", "completion": "A cryptographic puzzle that determines the conditions required to spend the output"}
{"prompt": "Transactions", "completion": "The cryptographic puzzle is also known as a locking script, a witness script, or a scriptPubKey."}
{"prompt": "Transactions", "completion": "The transaction scripting language, used in the locking script mentioned previously, is discussed in detail in Transaction Scripts and Script Language."}
{"prompt": "Transactions", "completion": "Now, let\u2019s look at Alice\u2019s transaction (shown previously in Transactions\u2014Behind the Scenes) and see if we can identify the outputs. In the JSON encoding, the outputs are in an array (list) named vout:"}
{"prompt": "Transactions", "completion": "As you can see, the transaction contains two outputs. Each output is defined by a value and a cryptographic puzzle. In the encoding shown by Bitcoin Core, the value is shown in bitcoin, but in the transaction itself it is recorded as an integer denominated in satoshis. The second part of each output is the cryptographic puzzle that sets the conditions for spending. Bitcoin Core shows this as scriptPubKey and shows us a human-readable representation of the script."}
{"prompt": "Transactions", "completion": "The topic of locking and unlocking UTXO will be discussed later, in Script Construction (Lock + Unlock). The scripting language that is used for the script in scriptPubKey is discussed in Transaction Scripts and Script Language. But before we delve into those topics, we need to understand the overall structure of transaction inputs and outputs."}
{"prompt": "Transactions", "completion": "When transactions are transmitted over the network or exchanged between applications, they are serialized. Serialization is the process of converting the internal representation of a data structure into a format that can be transmitted one byte at a time, also known as a byte stream. Serialization is most commonly used for encoding data structures for transmission over a network or for storage in a file. The serialization format of a transaction output is shown in Transaction output serialization."}
{"prompt": "Transactions", "completion": "8 bytes (little-endian)"}
{"prompt": "Transactions", "completion": "Amount"}
{"prompt": "Transactions", "completion": "Bitcoin value in satoshis (10-8 bitcoin)"}
{"prompt": "Transactions", "completion": "1\u20139 bytes (VarInt)"}
{"prompt": "Transactions", "completion": "Locking-Script Size"}
{"prompt": "Transactions", "completion": "Locking-Script length in bytes, to follow"}
{"prompt": "Transactions", "completion": "Variable"}
{"prompt": "Transactions", "completion": "Locking-Script"}
{"prompt": "Transactions", "completion": "A script defining the conditions needed to spend the output"}
{"prompt": "Transactions", "completion": "Most bitcoin libraries and frameworks do not store transactions internally as byte-streams, as that would require complex parsing every time you needed to access a single field. For convenience and readability, bitcoin libraries store transactions internally in data structures (usually object-oriented structures)."}
{"prompt": "Transactions", "completion": "The process of converting from the byte-stream representation of a transaction to a library\u2019s internal representation data structure is called deserialization or transaction parsing. The process of converting back to a byte-stream for transmission over the network, for hashing, or for storage on disk is called serialization. Most bitcoin libraries have built-in functions for transaction serialization and deserialization."}
{"prompt": "Transactions", "completion": "See if you can manually decode Alice\u2019s transaction from the serialized hexadecimal form, finding some of the elements we saw previously. The section containing the two outputs is highlighted in Alice\u2019s transaction, serialized and presented in hexadecimal notation to help you:"}
{"prompt": "Transactions", "completion": "0100000001186f9f998a5aa6f048e51dd8419a14d8a0f1a8a2836dd73 4d2804fe65fa35779000000008b483045022100884d142d86652a3f47 ba4746ec719bbfbd040a570b1deccbb6498c75c4ae24cb02204b9f039 ff08df09cbe9f6addac960298cad530a863ea8f53982c09db8f6e3813 01410484ecc0d46f1918b30928fa0e4ed99f16a0fb4fde0735e7ade84 16ab9fe423cc5412336376789d172787ec3457eee41c04f4938de5cc1 7b4a10fa336a8d752adfffffffff0260e31600000000001976a914ab6 8025513c3dbd2f7b92a94e0581f5d50f654e788acd0ef800000000000 1976a9147f9b1a7fb68d60c536c2fd8aeaa53a8f3cc025a888ac 00000000"}
{"prompt": "Transactions", "completion": "Here are some hints:"}
{"prompt": "Transactions", "completion": "There are two outputs in the highlighted section, each serialized as shown in Transaction output serialization."}
{"prompt": "Transactions", "completion": "The value of 0.015 bitcoin is 1,500,000 satoshis. That\u2019s 16 e3 60 in hexadecimal."}
{"prompt": "Transactions", "completion": "In the serialized transaction, the value 16 e3 60 is encoded in little-endian (least-significant-byte-first) byte order, so it looks like 60 e3 16."}
{"prompt": "Transactions", "completion": "The scriptPubKey length is 25 bytes, which is 19 in hexadecimal."}
{"prompt": "Transactions", "completion": "Transaction inputs identify (by reference) which UTXO will be consumed and provide proof of ownership through an unlocking script."}
{"prompt": "Transactions", "completion": "To build a transaction, a wallet selects from the UTXO it controls, UTXO with enough value to make the requested payment. Sometimes one UTXO is enough, other times more than one is needed. For each UTXO that will be consumed to make this payment, the wallet creates one input pointing to the UTXO and unlocks it with an unlocking script."}
{"prompt": "Transactions", "completion": "Let\u2019s look at the components of an input in greater detail. The first part of an input is a pointer to an UTXO by reference to the transaction hash and an output index, which identifies the specific UTXO in that transaction. The second part is an unlocking script, which the wallet constructs in order to satisfy the spending conditions set in the UTXO. Most often, the unlocking script is a digital signature and public key proving ownership of the bitcoin. However, not all unlocking scripts contain signatures. The third part is a sequence number, which will be discussed later."}
{"prompt": "Transactions", "completion": "Consider our example in Transactions\u2014Behind the Scenes. The transaction inputs are an array (list) called vin:"}
{"prompt": "Transactions", "completion": "As you can see, there is only one input in the list (because one UTXO contained sufficient value to make this payment). The input contains four elements:"}
{"prompt": "Transactions", "completion": "A transaction ID, referencing the transaction that contains the UTXO being spent"}
{"prompt": "Transactions", "completion": "An output index (vout), identifying which UTXO from that transaction is referenced (first one is zero)"}
{"prompt": "Transactions", "completion": "A scriptSig, which satisfies the conditions placed on the UTXO, unlocking it for spending"}
{"prompt": "Transactions", "completion": "A sequence number (to be discussed later)"}
{"prompt": "Transactions", "completion": "In Alice\u2019s transaction, the input points to the transaction ID:"}
{"prompt": "Transactions", "completion": "and output index 0 (i.e., the first UTXO created by that transaction). The unlocking script is constructed by Alice\u2019s wallet by first retrieving the referenced UTXO, examining its locking script, and then using it to build the necessary unlocking script to satisfy it."}
{"prompt": "Transactions", "completion": "Looking just at the input you may have noticed that we don\u2019t know anything about this UTXO, other than a reference to the parent transaction containing it. We don\u2019t know its value (amount in satoshi), and we don\u2019t know the locking script that sets the conditions for spending it. To find this information, we must retrieve the referenced UTXO by retrieving the parent transaction that contains it. Notice that because the value of the input is not explicitly stated, we must also use the referenced UTXO in order to calculate the fees that will be paid in this transaction (see Transaction Fees)."}
{"prompt": "Transactions", "completion": "It\u2019s not just Alice\u2019s wallet that needs to retrieve UTXO referenced in the inputs. Once this transaction is broadcast to the network, every validating node will also need to retrieve the UTXO referenced in the transaction inputs in order to validate the transaction."}
{"prompt": "Transactions", "completion": "Transactions on their own seem incomplete because they lack context. They reference UTXO in their inputs but without retrieving that UTXO we cannot know the value of the inputs or their locking conditions. When writing bitcoin software, anytime you decode a transaction with the intent of validating it or counting the fees or checking the unlocking script, your code will first have to retrieve the referenced UTXO from the blockchain in order to build the context implied but not present in the UTXO references of the inputs. For example, to calculate the amount paid in fees, you must know the sum of the values of inputs and outputs. But without retrieving the UTXO referenced in the inputs, you do not know their value. So a seemingly simple operation like counting fees in a single transaction in fact involves multiple steps and data from multiple transactions."}
{"prompt": "Transactions", "completion": "We can use the same sequence of commands with Bitcoin Core as we used when retrieving Alice\u2019s transaction (getrawtransaction and decoderawtransaction). With that we can get the UTXO referenced in the input from Alice\u2019s transaction and take a look:"}
{"prompt": "Transactions", "completion": "We see that this UTXO has a value of 0.1 BTC and that it has a locking script (scriptPubKey) that contains \"OP_DUP OP_HASH160\u2026\"."}
{"prompt": "Transactions", "completion": "To fully understand Alice\u2019s transaction we had to retrieve the previous transaction referenced as input. A function that retrieves previous transactions and unspent transaction outputs is very common and exists in almost every bitcoin library and API."}
{"prompt": "Transactions", "completion": "When transactions are serialized for transmission on the network, their inputs are encoded into a byte stream as shown in Transaction input serialization."}
{"prompt": "Transactions", "completion": "32 bytes"}
{"prompt": "Transactions", "completion": "Transaction Hash"}
{"prompt": "Transactions", "completion": "Pointer to the transaction containing the UTXO to be spent"}
{"prompt": "Transactions", "completion": "4 bytes"}
{"prompt": "Transactions", "completion": "Output Index"}
{"prompt": "Transactions", "completion": "The index number of the UTXO to be spent; first one is 0"}
{"prompt": "Transactions", "completion": "1\u20139 bytes (VarInt)"}
{"prompt": "Transactions", "completion": "Unlocking-Script Size"}
{"prompt": "Transactions", "completion": "Unlocking-Script length in bytes, to follow"}
{"prompt": "Transactions", "completion": "Variable"}
{"prompt": "Transactions", "completion": "Unlocking-Script"}
{"prompt": "Transactions", "completion": "A script that fulfills the conditions of the UTXO locking script"}
{"prompt": "Transactions", "completion": "4 bytes"}
{"prompt": "Transactions", "completion": "Sequence Number"}
{"prompt": "Transactions", "completion": "Used for locktime or disabled (0xFFFFFFFF)"}
{"prompt": "Transactions", "completion": "As with the outputs, let\u2019s see if we can find the inputs from Alice\u2019s transaction in the serialized format. First, the inputs decoded:"}
{"prompt": "Transactions", "completion": "Now, let\u2019s see if we can identify these fields in the serialized hex encoding in Alice\u2019s transaction, serialized and presented in hexadecimal notation:"}
{"prompt": "Transactions", "completion": "0100000001186f9f998a5aa6f048e51dd8419a14d8a0f1a8a2836dd73 4d2804fe65fa35779000000008b483045022100884d142d86652a3f47 ba4746ec719bbfbd040a570b1deccbb6498c75c4ae24cb02204b9f039 ff08df09cbe9f6addac960298cad530a863ea8f53982c09db8f6e3813 01410484ecc0d46f1918b30928fa0e4ed99f16a0fb4fde0735e7ade84 16ab9fe423cc5412336376789d172787ec3457eee41c04f4938de5cc1 7b4a10fa336a8d752adfffffffff0260e31600000000001976a914ab6 8025513c3dbd2f7b92a94e0581f5d50f654e788acd0ef800000000000 1976a9147f9b1a7fb68d60c536c2fd8aeaa53a8f3cc025a888ac00000 000"}
{"prompt": "Transactions", "completion": "Hints:"}
{"prompt": "Transactions", "completion": "The transaction ID is serialized in reversed byte order, so it starts with (hex) 18 and ends with 79"}
{"prompt": "Transactions", "completion": "The output index is a 4-byte group of zeros, easy to identify"}
{"prompt": "Transactions", "completion": "The length of the scriptSig is 139 bytes, or 8b in hex"}
{"prompt": "Transactions", "completion": "The sequence number is set to FFFFFFFF, again easy to identify"}
{"prompt": "Transactions", "completion": "ScriptSig is a specific type of unlocking script that when serialized for transmission on the network, inputs are encoded into a byte stream as shown in ScriptSig input serialization. The serialization of the signature field is detailed in Serialization of signatures (DER). The signature field also includes a Signature Hash Type (SIGHASH), which is detailed in Signature Hash Types (SIGHASH)."}
{"prompt": "Transactions", "completion": "1\u20139 bytes (VarInt)"}
{"prompt": "Transactions", "completion": "Signature Size"}
{"prompt": "Transactions", "completion": "Signature length in bytes, to follow"}
{"prompt": "Transactions", "completion": "Variable"}
{"prompt": "Transactions", "completion": "Signature"}
{"prompt": "Transactions", "completion": "A signature that is produced by the user\u2019s wallet from his or her private key, which includes a SIGHASH"}
{"prompt": "Transactions", "completion": "1\u20139 bytes (VarInt)"}
{"prompt": "Transactions", "completion": "Public Key Size"}
{"prompt": "Transactions", "completion": "Public key length in bytes, to follow"}
{"prompt": "Transactions", "completion": "Variable"}
{"prompt": "Transactions", "completion": "Public Key"}
{"prompt": "Transactions", "completion": "The public key, unhashed"}
{"prompt": "Transactions", "completion": "Most transactions include transaction fees, which compensate the bitcoin miners for securing the network. Fees also serve as a security mechanism themselves, by making it economically infeasible for attackers to flood the network with transactions. Mining and the fees and rewards collected by miners are discussed in more detail in [mining]."}
{"prompt": "Transactions", "completion": "This section examines how transaction fees are included in a typical transaction. Most wallets calculate and include transaction fees automatically. However, if you are constructing transactions programmatically, or using a command-line interface, you must manually account for and include these fees."}
{"prompt": "Transactions", "completion": "Transaction fees serve as an incentive to include (mine) a transaction into the next block and also as a disincentive against abuse of the system by imposing a small cost on every transaction. Transaction fees are collected by the miner who mines the block that records the transaction on the blockchain."}
{"prompt": "Transactions", "completion": "Transaction fees are calculated based on the size of the transaction in kilobytes, not the value of the transaction in bitcoin. Overall, transaction fees are set based on market forces within the bitcoin network. Miners prioritize transactions based on many different criteria, including fees, and might even process transactions for free under certain circumstances. Transaction fees affect the processing priority, meaning that a transaction with sufficient fees is likely to be included in the next block mined, whereas a transaction with insufficient or no fees might be delayed, processed on a best-effort basis after a few blocks, or not processed at all. Transaction fees are not mandatory, and transactions without fees might be processed eventually; however, including transaction fees encourages priority processing."}
{"prompt": "Transactions", "completion": "Over time, the way transaction fees are calculated and the effect they have on transaction prioritization has evolved. At first, transaction fees were fixed and constant across the network. Gradually, the fee structure relaxed and may be influenced by market forces, based on network capacity and transaction volume. Since at least the beginning of 2016, capacity limits in bitcoin have created competition between transactions, resulting in higher fees and effectively making free transactions a thing of the past. Zero fee or very low fee transactions rarely get mined and sometimes will not even be propagated across the network."}
{"prompt": "Transactions", "completion": "In Bitcoin Core, fee relay policies are set by the minrelaytxfee option. The current default minrelaytxfee is 0.00001 bitcoin or a hundredth of a millibitcoin per kilobyte. Therefore, by default, transactions with a fee less than 0.00001 bitcoin are treated as free and are only relayed if there is space in the mempool; otherwise, they are dropped. Bitcoin nodes can override the default fee relay policy by adjusting the value of minrelaytxfee."}
{"prompt": "Transactions", "completion": "Any bitcoin service that creates transactions, including wallets, exchanges, retail applications, etc., must implement dynamic fees. Dynamic fees can be implemented through a third-party fee estimation service or with a built-in fee estimation algorithm. If you\u2019re unsure, begin with a third-party service and as you gain experience design and implement your own algorithm if you wish to remove the third-party dependency."}
{"prompt": "Transactions", "completion": "Fee estimation algorithms calculate the appropriate fee, based on capacity and the fees offered by \"competing\" transactions. These algorithms range from simplistic (average or median fee in the last block) to sophisticated (statistical analysis). They estimate the necessary fee (in satoshis per byte) that will give a transaction a high probability of being selected and included within a certain number of blocks. Most services offer users the option of choosing high, medium, or low priority fees. High priority means users pay higher fees but the transaction is likely to be included in the next block. Medium and low priority means users pay lower transaction fees but the transactions may take much longer to confirm."}
{"prompt": "Transactions", "completion": "Many wallet applications use third-party services for fee calculations. One popular service is https://bitcoinfees.earn.com/, which provides an API and a visual chart showing the fee in satoshi/byte for different priorities."}
{"prompt": "Transactions", "completion": "Static fees are no longer viable on the bitcoin network. Wallets that set static fees will produce a poor user experience as transactions will often get \"stuck\" and remain unconfirmed. Users who don\u2019t understand bitcoin transactions and fees are dismayed by \"stuck\" transactions because they think they\u2019ve lost their money."}
{"prompt": "Transactions", "completion": "The chart in Fee estimation service bitcoinfees.earn.com shows the real-time estimate of fees in 10 satoshi/byte increments and the expected confirmation time (in minutes and number of blocks) for transactions with fees in each range. For each fee range (e.g., 61\u201370 satoshi/byte), two horizontal bars show the number of unconfirmed transactions (1405) and total number of transactions in the past 24 hours (102,975), with fees in that range. Based on the graph, the recommended high-priority fee at this time was 80 satoshi/byte, a fee likely to result in the transaction being mined in the very next block (zero block delay). For perspective, the median transaction size is 226 bytes, so the recommended fee for this transaction size would be 18,080 satoshis (0.00018080 BTC)."}
{"prompt": "Transactions", "completion": "The fee estimation data can be retrieved via a simple HTTP REST API, at https://bitcoinfees.earn.com/api/v1/fees/recommended. For example, on the command line using the curl command:"}
{"prompt": "Transactions", "completion": "The API returns a JSON object with the current fee estimate for fastest confirmation (fastestFee), confirmation within three blocks (halfHourFee) and six blocks (hourFee), in satoshi per byte."}
{"prompt": "Transactions", "completion": "The data structure of transactions does not have a field for fees. Instead, fees are implied as the difference between the sum of inputs and the sum of outputs. Any excess amount that remains after all outputs have been deducted from all inputs is the fee that is collected by the miners:"}
{"prompt": "Transactions", "completion": "This is a somewhat confusing element of transactions and an important point to understand, because if you are constructing your own transactions you must ensure you do not inadvertently include a very large fee by underspending the inputs. That means that you must account for all inputs, if necessary by creating change, or you will end up giving the miners a very big tip!"}
{"prompt": "Transactions", "completion": "For example, if you consume a 20-bitcoin UTXO to make a 1-bitcoin payment, you must include a 19-bitcoin change output back to your wallet. Otherwise, the 19-bitcoin \"leftover\" will be counted as a transaction fee and will be collected by the miner who mines your transaction in a block. Although you will receive priority processing and make a miner very happy, this is probably not what you intended."}
{"prompt": "Transactions", "completion": "If you forget to add a change output in a manually constructed transaction, you will be paying the change as a transaction fee. Saying \"Keep the change!\" to the miner might not be what you really intended."}
{"prompt": "Transactions", "completion": "Let\u2019s see how this works in practice, by looking at Alice\u2019s coffee purchase again. Alice wants to spend 0.015 bitcoin to pay for coffee. To ensure this transaction is processed promptly, she will want to include a transaction fee, say 0.0005. That will mean that the total cost of the transaction will be 0.0155. Her wallet must therefore source a set of UTXO that adds up to 0.0155 bitcoin or more and, if necessary, create change. Let\u2019s say her wallet has a 0.1-bitcoin UTXO available. It will therefore need to consume this UTXO, create one output to Bob\u2019s Cafe for 0.015, and a second output with 0.0845 bitcoin in change back to her own wallet, leaving 0.0005 bitcoin unallocated, as an implicit fee for the transaction."}
{"prompt": "Transactions", "completion": "Now let\u2019s look at a different scenario. Eugenia, our children\u2019s charity director in the Philippines, has completed a fundraiser to purchase schoolbooks for the children. She received several thousand small donations from people all around the world, totaling 50 bitcoin, so her wallet is full of very small payments (UTXO). Now she wants to purchase hundreds of schoolbooks from a local publisher, paying in bitcoin."}
{"prompt": "Transactions", "completion": "As Eugenia\u2019s wallet application tries to construct a single larger payment transaction, it must source from the available UTXO set, which is composed of many smaller amounts. That means that the resulting transaction will source from more than a hundred small-value UTXO as inputs and only one output, paying the book publisher. A transaction with that many inputs will be larger than one kilobyte, perhaps several kilobytes in size. As a result, it will require a much higher fee than the median-sized transaction."}
{"prompt": "Transactions", "completion": "Eugenia\u2019s wallet application will calculate the appropriate fee by measuring the size of the transaction and multiplying that by the per-kilobyte fee. Many wallets will overpay fees for larger transactions to ensure the transaction is processed promptly. The higher fee is not because Eugenia is spending more money, but because her transaction is more complex and larger in size\u2014the fee is independent of the transaction\u2019s bitcoin value."}
{"prompt": "Transactions", "completion": "The bitcoin transaction script language, called Script, is a Forth-like reverse-polish notation stack-based execution language. If that sounds like gibberish, you probably haven\u2019t studied 1960s programming languages, but that\u2019s ok\u2014we will explain it all in this chapter. Both the locking script placed on an UTXO and the unlocking script are written in this scripting language. When a transaction is validated, the unlocking script in each input is executed alongside the corresponding locking script to see if it satisfies the spending condition."}
{"prompt": "Transactions", "completion": "Script is a very simple language that was designed to be limited in scope and executable on a range of hardware, perhaps as simple as an embedded device. It requires minimal processing and cannot do many of the fancy things modern programming languages can do. For its use in validating programmable money, this is a deliberate security feature."}
{"prompt": "Transactions", "completion": "Today, most transactions processed through the bitcoin network have the form \"Payment to Bob\u2019s bitcoin address\" and are based on a script called a Pay-to-Public-Key-Hash script. However, bitcoin transactions are not limited to the \"Payment to Bob\u2019s bitcoin address\" script. In fact, locking scripts can be written to express a vast variety of complex conditions. In order to understand these more complex scripts, we must first understand the basics of transaction scripts and script language."}
{"prompt": "Transactions", "completion": "In this section, we will demonstrate the basic components of the bitcoin transaction scripting language and show how it can be used to express simple conditions for spending and how those conditions can be satisfied by unlocking scripts."}
{"prompt": "Transactions", "completion": "Bitcoin transaction validation is not based on a static pattern, but instead is achieved through the execution of a scripting language. This language allows for a nearly infinite variety of conditions to be expressed. This is how bitcoin gets the power of \"programmable money\"."}
{"prompt": "Transactions", "completion": "The bitcoin transaction script language contains many operators, but is deliberately limited in one important way\u2014there are no loops or complex flow control capabilities other than conditional flow control. This ensures that the language is not Turing Complete, meaning that scripts have limited complexity and predictable execution times. Script is not a general-purpose language. These limitations ensure that the language cannot be used to create an infinite loop or other form of \"logic bomb\" that could be embedded in a transaction in a way that causes a denial-of-service attack against the bitcoin network. Remember, every transaction is validated by every full node on the bitcoin network. A limited language prevents the transaction validation mechanism from being used as a vulnerability."}
{"prompt": "Transactions", "completion": "The bitcoin transaction script language is stateless, in that there is no state prior to execution of the script, or state saved after execution of the script. Therefore, all the information needed to execute a script is contained within the script. A script will predictably execute the same way on any system. If your system verifies a script, you can be sure that every other system in the bitcoin network will also verify the script, meaning that a valid transaction is valid for everyone and everyone knows this. This predictability of outcomes is an essential benefit of the bitcoin system."}
{"prompt": "Transactions", "completion": "Bitcoin\u2019s transaction validation engine relies on two types of scripts to validate transactions: a locking script and an unlocking script."}
{"prompt": "Transactions", "completion": "A locking script is a spending condition placed on an output: it specifies the conditions that must be met to spend the output in the future. Historically, the locking script was called a scriptPubKey, because it usually contained a public key or bitcoin address (public key hash). In this book we refer to it as a \"locking script\" to acknowledge the much broader range of possibilities of this scripting technology. In most bitcoin applications, what we refer to as a locking script will appear in the source code as scriptPubKey. You will also see the locking script referred to as a witness script (see [segwit]) or more generally as a cryptographic puzzle. These terms all mean the same thing, at different levels of abstraction."}
{"prompt": "Transactions", "completion": "An unlocking script is a script that \"solves,\" or satisfies, the conditions placed on an output by a locking script and allows the output to be spent. Unlocking scripts are part of every transaction input. Most of the time they contain a digital signature produced by the user\u2019s wallet from his or her private key. Historically, the unlocking script was called scriptSig, because it usually contained a digital signature. In most bitcoin applications, the source code refers to the unlocking script as scriptSig. You will also see the unlocking script referred to as a witness (see [segwit]). In this book, we refer to it as an \"unlocking script\" to acknowledge the much broader range of locking script requirements, because not all unlocking scripts must contain signatures."}
{"prompt": "Transactions", "completion": "Every bitcoin validating node will validate transactions by executing the locking and unlocking scripts together. Each input contains an unlocking script and refers to a previously existing UTXO. The validation software will copy the unlocking script, retrieve the UTXO referenced by the input, and copy the locking script from that UTXO. The unlocking and locking script are then executed in sequence. The input is valid if the unlocking script satisfies the locking script conditions (see Separate execution of unlocking and locking scripts). All the inputs are validated independently, as part of the overall validation of the transaction."}
{"prompt": "Transactions", "completion": "Note that the UTXO is permanently recorded in the blockchain, and therefore is invariable and is unaffected by failed attempts to spend it by reference in a new transaction. Only a valid transaction that correctly satisfies the conditions of the output results in the output being considered as \"spent\" and removed from the set of unspent transaction outputs (UTXO set)."}
{"prompt": "Transactions", "completion": "Combining scriptSig and scriptPubKey to evaluate a transaction script is an example of the unlocking and locking scripts for the most common type of bitcoin transaction (a payment to a public key hash), showing the combined script resulting from the concatenation of the unlocking and locking scripts prior to script validation."}
{"prompt": "Transactions", "completion": "Bitcoin\u2019s scripting language is called a stack-based language because it uses a data structure called a stack. A stack is a very simple data structure that can be visualized as a stack of cards. A stack allows two operations: push and pop. Push adds an item on top of the stack. Pop removes the top item from the stack. Operations on a stack can only act on the topmost item on the stack. A stack data structure is also called a Last-In-First-Out, or \"LIFO\" queue."}
{"prompt": "Transactions", "completion": "The scripting language executes the script by processing each item from left to right. Numbers (data constants) are pushed onto the stack. Operators push or pop one or more parameters from the stack, act on them, and might push a result onto the stack. For example, OP_ADD will pop two items from the stack, add them, and push the resulting sum onto the stack."}
{"prompt": "Transactions", "completion": "Conditional operators evaluate a condition, producing a boolean result of TRUE or FALSE. For example, OP_EQUAL pops two items from the stack and pushes TRUE (TRUE is represented by the number 1) if they are equal or FALSE (represented by zero) if they are not equal. Bitcoin transaction scripts usually contain a conditional operator, so that they can produce the TRUE result that signifies a valid transaction."}
{"prompt": "Transactions", "completion": "Now let\u2019s apply what we\u2019ve learned about scripts and stacks to some simple examples."}
{"prompt": "Transactions", "completion": "In Bitcoin\u2019s script validation doing simple math, the script 2 3 OP_ADD 5 OP_EQUAL demonstrates the arithmetic addition operator OP_ADD, adding two numbers and putting the result on the stack, followed by the conditional operator OP_EQUAL, which checks that the resulting sum is equal to 5. For brevity, the OP_ prefix is omitted in the step-by-step example. For more details on the available script operators and functions, see [tx_script_ops]."}
{"prompt": "Transactions", "completion": "Although most locking scripts refer to a public key hash (essentially, a bitcoin address), thereby requiring proof of ownership to spend the funds, the script does not have to be that complex. Any combination of locking and unlocking scripts that results in a TRUE value is valid. The simple arithmetic we used as an example of the scripting language is also a valid locking script that can be used to lock a transaction output."}
{"prompt": "Transactions", "completion": "Use part of the arithmetic example script as the locking script:"}
{"prompt": "Transactions", "completion": "which can be satisfied by a transaction containing an input with the unlocking script:"}
{"prompt": "Transactions", "completion": "The validation software combines the locking and unlocking scripts and the resulting script is:"}
{"prompt": "Transactions", "completion": "As we saw in the step-by-step example in Bitcoin\u2019s script validation doing simple math, when this script is executed, the result is OP_TRUE, making the transaction valid. Not only is this a valid transaction output locking script, but the resulting UTXO could be spent by anyone with the arithmetic skills to know that the number 2 satisfies the script."}
{"prompt": "Transactions", "completion": "Transactions are valid if the top result on the stack is TRUE (noted as &#x7b;0x01&#x7d;), any other nonzero value, not OP_0, or if the stack is empty after script execution. Transactions are invalid if the top value on the stack is FALSE (a zero-length empty value, noted as &#x7b;&#x7d;) or if script execution is halted explicitly by an operator, such as OP_VERIFY, OP_RETURN, or a conditional terminator such as OP_ENDIF. See [tx_script_ops] for details."}
{"prompt": "Transactions", "completion": "The following is a slightly more complex script, which calculates 2 + 7 - 3 + 1. Notice that when the script contains several operators in a row, the stack allows the results of one operator to be acted upon by the next operator:"}
{"prompt": "Transactions", "completion": "Try validating the preceding script yourself using pencil and paper. When the script execution ends, you should be left with the value TRUE on the stack."}
{"prompt": "Transactions", "completion": "In the original bitcoin client, the unlocking and locking scripts were concatenated and executed in sequence. For security reasons, this was changed in 2010, because of a vulnerability that allowed a malformed unlocking script to push data onto the stack and corrupt the locking script. In the current implementation, the scripts are executed separately with the stack transferred between the two executions, as described next."}
{"prompt": "Transactions", "completion": "First, the unlocking script is executed, using the stack execution engine. If the unlocking script is executed without errors (e.g., it has no \"dangling\" pointers left over), the main stack is copied and the locking script is executed. If the result of executing the locking script with the stack data copied from the unlocking script is \"TRUE,\" the unlocking script has succeeded in resolving the conditions imposed by the locking script and, therefore, the input is a valid authorization to spend the UTXO. If any result other than \"TRUE\" remains after execution of the combined script, the input is invalid because it has failed to satisfy the spending conditions placed on the UTXO."}
{"prompt": "Transactions", "completion": "The vast majority of transactions processed on the bitcoin network spend outputs locked with a Pay-to-Public-Key-Hash or \"P2PKH\" script. These outputs contain a locking script that locks the output to a public key hash, more commonly known as a bitcoin address. An output locked by a P2PKH script can be unlocked (spent) by presenting a public key and a digital signature created by the corresponding private key (see Digital Signatures (ECDSA))."}
{"prompt": "Transactions", "completion": "For example, let\u2019s look at Alice\u2019s payment to Bob\u2019s Cafe again. Alice made a payment of 0.015 bitcoin to the cafe\u2019s bitcoin address. That transaction output would have a locking script of the form:"}
{"prompt": "Transactions", "completion": "The Cafe Public Key Hash is equivalent to the bitcoin address of the cafe, without the Base58Check encoding. Most applications would show the public key hash in hexadecimal encoding and not the familiar bitcoin address Base58Check format that begins with a \"1.\""}
{"prompt": "Transactions", "completion": "The preceding locking script can be satisfied with an unlocking script of the form:"}
{"prompt": "Transactions", "completion": "The two scripts together would form the following combined validation script:"}
{"prompt": "Transactions", "completion": "When executed, this combined script will evaluate to TRUE if, and only if, the unlocking script matches the conditions set by the locking script. In other words, the result will be TRUE if the unlocking script has a valid signature from the cafe\u2019s private key that corresponds to the public key hash set as an encumbrance."}
{"prompt": "Transactions", "completion": "Figures #P2PubKHash1 and #P2PubKHash2 show (in two parts) a step-by-step execution of the combined script, which will prove this is a valid transaction."}
{"prompt": "Transactions", "completion": "So far, we have not delved into any detail about \"digital signatures.\" In this section we look at how digital signatures work and how they can present proof of ownership of a private key without revealing that private key."}
{"prompt": "Transactions", "completion": "The digital signature algorithm used in bitcoin is the Elliptic Curve Digital Signature Algorithm, or ECDSA. ECDSA is the algorithm used for digital signatures based on elliptic curve private/public key pairs, as described in [elliptic_curve]. ECDSA is used by the script functions OP_CHECKSIG, OP_CHECKSIGVERIFY, OP_CHECKMULTISIG, and OP_CHECKMULTISIGVERIFY. Any time you see those in a locking script, the unlocking script must contain an ECDSA signature."}
{"prompt": "Transactions", "completion": "A digital signature serves three purposes in bitcoin. First, the signature proves that the owner of the private key, who is by implication the owner of the funds, has authorized the spending of those funds. Secondly, the proof of authorization is undeniable (nonrepudiation). Thirdly, the signature proves that the transaction (or specific parts of the transaction) have not and cannot be modified by anyone after it has been signed."}
{"prompt": "Transactions", "completion": "Note that each transaction input is signed independently. This is critical, as neither the signatures nor the inputs have to belong to or be applied by the same \"owners.\" In fact, a specific transaction scheme called \"CoinJoin\" uses this fact to create multi-party transactions for privacy."}
{"prompt": "Transactions", "completion": "Each transaction input and any signature it may contain is completely independent of any other input or signature. Multiple parties can collaborate to construct transactions and sign only one input each."}
{"prompt": "Transactions", "completion": "A digital signature is a mathematical scheme for demonstrating the authenticity of a digital message or documents. A valid digital signature gives a recipient reason to believe that the message was created by a known sender (authentication), that the sender cannot deny having sent the message (nonrepudiation), and that the message was not altered in transit (integrity)."}
{"prompt": "Transactions", "completion": "Source: https://en.wikipedia.org/wiki/Digital_signature"}
{"prompt": "Transactions", "completion": "A digital signature is a mathematical scheme that consists of two parts. The first part is an algorithm for creating a signature, using a private key (the signing key), from a message (the transaction). The second part is an algorithm that allows anyone to verify the signature, given also the message and a public key."}
{"prompt": "Transactions", "completion": "In bitcoin\u2019s implementation of the ECDSA algorithm, the \"message\" being signed is the transaction, or more accurately a hash of a specific subset of the data in the transaction (see Signature Hash Types (SIGHASH)). The signing key is the user\u2019s private key. The result is the signature:"}
{"prompt": "Transactions", "completion": "\\(\\(Sig = F_{sig}(F_{hash}(m), dA)\\)\\)"}
{"prompt": "Transactions", "completion": "where:"}
{"prompt": "Transactions", "completion": "dA is the signing private key"}
{"prompt": "Transactions", "completion": "m is the transaction (or parts of it)"}
{"prompt": "Transactions", "completion": "Fhash is the hashing function"}
{"prompt": "Transactions", "completion": "Fsig is the signing algorithm"}
{"prompt": "Transactions", "completion": "Sig is the resulting signature"}
{"prompt": "Transactions", "completion": "More details on the mathematics of ECDSA can be found in ECDSA Math."}
{"prompt": "Transactions", "completion": "The function Fsig produces a signature Sig that is composed of two values, commonly referred to as R and S:"}
{"prompt": "Transactions", "completion": "Now that the two values R and S have been calculated, they are serialized into a byte-stream using an international standard encoding scheme called the Distinguished Encoding Rules, or DER."}
{"prompt": "Transactions", "completion": "Let\u2019s look at the transaction Alice created again. In the transaction input there is an unlocking script that contains the following DER-encoded signature from Alice\u2019s wallet:"}
{"prompt": "Transactions", "completion": "That signature is a serialized byte-stream of the R and S values produced by Alice\u2019s wallet to prove she owns the private key authorized to spend that output. The serialization format consists of nine elements as follows:"}
{"prompt": "Transactions", "completion": "0x30\u2014indicating the start of a DER sequence"}
{"prompt": "Transactions", "completion": "0x45\u2014the length of the sequence (69 bytes)"}
{"prompt": "Transactions", "completion": "0x02\u2014an integer value follows"}
{"prompt": "Transactions", "completion": "0x21\u2014the length of the integer (33 bytes)"}
{"prompt": "Transactions", "completion": "R\u201400884d142d86652a3f47ba4746ec719bbfbd040a570b1deccbb6498c75c4ae24cb"}
{"prompt": "Transactions", "completion": "0x02\u2014another integer follows"}
{"prompt": "Transactions", "completion": "0x20\u2014the length of the integer (32 bytes)"}
{"prompt": "Transactions", "completion": "S\u20144b9f039ff08df09cbe9f6addac960298cad530a863ea8f53982c09db8f6e3813"}
{"prompt": "Transactions", "completion": "A suffix (0x01) indicating the type of hash used (SIGHASH_ALL)"}
{"prompt": "Transactions", "completion": "See if you can decode Alice\u2019s serialized (DER-encoded) signature using this list. The important numbers are R and S; the rest of the data is part of the DER encoding scheme."}
{"prompt": "Transactions", "completion": "To verify the signature, one must have the signature (R and S), the serialized transaction, and the public key (that corresponds to the private key used to create the signature). Essentially, verification of a signature means \"Only the owner of the private key that generated this public key could have produced this signature on this transaction.\""}
{"prompt": "Transactions", "completion": "The signature verification algorithm takes the message (a hash of the transaction or parts of it), the signer\u2019s public key and the signature (R and S values), and returns TRUE if the signature is valid for this message and public key."}
{"prompt": "Transactions", "completion": "Digital signatures are applied to messages, which in the case of bitcoin, are the transactions themselves. The signature implies a commitment by the signer to specific transaction data. In the simplest form, the signature applies to the entire transaction, thereby committing all the inputs, outputs, and other transaction fields. However, a signature can commit to only a subset of the data in a transaction, which is useful for a number of scenarios as we will see in this section."}
{"prompt": "Transactions", "completion": "Bitcoin signatures have a way of indicating which part of a transaction\u2019s data is included in the hash signed by the private key using a SIGHASH flag. The SIGHASH flag is a single byte that is appended to the signature. Every signature has a SIGHASH flag and the flag can be different from input to input. A transaction with three signed inputs may have three signatures with different SIGHASH flags, each signature signing (committing) different parts of the transaction."}
{"prompt": "Transactions", "completion": "Remember, each input may contain a signature in its unlocking script. As a result, a transaction that contains several inputs may have signatures with different SIGHASH flags that commit different parts of the transaction in each of the inputs. Note also that bitcoin transactions may contain inputs from different \"owners,\" who may sign only one input in a partially constructed (and invalid) transaction, collaborating with others to gather all the necessary signatures to make a valid transaction. Many of the SIGHASH flag types only make sense if you think of multiple participants collaborating outside the bitcoin network and updating a partially signed transaction."}
{"prompt": "Transactions", "completion": "There are three SIGHASH flags: ALL, NONE, and SINGLE, as shown in SIGHASH types and their meanings."}
{"prompt": "Transactions", "completion": "ALL"}
{"prompt": "Transactions", "completion": "0x01"}
{"prompt": "Transactions", "completion": "Signature applies to all inputs and outputs"}
{"prompt": "Transactions", "completion": "NONE"}
{"prompt": "Transactions", "completion": "0x02"}
{"prompt": "Transactions", "completion": "Signature applies to all inputs, none of the outputs"}
{"prompt": "Transactions", "completion": "SINGLE"}
{"prompt": "Transactions", "completion": "0x03"}
{"prompt": "Transactions", "completion": "Signature applies to all inputs but only the one output with the same index number as the signed input"}
{"prompt": "Transactions", "completion": "In addition, there is a modifier flag SIGHASH_ANYONECANPAY, which can be combined with each of the preceding flags. When ANYONECANPAY is set, only one input is signed, leaving the rest (and their sequence numbers) open for modification. The ANYONECANPAY has the value 0x80 and is applied by bitwise OR, resulting in the combined flags as shown in SIGHASH types with modifiers and their meanings."}
{"prompt": "Transactions", "completion": "ALL|ANYONECANPAY"}
{"prompt": "Transactions", "completion": "0x81"}
{"prompt": "Transactions", "completion": "Signature applies to one input and all outputs"}
{"prompt": "Transactions", "completion": "NONE|ANYONECANPAY"}
{"prompt": "Transactions", "completion": "0x82"}
{"prompt": "Transactions", "completion": "Signature applies to one input, none of the outputs"}
{"prompt": "Transactions", "completion": "SINGLE|ANYONECANPAY"}
{"prompt": "Transactions", "completion": "0x83"}
{"prompt": "Transactions", "completion": "Signature applies to one input and the output with the same index number"}
{"prompt": "Transactions", "completion": "These flag combinations are summarized in Summary of different sighash combinations."}
{"prompt": "Transactions", "completion": "The way SIGHASH flags are applied during signing and verification is that a copy of the transaction is made and certain fields within are truncated (set to zero length and emptied). The resulting transaction is serialized. The SIGHASH flag is added to the end of the serialized transaction and the result is hashed. The hash itself is the \"message\" that is signed. Depending on which SIGHASH flag is used, different parts of the transaction are truncated. The resulting hash depends on different subsets of the data in the transaction. By including the SIGHASH as the last step before hashing, the signature commits the SIGHASH type as well, so it can\u2019t be changed (e.g., by a miner)."}
{"prompt": "Transactions", "completion": "All SIGHASH types sign the transaction nLocktime field (see [transaction_locktime_nlocktime]). In addition, the SIGHASH type itself is appended to the transaction before it is signed, so that it can\u2019t be modified once signed."}
{"prompt": "Transactions", "completion": "In the example of Alice\u2019s transaction (see the list in Serialization of signatures (DER)), we saw that the last part of the DER-encoded signature was 01, which is the SIGHASH_ALL flag. This locks the transaction data, so Alice\u2019s signature is committing the state of all inputs and outputs. This is the most common signature form."}
{"prompt": "Transactions", "completion": "Let\u2019s look at some of the other SIGHASH types and how they can be used in practice:"}
{"prompt": "Transactions", "completion": "This construction can be used to make a \"crowdfunding\u201d-style transaction. Someone attempting to raise funds can construct a transaction with a single output. The single output pays the \"goal\" amount to the fundraiser. Such a transaction is obviously not valid, as it has no inputs. However, others can now amend it by adding an input of their own, as a donation. They sign their own input with ALL|ANYONECANPAY. Unless enough inputs are gathered to reach the value of the output, the transaction is invalid. Each donation is a \"pledge,\" which cannot be collected by the fundraiser until the entire goal amount is raised."}
{"prompt": "Transactions", "completion": "This construction can be used to create a \"bearer check\" or \"blank check\" of a specific amount. It commits to the input, but allows the output locking script to be changed. Anyone can write their own bitcoin address into the output locking script and redeem the transaction. However, the output value itself is locked by the signature."}
{"prompt": "Transactions", "completion": "This construction can be used to build a \"dust collector.\" Users who have tiny UTXO in their wallets can\u2019t spend these because the cost in fees exceeds the value of the dust. With this type of signature, the dust UTXO can be donated for anyone to aggregate and spend whenever they want."}
{"prompt": "Transactions", "completion": "There are some proposals to modify or expand the SIGHASH system. One such proposal is Bitmask Sighash Modes by Blockstream\u2019s Glenn Willen, as part of the Elements project. This aims to create a flexible replacement for SIGHASH types that allows \"arbitrary, miner-rewritable bitmasks of inputs and outputs\" that can express \"more complex contractual precommitment schemes, such as signed offers with change in a distributed asset exchange.\""}
{"prompt": "Transactions", "completion": "You will not see SIGHASH flags presented as an option in a user\u2019s wallet application. With few exceptions, wallets construct P2PKH scripts and sign with SIGHASH_ALL flags. To use a different SIGHASH flag, you would have to write software to construct and sign transactions. More importantly, SIGHASH flags can be used by special-purpose bitcoin applications that enable novel uses."}
{"prompt": "Transactions", "completion": "As mentioned previously, signatures are created by a mathematical function Fsig that produces a signature composed of two values R and S. In this section we look at the function Fsig in more detail."}
{"prompt": "Transactions", "completion": "The signature algorithm first generates an ephemeral (temporary) private public key pair. This temporary key pair is used in the calculation of the R and S values, after a transformation involving the signing private key and the transaction hash."}
{"prompt": "Transactions", "completion": "The temporary key pair is based on a random number k, which is used as the temporary private key. From k, we generate the corresponding temporary public key P (calculated as P = k*G, in the same way bitcoin public keys are derived; see [pubkey]). The R value of the digital signature is then the x coordinate of the ephemeral public key P."}
{"prompt": "Transactions", "completion": "From there, the algorithm calculates the S value of the signature, such that:"}
{"prompt": "Transactions", "completion": "S = k-1 (Hash(m) + dA * R) mod n"}
{"prompt": "Transactions", "completion": "where:"}
{"prompt": "Transactions", "completion": "k is the ephemeral private key"}
{"prompt": "Transactions", "completion": "R is the x coordinate of the ephemeral public key"}
{"prompt": "Transactions", "completion": "dA is the signing private key"}
{"prompt": "Transactions", "completion": "m is the transaction data"}
{"prompt": "Transactions", "completion": "n is the prime order of the elliptic curve"}
{"prompt": "Transactions", "completion": "Verification is the inverse of the signature generation function, using the R, S values and the public key to calculate a value P, which is a point on the elliptic curve (the ephemeral public key used in signature creation):"}
{"prompt": "Transactions", "completion": "P = S-1 * Hash(m) * G + S-1 * R * Qa"}
{"prompt": "Transactions", "completion": "where:"}
{"prompt": "Transactions", "completion": "R and S are the signature values"}
{"prompt": "Transactions", "completion": "Qa is Alice\u2019s public key"}
{"prompt": "Transactions", "completion": "m is the transaction data that was signed"}
{"prompt": "Transactions", "completion": "G is the elliptic curve generator point"}
{"prompt": "Transactions", "completion": "If the x coordinate of the calculated point P is equal to R, then the verifier can conclude that the signature is valid."}
{"prompt": "Transactions", "completion": "Note that in verifying the signature, the private key is neither known nor revealed."}
{"prompt": "Transactions", "completion": "ECDSA is necessarily a fairly complicated piece of math; a full explanation is beyond the scope of this book. A number of great guides online take you through it step by step: search for \"ECDSA explained\" or try this one: https://bit.ly/2r0HhGB."}
{"prompt": "Transactions", "completion": "As we saw in ECDSA Math, the signature generation algorithm uses a random key k, as the basis for an ephemeral private/public key pair. The value of k is not important, as long as it is random. If the same value k is used to produce two signatures on different messages (transactions), then the signing private key can be calculated by anyone. Reuse of the same value for k in a signature algorithm leads to exposure of the private key!"}
{"prompt": "Transactions", "completion": "If the same value k is used in the signing algorithm on two different transactions, the private key can be calculated and exposed to the world!"}
{"prompt": "Transactions", "completion": "This is not just a theoretical possibility. We have seen this issue lead to exposure of private keys in a few different implementations of transaction-signing algorithms in bitcoin. People have had funds stolen because of inadvertent reuse of a k value. The most common reason for reuse of a k value is an improperly initialized random-number generator."}
{"prompt": "Transactions", "completion": "To avoid this vulnerability, the industry best practice is to not generate k with a random-number generator seeded with entropy, but instead to use a deterministic-random process seeded with the transaction data itself. This ensures that each transaction produces a different k. The industry-standard algorithm for deterministic initialization of k is defined in RFC 6979, published by the Internet Engineering Task Force."}
{"prompt": "Transactions", "completion": "If you are implementing an algorithm to sign transactions in bitcoin, you must use RFC 6979 or a similarly deterministic-random algorithm to ensure you generate a different k for each transaction."}
{"prompt": "Transactions", "completion": "We began this chapter with the discovery that transactions look very different \"behind the scenes\" than how they are presented in wallets, blockchain explorers, and other user-facing applications. Many of the simplistic and familiar concepts from the earlier chapters, such as bitcoin addresses and balances, seem to be absent from the transaction structure. We saw that transactions don\u2019t contain bitcoin addresses, per se, but instead operate through scripts that lock and unlock discrete values of bitcoin. Balances are not present anywhere in this system and yet every wallet application prominently displays the balance of the user\u2019s wallet."}
{"prompt": "Transactions", "completion": "Now that we have explored what is actually included in a bitcoin transaction, we can examine how the higher-level abstractions are derived from the seemingly primitive components of the transaction."}
{"prompt": "Transactions", "completion": "Let\u2019s look again at how Alice\u2019s transaction was presented on a popular block explorer (Alice\u2019s transaction to Bob\u2019s Cafe)."}
{"prompt": "Transactions", "completion": "On the left side of the transaction, the blockchain explorer shows Alice\u2019s bitcoin address as the \"sender.\" In fact, this information is not in the transaction itself. When the blockchain explorer references the transaction it also references the previous transaction associated with the input and extracts the first output from that older transaction. Within that output is a locking script that locks the UTXO to Alice\u2019s public key hash (a P2PKH script). The blockchain explorer extracted the public key hash and encoded it using Base58Check encoding to produce and display the bitcoin address that represents that public key."}
{"prompt": "Transactions", "completion": "Similarly, on the right side, the blockchain explorer shows the two outputs; the first to Bob\u2019s bitcoin address and the second to Alice\u2019s bitcoin address (as change). Once again, to create these bitcoin addresses, the blockchain explorer extracted the locking script from each output, recognized it as a P2PKH script, and extracted the public-key-hash from within. Finally, the blockchain explorer reencoded each public key hash with Base58Check to produce and display the bitcoin addresses."}
{"prompt": "Transactions", "completion": "If you were to click on Bob\u2019s bitcoin address, the blockchain explorer would show you the view in The balance of Bob\u2019s bitcoin address."}
{"prompt": "Transactions", "completion": "The blockchain explorer displays the balance of Bob\u2019s bitcoin address. But nowhere in the bitcoin system is there a concept of a \"balance.\" Rather, the values displayed here are constructed by the blockchain explorer as follows."}
{"prompt": "Transactions", "completion": "To construct the \"Total Received\" amount, the blockchain explorer first will decode the Base58Check encoding of the bitcoin address to retrieve the 160-bit hash of Bob\u2019s public key that is encoded within the address. Then, the blockchain explorer will search through the database of transactions, looking for outputs with P2PKH locking scripts that contain Bob\u2019s public key hash. By summing up the value of all the outputs, the blockchain explorer can produce the total value received."}
{"prompt": "Transactions", "completion": "Constructing the current balance (displayed as \"Final Balance\") requires a bit more work. The blockchain explorer keeps a separate database of the outputs that are currently unspent, the UTXO set. To maintain this database, the blockchain explorer must monitor the bitcoin network, add newly created UTXO, and remove spent UTXO, in real time, as they appear in unconfirmed transactions. This is a complicated process that depends on keeping track of transactions as they propagate, as well as maintaining consensus with the bitcoin network to ensure that the correct chain is followed. Sometimes, the blockchain explorer goes out of sync and its perspective of the UTXO set is incomplete or incorrect."}
{"prompt": "Transactions", "completion": "From the UTXO set, the blockchain explorer sums up the value of all unspent outputs referencing Bob\u2019s public key hash and produces the \"Final Balance\" number shown to the user."}
{"prompt": "Transactions", "completion": "In order to produce this one image, with these two \"balances,\" the blockchain explorer has to index and search through dozens, hundreds, or even hundreds of thousands of transactions."}
{"prompt": "Transactions", "completion": "In summary, the information presented to users through wallet applications, blockchain explorers, and other bitcoin user interfaces is often composed of higher-level abstractions that are derived by searching many different transactions, inspecting their content, and manipulating the data contained within them. By presenting this simplistic view of bitcoin transactions that resemble bank checks from one sender to one recipient, these applications have to abstract a lot of underlying details. They mostly focus on the common types of transactions: P2PKH with SIGHASH_ALL signatures on every input. Thus, while bitcoin applications can present more than 80% of all transactions in an easy-to-read manner, they are sometimes stumped by transactions that deviate from the norm. Transactions that contain more complex locking scripts, or different SIGHASH flags, or many inputs and outputs, demonstrate the simplicity and weakness of these abstractions."}
{"prompt": "Transactions", "completion": "Every day, hundreds of transactions that do not contain P2PKH outputs are confirmed on the blockchain. The blockchain explorers often present these with red warning messages saying they cannot decode an address."}
{"prompt": "Transactions", "completion": "As we will see in the next chapter, these are not necessarily strange transactions. They are transactions that contain more complex locking scripts than the common P2PKH. We will learn how to decode and understand more complex scripts and the applications they support next."}
{"prompt": "Advanced Transactions and Scripting", "completion": "In the previous chapter, we introduced the basic elements of bitcoin transactions and looked at the most common type of transaction script, the P2PKH script. In this chapter we will look at more advanced scripting and how we can use it to build transactions with complex conditions."}
{"prompt": "Advanced Transactions and Scripting", "completion": "First, we will look at multisignature scripts. Next, we will examine the second most common transaction script, Pay-to-Script-Hash, which opens up a whole world of complex scripts. Then, we will examine new script operators that add a time dimension to bitcoin, through timelocks. Finally, we will look at Segregated Witness, an architectural change to the structure of transactions."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Multisignature scripts set a condition where N public keys are recorded in the script and at least M of those must provide signatures to unlock the funds. This is also known as an M-of-N scheme, where N is the total number of keys and M is the threshold of signatures required for validation. For example, a 2-of-3 multisignature is one where three public keys are listed as potential signers and at least two of those must be used to create signatures for a valid transaction to spend the funds."}
{"prompt": "Advanced Transactions and Scripting", "completion": "At this time, standard multisignature scripts are limited to at most 3 listed public keys, meaning you can do anything from a 1-of-1 to a 3-of-3 multisignature or any combination within that range. The limitation to 3 listed keys might be lifted by the time this book is published, so check the IsStandard() function to see what is currently accepted by the network. Note that the limit of 3 keys applies only to standard (also known as \"bare\") multisignature scripts, not to multisignature scripts wrapped in a Pay-to-Script-Hash (P2SH) script. P2SH multisignature scripts are limited to 15 keys, allowing for up to 15-of-15 multisignature. This limitation is also imposed by the IsStandard() function. We will learn about P2SH in Pay-to-Script-Hash (P2SH)."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The general form of a locking script setting an M-of-N multisignature condition is:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "where N is the total number of listed public keys and M is the threshold of required signatures to spend the output."}
{"prompt": "Advanced Transactions and Scripting", "completion": "A locking script setting a 2-of-3 multisignature condition looks like this:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "The preceding locking script can be satisfied with an unlocking script containing any combination of two signatures from the private keys corresponding to the three listed public keys:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "The two scripts together would form the combined validation script:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "When executed, this combined script will evaluate to TRUE if, and only if, the unlocking script matches the conditions set by the locking script. In this case, the condition is whether the unlocking script has a valid signature from the two private keys that correspond to two of the three public keys set as an encumbrance."}
{"prompt": "Advanced Transactions and Scripting", "completion": "There is a bug in CHECKMULTISIG's execution that requires a slight workaround. When CHECKMULTISIG executes, it should consume M+N+2 items on the stack as parameters. However, due to the bug, CHECKMULTISIG will pop an extra value or one value more than expected."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Let\u2019s look at this in greater detail using the previous validation example:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "First, CHECKMULTISIG pops the top item, which is N (in this example \"3\"). Then it pops N items, which are the public keys that can sign. In this example, public keys A, B, and C. Then, it pops one item, which is M, the quorum (how many signatures are needed). Here M = 2. At this point, CHECKMULTISIG should pop the final M items, which are the signatures, and see if they are valid. However, unfortunately, a bug in the implementation causes CHECKMULTISIG to pop one more item (M+1 total) than it should. The extra item is disregarded when checking the signatures so it has no direct effect on CHECKMULTISIG itself. However, an extra value must be present because if it is not present, when CHECKMULTISIG attempts to pop on an empty stack, it will cause a stack error and script failure (marking the transaction as invalid). Because the extra item is disregarded it can be anything, but customarily 0 is used."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Because this bug became part of the consensus rules, it must now be replicated forever. Therefore the correct script validation would look like this:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Thus the unlocking script actually used in multisig is not:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "but instead it is:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "From now on, if you see a multisig unlocking script, you should expect to see an extra 0 in the beginning, whose only purpose is as a workaround to a bug that accidentally became a consensus rule."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Pay-to-Script-Hash (P2SH) was introduced in 2012 as a powerful new type of transaction that greatly simplifies the use of complex transaction scripts. To explain the need for P2SH, let\u2019s look at a practical example."}
{"prompt": "Advanced Transactions and Scripting", "completion": "In [ch01_intro_what_is_bitcoin] we introduced Mohammed, an electronics importer based in Dubai. Mohammed\u2019s company uses bitcoin\u2019s multisignature feature extensively for its corporate accounts. Multisignature scripts are one of the most common uses of bitcoin\u2019s advanced scripting capabilities and are a very powerful feature. Mohammed\u2019s company uses a multisignature script for all customer payments, known in accounting terms as \"accounts receivable,\" or AR. With the multisignature scheme, any payments made by customers are locked in such a way that they require at least two signatures to release, from Mohammed and one of his partners or from his attorney who has a backup key. A multisignature scheme like that offers corporate governance controls and protects against theft, embezzlement, or loss."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The resulting script is quite long and looks like this:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Although multisignature scripts are a powerful feature, they are cumbersome to use. Given the preceding script, Mohammed would have to communicate this script to every customer prior to payment. Each customer would have to use special bitcoin wallet software with the ability to create custom transaction scripts, and each customer would have to understand how to create a transaction using custom scripts. Furthermore, the resulting transaction would be about five times larger than a simple payment transaction, because this script contains very long public keys. The burden of that extra-large transaction would be borne by the customer in the form of fees. Finally, a large transaction script like this would be carried in the UTXO set in RAM in every full node, until it was spent. All of these issues make using complex locking scripts difficult in practice."}
{"prompt": "Advanced Transactions and Scripting", "completion": "P2SH was developed to resolve these practical difficulties and to make the use of complex scripts as easy as a payment to a bitcoin address. With P2SH payments, the complex locking script is replaced with its digital fingerprint, a cryptographic hash. When a transaction attempting to spend the UTXO is presented later, it must contain the script that matches the hash, in addition to the unlocking script. In simple terms, P2SH means \"pay to a script matching this hash, a script that will be presented later when this output is spent.\""}
{"prompt": "Advanced Transactions and Scripting", "completion": "In P2SH transactions, the locking script that is replaced by a hash is referred to as the redeem script because it is presented to the system at redemption time rather than as a locking script. Complex script without P2SH shows the script without P2SH and Complex script as P2SH shows the same script encoded with P2SH."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Locking Script"}
{"prompt": "Advanced Transactions and Scripting", "completion": "2 PubKey1 PubKey2 PubKey3 PubKey4 PubKey5 5 CHECKMULTISIG"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Unlocking Script"}
{"prompt": "Advanced Transactions and Scripting", "completion": "0 Sig1 Sig2"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Redeem Script"}
{"prompt": "Advanced Transactions and Scripting", "completion": "2 PubKey1 PubKey2 PubKey3 PubKey4 PubKey5 5 CHECKMULTISIG"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Locking Script"}
{"prompt": "Advanced Transactions and Scripting", "completion": "HASH160 <20-byte hash of redeem script> EQUAL"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Unlocking Script"}
{"prompt": "Advanced Transactions and Scripting", "completion": "0 Sig1 Sig2 <redeem script>"}
{"prompt": "Advanced Transactions and Scripting", "completion": "As you can see from the tables, with P2SH the complex script that details the conditions for spending the output (redeem script) is not presented in the locking script. Instead, only a hash of it is in the locking script and the redeem script itself is presented later, as part of the unlocking script when the output is spent. This shifts the burden in fees and complexity from the sender (who creates the transaction) to the recipient (who unlocks and spends the transaction)."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Let\u2019s look at Mohammed\u2019s company, the complex multisignature script, and the resulting P2SH scripts."}
{"prompt": "Advanced Transactions and Scripting", "completion": "First, the multisignature script that Mohammed\u2019s company uses for all incoming payments from customers:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "If the placeholders are replaced by actual public keys (shown here as 520-bit numbers starting with 04) you can see that this script becomes very long:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "This entire script can instead be represented by a 20-byte cryptographic hash, by first applying the SHA256 hashing algorithm and then applying the RIPEMD160 algorithm on the result."}
{"prompt": "Advanced Transactions and Scripting", "completion": "We use libbitcoin-explorer (bx) on the command-line to produce the script hash, as follows:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "The series of commands above first encodes Mohammed\u2019s multisig redeem script as a serialized hex-encoded bitcoin Script. The next bx command calculates the SHA256 hash of that. The next bx command hashes again with RIPEMD160, producing the final script-hash:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "The 20-byte hash of Mohammed\u2019s redeem script is:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "A P2SH transaction locks the output to this hash instead of the longer redeem script, using the locking script:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "which, as you can see, is much shorter. Instead of \"pay to this 5-key multisignature script,\" the P2SH equivalent transaction is \"pay to a script with this hash.\" A customer making a payment to Mohammed\u2019s company need only include this much shorter locking script in his payment. When Mohammed and his partners want to spend this UTXO, they must present the original redeem script (the one whose hash locked the UTXO) and the signatures necessary to unlock it, like this:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "The two scripts are combined in two stages. First, the redeem script is checked against the locking script to make sure the hash matches:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "If the redeem script hash matches, the unlocking script is executed on its own, to unlock the redeem script:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Almost all the scripts described in this chapter can only be implemented as P2SH scripts. For example, a 2 of 5 standard multisignature locking script cannot be used directly in the locking script of an UTXO, as IsStandard() would invalidate the transaction. To conform, a P2SH locking script can be used instead, as seen above. A transaction that then includes a P2SH unlocking script can be used to redeem this UTXO and will be valid so long as it does not contain more than 15 public keys."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Remember, because of policy set forth by the IsStandard() function at the time of this writing, standard multisignature scripts are limited to at most 3 listed public keys, while P2SH scripts are limited to at most 15 listed public keys. Standard multisignature scripts can invalidate transactions by way of their locking or unlocking script, while P2SH scripts can invalidate transactions by way of their unlocking script only. This is because there is no way for IsStandard() to tell if a hash of a redeem script in a locking script includes more signatures than the currently imposed size limitation, so it can only observe the unlocking scripts in transaction inputs."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Another important part of the P2SH feature is the ability to encode a script hash as an address, as defined in BIP-13. P2SH addresses are Base58Check encodings of the 20-byte hash of a script, just like bitcoin addresses are Base58Check encodings of the 20-byte hash of a public key. P2SH addresses use the version prefix \"5,\" which results in Base58Check-encoded addresses that start with a \"3.\""}
{"prompt": "Advanced Transactions and Scripting", "completion": "For example, Mohammed\u2019s complex script, hashed and Base58Check-encoded as a P2SH address, becomes 39RF6JqABiHdYHkfChV6USGMe6Nsr66Gzw. We can confirm that with the bx command:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Now, Mohammed can give this \"address\" to his customers and they can use almost any bitcoin wallet to make a simple payment, as if it were a bitcoin address. The 3 prefix gives them a hint that this is a special type of address, one corresponding to a script instead of a public key, but otherwise it works in exactly the same way as a payment to a bitcoin address."}
{"prompt": "Advanced Transactions and Scripting", "completion": "P2SH addresses hide all of the complexity, so that the person making a payment does not see the script."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The P2SH feature offers the following benefits compared to the direct use of complex scripts in locking outputs:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Complex scripts are replaced by shorter fingerprints in the transaction output, making the transaction smaller."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Scripts can be coded as an address, so the sender and the sender\u2019s wallet don\u2019t need complex engineering to implement P2SH."}
{"prompt": "Advanced Transactions and Scripting", "completion": "P2SH shifts the burden of constructing the script to the recipient, not the sender."}
{"prompt": "Advanced Transactions and Scripting", "completion": "P2SH shifts the burden in data storage for the long script from the output (which additionally to being stored on the blockchain is in the UTXO set) to the input (only stored on the blockchain)."}
{"prompt": "Advanced Transactions and Scripting", "completion": "P2SH shifts the burden in data storage for the long script from the present time (payment) to a future time (when it is spent)."}
{"prompt": "Advanced Transactions and Scripting", "completion": "P2SH shifts the higher transaction fee costs of a long script from the sender to the recipient, who has to include the long redeem script to spend it."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Prior to version 0.9.2 of the Bitcoin Core client, Pay-to-Script-Hash was limited to the standard types of bitcoin transaction scripts, by the IsStandard() function. That means that the redeem script presented in the spending transaction could only be one of the standard types: P2PK, P2PKH, or multisig."}
{"prompt": "Advanced Transactions and Scripting", "completion": "As of version 0.9.2 of the Bitcoin Core client, P2SH transactions can contain any valid script, making the P2SH standard much more flexible and allowing for experimentation with many novel and complex types of transactions."}
{"prompt": "Advanced Transactions and Scripting", "completion": "You are not able to put a P2SH inside a P2SH redeem script, because the P2SH specification is not recursive. Also, while it is technically possible to include RETURN (see Data Recording Output (RETURN)) in a redeem script, as nothing in the rules prevents you from doing so, it is of no practical use because executing RETURN during validation will cause the transaction to be marked invalid."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Note that because the redeem script is not presented to the network until you attempt to spend a P2SH output, if you lock an output with the hash of an invalid redeem script it will be processed regardless. The UTXO will be successfully locked. However, you will not be able to spend it because the spending transaction, which includes the redeem script, will not be accepted because it is an invalid script. This creates a risk, because you can lock bitcoin in a P2SH that cannot be spent later. The network will accept the P2SH locking script even if it corresponds to an invalid redeem script, because the script hash gives no indication of the script it represents."}
{"prompt": "Advanced Transactions and Scripting", "completion": "P2SH locking scripts contain the hash of a redeem script, which gives no clues as to the content of the redeem script itself. The P2SH transaction will be considered valid and accepted even if the redeem script is invalid. You might accidentally lock bitcoin in such a way that it cannot later be spent."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bitcoin\u2019s distributed and timestamped ledger, the blockchain, has potential uses far beyond payments. Many developers have tried to use the transaction scripting language to take advantage of the security and resilience of the system for applications such as digital notary services, stock certificates, and smart contracts. Early attempts to use bitcoin\u2019s script language for these purposes involved creating transaction outputs that recorded data on the blockchain; for example, to record a digital fingerprint of a file in such a way that anyone could establish proof-of-existence of that file on a specific date by reference to that transaction."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The use of bitcoin\u2019s blockchain to store data unrelated to bitcoin payments is a controversial subject. Many developers consider such use abusive and want to discourage it. Others view it as a demonstration of the powerful capabilities of blockchain technology and want to encourage such experimentation. Those who object to the inclusion of nonpayment data argue that it causes \"blockchain bloat,\" burdening those running full bitcoin nodes with carrying the cost of disk storage for data that the blockchain was not intended to carry. Moreover, such transactions create UTXO that cannot be spent, using the destination bitcoin address as a freeform 20-byte field. Because the address is used for data, it doesn\u2019t correspond to a private key and the resulting UTXO can never be spent; it\u2019s a fake payment. These transactions that can never be spent are therefore never removed from the UTXO set and cause the size of the UTXO database to forever increase, or \"bloat.\""}
{"prompt": "Advanced Transactions and Scripting", "completion": "In version 0.9 of the Bitcoin Core client, a compromise was reached with the introduction of the RETURN operator. RETURN allows developers to add 80 bytes of nonpayment data to a transaction output. However, unlike the use of \"fake\" UTXO, the RETURN operator creates an explicitly provably unspendable output, which does not need to be stored in the UTXO set. RETURN outputs are recorded on the blockchain, so they consume disk space and contribute to the increase in the blockchain\u2019s size, but they are not stored in the UTXO set and therefore do not bloat the UTXO memory pool and burden full nodes with the cost of more expensive RAM."}
{"prompt": "Advanced Transactions and Scripting", "completion": "RETURN scripts look like this:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "The data portion is limited to 80 bytes and most often represents a hash, such as the output from the SHA256 algorithm (32 bytes). Many applications put a prefix in front of the data to help identify the application. For example, the Proof of Existence digital notarization service uses the 8-byte prefix DOCPROOF, which is ASCII encoded as 44 4f 43 50 52 4f 4f 46 in hexadecimal."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Keep in mind that there is no \"unlocking script\" that corresponds to RETURN that could possibly be used to \"spend\" a RETURN output. The whole point of RETURN is that you can\u2019t spend the money locked in that output, and therefore it does not need to be held in the UTXO set as potentially spendable\u2014RETURN is provably unspendable. RETURN is usually an output with a zero bitcoin amount, because any bitcoin assigned to such an output is effectively lost forever. If a RETURN is referenced as an input in a transaction, the script validation engine will halt the execution of the validation script and mark the transaction as invalid. The execution of RETURN essentially causes the script to \"RETURN\" with a FALSE and halt. Thus, if you accidentally reference a RETURN output as an input in a transaction, that transaction is invalid."}
{"prompt": "Advanced Transactions and Scripting", "completion": "A standard transaction (one that conforms to the IsStandard() checks) can have only one RETURN output. However, a single RETURN output can be combined in a transaction with outputs of any other type."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Two new command-line options have been added in Bitcoin Core as of version 0.10. The option datacarrier controls relay and mining of RETURN transactions, with the default set to \"1\" to allow them. The option datacarriersize takes a numeric argument specifying the maximum size in bytes of the RETURN script, 83 bytes by default, which, allows for a maximum of 80 bytes of RETURN data plus one byte of RETURN opcode and two bytes of PUSHDATA opcode."}
{"prompt": "Advanced Transactions and Scripting", "completion": "RETURN was initially proposed with a limit of 80 bytes, but the limit was reduced to 40 bytes when the feature was released. In February 2015, in version 0.10 of Bitcoin Core, the limit was raised back to 80 bytes. Nodes may choose not to relay or mine RETURN, or only relay and mine RETURN containing less than 80 bytes of data."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Timelocks are restrictions on transactions or outputs that only allow spending after a point in time. Bitcoin has had a transaction-level timelock feature from the beginning. It is implemented by the nLocktime field in a transaction. Two new timelock features were introduced in late 2015 and mid-2016 that offer UTXO-level timelocks. These are CHECKLOCKTIMEVERIFY and CHECKSEQUENCEVERIFY."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Timelocks are useful for postdating transactions and locking funds to a date in the future. More importantly, timelocks extend bitcoin scripting into the dimension of time, opening the door for complex multistep smart contracts."}
{"prompt": "Advanced Transactions and Scripting", "completion": "From the beginning, bitcoin has had a transaction-level timelock feature. Transaction locktime is a transaction-level setting (a field in the transaction data structure) that defines the earliest time that a transaction is valid and can be relayed on the network or added to the blockchain. Locktime is also known as nLocktime from the variable name used in the Bitcoin Core codebase. It is set to zero in most transactions to indicate immediate propagation and execution. If nLocktime is nonzero and below 500 million, it is interpreted as a block height, meaning the transaction is not valid and is not relayed or included in the blockchain prior to the specified block height. If it is greater than or equal to 500 million, it is interpreted as a Unix Epoch timestamp (seconds since Jan-1-1970) and the transaction is not valid prior to the specified time. Transactions with nLocktime specifying a future block or time must be held by the originating system and transmitted to the bitcoin network only after they become valid. If a transaction is transmitted to the network before the specified nLocktime, the transaction will be rejected by the first node as invalid and will not be relayed to other nodes. The use of nLocktime is equivalent to postdating a paper check."}
{"prompt": "Advanced Transactions and Scripting", "completion": "nLocktime has the limitation that while it makes it possible to spend some outputs in the future, it does not make it impossible to spend them until that time. Let\u2019s explain that with the following example."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Alice signs a transaction spending one of her outputs to Bob\u2019s address, and sets the transaction nLocktime to 3 months in the future. Alice sends that transaction to Bob to hold. With this transaction Alice and Bob know that:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bob cannot transmit the transaction to redeem the funds until 3 months have elapsed."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bob may transmit the transaction after 3 months."}
{"prompt": "Advanced Transactions and Scripting", "completion": "However:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Alice can create another transaction, double-spending the same inputs without a locktime. Thus, Alice can spend the same UTXO before the 3 months have elapsed."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bob has no guarantee that Alice won\u2019t do that."}
{"prompt": "Advanced Transactions and Scripting", "completion": "It is important to understand the limitations of transaction nLocktime. The only guarantee is that Bob will not be able to redeem it before 3 months have elapsed. There is no guarantee that Bob will get the funds. To achieve such a guarantee, the timelock restriction must be placed on the UTXO itself and be part of the locking script, rather than on the transaction. This is achieved by the next form of timelock, called Check Lock Time Verify."}
{"prompt": "Advanced Transactions and Scripting", "completion": "In December 2015, a new form of timelock was introduced to bitcoin as a soft fork upgrade. Based on a specification in BIP-65, a new script operator called CHECKLOCKTIMEVERIFY (CLTV) was added to the scripting language. CLTV is a per-output timelock, rather than a per-transaction timelock as is the case with nLocktime. This allows for much greater flexibility in the way timelocks are applied."}
{"prompt": "Advanced Transactions and Scripting", "completion": "In simple terms, by adding the CLTV opcode in the redeem script of an output it restricts the output, so that it can only be spent after the specified time has elapsed."}
{"prompt": "Advanced Transactions and Scripting", "completion": "While nLocktime is a transaction-level timelock, CLTV is an output-based timelock."}
{"prompt": "Advanced Transactions and Scripting", "completion": "CLTV doesn\u2019t replace nLocktime, but rather restricts specific UTXO such that they can only be spent in a future transaction with nLocktime set to a greater or equal value."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The CLTV opcode takes one parameter as input, expressed as a number in the same format as nLocktime (either a block height or Unix epoch time). As indicated by the VERIFY suffix, CLTV is the type of opcode that halts execution of the script if the outcome is FALSE. If it results in TRUE, execution continues."}
{"prompt": "Advanced Transactions and Scripting", "completion": "In order to lock an output with CLTV, you insert it into the redeem script of the output in the transaction that creates the output. For example, if Alice is paying Bob\u2019s address, the output would normally contain a P2PKH script like this:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "To lock it to a time, say 3 months from now, the transaction would be a P2SH transaction with a redeem script like this:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "where <now {plus} 3 months> is a block height or time value estimated 3 months from the time the transaction is mined: current block height + 12,960 (blocks) or current Unix epoch time + 7,760,000 (seconds). For now, don\u2019t worry about the DROP opcode that follows CHECKLOCKTIMEVERIFY; it will be explained shortly."}
{"prompt": "Advanced Transactions and Scripting", "completion": "When Bob tries to spend this UTXO, he constructs a transaction that references the UTXO as an input. He uses his signature and public key in the unlocking script of that input and sets the transaction nLocktime to be equal to or greater than the timelock in the CHECKLOCKTIMEVERIFY Alice set. Bob then broadcasts the transaction on the bitcoin network."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bob\u2019s transaction is evaluated as follows. If the CHECKLOCKTIMEVERIFY parameter Alice set is less than or equal to the spending transaction\u2019s nLocktime, script execution continues (acts as if a \u201cno operation\u201d or NOP opcode was executed). Otherwise, script execution halts and the transaction is deemed invalid."}
{"prompt": "Advanced Transactions and Scripting", "completion": "More precisely, CHECKLOCKTIMEVERIFY fails and halts execution, marking the transaction invalid if (source: BIP-65):"}
{"prompt": "Advanced Transactions and Scripting", "completion": "the stack is empty; or"}
{"prompt": "Advanced Transactions and Scripting", "completion": "the top item on the stack is less than 0; or"}
{"prompt": "Advanced Transactions and Scripting", "completion": "the timelock type (height versus timestamp) of the top stack item and the nLocktime field are not the same; or"}
{"prompt": "Advanced Transactions and Scripting", "completion": "the top stack item is greater than the transaction\u2019s nLocktime field; or"}
{"prompt": "Advanced Transactions and Scripting", "completion": "the nSequence field of the input is 0xffffffff."}
{"prompt": "Advanced Transactions and Scripting", "completion": "CLTV and nLocktime use the same format to describe timelocks, either a block height or the time elapsed in seconds since Unix epoch. Critically, when used together, the format of nLocktime must match that of CLTV in the outputs\u2014they must both reference either block height or time in seconds."}
{"prompt": "Advanced Transactions and Scripting", "completion": "After execution, if CLTV is satisfied, the time parameter that preceded it remains as the top item on the stack and may need to be dropped, with DROP, for correct execution of subsequent script opcodes. You will often see CHECKLOCKTIMEVERIFY followed by DROP in scripts for this reason."}
{"prompt": "Advanced Transactions and Scripting", "completion": "By using nLocktime in conjunction with CLTV, the scenario described in Transaction locktime limitations changes. Alice can no longer spend the money (because it\u2019s locked with Bob\u2019s key) and Bob cannot spend it before the 3-month locktime has expired."}
{"prompt": "Advanced Transactions and Scripting", "completion": "By introducing timelock functionality directly into the scripting language, CLTV allows us to develop some very interesting complex scripts."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The standard is defined in BIP-65 (CHECKLOCKTIMEVERIFY)."}
{"prompt": "Advanced Transactions and Scripting", "completion": "nLocktime and CLTV are both absolute timelocks in that they specify an absolute point in time. The next two timelock features we will examine are relative timelocks in that they specify, as a condition of spending an output, an elapsed time from the confirmation of the output in the blockchain."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Relative timelocks are useful because they allow a chain of two or more interdependent transactions to be held off chain, while imposing a time constraint on one transaction that is dependent on the elapsed time from the confirmation of a previous transaction. In other words, the clock doesn\u2019t start counting until the UTXO is recorded on the blockchain. This functionality is especially useful in bidirectional state channels and Lightning Networks, as we will see in [state_channels]."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Relative timelocks, like absolute timelocks, are implemented with both a transaction-level feature and a script-level opcode. The transaction-level relative timelock is implemented as a consensus rule on the value of nSequence, a transaction field that is set in every transaction input. Script-level relative timelocks are implemented with the CHECKSEQUENCEVERIFY (CSV) opcode."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Relative timelocks are implemented according to the specifications in BIP-68, Relative lock-time using consensus-enforced sequence numbers and BIP-112, CHECKSEQUENCEVERIFY."}
{"prompt": "Advanced Transactions and Scripting", "completion": "BIP-68 and BIP-112 were activated in May 2016 as a soft fork upgrade to the consensus rules."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Relative timelocks can be set on each input of a transaction, by setting the nSequence field in each input."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The nSequence field was originally intended (but never properly implemented) to allow modification of transactions in the mempool. In that use, a transaction containing inputs with nSequence value below 232 - 1 (0xFFFFFFFF) indicated a transaction that was not yet \"finalized.\" Such a transaction would be held in the mempool until it was replaced by another transaction spending the same inputs with a higher nSequence value. Once a transaction was received whose inputs had an nSequence value of 0xFFFFFFFF it would be considered \"finalized\" and mined."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The original meaning of nSequence was never properly implemented and the value of nSequence is customarily set to 0xFFFFFFFF in transactions that do not utilize timelocks. For transactions with nLocktime or CHECKLOCKTIMEVERIFY, the nSequence value must be set to less than 231 for the timelock guards to have an effect, as explained below."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Since the activation of BIP-68, new consensus rules apply for any transaction containing an input whose nSequence value is less than 231 (bit 1<<31 is not set). Programmatically, that means that if the most significant bit (bit 1<<31) is not set, it is a flag that means \"relative locktime.\" Otherwise (bit 1<<31 set), the nSequence value is reserved for other uses such as enabling CHECKLOCKTIMEVERIFY, nLocktime, Opt-In-Replace-By-Fee, and other future developments."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Transaction inputs with nSequence values less than 231 are interpreted as having a relative timelock. Such a transaction is only valid once the input has aged by the relative timelock amount. For example, a transaction with one input with an nSequence relative timelock of 30 blocks is only valid when at least 30 blocks have elapsed from the time the UTXO referenced in the input was mined. Since nSequence is a per-input field, a transaction may contain any number of timelocked inputs, all of which must have sufficiently aged for the transaction to be valid. A transaction can include both timelocked inputs (nSequence < 231) and inputs without a relative timelock (nSequence >= 231)."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The nSequence value is specified in either blocks or seconds, but in a slightly different format than we saw used in nLocktime. A type-flag is used to differentiate between values counting blocks and values counting time in seconds. The type-flag is set in the 23rd least-significant bit (i.e., value 1<<22). If the type-flag is set, then the nSequence value is interpreted as a multiple of 512 seconds. If the type-flag is not set, the nSequence value is interpreted as a number of blocks."}
{"prompt": "Advanced Transactions and Scripting", "completion": "When interpreting nSequence as a relative timelock, only the 16 least significant bits are considered. Once the flags (bits 32 and 23) are evaluated, the nSequence value is usually \"masked\" with a 16-bit mask (e.g., nSequence & 0x0000FFFF)."}
{"prompt": "Advanced Transactions and Scripting", "completion": "BIP-68 definition of nSequence encoding (Source: BIP-68) shows the binary layout of the nSequence value, as defined by BIP-68."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Relative timelocks based on consensus enforcement of the nSequence value are defined in BIP-68."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The standard is defined in BIP-68, Relative lock-time using consensus-enforced sequence numbers."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Just like CLTV and nLocktime, there is a script opcode for relative timelocks that leverages the nSequence value in scripts. That opcode is CHECKSEQUENCEVERIFY, commonly referred to as CSV for short."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The CSV opcode when evaluated in an UTXO\u2019s redeem script allows spending only in a transaction whose input nSequence value is greater than or equal to the CSV parameter. Essentially, this restricts spending the UTXO until a certain number of blocks or seconds have elapsed relative to the time the UTXO was mined."}
{"prompt": "Advanced Transactions and Scripting", "completion": "As with CLTV, the value in CSV must match the format in the corresponding nSequence value. If CSV is specified in terms of blocks, then so must nSequence. If CSV is specified in terms of seconds, then so must nSequence."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Relative timelocks with CSV are especially useful when several (chained) transactions are created and signed, but not propagated, when they\u2019re kept \"off-chain.\" A child transaction cannot be used until the parent transaction has been propagated, mined, and aged by the time specified in the relative timelock. One application of this use case can be seen in [state_channels] and [lightning_network]."}
{"prompt": "Advanced Transactions and Scripting", "completion": "CSV is defined in detail in BIP-112, CHECKSEQUENCEVERIFY."}
{"prompt": "Advanced Transactions and Scripting", "completion": "As part of the activation of relative timelocks, there was also a change in the way \"time\" is calculated for timelocks (both absolute and relative). In bitcoin there is a subtle, but very significant, difference between wall time and consensus time. Bitcoin is a decentralized network, which means that each participant has his or her own perspective of time. Events on the network do not occur instantaneously everywhere. Network latency must be factored into the perspective of each node. Eventually everything is synchronized to create a common ledger. Bitcoin reaches consensus every 10 minutes about the state of the ledger as it existed in the past."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The timestamps set in block headers are set by the miners. There is a certain degree of latitude allowed by the consensus rules to account for differences in clock accuracy between decentralized nodes. However, this creates an unfortunate incentive for miners to lie about the time in a block so as to earn extra fees by including timelocked transactions that are not yet mature. See the following section for more information."}
{"prompt": "Advanced Transactions and Scripting", "completion": "To remove the incentive to lie and strengthen the security of timelocks, a BIP was proposed and activated at the same time as the BIPs for relative timelocks. This is BIP-113, which defines a new consensus measurement of time called Median-Time-Past."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Median-Time-Past is calculated by taking the timestamps of the last 11 blocks and finding the median. That median time then becomes consensus time and is used for all timelock calculations. By taking the midpoint from approximately two hours in the past, the influence of any one block\u2019s timestamp is reduced. By incorporating 11 blocks, no single miner can influence the timestamps in order to gain fees from transactions with a timelock that hasn\u2019t yet matured."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Median-Time-Past changes the implementation of time calculations for nLocktime, CLTV, nSequence, and CSV. The consensus time calculated by Median-Time-Past is always approximately one hour behind wall clock time. If you create timelock transactions, you should account for it when estimating the desired value to encode in nLocktime, nSequence, CLTV, and CSV."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Median-Time-Past is specified in BIP-113."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Fee-sniping is a theoretical attack scenario, where miners attempting to rewrite past blocks \"snipe\" higher-fee transactions from future blocks to maximize their profitability."}
{"prompt": "Advanced Transactions and Scripting", "completion": "For example, let\u2019s say the highest block in existence is block #100,000. If instead of attempting to mine block #100,001 to extend the chain, some miners attempt to remine #100,000. These miners can choose to include any valid transaction (that hasn\u2019t been mined yet) in their candidate block #100,000. They don\u2019t have to remine the block with the same transactions. In fact, they have the incentive to select the most profitable (highest fee per kB) transactions to include in their block. They can include any transactions that were in the \"old\" block #100,000, as well as any transactions from the current mempool. Essentially they have the option to pull transactions from the \"present\" into the rewritten \"past\" when they re-create block #100,000."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Today, this attack is not very lucrative, because block reward is much higher than total fees per block. But at some point in the future, transaction fees will be the majority of the mining reward (or even the entirety of the mining reward). At that time, this scenario becomes inevitable."}
{"prompt": "Advanced Transactions and Scripting", "completion": "To prevent \"fee sniping,\" when Bitcoin Core creates transactions, it uses nLocktime to limit them to the \"next block,\" by default. In our scenario, Bitcoin Core would set nLocktime to 100,001 on any transaction it created. Under normal circumstances, this nLocktime has no effect\u2014the transactions could only be included in block #100,001 anyway; it\u2019s the next block."}
{"prompt": "Advanced Transactions and Scripting", "completion": "But under a blockchain fork/double-spend attack, the miners would not be able to pull high-fee transactions from the mempool, because all those transactions would be timelocked to block #100,001. They can only remine #100,000 with whatever transactions were valid at that time, essentially gaining no new fees."}
{"prompt": "Advanced Transactions and Scripting", "completion": "To achieve this, Bitcoin Core sets the nLocktime on all new transactions to <current block # + 1> and sets the nSequence on all the inputs to 0xFFFFFFFE to enable nLocktime."}
{"prompt": "Advanced Transactions and Scripting", "completion": "One of the more powerful features of Bitcoin Script is flow control, also known as conditional clauses. You are probably familiar with flow control in various programming languages that use the construct IF...THEN...ELSE. Bitcoin conditional clauses look a bit different, but are essentially the same construct."}
{"prompt": "Advanced Transactions and Scripting", "completion": "At a basic level, bitcoin conditional opcodes allow us to construct a redeem script that has two ways of being unlocked, depending on a TRUE/FALSE outcome of evaluating a logical condition. For example, if x is TRUE, the redeem script is A and the ELSE redeem script is B."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Additionally, bitcoin conditional expressions can be \"nested\" indefinitely, meaning that a conditional clause can contain another within it, which contains another, etc. Bitcoin Script flow control can be used to construct very complex scripts with hundreds or even thousands of possible execution paths. There is no limit to nesting, but consensus rules impose a limit on the maximum size, in bytes, of a script."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bitcoin implements flow control using the IF, ELSE, ENDIF, and NOTIF opcodes. Additionally, conditional expressions can contain boolean operators such as BOOLAND, BOOLOR, and NOT."}
{"prompt": "Advanced Transactions and Scripting", "completion": "At first glance, you may find the bitcoin\u2019s flow control scripts confusing. That is because Bitcoin Script is a stack language. The same way that 1 {plus} 1 looks \"backward\" when expressed as 1 1 ADD, flow control clauses in bitcoin also look \"backward.\""}
{"prompt": "Advanced Transactions and Scripting", "completion": "In most traditional (procedural) programming languages, flow control looks like this:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "In a stack-based language like Bitcoin Script, the logical condition comes before the IF, which makes it look \"backward,\" like this:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "When reading Bitcoin Script, remember that the condition being evaluated comes before the IF opcode."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Another form of conditional in Bitcoin Script is any opcode that ends in VERIFY. The VERIFY suffix means that if the condition evaluated is not TRUE, execution of the script terminates immediately and the transaction is deemed invalid."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Unlike an IF clause, which offers alternative execution paths, the VERIFY suffix acts as a guard clause, continuing only if a precondition is met."}
{"prompt": "Advanced Transactions and Scripting", "completion": "For example, the following script requires Bob\u2019s signature and a pre-image (secret) that produces a specific hash. Both conditions must be satisfied to unlock it:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "To redeem this, Bob must construct an unlocking script that presents a valid pre-image and a signature:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Without presenting the pre-image, Bob can\u2019t get to the part of the script that checks for his signature."}
{"prompt": "Advanced Transactions and Scripting", "completion": "This script can be written with an IF instead:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bob\u2019s unlocking script is identical:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "The script with IF does the same thing as using an opcode with a VERIFY suffix; they both operate as guard clauses. However, the VERIFY construction is more efficient, using two fewer opcodes."}
{"prompt": "Advanced Transactions and Scripting", "completion": "So, when do we use VERIFY and when do we use IF? If all we are trying to do is to attach a precondition (guard clause), then VERIFY is better. If, however, we want to have more than one execution path (flow control), then we need an IF...ELSE flow control clause."}
{"prompt": "Advanced Transactions and Scripting", "completion": "An opcode such as EQUAL will push the result (TRUE/FALSE) onto the stack, leaving it there for evaluation by subsequent opcodes. In contrast, the opcode EQUALVERIFY suffix does not leave anything on the stack. Opcodes that end in VERIFY do not leave the result on the stack."}
{"prompt": "Advanced Transactions and Scripting", "completion": "A very common use for flow control in Bitcoin Script is to construct a redeem script that offers multiple execution paths, each a different way of redeeming the UTXO."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Let\u2019s look at a simple example, where we have two signers, Alice and Bob, and either one is able to redeem. With multisig, this would be expressed as a 1-of-2 multisig script. For the sake of demonstration, we will do the same thing with an IF clause:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Looking at this redeem script, you may be wondering: \"Where is the condition? There is nothing preceding the IF clause!\""}
{"prompt": "Advanced Transactions and Scripting", "completion": "The condition is not part of the redeem script. Instead, the condition will be offered in the unlocking script, allowing Alice and Bob to \"choose\" which execution path they want."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Alice redeems this with the unlocking script:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "The 1 at the end serves as the condition (TRUE) that will make the IF clause execute the first redemption path for which Alice has a signature."}
{"prompt": "Advanced Transactions and Scripting", "completion": "For Bob to redeem this, he would have to choose the second execution path by giving a FALSE value to the IF clause:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bob\u2019s unlocking script puts a 0 on the stack, causing the IF clause to execute the second (ELSE) script, which requires Bob\u2019s signature."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Since IF clauses can be nested, we can create a \"maze\" of execution paths. The unlocking script can provide a \"map\" selecting which execution path is actually executed:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "In this scenario, there are three execution paths (script A, script B, and script C). The unlocking script provides a path in the form of a sequence of TRUE or FALSE values. To select path script B, for example, the unlocking script must end in 1 0 (TRUE, FALSE). These values will be pushed onto the stack, so that the second value (FALSE) ends up at the top of the stack. The outer IF clause pops the FALSE value and executes the first ELSE clause. Then the TRUE value moves to the top of the stack and is evaluated by the inner (nested) IF, selecting the B execution path."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Using this construct, we can build redeem scripts with tens or hundreds of execution paths, each offering a different way to redeem the UTXO. To spend, we construct an unlocking script that navigates the execution path by putting the appropriate TRUE and FALSE values on the stack at each flow control point."}
{"prompt": "Advanced Transactions and Scripting", "completion": "In this section we combine many of the concepts from this chapter into a single example."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Our example uses the story of Mohammed, the company owner in Dubai who is operating an import/export business."}
{"prompt": "Advanced Transactions and Scripting", "completion": "In this example, Mohammed wishes to construct a company capital account with flexible rules. The scheme he creates requires different levels of authorization depending on timelocks. The participants in the multisig scheme are Mohammed, his two partners Saeed and Zaira, and their company lawyer Abdul. The three partners make decisions based on a majority rule, so two of the three must agree. However, in the case of a problem with their keys, they want their lawyer to be able to recover the funds with one of the three partner signatures. Finally, if all partners are unavailable or incapacitated for a while, they want the lawyer to be able to manage the account directly."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Here\u2019s the redeem script that Mohammed designs to achieve this (line number prefix as XX):"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Mohammed\u2019s script implements three execution paths using nested IF...ELSE flow control clauses."}
{"prompt": "Advanced Transactions and Scripting", "completion": "In the first execution path, this script operates as a simple 2-of-3 multisig with the three partners. This execution path consists of lines 3 and 9. Line 3 sets the quorum of the multisig to 2 (2-of-3). This execution path can be selected by putting TRUE TRUE at the end of the unlocking script:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "The 0 at the beginning of this unlocking script is because of a bug in CHECKMULTISIG that pops an extra value from the stack. The extra value is disregarded by the CHECKMULTISIG, but it must be present or the script fails. Pushing 0 (customarily) is a workaround to the bug, as described in A bug in CHECKMULTISIG execution."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The second execution path can only be used after 30 days have elapsed from the creation of the UTXO. At that time, it requires the signature of Abdul the lawyer and one of the three partners (a 1-of-3 multisig). This is achieved by line 7, which sets the quorum for the multisig to 1. To select this execution path, the unlocking script would end in FALSE TRUE:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Why FALSE TRUE? Isn\u2019t that backward? Because the two values are pushed on to the stack, with FALSE pushed first, then TRUE pushed second. TRUE is therefore popped first by the first IF opcode."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Finally, the third execution path allows Abdul the lawyer to spend the funds alone, but only after 90 days. To select this execution path, the unlocking script has to end in FALSE:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Try running the script on paper to see how it behaves on the stack."}
{"prompt": "Advanced Transactions and Scripting", "completion": "A few more things to consider when reading this example. See if you can find the answers:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Why can\u2019t the lawyer redeem the third execution path at any time by selecting it with FALSE on the unlocking script?"}
{"prompt": "Advanced Transactions and Scripting", "completion": "How many execution paths can be used 5, 35, and 105 days, respectively, after the UTXO is mined?"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Are the funds lost if the lawyer loses his key? Does your answer change if 91 days have elapsed?"}
{"prompt": "Advanced Transactions and Scripting", "completion": "How do the partners \"reset\" the clock every 29 or 89 days to prevent the lawyer from accessing the funds?"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Why do some CHECKSIG opcodes in this script have the VERIFY suffix while others don\u2019t?"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Segregated Witness (segwit) is an upgrade to the bitcoin consensus rules and network protocol, proposed and implemented as a BIP-9 soft-fork that was activated on bitcoin\u2019s mainnet on August 1st, 2017."}
{"prompt": "Advanced Transactions and Scripting", "completion": "In cryptography, the term \"witness\" is used to describe a solution to a cryptographic puzzle. In bitcoin terms, the witness satisfies a cryptographic condition placed on an unspent transaction output (UTXO)."}
{"prompt": "Advanced Transactions and Scripting", "completion": "In the context of bitcoin, a digital signature is one type of witness, but a witness is more broadly any solution that can satisfy the conditions imposed on an UTXO and unlock that UTXO for spending. The term \u201cwitness\u201d is a more general term for an \u201cunlocking script\u201d or \u201cscriptSig.\u201d"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Before segwit\u2019s introduction, every input in a transaction was followed by the witness data that unlocked it. The witness data was embedded in the transaction as part of each input. The term segregated witness, or segwit for short, simply means separating the signature or unlocking script of a specific output. Think \"separate scriptSig,\" or \u201cseparate signature\u201d in the simplest form."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Segregated Witness therefore is an architectural change to bitcoin that aims to move the witness data from the scriptSig (unlocking script) field of a transaction into a separate witness data structure that accompanies a transaction. Clients may request transaction data with or without the accompanying witness data."}
{"prompt": "Advanced Transactions and Scripting", "completion": "In this section we will look at some of the benefits of Segregated Witness, describe the mechanism used to deploy and implement this architecture change, and demonstrate the use of Segregated Witness in transactions and addresses."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Segregated Witness is defined by the following BIPs:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "The main definition of Segregated Witness."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Transaction Signature Verification for Version 0 Witness Program"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Peer Services\u2014New network messages and serialization formats"}
{"prompt": "Advanced Transactions and Scripting", "completion": "getblocktemplate Updates for Segregated Witness (for mining)"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Base32 address format for native v0-16 witness outputs"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Segregated Witness is an architectural change that has several effects on the scalability, security, economic incentives, and performance of bitcoin:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "By moving the witness outside the transaction data, the transaction hash used as an identifier no longer includes the witness data. Since the witness data is the only part of the transaction that can be modified by a third party (see Transaction identifiers), removing it also removes the opportunity for transaction malleability attacks. With Segregated Witness, transaction hashes become immutable by anyone other than the creator of the transaction, which greatly improves the implementation of many other protocols that rely on advanced bitcoin transaction construction, such as payment channels, chained transactions, and lightning networks."}
{"prompt": "Advanced Transactions and Scripting", "completion": "With the introduction of Segregated Witness scripts, every locking script is preceded by a script version number, similar to how transactions and blocks have version numbers. The addition of a script version number allows the scripting language to be upgraded in a backward-compatible way (i.e., using soft fork upgrades) to introduce new script operands, syntax, or semantics. The ability to upgrade the scripting language in a nondisruptive way will greatly accelerate the rate of innovation in bitcoin."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The witness data is often a big contributor to the total size of a transaction. More complex scripts such as those used for multisig or payment channels are very large. In some cases these scripts account for the majority (more than 75%) of the data in a transaction. By moving the witness data outside the transaction data, Segregated Witness improves bitcoin\u2019s scalability. Nodes can prune the witness data after validating the signatures, or ignore it altogether when doing simplified payment verification. The witness data doesn\u2019t need to be transmitted to all nodes and does not need to be stored on disk by all nodes."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Segregated Witness upgrades the signature functions (CHECKSIG, CHECKMULTISIG, etc.) to reduce the algorithm\u2019s computational complexity. Before segwit, the algorithm used to produce a signature required a number of hash operations that was proportional to the size of the transaction. Data-hashing computations increased in O(n2) with respect to the number of signature operations, introducing a substantial computational burden on all nodes verifying the signature. With segwit, the algorithm is changed to reduce the complexity to O(n)."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Segregated Witness signatures incorporate the value (amount) referenced by each input in the hash that is signed. Previously, an offline signing device, such as a hardware wallet, would have to verify the amount of each input before signing a transaction. This was usually accomplished by streaming a large amount of data about the previous transactions referenced as inputs. Since the amount is now part of the commitment hash that is signed, an offline device does not need the previous transactions. If the amounts do not match (are misrepresented by a compromised online system), the signature will be invalid."}
{"prompt": "Advanced Transactions and Scripting", "completion": "At first glance, Segregated Witness appears to be a change to how transactions are constructed and therefore a transaction-level feature, but it is not. Rather, Segregated Witness is a change to how individual UTXO are spent and therefore is a per-output feature."}
{"prompt": "Advanced Transactions and Scripting", "completion": "A transaction can spend Segregated Witness outputs or traditional (inline-witness) outputs or both. Therefore, it does not make much sense to refer to a transaction as a \u201cSegregated Witness transaction.\u201d Rather we should refer to specific transaction outputs as \u201cSegregated Witness outputs.\""}
{"prompt": "Advanced Transactions and Scripting", "completion": "When a transaction spends an UTXO, it must provide a witness. In a traditional UTXO, the locking script requires that witness data be provided inline in the input part of the transaction that spends the UTXO. A Segregated Witness UTXO, however, specifies a locking script that can be satisfied with witness data outside of the input (segregated)."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Segregated Witness is a significant change to the way outputs and transactions are architected. Such a change would normally require a simultaneous change in every bitcoin node and wallet to change the consensus rules\u2014what is known as a hard fork. Instead, segregated witness is introduced with a much less disruptive change, which is backward compatible, known as a soft fork. This type of upgrade allows non-upgraded software to ignore the changes and continue to operate without any disruption."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Segregated Witness outputs are constructed so that older systems that are not segwit-aware can still validate them. To an old wallet or node, a Segregated Witness output looks like an output that anyone can spend. Such outputs can be spent with an empty signature, therefore the fact that there is no signature inside the transaction (it is segregated) does not invalidate the transaction. Newer wallets and mining nodes, however, see the Segregated Witness output and expect to find a valid witness for it in the transaction\u2019s witness data."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Let\u2019s look at some of our example transactions and see how they would change with Segregated Witness. We\u2019ll first look at how a Pay-to-Public-Key-Hash (P2PKH) payment is transformed with the Segregated Witness program. Then, we\u2019ll look at the Segregated Witness equivalent for Pay-to-Script-Hash (P2SH) scripts. Finally, we\u2019ll look at how both of the preceding Segregated Witness programs can be embedded inside a P2SH script."}
{"prompt": "Advanced Transactions and Scripting", "completion": "In [cup_of_coffee], Alice created a transaction to pay Bob for a cup of coffee. That transaction created a P2PKH output with a value of 0.015 BTC that was spendable by Bob. The output\u2019s script looks like this:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "With Segregated Witness, Alice would create a Pay-to-Witness-Public-Key-Hash (P2WPKH) script, which looks like this:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "As you can see, a Segregated Witness output\u2019s locking script is much simpler than a traditional output. It consists of two values that are pushed on to the script evaluation stack. To an old (nonsegwit-aware) bitcoin client, the two pushes would look like an output that anyone can spend and does not require a signature (or rather, can be spent with an empty signature). To a newer, segwit-aware client, the first number (0) is interpreted as a version number (the witness version) and the second part (20 bytes) is the equivalent of a locking script known as a witness program. The 20-byte witness program is simply the hash of the public key, as in a P2PKH script."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Now, let\u2019s look at the corresponding transaction that Bob uses to spend this output. For the original script (nonsegwit), Bob\u2019s transaction would have to include a signature within the transaction input:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "However, to spend the Segregated Witness output, the transaction has no signature in the input part. Instead, Bob\u2019s transaction has an empty scriptSig in the transaction data (the first part of a transaction, which includes the input part) and includes his signature in the witness data (the second part of a transaction, which is separated from the transaction data):"}
{"prompt": "Advanced Transactions and Scripting", "completion": "It is extremely important to note that P2WPKH should only be created by the payee (recipient) and not converted by the sender from a known public key, P2PKH script, or address. The receiver has no way of knowing if the sender\u2019s wallet has the ability to construct segwit transactions and spend P2WPKH outputs."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Additionally, P2WPKH outputs must be constructed from the hash of a compressed public key. Uncompressed public keys are nonstandard in segwit and may be explicitly disabled by a future soft fork. If the hash used in the P2WPKH came from an uncompressed public key, it may be unspendable and you may lose funds. P2WPKH outputs should be created by the payee\u2019s wallet by deriving a compressed public key from their private key."}
{"prompt": "Advanced Transactions and Scripting", "completion": "P2WPKH should be constructed by the payee (recipient) by converting a compressed public key to a P2WPKH hash. You should never transform a P2PKH script, bitcoin address, or uncompressed public key to a P2WPKH witness script."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The second type of witness program corresponds to a Pay-to-Script-Hash (P2SH) script. We saw this type of script in Pay-to-Script-Hash (P2SH). In that example, P2SH was used by Mohammed\u2019s company to express a multisignature script. Payments to Mohammed\u2019s company were encoded with a locking script like this:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "This P2SH script references the hash of a redeem script that defines a 2-of-5 multisignature requirement to spend funds. To spend this output, Mohammed\u2019s company would present the redeem script (whose hash matches the script hash in the P2SH output) and the signatures necessary to satisfy that redeem script, all inside the transaction input:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Now, let\u2019s look at how this entire example would be upgraded to segwit. If Mohammed\u2019s customers were using a segwit-compatible wallet, they would make a payment, creating a Pay-to-Witness-Script-Hash (P2WSH) output that would look like this:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Again, as with the example of P2WPKH, you can see that the Segregated Witness equivalent script is a lot simpler and omits the various script operands that you see in P2SH scripts. Instead, the Segregated Witness program consists of two values pushed to the stack: a witness version (0) and the 32-byte SHA256 hash of the redeem script."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Mohammed\u2019s company can spend the P2WSH output by presenting the correct redeem script and sufficient signatures to satisfy it. Both the redeem script and the signatures would be segregated outside the spending transaction data as part of the witness data. Within the transaction input, Mohammed\u2019s wallet would put an empty scriptSig:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "While P2SH uses the 20-byte RIPEMD160(SHA256(script)) hash, the P2WSH witness program uses a 32-byte SHA256(script) hash. This difference in the selection of the hashing algorithm is deliberate and provides stronger security to P2WSH (128 bits of security in P2WSH versus 80 bits of security in P2SH). It is also used to differentiate between the two types of witness programs (P2WPKH and P2WSH) by using the length of the hash (see below)."}
{"prompt": "Advanced Transactions and Scripting", "completion": "In the previous two sections, we demonstrated two types of witness programs: Pay-to-Witness-Public-Key-Hash (P2WPKH) and Pay-to-Witness-Script-Hash (P2WSH). Both types of witness programs consist of a single byte version number followed by a longer hash. They look very similar, but are interpreted very differently: one is interpreted as a public key hash, which is satisfied by a signature and the other as a script hash, which is satisfied by a redeem script. The critical difference between them is the length of the hash:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "The public key hash in P2WPKH is 20 bytes"}
{"prompt": "Advanced Transactions and Scripting", "completion": "The script hash in P2WSH is 32 bytes"}
{"prompt": "Advanced Transactions and Scripting", "completion": "This is the one difference that allows a wallet to differentiate between the two types of witness programs. By looking at the length of the hash, a wallet can determine what type of witness program it is, P2WPKH or P2WSH."}
{"prompt": "Advanced Transactions and Scripting", "completion": "As we can see from the previous examples, upgrading to Segregated Witness is a two-step process. First, wallets must create special segwit type outputs. Then, these outputs can be spent by wallets that know how to construct Segregated Witness transactions. In the examples, Alice\u2019s wallet was segwit-aware and able to create special outputs with Segregated Witness scripts. Bob\u2019s wallet is also segwit-aware and able to spend those outputs. What may not be obvious from the example is that in practice, Alice\u2019s wallet needs to know that Bob uses a segwit-aware wallet and can spend these outputs. Otherwise, if Bob\u2019s wallet is not upgraded and Alice tries to make segwit payments to Bob, Bob\u2019s wallet will not be able to detect these payments."}
{"prompt": "Advanced Transactions and Scripting", "completion": "For P2WPKH and P2WSH payment types, both the sender and the recipient wallets need to be upgraded to be able to use segwit. Furthermore, the sender\u2019s wallet needs to know that the recipient\u2019s wallet is segwit-aware."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Segregated Witness will not be implemented simultaneously across the entire network. Rather, Segregated Witness is implemented as a backward-compatible upgrade, where old and new clients can coexist. Wallet developers will independently upgrade wallet software to add segwit capabilities. The P2WPKH and P2WSH payment types are used when both sender and recipient are segwit-aware. The traditional P2PKH and P2SH will continue to work for non-upgraded wallets. That leaves two important scenarios, which are addressed in the next section:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Ability of a sender\u2019s wallet that is not segwit-aware to make a payment to a recipient\u2019s wallet that can process segwit transactions"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Ability of a sender\u2019s wallet that is segwit-aware to recognize and distinguish between recipients that are segwit-aware and ones that are not, by their addresses."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Let\u2019s assume, for example, that Alice\u2019s wallet is not upgraded to segwit, but Bob\u2019s wallet is upgraded and can handle segwit transactions. Alice and Bob can use \"old\" non-segwit transactions. But Bob would likely want to use segwit to reduce transaction fees, taking advantage of the discount that applies to witness data."}
{"prompt": "Advanced Transactions and Scripting", "completion": "In this case Bob\u2019s wallet can construct a P2SH address that contains a segwit script inside it. Alice\u2019s wallet sees this as a \"normal\" P2SH address and can make payments to it without any knowledge of segwit. Bob\u2019s wallet can then spend this payment with a segwit transaction, taking full advantage of segwit and reducing transaction fees."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Both forms of witness scripts, P2WPKH and P2WSH, can be embedded in a P2SH address. The first is noted as P2SH(P2WPKH) and the second is noted as P2SH(P2WSH)."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The first form of witness script we will examine is P2SH(P2WPKH). This is a Pay-to-Witness-Public-Key-Hash witness program, embedded inside a Pay-to-Script-Hash script, so that it can be used by a wallet that is not aware of segwit."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bob\u2019s wallet constructs a P2WPKH witness program with Bob\u2019s public key. This witness program is then hashed and the resulting hash is encoded as a P2SH script. The P2SH script is converted to a bitcoin address, one that starts with a \"3,\" as we saw in the Pay-to-Script-Hash (P2SH) section."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bob\u2019s wallet starts with the P2WPKH witness program we saw earlier:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "The P2WPKH witness program consists of the witness version and Bob\u2019s 20-byte public key hash."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bob\u2019s wallet then hashes the preceding witness program, first with SHA256, then with RIPEMD160, producing another 20-byte hash."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Let\u2019s use bx on the command-line to replicate that:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Next, the redeem script hash is converted to a bitcoin address. Let\u2019s use bx on the command-line again:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Now, Bob can display this address for customers to pay for their coffee. Alice\u2019s wallet can make a payment to 37Lx99uaGn5avKBxiW26HjedQE3LrDCZru, just as it would to any other bitcoin address."}
{"prompt": "Advanced Transactions and Scripting", "completion": "To pay Bob, Alice\u2019s wallet would lock the output with a P2SH script:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Even though Alice\u2019s wallet has no support for segwit, the payment it creates can be spent by Bob with a segwit transaction."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Similarly, a P2WSH witness program for a multisig script or other complicated script can be embedded inside a P2SH script and address, making it possible for any wallet to make payments that are segwit compatible."}
{"prompt": "Advanced Transactions and Scripting", "completion": "As we saw in Pay-to-Witness-Script-Hash (P2WSH), Mohammed\u2019s company is using Segregated Witness payments with multisignature scripts. To make it possible for any client to pay his company, regardless of whether their wallets are upgraded for segwit, Mohammed\u2019s wallet can embed the P2WSH witness program inside a P2SH script."}
{"prompt": "Advanced Transactions and Scripting", "completion": "First, Mohammed\u2019s wallet hashes the redeem script with SHA256 (just once). Let\u2019s use bx to do that on the command-line:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Next, the hashed redeem script is turned into a P2WSH witness program:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Then, the witness program itself is hashed with SHA256 and RIPEMD160, producing a new 20-byte hash, as used in traditional P2SH. Let\u2019s use bx on the command-line to do that:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Next, the wallet constructs a P2SH bitcoin address from this hash. Again, we use bx to calculate on the command-line:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Now, Mohammed\u2019s clients can make payments to this address without any need to support segwit. To send a payment to Mohammed, a wallet would lock the output with the following P2SH script:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Mohammed\u2019s company can then construct segwit transactions to spend these payments, taking advantage of segwit features including lower transaction fees."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Even after segwit activation, it will take some time until most wallets are upgraded. At first, segwit will be embedded in P2SH, as we saw in the previous section, to ease compatibility between segwit-aware and unaware wallets."}
{"prompt": "Advanced Transactions and Scripting", "completion": "However, once wallets are broadly supporting segwit, it makes sense to encode witness scripts directly in a native address format designed for segwit, rather than embed it in P2SH."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The native segwit address format is defined in BIP-173:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Base32 address format for native v0-16 witness outputs"}
{"prompt": "Advanced Transactions and Scripting", "completion": "BIP-173 only encodes witness (P2WPKH and P2WSH) scripts. It is not compatible with non-segwit P2PKH or P2SH scripts. BIP-173 is a checksummed Base32 encoding, as compared to the Base58 encoding of a \"traditional\" bitcoin address. BIP-173 addresses are also called bech32 addresses, pronounced \"beh-ch thirty two\", alluding to the use of a \"BCH\" error detection algorithm and 32-character encoding set."}
{"prompt": "Advanced Transactions and Scripting", "completion": "BIP-173 addresses use 32 lower-case-only alphanumeric character set, carefully selected to reduce errors from misreading or mistyping. By choosing a lower-case-only character set, bech32 is easier to read, speak, and 45% more efficient to encode in QR codes."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The BCH error detection algorithm is a vast improvement over the previous checksum algorithm (from Base58Check), allowing not only detection but also correction of errors. Address-input interfaces (such as text-fields in forms) can detect and highlight which character was most likely mistyped when they detect an error."}
{"prompt": "Advanced Transactions and Scripting", "completion": "From the BIP-173 specification, here are some examples of bech32 addresses:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "bc1qw508d6qejxtdg4y5r3zarvary0c5xw7kv8f3t4"}
{"prompt": "Advanced Transactions and Scripting", "completion": "tb1qw508d6qejxtdg4y5r3zarvary0c5xw7kxpjzsx"}
{"prompt": "Advanced Transactions and Scripting", "completion": "bc1qrp33g0q5c5txsp9arysrx4k6zdkfs4nce4xj0gdcccefvpysxf3qccfmv3"}
{"prompt": "Advanced Transactions and Scripting", "completion": "tb1qrp33g0q5c5txsp9arysrx4k6zdkfs4nce4xj0gdcccefvpysxf3q0sl5k7"}
{"prompt": "Advanced Transactions and Scripting", "completion": "As you can see in these examples, a segwit bech32 string is up to 90 characters long and consists of three parts:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "This prefix \"bc\" or \"tb\" identifying mainnet or testnet"}
{"prompt": "Advanced Transactions and Scripting", "completion": "The digit \"1\", which is not part of the 32-character encoding set and can only appear in this position as a separator"}
{"prompt": "Advanced Transactions and Scripting", "completion": "A minimum of 6 alphanumeric characters, the checksum encoded witness script"}
{"prompt": "Advanced Transactions and Scripting", "completion": "At this time, only a few wallets accept or produce native segwit bech32 addresses, but as segwit adoption increases, you will see these more and more often."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bitcoin non-segwit (legacy) and segwit addresses shows bitcoin non-segwit (legacy) and segwit addresses."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Type"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Encoding"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Prefix"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Legacy P2PKH Address"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Base58"}
{"prompt": "Advanced Transactions and Scripting", "completion": "1"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Legacy Testnet P2PKH Address"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Base58"}
{"prompt": "Advanced Transactions and Scripting", "completion": "m or n"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Legacy P2SH Address"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Base58"}
{"prompt": "Advanced Transactions and Scripting", "completion": "3"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Legacy Testnet P2SH Address"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Base58"}
{"prompt": "Advanced Transactions and Scripting", "completion": "2"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Nested (embedded) Segwit P2SH(P2WPKH) Address"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Base58"}
{"prompt": "Advanced Transactions and Scripting", "completion": "3"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Nested (embedded) Segwit P2SH(P2WSH) Address"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Base58"}
{"prompt": "Advanced Transactions and Scripting", "completion": "3"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Native Segwit P2WPKH Address"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bech32"}
{"prompt": "Advanced Transactions and Scripting", "completion": "bc1"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Native Segwit Testnet P2WPKH Address"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bech32"}
{"prompt": "Advanced Transactions and Scripting", "completion": "tb1"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Native Segwit P2WSH Address"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bech32"}
{"prompt": "Advanced Transactions and Scripting", "completion": "bc1"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Native Segwit Testnet P2WSH Address"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bech32"}
{"prompt": "Advanced Transactions and Scripting", "completion": "tb1"}
{"prompt": "Advanced Transactions and Scripting", "completion": "One of the greatest benefits of Segregated Witness is that it eliminates third-party transaction malleability."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Before segwit, transactions could have their signatures subtly modified by third parties, changing their transaction ID (hash) without changing any fundamental properties (inputs, outputs, amounts). This created opportunities for denial-of-service attacks as well as attacks against poorly written wallet software that assumed unconfirmed transaction hashes were immutable."}
{"prompt": "Advanced Transactions and Scripting", "completion": "With the introduction of Segregated Witness, transactions have two identifiers, txid and wtxid. The traditional transaction ID txid is the double-SHA256 hash of the serialized transaction, without the witness data. A transaction wtxid is the double-SHA256 hash of the new serialization format of the transaction with witness data."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The traditional txid is calculated in exactly the same way as with a nonsegwit transaction. However, since a pure segwit transaction (a transaction that only contains segwit inputs) has empty scriptSigs in every input, there is no part of the transaction that can be modified by a third party. Therefore, in a pure segwit transaction, the txid is immutable by a third party, even when the transaction is unconfirmed."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The wtxid is like an \"extended\" ID, in that the hash also incorporates the witness data. If a transaction is transmitted without witness data, then the wtxid and txid are identical. Note that since the wtxid includes witness data (signatures) and since witness data may be malleable, the wtxid should be considered malleable until the transaction is confirmed. Only the txid of a pure segwit transaction can be considered immutable by third parties."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Segregated Witness transactions have two IDs: txid and wtxid. The txid is the hash of the transaction without the witness data and the wtxid is the hash inclusive of witness data. Only pure segwit transactions (transactions that only contain segwit inputs) have a txid that is not susceptible to third-party transaction malleability."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Segregated Witness modifies the semantics of the four signature verification functions (CHECKSIG, CHECKSIGVERIFY, CHECKMULTISIG, and CHECKMULTISIGVERIFY), changing the way a transaction commitment hash is calculated."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Signatures in bitcoin transactions are applied on a commitment hash, which is calculated from the transaction data, locking specific parts of the data indicating the signer\u2019s commitment to those values. For example, in a simple SIGHASH_ALL type signature, the commitment hash includes all inputs and outputs."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Unfortunately, the way the commitment hash was calculated introduced the possibility that a node verifying the signature can be forced to perform a significant number of hash computations. Specifically, the hash operations increase in O(n2) with respect to the number of signature operations in the transaction. An attacker could therefore create a transaction with a very large number of signature operations, causing the entire bitcoin network to have to perform hundreds or thousands of hash operations to verify the transaction."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Segwit represented an opportunity to address this problem by changing the way the commitment hash is calculated. For segwit version 0 witness programs, signature verification occurs using an improved commitment hash algorithm as specified in BIP-143."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The new algorithm achieves two important goals. Firstly, the number of hash operations increases by a much more gradual O(n) to the number of signature operations, reducing the opportunity to create denial-of-service attacks with overly complex transactions. Secondly, the commitment hash now also includes the value (amounts) of each input as part of the commitment. This means that a signer can commit to a specific input value without needing to \"fetch\" and check the previous transaction referenced by the input. In the case of offline devices, such as hardware wallets, this greatly simplifies the communication between the host and the hardware wallet, removing the need to stream previous transactions for validation. A hardware wallet can accept the input value \"as stated\" by an untrusted host. Since the signature is invalid if that input value is not correct, the hardware wallet doesn\u2019t need to validate the value before signing the input."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Bitcoin mining nodes and full nodes incur costs for the resources used to support the bitcoin network and the blockchain. As the volume of bitcoin transactions increases, so does the cost of resources (CPU, network bandwidth, disk space, memory). Miners are compensated for these costs through fees that are proportional to the size (in bytes) of each transaction. Nonmining full nodes are not compensated, so they incur these costs because they have a need to run an authoritative fully validating full-index node, perhaps because they use the node to operate a bitcoin business."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Without transaction fees, the growth in bitcoin data would arguably increase dramatically. Fees are intended to align the needs of bitcoin users with the burden their transactions impose on the network, through a market-based price discovery mechanism."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The calculation of fees based on transaction size treats all the data in the transaction as equal in cost. But from the perspective of full nodes and miners, some parts of a transaction carry much higher costs. Every transaction added to the bitcoin network affects the consumption of four resources on nodes:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Every transaction is stored in the blockchain, adding to the total size of the blockchain. The blockchain is stored on disk, but the storage can be optimized by \u201cpruning\u201d (deleting) older transactions."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Every transaction must be validated, which requires CPU time."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Every transaction is transmitted (through flood propagation) across the network at least once. Without any optimization in the block propagation protocol, transactions are transmitted again as part of a block, doubling the impact on network capacity."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Nodes that validate transactions keep the UTXO index or the entire UTXO set in memory to speed up validation. Because memory is at least one order of magnitude more expensive than disk, growth of the UTXO set contributes disproportionately to the cost of running a node."}
{"prompt": "Advanced Transactions and Scripting", "completion": "As you can see from the list, not every part of a transaction has an equal impact on the cost of running a node or on the ability of bitcoin to scale to support more transactions. The most expensive part of a transaction are the newly created outputs, as they are added to the in-memory UTXO set. By comparison, signatures (aka witness data) add the least burden to the network and the cost of running a node, because witness data are only validated once and then never used again. Furthermore, immediately after receiving a new transaction and validating witness data, nodes can discard that witness data. If fees are calculated on transaction size, without discriminating between these two types of data, then the market incentives of fees are not aligned with the actual costs imposed by a transaction. In fact, the current fee structure actually encourages the opposite behavior, because witness data is the largest part of a transaction."}
{"prompt": "Advanced Transactions and Scripting", "completion": "The incentives created by fees matter because they affect the behavior of wallets. All wallets must implement some strategy for assembling transactions that takes into consideration a number of factors, such as privacy (reducing address reuse), fragmentation (making lots of loose change), and fees. If the fees are overwhelmingly motivating wallets to use as few inputs as possible in transactions, this can lead to UTXO picking and change address strategies that inadvertently bloat the UTXO set."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Transactions consume UTXO in their inputs and create new UTXO with their outputs. A transaction, therefore, that has more inputs than outputs will result in a decrease in the UTXO set, whereas a transaction that has more outputs than inputs will result in an increase in the UTXO set. Let\u2019s consider the difference between inputs and outputs and call that the \u201cNet-new-UTXO.\u201d That\u2019s an important metric, as it tells us what impact a transaction will have on the most expensive network-wide resource, the in-memory UTXO set. A transaction with positive Net-new-UTXO adds to that burden. A transaction with a negative Net-new-UTXO reduces the burden. We would therefore want to encourage transactions that are either negative Net-new-UTXO or neutral with zero Net-new-UTXO."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Let\u2019s look at an example of what incentives are created by the transaction fee calculation, with and without Segregated Witness. We will look at two different transactions. Transaction A is a 3-input, 2-output transaction, which has a Net-new-UTXO metric of \u20131, meaning it consumes one more UTXO than it creates, reducing the UTXO set by one. Transaction B is a 2-input, 3-output transaction, which has a Net-new-UTXO metric of 1, meaning it adds one UTXO to the UTXO set, imposing additional cost on the entire bitcoin network. Both transactions use multisignature (2-of-3) scripts to demonstrate how complex scripts increase the impact of segregated witness on fees. Let\u2019s assume a transaction feerate of 30 satoshi per byte and a 75% fee discount on witness data:"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Transaction A fee: 28,590 satoshi"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Transaction B fee: 20,760 satoshi"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Transaction A fee: 12,255 satoshi"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Transaction B fee: 10,425 satoshi"}
{"prompt": "Advanced Transactions and Scripting", "completion": "Both transactions are less expensive when segregated witness is implemented. Comparing the costs between the two transactions, we see that before Segregated Witness, the transaction with the positive Net-new-UTXO has significant cost-savings. With Segregated Witness, the cost difference shrinks significantly in absolute as well as relative terms. While it would require inputs to become cheaper than outputs to incentivize UTXO set consolidation, this discount reduces the incentive to create new UTXO in order to avoid using more inputs."}
{"prompt": "Advanced Transactions and Scripting", "completion": "Segregated Witness therefore has two main effects on the fees paid by bitcoin users. Firstly, segwit reduces the overall cost of transactions by discounting witness data and increasing the capacity of the bitcoin blockchain. Secondly, segwit\u2019s discount on witness data partially mitigates a misalignment of incentives that may have inadvertently created more bloat in the UTXO set."}
{"prompt": "The Bitcoin Network", "completion": "Bitcoin is structured as a peer-to-peer network architecture on top of the internet. The term peer-to-peer, or P2P, means that the computers that participate in the network are peers to each other, that they are all equal, that there are no \"special\" nodes, and that all nodes share the burden of providing network services. The network nodes interconnect in a mesh network with a \"flat\" topology. There is no server, no centralized service, and no hierarchy within the network. Nodes in a P2P network both provide and consume services at the same time with reciprocity acting as the incentive for participation. P2P networks are inherently resilient, decentralized, and open. A preeminent example of a P2P network architecture was the early internet itself, where nodes on the IP network were equal. Today\u2019s internet architecture is more hierarchical, but the Internet Protocol still retains its flat-topology essence. Beyond bitcoin, the largest and most successful application of P2P technologies is file sharing, with Napster as the pioneer and BitTorrent as the most recent evolution of the architecture."}
{"prompt": "The Bitcoin Network", "completion": "Bitcoin\u2019s P2P network architecture is much more than a topology choice. Bitcoin is a P2P digital cash system by design, and the network architecture is both a reflection and a foundation of that core characteristic. Decentralization of control is a core design principle that can only be achieved and maintained by a flat, decentralized P2P consensus network."}
{"prompt": "The Bitcoin Network", "completion": "The term \"bitcoin network\" refers to the collection of nodes running the bitcoin P2P protocol. In addition to the bitcoin P2P protocol, there are other protocols such as Stratum that are used for mining and lightweight or mobile wallets. These additional protocols are provided by gateway routing servers that access the bitcoin network using the bitcoin P2P protocol and then extend that network to nodes running other protocols. For example, Stratum servers connect Stratum mining nodes via the Stratum protocol to the main bitcoin network and bridge the Stratum protocol to the bitcoin P2P protocol. We use the term \"extended bitcoin network\" to refer to the overall network that includes the bitcoin P2P protocol, pool-mining protocols, the Stratum protocol, and any other related protocols connecting the components of the bitcoin system."}
{"prompt": "The Bitcoin Network", "completion": "Although nodes in the bitcoin P2P network are equal, they may take on different roles depending on the functionality they are supporting. A bitcoin node is a collection of functions: routing, the blockchain database, mining, and wallet services. A full node with all four of these functions is shown in A bitcoin network node with all four functions: wallet, miner, full blockchain database, and network routing."}
{"prompt": "The Bitcoin Network", "completion": "All nodes include the routing function to participate in the network and might include other functionality. All nodes validate and propagate transactions and blocks, and discover and maintain connections to peers. In the full-node example in A bitcoin network node with all four functions: wallet, miner, full blockchain database, and network routing, the routing function is indicated by a circle named \"Network Routing Node\" or with the letter \"N.\""}
{"prompt": "The Bitcoin Network", "completion": "Some nodes, called full nodes, also maintain a complete and up-to-date copy of the blockchain. Full nodes can autonomously and authoritatively verify any transaction without external reference. Some nodes maintain only a subset of the blockchain and verify transactions using a method called simplified payment verification, or SPV. These nodes are known as SPV nodes or lightweight nodes. In the full-node example in the figure, the full-node blockchain database function is indicated by a circle called \"Full Blockchain\" or the letter \"B.\" In The extended bitcoin network showing various node types, gateways, and protocols, SPV nodes are drawn without the \"B\" circle, showing that they do not have a full copy of the blockchain."}
{"prompt": "The Bitcoin Network", "completion": "Mining nodes compete to create new blocks by running specialized hardware to solve the Proof-of-Work algorithm. Some mining nodes are also full nodes, maintaining a full copy of the blockchain, while others are lightweight nodes participating in pool mining and depending on a pool server to maintain a full node. The mining function is shown in the full node as a circle called \"Miner\" or the letter \"M.\""}
{"prompt": "The Bitcoin Network", "completion": "User wallets might be part of a full node, as is usually the case with desktop bitcoin clients. Increasingly, many user wallets, especially those running on resource-constrained devices such as smartphones, are SPV nodes. The wallet function is shown in A bitcoin network node with all four functions: wallet, miner, full blockchain database, and network routing as a circle called \"Wallet\" or the letter \"W.\""}
{"prompt": "The Bitcoin Network", "completion": "In addition to the main node types on the bitcoin P2P protocol, there are servers and nodes running other protocols, such as specialized mining pool protocols and lightweight client-access protocols."}
{"prompt": "The Bitcoin Network", "completion": "Different types of nodes on the extended bitcoin network shows the most common node types on the extended bitcoin network."}
{"prompt": "The Bitcoin Network", "completion": "The main bitcoin network, running the bitcoin P2P protocol, consists of between 5,000 and 8,000 listening nodes running various versions of the bitcoin reference client (Bitcoin Core) and a few hundred nodes running various other implementations of the bitcoin P2P protocol, such as Bitcoin Classic, Bitcoin Unlimited, BitcoinJ, Libbitcoin, btcd, and bcoin. A small percentage of the nodes on the bitcoin P2P network are also mining nodes, competing in the mining process, validating transactions, and creating new blocks. Various large companies interface with the bitcoin network by running full-node clients based on the Bitcoin Core client, with full copies of the blockchain and a network node, but without mining or wallet functions. These nodes act as network edge routers, allowing various other services (exchanges, wallets, block explorers, merchant payment processing) to be built on top."}
{"prompt": "The Bitcoin Network", "completion": "The extended bitcoin network includes the network running the bitcoin P2P protocol, described earlier, as well as nodes running specialized protocols. Attached to the main bitcoin P2P network are a number of pool servers and protocol gateways that connect nodes running other protocols. These other protocol nodes are mostly pool mining nodes (see [mining]) and lightweight wallet clients, which do not carry a full copy of the blockchain."}
{"prompt": "The Bitcoin Network", "completion": "The extended bitcoin network showing various node types, gateways, and protocols shows the extended bitcoin network with the various types of nodes, gateway servers, edge routers, and wallet clients and the various protocols they use to connect to each other."}
{"prompt": "The Bitcoin Network", "completion": "While the bitcoin P2P network serves the general needs of a broad variety of node types, it exhibits too high network latency for the specialized needs of bitcoin mining nodes."}
{"prompt": "The Bitcoin Network", "completion": "Bitcoin miners are engaged in a time-sensitive competition to solve the Proof-of-Work problem and extend the blockchain (see [mining]). While participating in this competition, bitcoin miners must minimize the time between the propagation of a winning block and the beginning of the next round of competition. In mining, network latency is directly related to profit margins."}
{"prompt": "The Bitcoin Network", "completion": "A Bitcoin Relay Network is a network that attempts to minimize the latency in the transmission of blocks between miners. The original Bitcoin Relay Network was created by core developer Matt Corallo in 2015 to enable fast synchronization of blocks between miners with very low latency. The network consisted of several specialized nodes hosted on the Amazon Web Services infrastructure around the world and served to connect the majority of miners and mining pools."}
{"prompt": "The Bitcoin Network", "completion": "The original Bitcoin Relay Network was replaced in 2016 with the introduction of the Fast Internet Bitcoin Relay Engine or FIBRE, also created by core developer Matt Corallo. FIBRE is a UDP-based relay network that relays blocks within a network of nodes. FIBRE implements compact block optimization to further reduce the amount of data transmitted and the network latency."}
{"prompt": "The Bitcoin Network", "completion": "Relay networks are not replacements for bitcoin\u2019s P2P network. Instead they are overlay networks that provide additional connectivity between nodes with specialized needs. Like freeways are not replacements for rural roads, but rather shortcuts between two points with heavy traffic, you still need small roads to connect to the freeways."}
{"prompt": "The Bitcoin Network", "completion": "When a new node boots up, it must discover other bitcoin nodes on the network in order to participate. To start this process, a new node must discover at least one existing node on the network and connect to it. The geographic location of other nodes is irrelevant; the bitcoin network topology is not geographically defined. Therefore, any existing bitcoin nodes can be selected at random."}
{"prompt": "The Bitcoin Network", "completion": "To connect to a known peer, nodes establish a TCP connection, usually to port 8333 (the port generally known as the one used by bitcoin), or an alternative port if one is provided. Upon establishing a connection, the node will start a \"handshake\" (see The initial handshake between peers) by transmitting a version message, which contains basic identifying information, including:"}
{"prompt": "The Bitcoin Network", "completion": "The bitcoin P2P protocol version the client \"speaks\" (e.g., 70002)"}
{"prompt": "The Bitcoin Network", "completion": "A list of local services supported by the node, currently just NODE_NETWORK"}
{"prompt": "The Bitcoin Network", "completion": "The current time"}
{"prompt": "The Bitcoin Network", "completion": "The IP address of the remote node as seen from this node"}
{"prompt": "The Bitcoin Network", "completion": "The IP address of the local node, as discovered by the local node"}
{"prompt": "The Bitcoin Network", "completion": "A sub-version showing the type of software running on this node (e.g., /Satoshi:0.9.2.1/)"}
{"prompt": "The Bitcoin Network", "completion": "The block height of this node\u2019s blockchain"}
{"prompt": "The Bitcoin Network", "completion": "(See GitHub for an example of the version network message.)"}
{"prompt": "The Bitcoin Network", "completion": "The version message is always the first message sent by any peer to another peer. The local peer receiving a version message will examine the remote peer\u2019s reported nVersion and decide if the remote peer is compatible. If the remote peer is compatible, the local peer will acknowledge the version message and establish a connection by sending a verack message."}
{"prompt": "The Bitcoin Network", "completion": "How does a new node find peers? The first method is to query DNS using a number of \"DNS seeds,\" which are DNS servers that provide a list of IP addresses of bitcoin nodes. Some of those DNS seeds provide a static list of IP addresses of stable bitcoin listening nodes. Some of the DNS seeds are custom implementations of BIND (Berkeley Internet Name Daemon) that return a random subset from a list of bitcoin node addresses collected by a crawler or a long-running bitcoin node. The Bitcoin Core client contains the names of nine different DNS seeds. The diversity of ownership and diversity of implementation of the different DNS seeds offers a high level of reliability for the initial bootstrapping process. In the Bitcoin Core client, the option to use the DNS seeds is controlled by the option switch -dnsseed (set to 1 by default, to use the DNS seed)."}
{"prompt": "The Bitcoin Network", "completion": "Alternatively, a bootstrapping node that knows nothing of the network must be given the IP address of at least one bitcoin node, after which it can establish connections through further introductions. The command-line argument -seednode can be used to connect to one node just for introductions using it as a seed. After the initial seed node is used to form introductions, the client will disconnect from it and use the newly discovered peers."}
{"prompt": "The Bitcoin Network", "completion": "Once one or more connections are established, the new node will send an addr message containing its own IP address to its neighbors. The neighbors will, in turn, forward the addr message to their neighbors, ensuring that the newly connected node becomes well known and better connected. Additionally, the newly connected node can send getaddr to the neighbors, asking them to return a list of IP addresses of other peers. That way, a node can find peers to connect to and advertise its existence on the network for other nodes to find it. Address propagation and discovery shows the address discovery protocol."}
{"prompt": "The Bitcoin Network", "completion": "A node must connect to a few different peers in order to establish diverse paths into the bitcoin network. Paths are not persistent\u2014nodes come and go\u2014and so the node must continue to discover new nodes as it loses old connections as well as assist other nodes when they bootstrap. Only one connection is needed to bootstrap, because the first node can offer introductions to its peer nodes and those peers can offer further introductions. It\u2019s also unnecessary and wasteful of network resources to connect to more than a handful of nodes. After bootstrapping, a node will remember its most recent successful peer connections, so that if it is rebooted it can quickly reestablish connections with its former peer network. If none of the former peers respond to its connection request, the node can use the seed nodes to bootstrap again."}
{"prompt": "The Bitcoin Network", "completion": "On a node running the Bitcoin Core client, you can list the peer connections with the command getpeerinfo:"}
{"prompt": "The Bitcoin Network", "completion": "To override the automatic management of peers and to specify a list of IP addresses, users can provide the option -connect=<IPAddress> and specify one or more IP addresses. If this option is used, the node will only connect to the selected IP addresses, instead of discovering and maintaining the peer connections automatically."}
{"prompt": "The Bitcoin Network", "completion": "If there is no traffic on a connection, nodes will periodically send a message to maintain the connection. If a node has not communicated on a connection for more than 90 minutes, it is assumed to be disconnected and a new peer will be sought. Thus, the network dynamically adjusts to transient nodes and network problems, and can organically grow and shrink as needed without any central control."}
{"prompt": "The Bitcoin Network", "completion": "Full nodes are nodes that maintain a full blockchain with all transactions. More accurately, they probably should be called \"full blockchain nodes.\" In the early years of bitcoin, all nodes were full nodes and currently the Bitcoin Core client is a full blockchain node. In the past two years, however, new forms of bitcoin clients have been introduced that do not maintain a full blockchain but run as lightweight clients. We\u2019ll examine these in more detail in the next section."}
{"prompt": "The Bitcoin Network", "completion": "Full blockchain nodes maintain a complete and up-to-date copy of the bitcoin blockchain with all the transactions, which they independently build and verify, starting with the very first block (genesis block) and building up to the latest known block in the network. A full blockchain node can independently and authoritatively verify any transaction without recourse or reliance on any other node or source of information. The full blockchain node relies on the network to receive updates about new blocks of transactions, which it then verifies and incorporates into its local copy of the blockchain."}
{"prompt": "The Bitcoin Network", "completion": "Running a full blockchain node gives you the pure bitcoin experience: independent verification of all transactions without the need to rely on, or trust, any other systems. It\u2019s easy to tell if you\u2019re running a full node because it requires more than one hundred gigabytes of persistent storage (disk space) to store the full blockchain. If you need a lot of disk and it takes two to three days to sync to the network, you are running a full node. That is the price of complete independence and freedom from central authority."}
{"prompt": "The Bitcoin Network", "completion": "There are a few alternative implementations of full blockchain bitcoin clients, built using different programming languages and software architectures. However, the most common implementation is the reference client Bitcoin Core, also known as the Satoshi client. More than 75% of the nodes on the bitcoin network run various versions of Bitcoin Core. It is identified as \"Satoshi\" in the sub-version string sent in the version message and shown by the command getpeerinfo as we saw earlier; for example, /Satoshi:0.8.6/."}
{"prompt": "The Bitcoin Network", "completion": "The first thing a full node will do once it connects to peers is try to construct a complete blockchain. If it is a brand-new node and has no blockchain at all, it only knows one block, the genesis block, which is statically embedded in the client software. Starting with block #0 (the genesis block), the new node will have to download hundreds of thousands of blocks to synchronize with the network and reestablish the full blockchain."}
{"prompt": "The Bitcoin Network", "completion": "The process of syncing the blockchain starts with the version message, because that contains BestHeight, a node\u2019s current blockchain height (number of blocks). A node will see the version messages from its peers, know how many blocks they each have, and be able to compare to how many blocks it has in its own blockchain. Peered nodes will exchange a getblocks message that contains the hash (fingerprint) of the top block on their local blockchain. One of the peers will be able to identify the received hash as belonging to a block that is not at the top, but rather belongs to an older block, thus deducing that its own local blockchain is longer than its peer\u2019s."}
{"prompt": "The Bitcoin Network", "completion": "The peer that has the longer blockchain has more blocks than the other node and can identify which blocks the other node needs in order to \"catch up.\" It will identify the first 500 blocks to share and transmit their hashes using an inv (inventory) message. The node missing these blocks will then retrieve them, by issuing a series of getdata messages requesting the full block data and identifying the requested blocks using the hashes from the inv message."}
{"prompt": "The Bitcoin Network", "completion": "Let\u2019s assume, for example, that a node only has the genesis block. It will then receive an inv message from its peers containing the hashes of the next 500 blocks in the chain. It will start requesting blocks from all of its connected peers, spreading the load and ensuring that it doesn\u2019t overwhelm any peer with requests. The node keeps track of how many blocks are \"in transit\" per peer connection, meaning blocks that it has requested but not received, checking that it does not exceed a limit (MAX_BLOCKS_IN_TRANSIT_PER_PEER). This way, if it needs a lot of blocks, it will only request new ones as previous requests are fulfilled, allowing the peers to control the pace of updates and not overwhelm the network. As each block is received, it is added to the blockchain, as we will see in [blockchain]. As the local blockchain is gradually built up, more blocks are requested and received, and the process continues until the node catches up to the rest of the network."}
{"prompt": "The Bitcoin Network", "completion": "This process of comparing the local blockchain with the peers and retrieving any missing blocks happens any time a node goes offline for any period of time. Whether a node has been offline for a few minutes and is missing a few blocks, or a month and is missing a few thousand blocks, it starts by sending getblocks, gets an inv response, and starts downloading the missing blocks. Node synchronizing the blockchain by retrieving blocks from a peer shows the inventory and block propagation protocol."}
{"prompt": "The Bitcoin Network", "completion": "Not all nodes have the ability to store the full blockchain. Many bitcoin clients are designed to run on space- and power-constrained devices, such as smartphones, tablets, or embedded systems. For such devices, a simplified payment verification (SPV) method is used to allow them to operate without storing the full blockchain. These types of clients are called SPV clients or lightweight clients. As bitcoin adoption surges, the SPV node is becoming the most common form of bitcoin node, especially for bitcoin wallets."}
{"prompt": "The Bitcoin Network", "completion": "SPV nodes download only the block headers and do not download the transactions included in each block. The resulting chain of blocks, without transactions, is 1,000 times smaller than the full blockchain. SPV nodes cannot construct a full picture of all the UTXOs that are available for spending because they do not know about all the transactions on the network. SPV nodes verify transactions using a slightly different method that relies on peers to provide partial views of relevant parts of the blockchain on demand."}
{"prompt": "The Bitcoin Network", "completion": "As an analogy, a full node is like a tourist in a strange city, equipped with a detailed map of every street and every address. By comparison, an SPV node is like a tourist in a strange city asking random strangers for turn-by-turn directions while knowing only one main avenue. Although both tourists can verify the existence of a street by visiting it, the tourist without a map doesn\u2019t know what lies down any of the side streets and doesn\u2019t know what other streets exist. Positioned in front of 23 Church Street, the tourist without a map cannot know if there are a dozen other \"23 Church Street\" addresses in the city and whether this is the right one. The mapless tourist\u2019s best chance is to ask enough people and hope some of them are not trying to mug him."}
{"prompt": "The Bitcoin Network", "completion": "SPV verifies transactions by reference to their depth in the blockchain instead of their height. Whereas a full blockchain node will construct a fully verified chain of thousands of blocks and transactions reaching down the blockchain (back in time) all the way to the genesis block, an SPV node will verify the chain of all blocks (but not all transactions) and link that chain to the transaction of interest."}
{"prompt": "The Bitcoin Network", "completion": "For example, when examining a transaction in block 300,000, a full node links all 300,000 blocks down to the genesis block and builds a full database of UTXO, establishing the validity of the transaction by confirming that the UTXO remains unspent. An SPV node cannot validate whether the UTXO is unspent. Instead, the SPV node will establish a link between the transaction and the block that contains it, using a merkle path (see [merkle_trees]). Then, the SPV node waits until it sees the six blocks 300,001 through 300,006 piled on top of the block containing the transaction and verifies it by establishing its depth under blocks 300,006 to 300,001. The fact that other nodes on the network accepted block 300,000 and then did the necessary work to produce six more blocks on top of it is proof, by proxy, that the transaction was not a double-spend."}
{"prompt": "The Bitcoin Network", "completion": "An SPV node cannot be persuaded that a transaction exists in a block when the transaction does not in fact exist. The SPV node establishes the existence of a transaction in a block by requesting a merkle path proof and by validating the Proof-of-Work in the chain of blocks. However, a transaction\u2019s existence can be \"hidden\" from an SPV node. An SPV node can definitely prove that a transaction exists but cannot verify that a transaction, such as a double-spend of the same UTXO, doesn\u2019t exist because it doesn\u2019t have a record of all transactions. This vulnerability can be used in a denial-of-service attack or for a double-spending attack against SPV nodes. To defend against this, an SPV node needs to connect randomly to several nodes, to increase the probability that it is in contact with at least one honest node. This need to randomly connect means that SPV nodes also are vulnerable to network partitioning attacks or Sybil attacks, where they are connected to fake nodes or fake networks and do not have access to honest nodes or the real bitcoin network."}
{"prompt": "The Bitcoin Network", "completion": "For most practical purposes, well-connected SPV nodes are secure enough, striking a balance between resource needs, practicality, and security. For infallible security, however, nothing beats running a full blockchain node."}
{"prompt": "The Bitcoin Network", "completion": "A full blockchain node verifies a transaction by checking the entire chain of thousands of blocks below it in order to guarantee that the UTXO is not spent, whereas an SPV node checks how deep the block is buried by a handful of blocks above it."}
{"prompt": "The Bitcoin Network", "completion": "To get the block headers, SPV nodes use a getheaders message instead of getblocks. The responding peer will send up to 2,000 block headers using a single headers message. The process is otherwise the same as that used by a full node to retrieve full blocks. SPV nodes also set a filter on the connection to peers, to filter the stream of future blocks and transactions sent by the peers. Any transactions of interest are retrieved using a getdata request. The peer generates a tx message containing the transactions, in response. SPV node synchronizing the block headers shows the synchronization of block headers."}
{"prompt": "The Bitcoin Network", "completion": "Because SPV nodes need to retrieve specific transactions in order to selectively verify them, they also create a privacy risk. Unlike full blockchain nodes, which collect all transactions within each block, the SPV node\u2019s requests for specific data can inadvertently reveal the addresses in their wallet. For example, a third party monitoring a network could keep track of all the transactions requested by a wallet on an SPV node and use those to associate bitcoin addresses with the user of that wallet, destroying the user\u2019s privacy."}
{"prompt": "The Bitcoin Network", "completion": "Shortly after the introduction of SPV/lightweight nodes, bitcoin developers added a feature called bloom filters to address the privacy risks of SPV nodes. Bloom filters allow SPV nodes to receive a subset of the transactions without revealing precisely which addresses they are interested in, through a filtering mechanism that uses probabilities rather than fixed patterns."}
{"prompt": "The Bitcoin Network", "completion": "A bloom filter is a probabilistic search filter that offers an efficient way to express a search pattern while protecting privacy. They are used by SPV nodes to ask their peers for transactions matching a specific pattern, without revealing exactly which addresses, keys, or transactions they are searching for."}
{"prompt": "The Bitcoin Network", "completion": "In our previous analogy, a tourist without a map is asking for directions to a specific address, \"23 Church St.\" If she asks strangers for directions to this street, she inadvertently reveals her destination. A bloom filter is like asking, \"Are there any streets in this neighborhood whose name ends in R-C-H?\" A question like that reveals slightly less about the desired destination than asking for \"23 Church St.\" Using this technique, a tourist could specify the desired address in more detail such as \"ending in U-R-C-H\" or less detail as \"ending in H.\" By varying the precision of the search, the tourist reveals more or less information, at the expense of getting more or less specific results. If she asks a less specific pattern, she gets a lot more possible addresses and better privacy, but many of the results are irrelevant. If she asks for a very specific pattern, she gets fewer results but loses privacy."}
{"prompt": "The Bitcoin Network", "completion": "Bloom filters serve this function by allowing an SPV node to specify a search pattern for transactions that can be tuned toward precision or privacy. A more specific bloom filter will produce accurate results, but at the expense of revealing what patterns the SPV node is interested in, thus revealing the addresses owned by the user\u2019s wallet. A less specific bloom filter will produce more data about more transactions, many irrelevant to the node, but will allow the node to maintain better privacy."}
{"prompt": "The Bitcoin Network", "completion": "Bloom filters are implemented as a variable-size array of N binary digits (a bit field) and a variable number of M hash functions. The hash functions are designed to always produce an output that is between 1 and N, corresponding to the array of binary digits. The hash functions are generated deterministically, so that any node implementing a bloom filter will always use the same hash functions and get the same results for a specific input. By choosing different length (N) bloom filters and a different number (M) of hash functions, the bloom filter can be tuned, varying the level of accuracy and therefore privacy."}
{"prompt": "The Bitcoin Network", "completion": "In An example of a simplistic bloom filter, with a 16-bit field and three hash functions, we use a very small array of 16 bits and a set of three hash functions to demonstrate how bloom filters work."}
{"prompt": "The Bitcoin Network", "completion": "The bloom filter is initialized so that the array of bits is all zeros. To add a pattern to the bloom filter, the pattern is hashed by each hash function in turn. Applying the first hash function to the input results in a number between 1 and N. The corresponding bit in the array (indexed from 1 to N) is found and set to 1, thereby recording the output of the hash function. Then, the next hash function is used to set another bit and so on. Once all M hash functions have been applied, the search pattern will be \"recorded\" in the bloom filter as M bits that have been changed from 0 to 1."}
{"prompt": "The Bitcoin Network", "completion": "Adding a pattern \"A\" to our simple bloom filter is an example of adding a pattern \"A\" to the simple bloom filter shown in An example of a simplistic bloom filter, with a 16-bit field and three hash functions."}
{"prompt": "The Bitcoin Network", "completion": "Adding a second pattern is as simple as repeating this process. The pattern is hashed by each hash function in turn and the result is recorded by setting the bits to 1. Note that as a bloom filter is filled with more patterns, a hash function result might coincide with a bit that is already set to 1, in which case the bit is not changed. In essence, as more patterns record on overlapping bits, the bloom filter starts to become saturated with more bits set to 1 and the accuracy of the filter decreases. This is why the filter is a probabilistic data structure\u2014it gets less accurate as more patterns are added. The accuracy depends on the number of patterns added versus the size of the bit array (N) and number of hash functions (M). A larger bit array and more hash functions can record more patterns with higher accuracy. A smaller bit array or fewer hash functions will record fewer patterns and produce less accuracy."}
{"prompt": "The Bitcoin Network", "completion": "Adding a second pattern \"B\" to our simple bloom filter is an example of adding a second pattern \"B\" to the simple bloom filter."}
{"prompt": "The Bitcoin Network", "completion": "To test if a pattern is part of a bloom filter, the pattern is hashed by each hash function and the resulting bit pattern is tested against the bit array. If all the bits indexed by the hash functions are set to 1, then the pattern is probably recorded in the bloom filter. Because the bits may be set because of overlap from multiple patterns, the answer is not certain, but is rather probabilistic. In simple terms, a bloom filter positive match is a \"Maybe, Yes.\""}
{"prompt": "The Bitcoin Network", "completion": "Testing the existence of pattern \"X\" in the bloom filter. The result is a probabilistic positive match, meaning \"Maybe.\" is an example of testing the existence of pattern \"X\" in the simple bloom filter. The corresponding bits are set to 1, so the pattern is probably a match."}
{"prompt": "The Bitcoin Network", "completion": "On the contrary, if a pattern is tested against the bloom filter and any one of the bits is set to 0, this proves that the pattern was not recorded in the bloom filter. A negative result is not a probability, it is a certainty. In simple terms, a negative match on a bloom filter is a \"Definitely Not!\""}
{"prompt": "The Bitcoin Network", "completion": "Testing the existence of pattern \"Y\" in the bloom filter. The result is a definitive negative match, meaning \"Definitely Not!\" is an example of testing the existence of pattern \"Y\" in the simple bloom filter. One of the corresponding bits is set to 0, so the pattern is definitely not a match."}
{"prompt": "The Bitcoin Network", "completion": "Bloom filters are used to filter the transactions (and blocks containing them) that an SPV node receives from its peers, selecting only transactions of interest to the SPV node without revealing which addresses or keys it is interested in."}
{"prompt": "The Bitcoin Network", "completion": "An SPV node will initialize a bloom filter as \"empty\"; in that state the bloom filter will not match any patterns. The SPV node will then make a list of all the addresses, keys, and hashes that it is interested in. It will do this by extracting the public key hash and script hash and transaction IDs from any UTXO controlled by its wallet. The SPV node then adds each of these to the bloom filter, so that the bloom filter will \"match\" if these patterns are present in a transaction, without revealing the patterns themselves."}
{"prompt": "The Bitcoin Network", "completion": "The SPV node will then send a filterload message to the peer, containing the bloom filter to use on the connection. On the peer, bloom filters are checked against each incoming transaction. The full node checks several parts of the transaction against the bloom filter, looking for a match including:"}
{"prompt": "The Bitcoin Network", "completion": "The transaction ID"}
{"prompt": "The Bitcoin Network", "completion": "The data components from the locking scripts of each of the transaction outputs (every key and hash in the script)"}
{"prompt": "The Bitcoin Network", "completion": "Each of the transaction inputs"}
{"prompt": "The Bitcoin Network", "completion": "Each of the input signature data components (or witness scripts)"}
{"prompt": "The Bitcoin Network", "completion": "By checking against all these components, bloom filters can be used to match public key hashes, scripts, OP_RETURN values, public keys in signatures, or any future component of a smart contract or complex script."}
{"prompt": "The Bitcoin Network", "completion": "After a filter is established, the peer will then test each transaction\u2019s output against the bloom filter. Only transactions that match the filter are sent to the node."}
{"prompt": "The Bitcoin Network", "completion": "In response to a getdata message from the node, peers will send a merkleblock message that contains only block headers for blocks matching the filter and a merkle path (see [merkle_trees]) for each matching transaction. The peer will then also send tx messages containing the transactions matched by the filter."}
{"prompt": "The Bitcoin Network", "completion": "As the full node sends transactions to the SPV node, the SPV node discards any false positives and uses the correctly matched transactions to update its UTXO set and wallet balance. As it updates its own view of the UTXO set, it also modifies the bloom filter to match any future transactions referencing the UTXO it just found. The full node then uses the new bloom filter to match new transactions and the whole process repeats."}
{"prompt": "The Bitcoin Network", "completion": "The node setting the bloom filter can interactively add patterns to the filter by sending a filteradd message. To clear the bloom filter, the node can send a filterclear message. Because it is not possible to remove a pattern from a bloom filter, a node has to clear and resend a new bloom filter if a pattern is no longer desired."}
{"prompt": "The Bitcoin Network", "completion": "The network protocol and bloom filter mechanism for SPV nodes is defined in BIP-37 (Peer Services)."}
{"prompt": "The Bitcoin Network", "completion": "Nodes that implement SPV have weaker privacy than a full node. A full node receives all transactions and therefore reveals no information about whether it is using some address in its wallet. An SPV node receives a filtered list of transactions related to the addresses that are in its wallet. As a result, it reduces the privacy of the owner."}
{"prompt": "The Bitcoin Network", "completion": "Bloom filters are a way to reduce the loss of privacy. Without them, an SPV node would have to explicitly list the addresses it was interested in, creating a serious breach of privacy. However, even with bloom filters, an adversary monitoring the traffic of an SPV client or connected to it directly as a node in the P2P network can collect enough information over time to learn the addresses in the wallet of the SPV client."}
{"prompt": "The Bitcoin Network", "completion": "Most new users of bitcoin assume that the network communications of a bitcoin node are encrypted. In fact, the original implementation of bitcoin communicates entirely in the clear. While this is not a major privacy concern for full nodes, it is a big problem for SPV nodes."}
{"prompt": "The Bitcoin Network", "completion": "As a way to increase the privacy and security of the bitcoin P2P network, there are two solutions that provide encryption of the communications: Tor Transport and P2P Authentication and Encryption with BIP-150/151."}
{"prompt": "The Bitcoin Network", "completion": "Tor, which stands for The Onion Routing network, is a software project and network that offers encryption and encapsulation of data through randomized network paths that offer anonymity, untraceability and privacy."}
{"prompt": "The Bitcoin Network", "completion": "Bitcoin Core offers several configuration options that allow you to run a bitcoin node with its traffic transported over the Tor network. In addition, Bitcoin Core can also offer a Tor hidden service allowing other Tor nodes to connect to your node directly over Tor."}
{"prompt": "The Bitcoin Network", "completion": "As of Bitcoin Core version 0.12, a node will offer a hidden Tor service automatically if it is able to connect to a local Tor service. If you have Tor installed and the Bitcoin Core process runs as a user with adequate permissions to access the Tor authentication cookie, it should work automatically. Use the debug flag to turn on Bitcoin Core\u2019s debugging for the Tor service like this:"}
{"prompt": "The Bitcoin Network", "completion": "You should see \"tor: ADD_ONION successful\" in the logs, indicating that Bitcoin Core has added a hidden service to the Tor network."}
{"prompt": "The Bitcoin Network", "completion": "You can find more instructions on running Bitcoin Core as a Tor hidden service in the Bitcoin Core documentation (docs/tor.md) and various online tutorials."}
{"prompt": "The Bitcoin Network", "completion": "Two Bitcoin Improvement Proposals, BIP-150 and BIP-151, add support for P2P authentication and encryption in the bitcoin P2P network. These two BIPs define optional services that may be offered by compatible bitcoin nodes. BIP-151 enables negotiated encryption for all communications between two nodes that support BIP-151. BIP-150 offers optional peer authentication that allows nodes to authenticate each other\u2019s identity using ECDSA and private keys. BIP-150 requires that prior to authentication the two nodes have established encrypted communications as per BIP-151."}
{"prompt": "The Bitcoin Network", "completion": "As of February 2021, BIP-150 and BIP-151 are not implemented in Bitcoin Core. However, the two proposals have been implemented by at least one alternative bitcoin client named bcoin."}
{"prompt": "The Bitcoin Network", "completion": "BIP-150 and BIP-151 allow users to run SPV clients that connect to a trusted full node, using encryption and authentication to protect the privacy of the SPV client."}
{"prompt": "The Bitcoin Network", "completion": "Additionally, authentication can be used to create networks of trusted bitcoin nodes and prevent Man-in-the-Middle attacks. Finally, P2P encryption, if deployed broadly, would strengthen the resistance of bitcoin to traffic analysis and privacy-eroding surveillance, especially in totalitarian countries where internet use is heavily controlled and monitored."}
{"prompt": "The Bitcoin Network", "completion": "The standard is defined in BIP-150 (Peer Authentication) and BIP-151 (Peer-to-Peer Communication Encryption)."}
{"prompt": "The Bitcoin Network", "completion": "Almost every node on the bitcoin network maintains a temporary list of unconfirmed transactions called the memory pool, mempool, or transaction pool. Nodes use this pool to keep track of transactions that are known to the network but are not yet included in the blockchain. For example, a wallet node will use the transaction pool to track incoming payments to the user\u2019s wallet that have been received on the network but are not yet confirmed."}
{"prompt": "The Bitcoin Network", "completion": "As transactions are received and verified, they are added to the transaction pool and relayed to the neighboring nodes to propagate on the network."}
{"prompt": "The Bitcoin Network", "completion": "Some node implementations also maintain a separate pool of orphaned transactions. If a transaction\u2019s inputs refer to a transaction that is not yet known, such as a missing parent, the orphan transaction will be stored temporarily in the orphan pool until the parent transaction arrives."}
{"prompt": "The Bitcoin Network", "completion": "When a transaction is added to the transaction pool, the orphan pool is checked for any orphans that reference this transaction\u2019s outputs (its children). Any matching orphans are then validated. If valid, they are removed from the orphan pool and added to the transaction pool, completing the chain that started with the parent transaction. In light of the newly added transaction, which is no longer an orphan, the process is repeated recursively looking for any further descendants, until no more descendants are found. Through this process, the arrival of a parent transaction triggers a cascade reconstruction of an entire chain of interdependent transactions by re-uniting the orphans with their parents all the way down the chain."}
{"prompt": "The Bitcoin Network", "completion": "Both the transaction pool and orphan pool (where implemented) are stored in local memory and are not saved on persistent storage; rather, they are dynamically populated from incoming network messages. When a node starts, both pools are empty and are gradually populated with new transactions received on the network."}
{"prompt": "The Bitcoin Network", "completion": "Some implementations of the bitcoin client also maintain an UTXO database or pool, which is the set of all unspent outputs on the blockchain. Bitcoin Core users will find it in the chainstate/ folder of their client\u2019s data directory. Although the name \"UTXO pool\" sounds similar to the transaction pool, it represents a different set of data. Unlike the transaction and orphan pools, the UTXO pool is not initialized empty but instead contains millions of entries of unspent transaction outputs, everything that is unspent from all the way back to the genesis block. The UTXO pool may be housed in local memory or as an indexed database table on persistent storage."}
{"prompt": "The Bitcoin Network", "completion": "Whereas the transaction and orphan pools represent a single node\u2019s local perspective and might vary significantly from node to node depending upon when the node was started or restarted, the UTXO pool represents the emergent consensus of the network and therefore will vary little between nodes. Furthermore, the transaction and orphan pools only contain unconfirmed transactions, while the UTXO pool only contains confirmed outputs."}
{"prompt": "The Blockchain", "completion": "The blockchain data structure is an ordered, back-linked list of blocks of transactions. The blockchain can be stored as a flat file, or in a simple database. The Bitcoin Core client stores the blockchain metadata using Google\u2019s LevelDB database. Blocks are linked \"back,\" each referring to the previous block in the chain. The blockchain is often visualized as a vertical stack, with blocks layered on top of each other and the first block serving as the foundation of the stack. The visualization of blocks stacked on top of each other results in the use of terms such as \"height\" to refer to the distance from the first block, and \"top\" or \"tip\" to refer to the most recently added block."}
{"prompt": "The Blockchain", "completion": "Each block within the blockchain is identified by a hash, generated using the SHA256 cryptographic hash algorithm on the header of the block. Each block also references a previous block, known as the parent block, through the \"previous block hash\" field in the block header. In other words, each block contains the hash of its parent inside its own header. The sequence of hashes linking each block to its parent creates a chain going back all the way to the first block ever created, known as the genesis block."}
{"prompt": "The Blockchain", "completion": "Although a block has just one parent, it can temporarily have multiple children. Each of the children refers to the same block as its parent and contains the same (parent) hash in the \"previous block hash\" field. Multiple children arise during a blockchain \"fork,\" a temporary situation that occurs when different blocks are discovered almost simultaneously by different miners (see [forks]). Eventually, only one child block becomes part of the blockchain and the \"fork\" is resolved. Even though a block may have more than one child, each block can have only one parent. This is because a block has one single \"previous block hash\" field referencing its single parent."}
{"prompt": "The Blockchain", "completion": "The \"previous block hash\" field is inside the block header and thereby affects the current block\u2019s hash. The child\u2019s own identity changes if the parent\u2019s identity changes. When the parent is modified in any way, the parent\u2019s hash changes. The parent\u2019s changed hash necessitates a change in the \"previous block hash\" pointer of the child. This in turn causes the child\u2019s hash to change, which requires a change in the pointer of the grandchild, which in turn changes the grandchild, and so on. This cascade effect ensures that once a block has many generations following it, it cannot be changed without forcing a recalculation of all subsequent blocks. Because such a recalculation would require enormous computation (and therefore energy consumption), the existence of a long chain of blocks makes the blockchain\u2019s deep history immutable, which is a key feature of bitcoin\u2019s security."}
{"prompt": "The Blockchain", "completion": "One way to think about the blockchain is like layers in a geological formation, or glacier core sample. The surface layers might change with the seasons, or even be blown away before they have time to settle. But once you go a few inches deep, geological layers become more and more stable. By the time you look a few hundred feet down, you are looking at a snapshot of the past that has remained undisturbed for millions of years. In the blockchain, the most recent few blocks might be revised if there is a chain recalculation due to a fork. The top six blocks are like a few inches of topsoil. But once you go more deeply into the blockchain, beyond six blocks, blocks are less and less likely to change. After 100 blocks back, there is so much stability that the coinbase transaction\u2014the transaction containing newly mined bitcoin\u2014can be spent. A few thousand blocks back (a month) and the blockchain is settled history, for all practical purposes. While the protocol always allows a chain to be undone by a longer chain and while the possibility of any block being reversed always exists, the probability of such an event decreases as time passes until it becomes infinitesimal."}
{"prompt": "The Blockchain", "completion": "A block is a container data structure that aggregates transactions for inclusion in the public ledger, the blockchain. The block is made of a header, containing metadata, followed by a long list of transactions that make up the bulk of its size. The block header is 80 bytes, whereas the average transaction is at least 400 bytes and the average block contains more than 1900 transactions. A complete block, with all transactions, is therefore 10,000 times larger than the block header. The structure of a block describes the structure of a block."}
{"prompt": "The Blockchain", "completion": "4 bytes"}
{"prompt": "The Blockchain", "completion": "Block Size"}
{"prompt": "The Blockchain", "completion": "The size of the block, in bytes, following this field"}
{"prompt": "The Blockchain", "completion": "80 bytes"}
{"prompt": "The Blockchain", "completion": "Block Header"}
{"prompt": "The Blockchain", "completion": "Several fields form the block header"}
{"prompt": "The Blockchain", "completion": "1\u20139 bytes (VarInt)"}
{"prompt": "The Blockchain", "completion": "Transaction Counter"}
{"prompt": "The Blockchain", "completion": "How many transactions follow"}
{"prompt": "The Blockchain", "completion": "Variable"}
{"prompt": "The Blockchain", "completion": "Transactions"}
{"prompt": "The Blockchain", "completion": "The transactions recorded in this block"}
{"prompt": "The Blockchain", "completion": "The block header consists of three sets of block metadata. First, there is a reference to a previous block hash, which connects this block to the previous block in the blockchain. The second set of metadata, namely the difficulty, timestamp, and nonce, relate to the mining competition, as detailed in [mining]. The third piece of metadata is the merkle tree root, a data structure used to efficiently summarize all the transactions in the block. The structure of the block header describes the structure of a block header."}
{"prompt": "The Blockchain", "completion": "4 bytes"}
{"prompt": "The Blockchain", "completion": "Version"}
{"prompt": "The Blockchain", "completion": "A version number to track software/protocol upgrades"}
{"prompt": "The Blockchain", "completion": "32 bytes"}
{"prompt": "The Blockchain", "completion": "Previous Block Hash"}
{"prompt": "The Blockchain", "completion": "A reference to the hash of the previous (parent) block in the chain"}
{"prompt": "The Blockchain", "completion": "32 bytes"}
{"prompt": "The Blockchain", "completion": "Merkle Root"}
{"prompt": "The Blockchain", "completion": "A hash of the root of the merkle tree of this block\u2019s transactions"}
{"prompt": "The Blockchain", "completion": "4 bytes"}
{"prompt": "The Blockchain", "completion": "Timestamp"}
{"prompt": "The Blockchain", "completion": "The approximate creation time of this block (in seconds elapsed since Unix Epoch)"}
{"prompt": "The Blockchain", "completion": "4 bytes"}
{"prompt": "The Blockchain", "completion": "Difficulty Target"}
{"prompt": "The Blockchain", "completion": "The Proof-of-Work algorithm difficulty target for this block"}
{"prompt": "The Blockchain", "completion": "4 bytes"}
{"prompt": "The Blockchain", "completion": "Nonce"}
{"prompt": "The Blockchain", "completion": "A counter used for the Proof-of-Work algorithm"}
{"prompt": "The Blockchain", "completion": "The nonce, difficulty target, and timestamp are used in the mining process and will be discussed in more detail in [mining]."}
{"prompt": "The Blockchain", "completion": "The primary identifier of a block is its cryptographic hash, a digital fingerprint, made by hashing the block header twice through the SHA256 algorithm. The resulting 32-byte hash is called the block hash but is more accurately the block header hash, because only the block header is used to compute it. For example, 000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f is the block hash of the first bitcoin block ever created. The block hash identifies a block uniquely and unambiguously and can be independently derived by any node by simply double hashing the block header with the SHA256 algorithm."}
{"prompt": "The Blockchain", "completion": "Note that the block hash is not actually included inside the block\u2019s data structure, neither when the block is transmitted on the network, nor when it is stored on a node\u2019s persistence storage as part of the blockchain. Instead, the block\u2019s hash is computed by each node as the block is received from the network. The block hash might be stored in a separate database table as part of the block\u2019s metadata, to facilitate indexing and faster retrieval of blocks from disk."}
{"prompt": "The Blockchain", "completion": "A second way to identify a block is by its position in the blockchain, called the block height. The first block ever created is at block height 0 (zero) and is the same block that was previously referenced by the following block hash 000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f. A block can thus be identified in two ways: by referencing the block hash or by referencing the block height. Each subsequent block added \"on top\" of that first block is one position \"higher\" in the blockchain, like boxes stacked one on top of the other."}
{"prompt": "The Blockchain", "completion": "In addition, the term current block height indicates the size of the blockchain in blocks at any given time. For example, the current block height on March 1, 2021 was approximately 672,722, meaning there were 672,722 blocks stacked on top of the first block created in January 2009."}
{"prompt": "The Blockchain", "completion": "Unlike the block hash, the block height is not a unique identifier. Although a single block will always have a specific and invariant block height, the reverse is not true\u2014the block height does not always identify a single block. Two or more blocks might have the same block height, competing for the same position in the blockchain. This scenario is discussed in detail in the section [forks]. The block height is also not a part of the block\u2019s data structure; it is not stored within the block. Each node dynamically identifies a block\u2019s position (height) in the blockchain when it is received from the bitcoin network. The block height might also be stored as metadata in an indexed database table for faster retrieval."}
{"prompt": "The Blockchain", "completion": "A block\u2019s block hash always identifies a single block uniquely. A block also always has a specific block height. However, it is not always the case that a specific block height can identify a single block. Rather, two or more blocks might compete for a single position in the blockchain."}
{"prompt": "The Blockchain", "completion": "The first block in the blockchain is called the genesis block and was created in 2009. It is the common ancestor of all the blocks in the blockchain, meaning that if you start at any block and follow the chain backward in time, you will eventually arrive at the genesis block."}
{"prompt": "The Blockchain", "completion": "Every node always starts with a blockchain of at least one block because the genesis block is statically encoded within the bitcoin client software, such that it cannot be altered. Every node always \"knows\" the genesis block\u2019s hash and structure, the fixed time it was created, and even the single transaction within. Thus, every node has the starting point for the blockchain, a secure \"root\" from which to build a trusted blockchain."}
{"prompt": "The Blockchain", "completion": "See the statically encoded genesis block inside the Bitcoin Core client, in chainparams.cpp."}
{"prompt": "The Blockchain", "completion": "The following identifier hash belongs to the genesis block:"}
{"prompt": "The Blockchain", "completion": "You can search for that block hash in any block explorer website, such as Blockchain.com, and you will find a page describing the contents of this block, with a URL containing that hash:"}
{"prompt": "The Blockchain", "completion": "https://www.blockchain.com/btc/block/000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f"}
{"prompt": "The Blockchain", "completion": "Using the Bitcoin Core reference client on the command line:"}
{"prompt": "The Blockchain", "completion": "The genesis block contains a hidden message within it. The coinbase transaction input contains the text \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks.\" This message was intended to offer proof of the earliest date this block was created, by referencing the headline of the British newspaper The Times. It also serves as a tongue-in-cheek reminder of the importance of an independent monetary system, with bitcoin\u2019s launch occurring at the same time as an unprecedented worldwide monetary crisis. The message was embedded in the first block by Satoshi Nakamoto, bitcoin\u2019s creator."}
{"prompt": "The Blockchain", "completion": "Bitcoin full nodes maintain a local copy of the blockchain, starting at the genesis block. The local copy of the blockchain is constantly updated as new blocks are found and used to extend the chain. As a node receives incoming blocks from the network, it will validate these blocks and then link them to the existing blockchain. To establish a link, a node will examine the incoming block header and look for the \"previous block hash.\""}
{"prompt": "The Blockchain", "completion": "Let\u2019s assume, for example, that a node has 277,314 blocks in the local copy of the blockchain. The last block the node knows about is block 277,314, with a block header hash of:"}
{"prompt": "The Blockchain", "completion": "The bitcoin node then receives a new block from the network, which it parses as follows:"}
{"prompt": "The Blockchain", "completion": "Looking at this new block, the node finds the previousblockhash field, which contains the hash of its parent block. It is a hash known to the node, that of the last block on the chain at height 277,314. Therefore, this new block is a child of the last block on the chain and extends the existing blockchain. The node adds this new block to the end of the chain, making the blockchain longer with a new height of 277,315. Blocks linked in a chain by reference to the previous block header hash shows the chain of three blocks, linked by references in the previousblockhash field."}
{"prompt": "The Blockchain", "completion": "Each block in the bitcoin blockchain contains a summary of all the transactions in the block using a merkle tree."}
{"prompt": "The Blockchain", "completion": "A merkle tree, also known as a binary hash tree, is a data structure used for efficiently summarizing and verifying the integrity of large sets of data. Merkle trees are binary trees containing cryptographic hashes. The term \"tree\" is used in computer science to describe a branching data structure, but these trees are usually displayed upside down with the \"root\" at the top and the \"leaves\" at the bottom of a diagram, as you will see in the examples that follow."}
{"prompt": "The Blockchain", "completion": "Merkle trees are used in bitcoin to summarize all the transactions in a block, producing an overall digital fingerprint of the entire set of transactions, providing a very efficient process to verify whether a transaction is included in a block. A merkle tree is constructed by recursively hashing pairs of nodes until there is only one hash, called the root, or merkle root. The cryptographic hash algorithm used in bitcoin\u2019s merkle trees is SHA256 applied twice, also known as double-SHA256."}
{"prompt": "The Blockchain", "completion": "When N data elements are hashed and summarized in a merkle tree, you can check to see if any one data element is included in the tree with at most 2*log~2~(N) calculations, making this a very efficient data structure."}
{"prompt": "The Blockchain", "completion": "The merkle tree is constructed bottom-up. In the following example, we start with four transactions, A, B, C, and D, which form the leaves of the merkle tree, as shown in Calculating the nodes in a merkle tree. The transactions are not stored in the merkle tree; rather, their data is hashed and the resulting hash is stored in each leaf node as HA, HB, HC, and HD:"}
{"prompt": "The Blockchain", "completion": "Consecutive pairs of leaf nodes are then summarized in a parent node, by concatenating the two hashes and hashing them together. For example, to construct the parent node HAB, the two 32-byte hashes of the children are concatenated to create a 64-byte string. That string is then double-hashed to produce the parent node\u2019s hash:"}
{"prompt": "The Blockchain", "completion": "The process continues until there is only one node at the top, the node known as the merkle root. That 32-byte hash is stored in the block header and summarizes all the data in all four transactions. Calculating the nodes in a merkle tree shows how the root is calculated by pair-wise hashes of the nodes."}
{"prompt": "The Blockchain", "completion": "Because the merkle tree is a binary tree, it needs an even number of leaf nodes. If there is an odd number of transactions to summarize, the last transaction hash will be duplicated to create an even number of leaf nodes, also known as a balanced tree. This is shown in Duplicating one data element achieves an even number of data elements, where transaction C is duplicated."}
{"prompt": "The Blockchain", "completion": "The same method for constructing a tree from four transactions can be generalized to construct trees of any size. In bitcoin it is common to have several hundred to more than a thousand transactions in a single block, which are summarized in exactly the same way, producing just 32 bytes of data as the single merkle root. In A merkle tree summarizing many data elements, you will see a tree built from 16 transactions. Note that although the root looks bigger than the leaf nodes in the diagram, it is the exact same size, just 32 bytes. Whether there is one transaction or a hundred thousand transactions in the block, the merkle root always summarizes them into 32 bytes."}
{"prompt": "The Blockchain", "completion": "To prove that a specific transaction is included in a block, a node only needs to produce log~2~(N) 32-byte hashes, constituting an authentication path or merkle path connecting the specific transaction to the root of the tree. This is especially important as the number of transactions increases, because the base-2 logarithm of the number of transactions increases much more slowly. This allows bitcoin nodes to efficiently produce paths of 10 or 12 hashes (320\u2013384 bytes), which can provide proof of a single transaction out of more than a thousand transactions in a megabyte-sized block."}
{"prompt": "The Blockchain", "completion": "In A merkle path used to prove inclusion of a data element, a node can prove that a transaction K is included in the block by producing a merkle path that is only four 32-byte hashes long (128 bytes total). The path consists of the four hashes (shown with a shaded background in A merkle path used to prove inclusion of a data element) HL, HIJ, HMNOP, and HABCDEFGH. With those four hashes provided as an authentication path, any node can prove that HK (with a black background at the bottom of the diagram) is included in the merkle root by computing four additional pair-wise hashes HKL, HIJKL, HIJKLMNOP, and the merkle tree root (outlined in a dashed line in the diagram)."}
{"prompt": "The Blockchain", "completion": "The code in Building a merkle tree demonstrates the process of creating a merkle tree from the leaf-node hashes up to the root, using the libbitcoin library for some helper functions."}
{"prompt": "The Blockchain", "completion": "Compiling and running the merkle example code shows the result of compiling and running the merkle code."}
{"prompt": "The Blockchain", "completion": "The efficiency of merkle trees becomes obvious as the scale increases. Merkle tree efficiency shows the amount of data that needs to be exchanged as a merkle path to prove that a transaction is part of a block."}
{"prompt": "The Blockchain", "completion": "16 transactions"}
{"prompt": "The Blockchain", "completion": "4 kilobytes"}
{"prompt": "The Blockchain", "completion": "4 hashes"}
{"prompt": "The Blockchain", "completion": "128 bytes"}
{"prompt": "The Blockchain", "completion": "512 transactions"}
{"prompt": "The Blockchain", "completion": "128 kilobytes"}
{"prompt": "The Blockchain", "completion": "9 hashes"}
{"prompt": "The Blockchain", "completion": "288 bytes"}
{"prompt": "The Blockchain", "completion": "2048 transactions"}
{"prompt": "The Blockchain", "completion": "512 kilobytes"}
{"prompt": "The Blockchain", "completion": "11 hashes"}
{"prompt": "The Blockchain", "completion": "352 bytes"}
{"prompt": "The Blockchain", "completion": "65,535 transactions"}
{"prompt": "The Blockchain", "completion": "16 megabytes"}
{"prompt": "The Blockchain", "completion": "16 hashes"}
{"prompt": "The Blockchain", "completion": "512 bytes"}
{"prompt": "The Blockchain", "completion": "As you can see from the table, while the block size increases rapidly, from 4 KB with 16 transactions to a block size of 16 MB to fit 65,535 transactions, the merkle path required to prove the inclusion of a transaction increases much more slowly, from 128 bytes to only 512 bytes. With merkle trees, a node can download just the block headers (80 bytes per block) and still be able to identify a transaction\u2019s inclusion in a block by retrieving a small merkle path from a full node, without storing or transmitting the vast majority of the blockchain, which might be several gigabytes in size. Nodes that do not maintain a full blockchain, called simplified payment verification (SPV) nodes, use merkle paths to verify transactions without downloading full blocks."}
{"prompt": "The Blockchain", "completion": "Merkle trees are used extensively by SPV nodes. SPV nodes don\u2019t have all transactions and do not download full blocks, just block headers. In order to verify that a transaction is included in a block, without having to download all the transactions in the block, they use an authentication path, or merkle path."}
{"prompt": "The Blockchain", "completion": "Consider, for example, an SPV node that is interested in incoming payments to an address contained in its wallet. The SPV node will establish a bloom filter (see [bloom_filters]) on its connections to peers to limit the transactions received to only those containing addresses of interest. When a peer sees a transaction that matches the bloom filter, it will send that block using a merkleblock message. The merkleblock message contains the block header as well as a merkle path that links the transaction of interest to the merkle root in the block. The SPV node can use this merkle path to connect the transaction to the block and verify that the transaction is included in the block. The SPV node also uses the block header to link the block to the rest of the blockchain. The combination of these two links, between the transaction and block, and between the block and blockchain, proves that the transaction is recorded in the blockchain. All in all, the SPV node will have received less than a kilobyte of data for the block header and merkle path, an amount of data that is more than a thousand times less than a full block (about 1 megabyte currently)."}
{"prompt": "The Blockchain", "completion": "You might be surprised to learn that there is more than one bitcoin blockchain. The \"main\" bitcoin blockchain, the one created by Satoshi Nakamoto on January 3rd, 2009, the one with the genesis block we studied in this chapter, is called mainnet. There are other bitcoin blockchains that are used for testing purposes: at this time testnet, segnet, and regtest. Let\u2019s look at each in turn."}
{"prompt": "The Blockchain", "completion": "Testnet is the name of the test blockchain, network, and currency that is used for testing purposes. The testnet is a fully featured live P2P network, with wallets, test bitcoin (testnet coins), mining, and all the other features of mainnet. There are really only two differences: testnet coins are meant to be worthless and mining difficulty should be low enough that anyone can mine testnet coins relatively easily (keeping them worthless)."}
{"prompt": "The Blockchain", "completion": "Any software development that is intended for production use on bitcoin\u2019s mainnet should first be tested on testnet with test coins. This protects both the developers from monetary losses due to bugs and the network from unintended behavior due to bugs."}
{"prompt": "The Blockchain", "completion": "Keeping the coins worthless and the mining easy, however, is not easy. Despite pleas from developers, some people use advanced mining equipment (GPUs and ASICs) to mine on testnet. This increases the difficulty, makes it impossible to mine with a CPU, and eventually makes it difficult enough to get test coins that people start valuing them, so they\u2019re not worthless. As a result, every now and then, the testnet has to be scrapped and restarted from a new genesis block, resetting the difficulty."}
{"prompt": "The Blockchain", "completion": "The current testnet is called testnet3, the third iteration of testnet, restarted in February 2011 to reset the difficulty from the previous testnet."}
{"prompt": "The Blockchain", "completion": "Keep in mind that testnet3 is a large blockchain, in excess of 25 GB in 2021. It will take a day or so to sync fully and use up resources on your computer. Not as much as mainnet, but not exactly \"lightweight\" either. One good way to run a testnet node is as a virtual machine image (e.g., VirtualBox, Docker, Cloud Server, etc.) dedicated for that purpose."}
{"prompt": "The Blockchain", "completion": "Bitcoin Core, like almost all other bitcoin software, has full support for operation on testnet instead of mainnet. All of Bitcoin Core\u2019s functions work on testnet, including the wallet, mining testnet coins, and syncing a full testnet node."}
{"prompt": "The Blockchain", "completion": "To start Bitcoin Core on testnet instead of mainnet you use the testnet switch:"}
{"prompt": "The Blockchain", "completion": "In the logs you should see that bitcoind is building a new blockchain in the testnet3 subdirectory of the default bitcoind directory:"}
{"prompt": "The Blockchain", "completion": "To connect to bitcoind, you use the bitcoin-cli command-line tool, but you must also switch it to testnet mode:"}
{"prompt": "The Blockchain", "completion": "You can also run on testnet3 with other full-node implementations, such as btcd (written in Go) and bcoin (written in JavaScript), to experiment and learn in other programming languages and frameworks."}
{"prompt": "The Blockchain", "completion": "In 2021, testnet3 supports all the features of mainnet, including Segregated Witness (see [segwit]). Therefore, testnet3 can also be used to test Segregated Witness features."}
{"prompt": "The Blockchain", "completion": "In 2016, a special-purpose testnet was launched to aid in development and testing of Segregated Witness (aka segwit; see [segwit]). This test blockchain is called segnet and can be joined by running a special version (branch) of Bitcoin Core."}
{"prompt": "The Blockchain", "completion": "Since segwit was added to testnet3, it is no longer necessary to use segnet for testing of segwit features."}
{"prompt": "The Blockchain", "completion": "In the future it is likely we will see other testnet blockchains that are specifically designed to test a single feature or major architectural change, like segnet."}
{"prompt": "The Blockchain", "completion": "Regtest, which stands for \"Regression Testing,\" is a Bitcoin Core feature that allows you to create a local blockchain for testing purposes. Unlike testnet3, which is a public and shared test blockchain, the regtest blockchains are intended to be run as closed systems for local testing. You launch a regtest blockchain from scratch, creating a local genesis block. You may add other nodes to the network, or run it with a single node only to test the Bitcoin Core software."}
{"prompt": "The Blockchain", "completion": "To start Bitcoin Core in regtest mode, you use the regtest flag:"}
{"prompt": "The Blockchain", "completion": "Just like with testnet, Bitcoin Core will initialize a new blockchain under the regtest subdirectory of your bitcoind default directory:"}
{"prompt": "The Blockchain", "completion": "To use the command-line tool, you need to specify the regtest flag too. Let\u2019s try the getblockchaininfo command to inspect the regtest blockchain:"}
{"prompt": "The Blockchain", "completion": "As you can see, there are no blocks yet. Let\u2019s mine some (500 blocks) and earn the reward:"}
{"prompt": "The Blockchain", "completion": "It will only take a few seconds to mine all these blocks, which certainly makes it easy for testing. If you check your wallet balance, you will see that you earned reward for the first 400 blocks (coinbase rewards must be 100 blocks deep before you can spend them):"}
{"prompt": "The Blockchain", "completion": "Bitcoin\u2019s various blockchains (regtest, segnet, testnet3, mainnet) offer a range of testing environments for bitcoin development. Use the test blockchains whether you are developing for Bitcoin Core, or another full-node consensus client; an application such as a wallet, exchange, ecommerce site; or even developing novel smart contracts and complex scripts."}
{"prompt": "The Blockchain", "completion": "You can use the test blockchains to establish a development pipeline. Test your code locally on a regtest as you develop it. Once you are ready to try it on a public network, switch to testnet to expose your code to a more dynamic environment with more diversity of code and applications. Finally, once you are confident your code works as expected, switch to mainnet to deploy it in production. As you make changes, improvements, bug fixes, etc., start the pipeline again, deploying each change first on regtest, then on testnet, and finally into production."}
{"prompt": "Mining and Consensus", "completion": "The word \"mining\" is somewhat misleading. By evoking the extraction of precious metals, it focuses our attention on the reward for mining, the new bitcoin created in each block. Although mining is incentivized by this reward, the primary purpose of mining is not the reward or the generation of new coins. If you view mining only as the process by which coins are created, you are mistaking the means (incentives) as the goal of the process. Mining is the mechanism that underpins the decentralized clearinghouse, by which transactions are validated and cleared. Mining is the invention that makes bitcoin special, a decentralized security mechanism that is the basis for P2P digital cash."}
{"prompt": "Mining and Consensus", "completion": "Mining secures the bitcoin system and enables the emergence of network-wide consensus without a central authority. The reward of newly minted coins and transaction fees is an incentive scheme that aligns the actions of miners with the security of the network, while simultaneously implementing the monetary supply."}
{"prompt": "Mining and Consensus", "completion": "The purpose of mining is not the creation of new bitcoin. That\u2019s the incentive system. Mining is the mechanism by which bitcoin\u2019s security is decentralized."}
{"prompt": "Mining and Consensus", "completion": "Miners validate new transactions and record them on the global ledger. A new block, containing transactions that occurred since the last block, is \"mined\" every 10 minutes on average, thereby adding those transactions to the blockchain. Transactions that become part of a block and added to the blockchain are considered \"confirmed,\" which allows the new owners of bitcoin to spend the bitcoin they received in those transactions."}
{"prompt": "Mining and Consensus", "completion": "Miners receive two types of rewards in return for the security provided by mining: new coins created with each new block, also known as a block reward or coinbase reward, and transaction fees from all the transactions included in the block. To earn this reward, miners compete to solve a difficult mathematical problem based on a cryptographic hash algorithm. The solution to the problem, called the Proof-of-Work, is included in the new block and acts as proof that the miner expended significant computing effort. The competition to solve the Proof-of-Work algorithm to earn the reward and the right to record transactions on the blockchain is the basis for bitcoin\u2019s security model."}
{"prompt": "Mining and Consensus", "completion": "The process is called mining because the reward (new coin generation) is designed to simulate diminishing returns, just like mining for precious metals. Bitcoin\u2019s money supply is created through mining, similar to how a central bank issues new money by printing bank notes. The maximum amount of newly created bitcoin a miner can add to a block decreases approximately every four years (or precisely every 210,000 blocks). It started at 50 bitcoin per block in January of 2009 and halved to 25 bitcoin per block in November of 2012. It halved to 12.5 bitcoin in July 2016 and again to 6.25 bitcoin in May 2020. Based on this formula, bitcoin mining rewards decrease exponentially until approximately the year 2140, when all bitcoin (20.99999998 million) will have been issued. After 2140, no new bitcoin will be issued."}
{"prompt": "Mining and Consensus", "completion": "Bitcoin miners also earn fees from transactions. Every transaction usually includes a transaction fee, in the form of a surplus of bitcoin between the transaction\u2019s inputs and outputs. The winning bitcoin miner gets to \"keep the change\" on the transactions included in the winning block. Today, the fees represent 0.5% or less of a bitcoin miner\u2019s income, the vast majority coming from the newly minted bitcoin. However, as the block reward decreases over time and the number of transactions per block increases, a greater proportion of bitcoin mining earnings will come from fees. Gradually, the mining reward will be dominated by transaction fees, which will form the primary incentive for miners. After 2140, the amount of new bitcoin in each block drops to zero and bitcoin mining will be incentivized only by transaction fees."}
{"prompt": "Mining and Consensus", "completion": "In this chapter, we will first examine mining as a monetary supply mechanism and then look at the most important function of mining: the decentralized consensus mechanism that underpins bitcoin\u2019s security."}
{"prompt": "Mining and Consensus", "completion": "To understand mining and consensus, we will follow Alice\u2019s transaction as it is received and added to a block by Jing\u2019s mining equipment. Then we will follow the block as it is mined, added to the blockchain, and accepted by the bitcoin network through the process of emergent consensus."}
{"prompt": "Mining and Consensus", "completion": "Bitcoin are \"minted\" during the creation of each block at a fixed and diminishing rate. Each block, generated on average every 10 minutes, contains entirely new bitcoin, created from nothing. Every 210,000 blocks, or approximately every four years, the currency issuance rate is decreased by 50%. For the first four years of operation of the network, each block contained 50 new bitcoin."}
{"prompt": "Mining and Consensus", "completion": "In November 2012, the new bitcoin issuance rate was decreased to 25 bitcoin per block. In July of 2016 it was decreased to 12.5 bitcoin per block, and in May of 2020 it was decreased again to 6.25 bitcoin per block. The rate of new coins decreases like this exponentially over 32 \"halvings\" until block 6,720,000 (mined approximately in year 2137), when it reaches the minimum currency unit of 1 satoshi. Finally, after 6.93 million blocks, in approximately 2140, almost 2,099,999,997,690,000 satoshis, or almost 21 million bitcoin, will be issued. Thereafter, blocks will contain no new bitcoin, and miners will be rewarded solely through the transaction fees. Supply of bitcoin currency over time based on a geometrically decreasing issuance rate shows the total bitcoin in circulation over time, as the issuance of currency decreases."}
{"prompt": "Mining and Consensus", "completion": "The maximum number of coins mined is the upper limit of possible mining rewards for bitcoin. In practice, a miner may intentionally mine a block taking less than the full reward. Such blocks have already been mined and more may be mined in the future, resulting in a lower total issuance of the currency."}
{"prompt": "Mining and Consensus", "completion": "In the example code in A script for calculating how much total bitcoin will be issued, we calculate the total amount of bitcoin that will be issued."}
{"prompt": "Mining and Consensus", "completion": "Running the max_money.py script shows the output produced by running this script."}
{"prompt": "Mining and Consensus", "completion": "The finite and diminishing issuance creates a fixed monetary supply that resists inflation. Unlike a fiat currency, which can be printed in infinite numbers by a central bank, bitcoin can never be inflated by printing."}
{"prompt": "Mining and Consensus", "completion": "The most important and debated consequence of fixed and diminishing monetary issuance is that the currency tends to be inherently deflationary. Deflation is the phenomenon of appreciation of value due to a mismatch in supply and demand that drives up the value (and exchange rate) of a currency. The opposite of inflation, price deflation, means that the money has more purchasing power over time."}
{"prompt": "Mining and Consensus", "completion": "Many economists argue that a deflationary economy is a disaster that should be avoided at all costs. That is because in a period of rapid deflation, people tend to hoard money instead of spending it, hoping that prices will fall. Such a phenomenon unfolded during Japan\u2019s \"Lost Decade,\" when a complete collapse of demand pushed the currency into a deflationary spiral."}
{"prompt": "Mining and Consensus", "completion": "Bitcoin experts argue that deflation is not bad per se. Rather, deflation is associated with a collapse in demand because that is the only example of deflation we have to study. In a fiat currency with the possibility of unlimited printing, it is very difficult to enter a deflationary spiral unless there is a complete collapse in demand and an unwillingness to print money. Deflation in bitcoin is not caused by a collapse in demand, but by a predictably constrained supply."}
{"prompt": "Mining and Consensus", "completion": "The positive aspect of deflation, of course, is that it is the opposite of inflation. Inflation causes a slow but inevitable debasement of currency, resulting in a form of hidden taxation that punishes savers in order to bail out debtors (including the biggest debtors, governments themselves). Currencies under government control suffer from the moral hazard of easy debt issuance that can later be erased through debasement at the expense of savers."}
{"prompt": "Mining and Consensus", "completion": "It remains to be seen whether the deflationary aspect of the currency is a problem when it is not driven by rapid economic retraction, or an advantage because the protection from inflation and debasement far outweighs the risks of deflation."}
{"prompt": "Mining and Consensus", "completion": "In the previous chapter we looked at the blockchain, the global public ledger (list) of all transactions, which everyone in the bitcoin network accepts as the authoritative record of ownership."}
{"prompt": "Mining and Consensus", "completion": "But how can everyone in the network agree on a single universal \"truth\" about who owns what, without having to trust anyone? All traditional payment systems depend on a trust model that has a central authority providing a clearinghouse service, basically verifying and clearing all transactions. Bitcoin has no central authority, yet somehow every full node has a complete copy of a public ledger that it can trust as the authoritative record. The blockchain is not created by a central authority, but is assembled independently by every node in the network. Somehow, every node in the network, acting on information transmitted across insecure network connections, can arrive at the same conclusion and assemble a copy of the same public ledger as everyone else. This chapter examines the process by which the bitcoin network achieves global consensus without central authority."}
{"prompt": "Mining and Consensus", "completion": "Satoshi Nakamoto\u2019s main invention is the decentralized mechanism for emergent consensus. Emergent, because consensus is not achieved explicitly\u2014there is no election or fixed moment when consensus occurs. Instead, consensus is an emergent artifact of the asynchronous interaction of thousands of independent nodes, all following simple rules. All the properties of bitcoin, including currency, transactions, payments, and the security model that does not depend on central authority or trust, derive from this invention."}
{"prompt": "Mining and Consensus", "completion": "Bitcoin\u2019s decentralized consensus emerges from the interplay of four processes that occur independently on nodes across the network:"}
{"prompt": "Mining and Consensus", "completion": "Independent verification of each transaction, by every full node, based on a comprehensive list of criteria"}
{"prompt": "Mining and Consensus", "completion": "Independent aggregation of those transactions into new blocks by mining nodes, coupled with demonstrated computation through a Proof-of-Work algorithm"}
{"prompt": "Mining and Consensus", "completion": "Independent verification of the new blocks by every node and assembly into a chain"}
{"prompt": "Mining and Consensus", "completion": "Independent selection, by every node, of the chain with the most cumulative computation demonstrated through Proof-of-Work"}
{"prompt": "Mining and Consensus", "completion": "In the next few sections we will examine these processes and how they interact to create the emergent property of network-wide consensus that allows any bitcoin node to assemble its own copy of the authoritative, trusted, public, global ledger."}
{"prompt": "Mining and Consensus", "completion": "In [transactions], we saw how wallet software creates transactions by collecting UTXO, providing the appropriate unlocking scripts, and then constructing new outputs assigned to a new owner. The resulting transaction is then sent to the neighboring nodes in the bitcoin network so that it can be propagated across the entire bitcoin network."}
{"prompt": "Mining and Consensus", "completion": "However, before forwarding transactions to its neighbors, every bitcoin node that receives a transaction will first verify the transaction. This ensures that only valid transactions are propagated across the network, while invalid transactions are discarded at the first node that encounters them."}
{"prompt": "Mining and Consensus", "completion": "Each node verifies every transaction against a long checklist of criteria:"}
{"prompt": "Mining and Consensus", "completion": "The transaction\u2019s syntax and data structure must be correct."}
{"prompt": "Mining and Consensus", "completion": "Neither lists of inputs or outputs are empty."}
{"prompt": "Mining and Consensus", "completion": "The transaction size is less than the maximum allowed size for a block excluding witness data, as shown in tx_check.cpp."}
{"prompt": "Mining and Consensus", "completion": "Each output value, as well as the total, must be within the allowed range of values (less than 21m coins, more than the dust threshold)."}
{"prompt": "Mining and Consensus", "completion": "None of the inputs have hash=0, N=\u20131 (coinbase transactions should not be relayed)."}
{"prompt": "Mining and Consensus", "completion": "nLocktime is equal to INT_MAX, or nLocktime and nSequence values are satisfied according to MedianTimePast."}
{"prompt": "Mining and Consensus", "completion": "The transaction size in bytes is greater than or equal to 82."}
{"prompt": "Mining and Consensus", "completion": "The number of signature operations (SIGOPS) contained in the transaction is less than the signature operation limit."}
{"prompt": "Mining and Consensus", "completion": "The unlocking script (scriptSig) can only push numbers on the stack, and the locking script (scriptPubkey) must match IsStandard forms (this rejects \"nonstandard\" transactions)."}
{"prompt": "Mining and Consensus", "completion": "A matching transaction in the pool, or in a block in the main branch, must exist."}
{"prompt": "Mining and Consensus", "completion": "For each input, if the referenced output exists in any other transaction in the pool, the transaction must be rejected."}
{"prompt": "Mining and Consensus", "completion": "For each input, look in the main branch and the transaction pool to find its parent transaction. If the parent transaction is missing for any input, this will be an orphan transaction. Add to the orphan transactions pool, if a matching transaction is not already in the pool."}
{"prompt": "Mining and Consensus", "completion": "For each input, if its parent transaction is a coinbase transaction, it must have at least COINBASE_MATURITY (100) confirmations."}
{"prompt": "Mining and Consensus", "completion": "For each input, the referenced output must exist and cannot already be spent."}
{"prompt": "Mining and Consensus", "completion": "Using the parent transactions to get input values, check that each input value, as well as the sum, are in the allowed range of values (less than 21m coins, more than 0)."}
{"prompt": "Mining and Consensus", "completion": "Reject if the sum of input values is less than sum of output values."}
{"prompt": "Mining and Consensus", "completion": "Reject if transaction fee would be too low (minRelayTxFee) to get into an empty block."}
{"prompt": "Mining and Consensus", "completion": "The unlocking scripts for each input must validate against the corresponding output locking scripts."}
{"prompt": "Mining and Consensus", "completion": "These conditions can be seen in detail in the functions AcceptToMemoryPool, CheckTransaction, and CheckInputs in Bitcoin Core. Note that the conditions change over time, to address new types of denial-of-service attacks or sometimes to relax the rules so as to include more types of transactions."}
{"prompt": "Mining and Consensus", "completion": "By independently verifying each transaction as it is received and before propagating it, every node builds a pool of valid (but unconfirmed) transactions known as the transaction pool, memory pool, or mempool."}
{"prompt": "Mining and Consensus", "completion": "Some of the nodes on the bitcoin network are specialized nodes called miners. In [ch01_intro_what_is_bitcoin] we introduced Jing, a computer engineering student in Shanghai, China, who is a bitcoin miner. Jing earns bitcoin by running a \"mining rig,\" which is a specialized computer-hardware system designed to mine bitcoin. Jing\u2019s specialized mining hardware is connected to a server running a full bitcoin node. Unlike Jing, some miners mine without a full node, as we will see in Mining Pools. Like every other full node, Jing\u2019s node receives and propagates unconfirmed transactions on the bitcoin network. Jing\u2019s node, however, also aggregates these transactions into new blocks."}
{"prompt": "Mining and Consensus", "completion": "Jing\u2019s node is listening for new blocks, propagated on the bitcoin network, as do all nodes. However, the arrival of a new block has special significance for a mining node. The competition among miners effectively ends with the propagation of a new block that acts as an announcement of a winner. To miners, receiving a valid new block means someone else won the competition and they lost. However, the end of one round of a competition is also the beginning of the next round. The new block is not just a checkered flag, marking the end of the race; it is also the starting pistol in the race for the next block."}
{"prompt": "Mining and Consensus", "completion": "After validating transactions, a bitcoin node will add them to the memory pool, or transaction pool, where transactions await until they can be included (mined) into a block. Jing\u2019s node collects, validates, and relays new transactions just like any other node. Unlike other nodes, however, Jing\u2019s node will then aggregate these transactions into a candidate block."}
{"prompt": "Mining and Consensus", "completion": "Let\u2019s follow the blocks that were created during the time Alice bought a cup of coffee from Bob\u2019s Cafe (see [cup_of_coffee]). Alice\u2019s transaction was included in block 277,316. For the purpose of demonstrating the concepts in this chapter, let\u2019s assume that block was mined by Jing\u2019s mining system and follow Alice\u2019s transaction as it becomes part of this new block."}
{"prompt": "Mining and Consensus", "completion": "Jing\u2019s mining node maintains a local copy of the blockchain. By the time Alice buys the cup of coffee, Jing\u2019s node has assembled a chain up to block 277,314. Jing\u2019s node is listening for transactions, trying to mine a new block and also listening for blocks discovered by other nodes. As Jing\u2019s node is mining, it receives block 277,315 through the bitcoin network. The arrival of this block signifies the end of the competition for block 277,315 and the beginning of the competition to create block 277,316."}
{"prompt": "Mining and Consensus", "completion": "During the previous 10 minutes, while Jing\u2019s node was searching for a solution to block 277,315, it was also collecting transactions in preparation for the next block. By now it has collected a few hundred transactions in the memory pool. Upon receiving block 277,315 and validating it, Jing\u2019s node will also compare it against all the transactions in the memory pool and remove any that were included in block 277,315. Whatever transactions remain in the memory pool are unconfirmed and are waiting to be recorded in a new block."}
{"prompt": "Mining and Consensus", "completion": "Jing\u2019s node immediately constructs a new empty block, a candidate for block 277,316. This block is called a candidate block because it is not yet a valid block, as it does not contain a valid Proof-of-Work. The block becomes valid only if the miner succeeds in finding a solution to the Proof-of-Work algorithm."}
{"prompt": "Mining and Consensus", "completion": "When Jing\u2019s node aggregates all the transactions from the memory pool, the new candidate block has 418 transactions with total transaction fees of 0.09094928 bitcoin. You can see this block in the blockchain using the Bitcoin Core client command-line interface, as shown in Using the command line to retrieve block 277,316."}
{"prompt": "Mining and Consensus", "completion": "The first transaction in any block is a special transaction, called a coinbase transaction. This transaction is constructed by Jing\u2019s node and contains his reward for the mining effort."}
{"prompt": "Mining and Consensus", "completion": "When block 277,316 was mined, the reward was 25 bitcoin per block. Since then, two \"halving\" periods have elapsed. The block reward changed to 12.5 bitcoin in July 2016 and to 6.25 bitcoin in May 2020."}
{"prompt": "Mining and Consensus", "completion": "Jing\u2019s node creates the coinbase transaction as a payment to his own wallet: \"Pay Jing\u2019s address 25.09094928 bitcoin.\" The total amount of reward that Jing collects for mining a block is the sum of the coinbase reward (25 new bitcoin) and the transaction fees (0.09094928) from all the transactions included in the block as shown in Coinbase transaction."}
{"prompt": "Mining and Consensus", "completion": "Unlike regular transactions, the coinbase transaction does not consume (spend) UTXO as inputs. Instead, it has only one input, called the coinbase, which creates bitcoin from nothing. The coinbase transaction has one output, payable to the miner\u2019s own bitcoin address. The output of the coinbase transaction sends the value of 25.09094928 bitcoin to the miner\u2019s bitcoin address; in this case it is 1MxTkeEP2PmHSMze5tUZ1hAV3YTKu2Gh1N."}
{"prompt": "Mining and Consensus", "completion": "To construct the coinbase transaction, Jing\u2019s node first calculates the total amount of transaction fees by adding all the inputs and outputs of the 418 transactions that were added to the block. The fees are calculated as:"}
{"prompt": "Mining and Consensus", "completion": "In block 277,316, the total transaction fees are 0.09094928 bitcoin."}
{"prompt": "Mining and Consensus", "completion": "Next, Jing\u2019s node calculates the correct reward for the new block. The reward is calculated based on the block height, starting at 50 bitcoin per block and reduced by half every 210,000 blocks. Because this block is at height 277,316, the correct reward is 25 bitcoin."}
{"prompt": "Mining and Consensus", "completion": "The calculation can be seen in function GetBlockSubsidy in the Bitcoin Core client, as shown in Calculating the block reward\u2014Function GetBlockSubsidy, Bitcoin Core Client, main.cpp."}
{"prompt": "Mining and Consensus", "completion": "The initial subsidy is calculated in satoshis by multiplying 50 with the COIN constant (100,000,000 satoshis). This sets the initial reward (nSubsidy) at 5 billion satoshis."}
{"prompt": "Mining and Consensus", "completion": "Next, the function calculates the number of halvings that have occurred by dividing the current block height by the halving interval (SubsidyHalvingInterval). In the case of block 277,316, with a halving interval every 210,000 blocks, the result is 1 halving."}
{"prompt": "Mining and Consensus", "completion": "The maximum number of halvings allowed is 64, so the code imposes a zero reward (returns only the fees) if the 64 halvings is exceeded."}
{"prompt": "Mining and Consensus", "completion": "Next, the function uses the binary-right-shift operator to divide the reward (nSubsidy) by two for each round of halving. In the case of block 277,316, this would binary-right-shift the reward of 5 billion satoshis once (one halving) and result in 2.5 billion satoshis, or 25 bitcoin. The binary-right-shift operator is used because it is more efficient than multiple repeated divisions. To avoid a potential bug, the shift operation is skipped after 63 halvings, and the subsidy is set to 0."}
{"prompt": "Mining and Consensus", "completion": "Finally, the coinbase reward (nSubsidy) is added to the transaction fees (nFees), and the sum is returned."}
{"prompt": "Mining and Consensus", "completion": "If Jing\u2019s mining node writes the coinbase transaction, what stops Jing from \"rewarding\" himself 100 or 1000 bitcoin? The answer is that an incorrect reward would result in the block being deemed invalid by everyone else, wasting Jing\u2019s electricity used for Proof-of-Work. Jing only gets to spend the reward if the block is accepted by everyone."}
{"prompt": "Mining and Consensus", "completion": "With these calculations, Jing\u2019s node then constructs the coinbase transaction to pay himself 25.09094928 bitcoin."}
{"prompt": "Mining and Consensus", "completion": "As you can see in Coinbase transaction, the coinbase transaction has a special format. Instead of a transaction input specifying a previous UTXO to spend, it has a \"coinbase\" input. We examined transaction inputs in [tx_in_structure]. Let\u2019s compare a regular transaction input with a coinbase transaction input. The structure of a \"normal\" transaction input shows the structure of a regular transaction input, while The structure of a coinbase transaction input shows the structure of the coinbase transaction\u2019s input."}
{"prompt": "Mining and Consensus", "completion": "32 bytes"}
{"prompt": "Mining and Consensus", "completion": "Transaction Hash"}
{"prompt": "Mining and Consensus", "completion": "Pointer to the transaction containing the UTXO to be spent"}
{"prompt": "Mining and Consensus", "completion": "4 bytes"}
{"prompt": "Mining and Consensus", "completion": "Output Index"}
{"prompt": "Mining and Consensus", "completion": "The index number of the UTXO to be spent, first one is 0"}
{"prompt": "Mining and Consensus", "completion": "1\u20139 bytes (VarInt)"}
{"prompt": "Mining and Consensus", "completion": "Unlocking-Script Size"}
{"prompt": "Mining and Consensus", "completion": "Unlocking-Script length in bytes, to follow"}
{"prompt": "Mining and Consensus", "completion": "Variable"}
{"prompt": "Mining and Consensus", "completion": "Unlocking-Script"}
{"prompt": "Mining and Consensus", "completion": "A script that fulfills the conditions of the UTXO locking script"}
{"prompt": "Mining and Consensus", "completion": "4 bytes"}
{"prompt": "Mining and Consensus", "completion": "Sequence Number"}
{"prompt": "Mining and Consensus", "completion": "Usually set to 0xFFFFFFFF to opt out of BIP 125 and BIP 68"}
{"prompt": "Mining and Consensus", "completion": "32 bytes"}
{"prompt": "Mining and Consensus", "completion": "Transaction Hash"}
{"prompt": "Mining and Consensus", "completion": "All bits are zero: Not a transaction hash reference"}
{"prompt": "Mining and Consensus", "completion": "4 bytes"}
{"prompt": "Mining and Consensus", "completion": "Output Index"}
{"prompt": "Mining and Consensus", "completion": "All bits are ones: 0xFFFFFFFF"}
{"prompt": "Mining and Consensus", "completion": "1\u20139 bytes (VarInt)"}
{"prompt": "Mining and Consensus", "completion": "Coinbase Data Size"}
{"prompt": "Mining and Consensus", "completion": "Length of the coinbase data, from 2 to 100 bytes"}
{"prompt": "Mining and Consensus", "completion": "Variable"}
{"prompt": "Mining and Consensus", "completion": "Coinbase Data"}
{"prompt": "Mining and Consensus", "completion": "Arbitrary data used for extra nonce and mining tags. In v2 blocks; must begin with block height"}
{"prompt": "Mining and Consensus", "completion": "4 bytes"}
{"prompt": "Mining and Consensus", "completion": "Sequence Number"}
{"prompt": "Mining and Consensus", "completion": "Set to 0xFFFFFFFF"}
{"prompt": "Mining and Consensus", "completion": "In a coinbase transaction, the first two fields are set to values that do not represent a UTXO reference. Instead of a \"transaction hash,\" the first field is filled with 32 bytes all set to zero. The \"output index\" is filled with 4 bytes all set to 0xFF (255 decimal). The \"Unlocking Script\" (scriptSig) is replaced by coinbase data, a data field used by the miners, as we will see next."}
{"prompt": "Mining and Consensus", "completion": "Coinbase transactions do not have an unlocking script (aka, scriptSig) field. Instead, this field is replaced by coinbase data, which must be between 2 and 100 bytes. Except for the first few bytes, the rest of the coinbase data can be used by miners in any way they want; it is arbitrary data."}
{"prompt": "Mining and Consensus", "completion": "In the genesis block, for example, Satoshi Nakamoto added the text \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\" in the coinbase data, using it as a proof of the date and to convey a message. Currently, miners use the coinbase data to include extra nonce values and strings identifying the mining pool."}
{"prompt": "Mining and Consensus", "completion": "The first few bytes of the coinbase used to be arbitrary, but that is no longer the case. As per BIP-34, version-2 blocks (blocks with the version field set to 2) must contain the block height index as a script \"push\" operation in the beginning of the coinbase field."}
{"prompt": "Mining and Consensus", "completion": "In block 277,316 we see that the coinbase (see Coinbase transaction), which is in the unlocking script or scriptSig field of the transaction input, contains the hexadecimal value 03443b0403858402062f503253482f. Let\u2019s decode this value."}
{"prompt": "Mining and Consensus", "completion": "The first byte, 03, instructs the script execution engine to push the next three bytes onto the script stack (see [tx_script_ops_table_pushdata]). The next three bytes, 0x443b04, are the block height encoded in little-endian format (backward, least-significant byte first). Reverse the order of the bytes and the result is 0x043b44, which is 277,316 in decimal."}
{"prompt": "Mining and Consensus", "completion": "The next few hexadecimal digits (0385840206) are used to encode an extra nonce (see The Extra Nonce Solution), or random value, used to find a suitable Proof-of-Work solution."}
{"prompt": "Mining and Consensus", "completion": "The final part of the coinbase data (2f503253482f) is the ASCII-encoded string /P2SH/, which indicates that the mining node that mined this block provides support for the P2SH improvement defined in BIP-16. The introduction of the P2SH capability required signaling by miners to endorse either BIP-16 or BIP-17. Those endorsing the BIP-16 implementation were to include the string /P2SH/ in their coinbase data. Those endorsing the BIP-17 implementation of P2SH were to include the string p2sh/CHV in their coinbase data. Finally, the BIP-16 was elected as the winner, and many miners continued including the string /P2SH/ in their coinbase to indicate that they provide support for this feature."}
{"prompt": "Mining and Consensus", "completion": "Extract the coinbase data from the genesis block uses the libbitcoin library introduced in [alt_libraries] to extract the coinbase data from the genesis block, displaying Satoshi\u2019s message. Note that the libbitcoin library contains a static copy of the genesis block, so the example code can retrieve the genesis block directly from the library."}
{"prompt": "Mining and Consensus", "completion": "We compile the code with the GNU C++ compiler and run the resulting executable, as shown in Compiling and running the satoshi-words example code."}
{"prompt": "Mining and Consensus", "completion": "To construct the block header, the mining node needs to fill in six fields, as listed in The structure of the block header."}
{"prompt": "Mining and Consensus", "completion": "4 bytes"}
{"prompt": "Mining and Consensus", "completion": "Version"}
{"prompt": "Mining and Consensus", "completion": "A version number to track software/protocol upgrades"}
{"prompt": "Mining and Consensus", "completion": "32 bytes"}
{"prompt": "Mining and Consensus", "completion": "Previous Block Hash"}
{"prompt": "Mining and Consensus", "completion": "A reference to the hash of the previous (parent) block in the chain"}
{"prompt": "Mining and Consensus", "completion": "32 bytes"}
{"prompt": "Mining and Consensus", "completion": "Merkle Root"}
{"prompt": "Mining and Consensus", "completion": "A hash of the root of the merkle tree of this block\u2019s transactions"}
{"prompt": "Mining and Consensus", "completion": "4 bytes"}
{"prompt": "Mining and Consensus", "completion": "Timestamp"}
{"prompt": "Mining and Consensus", "completion": "The approximate creation time of this block (seconds from Unix Epoch)"}
{"prompt": "Mining and Consensus", "completion": "4 bytes"}
{"prompt": "Mining and Consensus", "completion": "Target"}
{"prompt": "Mining and Consensus", "completion": "The Proof-of-Work algorithm target for this block"}
{"prompt": "Mining and Consensus", "completion": "4 bytes"}
{"prompt": "Mining and Consensus", "completion": "Nonce"}
{"prompt": "Mining and Consensus", "completion": "A counter used for the Proof-of-Work algorithm"}
{"prompt": "Mining and Consensus", "completion": "At the time that block 277,316 was mined, the version number describing the block structure is version 2, which is encoded in little-endian format in 4 bytes as 0x02000000."}
{"prompt": "Mining and Consensus", "completion": "Next, the mining node needs to add the \"Previous Block Hash\" (also known as prevhash). That is the hash of the block header of block 277,315, the previous block received from the network, which Jing\u2019s node has accepted and selected as the parent of the candidate block 277,316. The block header hash for block 277,315 is:"}
{"prompt": "Mining and Consensus", "completion": "By selecting the specific parent block, indicated by the Previous Block Hash field in the candidate block header, Jing is committing his mining power to extending the chain that ends in that specific block. In essence, this is how Jing \"votes\" with his mining power for the longest-difficulty valid chain."}
{"prompt": "Mining and Consensus", "completion": "The next step is to summarize all the transactions with a merkle tree, in order to add the merkle root to the block header. The coinbase transaction is listed as the first transaction in the block. Then, 418 more transactions are added after it, for a total of 419 transactions in the block. As we saw in the [merkle_trees], there must be an even number of \"leaf\" nodes in the tree, so the last transaction is duplicated, creating 420 nodes, each containing the hash of one transaction. The transaction hashes are then combined, in pairs, creating each level of the tree, until all the transactions are summarized into one node at the \"root\" of the tree. The root of the merkle tree summarizes all the transactions into a single 32-byte value, which you can see listed as \"merkle root\" in Using the command line to retrieve block 277,316, and here:"}
{"prompt": "Mining and Consensus", "completion": "Jing\u2019s mining node will then add a 4-byte timestamp, encoded as a Unix \"epoch\" timestamp, which is based on the number of seconds elapsed since midnight UTC, Thursday, January 1, 1970. The time 1388185914 is equal to Friday, December 27, 2013, 23:11:54 UTC."}
{"prompt": "Mining and Consensus", "completion": "Jing\u2019s node then fills in the target, which defines the required Proof-of-Work to make this a valid block. The target is stored in the block as a \"target bits\" metric, which is a mantissa-exponent encoding of the target. The encoding has a 1-byte exponent, followed by a 3-byte mantissa (coefficient). In block 277,316, for example, the target bits value is 0x1903a30c. The first part 0x19 is a hexadecimal exponent, while the next part, 0x03a30c, is the coefficient. The concept of a target is explained in Retargeting to Adjust Difficulty and the \"target bits\" representation is explained in Target Representation."}
{"prompt": "Mining and Consensus", "completion": "The final field is the nonce, which is initialized to zero."}
{"prompt": "Mining and Consensus", "completion": "With all the other fields filled, the block header is now complete and the process of mining can begin. The goal is now to find a value for the nonce that results in a block header hash that is equal to or less than the target. The mining node will need to test billions or trillions of nonce values before a nonce is found that satisfies the requirement."}
{"prompt": "Mining and Consensus", "completion": "Now that a candidate block has been constructed by Jing\u2019s node, it is time for Jing\u2019s hardware mining rig to \"mine\" the block, to find a solution to the Proof-of-Work algorithm that makes the block valid. Throughout this book we have studied cryptographic hash functions as used in various aspects of the bitcoin system. The hash function SHA256 is the function used in bitcoin\u2019s mining process."}
{"prompt": "Mining and Consensus", "completion": "In the simplest terms, mining is the process of hashing the block header repeatedly, changing one parameter, until the resulting hash matches a specific target. The hash function\u2019s result cannot be determined in advance, nor can a pattern be created that will produce a specific hash value. This feature of hash functions means that the only way to produce a hash result matching a specific target is to try again and again, randomly modifying the input until the desired hash result appears by chance."}
{"prompt": "Mining and Consensus", "completion": "A hash algorithm takes an arbitrary-length data input and produces a fixed-length deterministic result, a digital fingerprint of the input. For any specific input, the resulting hash will always be the same and can be easily calculated and verified by anyone implementing the same hash algorithm. The key characteristic of a cryptographic hash algorithm is that it is computationally infeasible to find two different inputs that produce the same fingerprint (known as a collision). As a corollary, it is also virtually impossible to select an input in such a way as to produce a desired fingerprint, other than trying random inputs."}
{"prompt": "Mining and Consensus", "completion": "With SHA256, the output is always 256 bits long, regardless of the size of the input. In SHA256 example, we will use the Python interpreter to calculate the SHA256 hash of the phrase, \"I am Satoshi Nakamoto\"."}
{"prompt": "Mining and Consensus", "completion": "SHA256 example shows the result of calculating the hash of \"I am Satoshi Nakamoto\": 5d7c7ba21cbbcd75d14800b100252d5b428e5b1213d27c385bc141ca6b47989e. This 256-bit number is the hash or digest of the phrase and depends on every part of the phrase. Adding a single letter, punctuation mark, or any other character will produce a different hash."}
{"prompt": "Mining and Consensus", "completion": "Now, if we change the phrase, we should expect to see completely different hashes. Let\u2019s try that by adding a number to the end of our phrase, using the simple Python scripting in SHA256 script for generating many hashes by iterating on a nonce."}
{"prompt": "Mining and Consensus", "completion": "Running this will produce the hashes of several phrases, made different by adding a number at the end of the text. By incrementing the number, we can get different hashes, as shown in SHA256 output of a script for generating many hashes by iterating on a nonce."}
{"prompt": "Mining and Consensus", "completion": "Each phrase produces a completely different hash result. They seem completely random, but you can reproduce the exact results in this example on any computer with Python and see the same exact hashes."}
{"prompt": "Mining and Consensus", "completion": "The number used as a variable in such a scenario is called a nonce. The nonce is used to vary the output of a cryptographic function, in this case to vary the SHA256 fingerprint of the phrase."}
{"prompt": "Mining and Consensus", "completion": "To make a challenge out of this algorithm, let\u2019s set a target: find a phrase that produces a hexadecimal hash that starts with a zero. Fortunately, this isn\u2019t difficult! SHA256 output of a script for generating many hashes by iterating on a nonce shows that the phrase \"I am Satoshi Nakamoto13\" produces the hash 0ebc56d59a34f5082aaef3d66b37a661696c2b618e62432727216ba9531041a5, which fits our criteria. It took 13 attempts to find it. In terms of probabilities, if the output of the hash function is evenly distributed we would expect to find a result with a 0 as the hexadecimal prefix once every 16 hashes (one out of 16 hexadecimal digits 0 through F). In numerical terms, that means finding a hash value that is less than 0x1000000000000000000000000000000000000000000000000000000000000000. We call this threshold the target and the goal is to find a hash that is numerically equal to or less than the target. If we decrease the target, the task of finding a hash that is less than the target becomes more and more difficult."}
{"prompt": "Mining and Consensus", "completion": "To give a simple analogy, imagine a game where players throw a pair of dice repeatedly, trying to throw equal to or less than a specified target. In the first round, the target is 11. Unless you throw double-six, you win. In the next round the target is 10. Players must throw 10 or less to win, again an easy task. Let\u2019s say a few rounds later the target is down to 5. Now, more than half the dice throws will exceed the target and therefore be invalid. It takes exponentially more dice throws to win, the lower the target gets. Eventually, when the target is 2 (the minimum possible), only one throw out of every 36, or 2% of them, will produce a winning result."}
{"prompt": "Mining and Consensus", "completion": "From the perspective of an observer who knows that the target of the dice game is 2, if someone has succeeded in casting a winning throw it can be assumed that they attempted, on average, 36 throws. In other words, one can estimate the amount of work it takes to succeed from the difficulty imposed by the target. When the algorithm is based on a deterministic function such as SHA256, the input itself constitutes proof that a certain amount of work was done to produce a result equal to or below the target. Hence, Proof-of-Work."}
{"prompt": "Mining and Consensus", "completion": "Even though each attempt produces a random outcome, the probability of any possible outcome can be calculated in advance. Therefore, an outcome of specified difficulty constitutes proof of a specific amount of work."}
{"prompt": "Mining and Consensus", "completion": "In SHA256 output of a script for generating many hashes by iterating on a nonce, the winning \"nonce\" is 13 and this result can be confirmed by anyone independently. Anyone can add the number 13 as a suffix to the phrase \"I am Satoshi Nakamoto\" and compute the hash, verifying that it is less than the target. The successful result is also Proof-of-Work, because it proves we did the work to find that nonce. While it only takes one hash computation to verify, it took us 13 hash computations to find a nonce that worked. If we had a lower target (higher difficulty) it would take many more hash computations to find a suitable nonce, but only one hash computation for anyone to verify. Furthermore, by knowing the target, anyone can estimate the difficulty using statistics and therefore know how much work was needed to find such a nonce."}
{"prompt": "Mining and Consensus", "completion": "The Proof-of-Work must produce a hash that is equal to or less than the target. A higher target means it is less difficult to find a hash that is equal to or below the target. A lower target means it is more difficult to find a hash equal to or below the target. The target and difficulty are inversely related."}
{"prompt": "Mining and Consensus", "completion": "Bitcoin\u2019s Proof-of-Work is very similar to the challenge shown in SHA256 output of a script for generating many hashes by iterating on a nonce. The miner constructs a candidate block filled with transactions. Next, the miner calculates the hash of this block\u2019s header and sees if it is equal to or smaller than the current target. If the hash is greater than the target, the miner will modify the nonce (usually just incrementing it by one) and try again. At the current difficulty in the bitcoin network, miners have to try quadrillions of times before finding a nonce that results in a low enough block header hash."}
{"prompt": "Mining and Consensus", "completion": "A very simplified Proof-of-Work algorithm is implemented in Python in Simplified Proof-of-Work implementation."}
{"prompt": "Mining and Consensus", "completion": "Running this code, you can set the desired difficulty (in bits, how many of the leading bits must be zero) and see how long it takes for your computer to find a solution. In Running the Proof-of-Work example for various difficulties, you can see how it works on an average laptop."}
{"prompt": "Mining and Consensus", "completion": "As you can see, increasing the difficulty by 1 bit causes a doubling in the time it takes to find a solution. If you think of the entire 256-bit number space, each time you constrain one more bit to zero, you decrease the search space by half. In Running the Proof-of-Work example for various difficulties, it takes 84 million hash attempts to find a nonce that produces a hash with 26 leading bits as zero. Even at a speed of more than 120,000 hashes per second, it still requires 10 minutes on a laptop to find this solution."}
{"prompt": "Mining and Consensus", "completion": "At the time of writing, the network is attempting to find a block whose header hash is equal to or less than:"}
{"prompt": "Mining and Consensus", "completion": "As you can see, there are a lot of zeros at the beginning of that target, meaning that the acceptable range of hashes is much smaller, hence it\u2019s more difficult to find a valid hash. It will take on average more than 1.8 zeta-hashes (thousand billion billion hashes) for the network to discover the next block. That seems like an impossible task, but fortunately the network is bringing 3 exa-hashes per second (EH/sec) of processing power to bear, which will be able to find a block in about 10 minutes on average."}
{"prompt": "Mining and Consensus", "completion": "In Using the command line to retrieve block 277,316, we saw that the block contains the target, in a notation called \"target bits\" or just \"bits,\" which in block 277,316 has the value of 0x1903a30c. This notation expresses the Proof-of-Work target as a coefficient/exponent format, with the first two hexadecimal digits for the exponent and the next six hex digits as the coefficient. In this block, therefore, the exponent is 0x19 and the coefficient is 0x03a30c."}
{"prompt": "Mining and Consensus", "completion": "The formula to calculate the difficulty target from this representation is:"}
{"prompt": "Mining and Consensus", "completion": "Using that formula, and the difficulty bits value 0x1903a30c, we get:"}
{"prompt": "Mining and Consensus", "completion": "which in decimal is:"}
{"prompt": "Mining and Consensus", "completion": "switching back to hexadecimal:"}
{"prompt": "Mining and Consensus", "completion": "This means that a valid block for height 277,316 is one that has a block header hash that is less than this target. In binary that number must have more than 60 leading bits set to zero. With this level of difficulty, a single miner processing 1 trillion hashes per second (1 terahash per second or 1 TH/sec) would only find a solution once every 8,496 blocks or once every 59 days, on average."}
{"prompt": "Mining and Consensus", "completion": "As we saw, the target determines the difficulty and therefore affects how long it takes to find a solution to the Proof-of-Work algorithm. This leads to the obvious questions: Why is the difficulty adjustable, who adjusts it, and how?"}
{"prompt": "Mining and Consensus", "completion": "Bitcoin\u2019s blocks are generated every 10 minutes, on average. This is bitcoin\u2019s heartbeat and underpins the frequency of currency issuance and the speed of transaction settlement. It has to remain constant not just over the short term, but over a period of many decades. Over this time, it is expected that computer power will continue to increase at a rapid pace. Furthermore, the number of participants in mining and the computers they use will also constantly change. To keep the block generation time at 10 minutes, the difficulty of mining must be adjusted to account for these changes. In fact, the Proof-of-Work target is a dynamic parameter that is periodically adjusted to meet a 10-minute block interval goal. In simple terms, the target is set so that the current mining power will result in a 10-minute block interval."}
{"prompt": "Mining and Consensus", "completion": "How, then, is such an adjustment made in a completely decentralized network? Retargeting occurs automatically and on every node independently. Every 2,016 blocks, all nodes retarget the Proof-of-Work. The equation for retargeting measures the time it took to find the last 2,016 blocks and compares that to the expected time of 20,160 minutes (2,016 blocks times the desired 10-minute block interval). The ratio between the actual timespan and desired timespan is calculated and a proportionate adjustment (up or down) is made to the target. In simple terms: If the network is finding blocks faster than every 10 minutes, the difficulty increases (target decreases). If block discovery is slower than expected, the difficulty decreases (target increases)."}
{"prompt": "Mining and Consensus", "completion": "The equation can be summarized as:"}
{"prompt": "Mining and Consensus", "completion": "Retargeting the Proof-of-Work\u2014CalculateNextWorkRequired() in pow.cpp shows the code used in the Bitcoin Core client."}
{"prompt": "Mining and Consensus", "completion": "While the target calibration happens every 2,016 blocks, because of an off-by-one error in the original Bitcoin Core client it is based on the total time of the previous 2,015 blocks (not 2,016 as it should be), resulting in a retargeting bias toward higher difficulty by 0.05%."}
{"prompt": "Mining and Consensus", "completion": "The parameters Interval (2,016 blocks) and TargetTimespan (two weeks as 1,209,600 seconds) are defined in chainparams.cpp."}
{"prompt": "Mining and Consensus", "completion": "To avoid extreme volatility in the difficulty, the retargeting adjustment must be less than a factor of four (4) per cycle. If the required target adjustment is greater than a factor of four, it will be adjusted by a factor of 4 and not more. Any further adjustment will be accomplished in the next retargeting period because the imbalance will persist through the next 2,016 blocks. Therefore, large discrepancies between hashing power and difficulty might take several 2,016 block cycles to balance out."}
{"prompt": "Mining and Consensus", "completion": "The difficulty of mining a bitcoin block is approximately '10 minutes of processing' for the entire network, based on the time it took to mine the previous 2,016 blocks, adjusted every 2,016 blocks. This is achieved by lowering or raising the target."}
{"prompt": "Mining and Consensus", "completion": "Note that the target is independent of the number of transactions or the value of transactions. This means that the amount of hashing power and therefore electricity expended to secure bitcoin is also entirely independent of the number of transactions. Bitcoin can scale up, achieve broader adoption, and remain secure without any increase in hashing power from today\u2019s level. The increase in hashing power represents market forces as new miners enter the market to compete for the reward. As long as enough hashing power is under the control of miners acting honestly in pursuit of the reward, it is enough to prevent \"takeover\" attacks and, therefore, it is enough to secure bitcoin."}
{"prompt": "Mining and Consensus", "completion": "The difficulty of mining is closely related to the cost of electricity and the exchange rate of bitcoin vis-a-vis the currency used to pay for electricity. High-performance mining systems are about as efficient as possible with the current generation of silicon fabrication, converting electricity into hashing computation at the highest rate possible. The primary influence on the mining market is the price of one kilowatt-hour of electricity in bitcoin, because that determines the profitability of mining and therefore the incentives to enter or exit the mining market."}
{"prompt": "Mining and Consensus", "completion": "As we saw earlier, Jing\u2019s node has constructed a candidate block and prepared it for mining. Jing has several hardware mining rigs with application-specific integrated circuits, where hundreds of thousands of integrated circuits run the SHA256 algorithm in parallel at incredible speeds. Many of these specialized machines are connected to his mining node over USB or a local area network. Next, the mining node running on Jing\u2019s desktop transmits the block header to his mining hardware, which starts testing trillions of nonces per second. Because the nonce is only 32 bits, after exhausting all the nonce possibilities (about 4 billion), the mining hardware changes the block header (adjusting the coinbase extra nonce space or timestamp) and resets the nonce counter, testing new combinations."}
{"prompt": "Mining and Consensus", "completion": "Almost 11 minutes after starting to mine block 277,316, one of the hardware mining machines finds a solution and sends it back to the mining node."}
{"prompt": "Mining and Consensus", "completion": "When inserted into the block header, the nonce 924,591,752 produces a block hash of:"}
{"prompt": "Mining and Consensus", "completion": "which is less than the target:"}
{"prompt": "Mining and Consensus", "completion": "Immediately, Jing\u2019s mining node transmits the block to all its peers. They receive, validate, and then propagate the new block. As the block ripples out across the network, each node adds it to its own copy of the blockchain, extending it to a new height of 277,316 blocks. As mining nodes receive and validate the block, they abandon their efforts to find a block at the same height and immediately start computing the next block in the chain, using Jing\u2019s block as the \"parent.\" By building on top of Jing\u2019s newly discovered block, the other miners are essentially \"voting\" with their mining power and endorsing Jing\u2019s block and the chain it extends."}
{"prompt": "Mining and Consensus", "completion": "In the next section, we\u2019ll look at the process each node uses to validate a block and select the longest chain, creating the consensus that forms the decentralized blockchain."}
{"prompt": "Mining and Consensus", "completion": "The third step in bitcoin\u2019s consensus mechanism is independent validation of each new block by every node on the network. As the newly solved block moves across the network, each node performs a series of tests to validate it before propagating it to its peers. This ensures that only valid blocks are propagated on the network. The independent validation also ensures that miners who act honestly get their blocks incorporated in the blockchain, thus earning the reward. Those miners who act dishonestly have their blocks rejected and not only lose the reward, but also waste the effort expended to find a Proof-of-Work solution, thus incurring the cost of electricity without compensation."}
{"prompt": "Mining and Consensus", "completion": "When a node receives a new block, it will validate the block by checking it against a long list of criteria that must all be met; otherwise, the block is rejected. These criteria can be seen in the Bitcoin Core client in the functions CheckBlock and CheckBlockHeader and include:"}
{"prompt": "Mining and Consensus", "completion": "The block data structure is syntactically valid"}
{"prompt": "Mining and Consensus", "completion": "The block header hash is equal to or less than the target (enforces the Proof-of-Work)"}
{"prompt": "Mining and Consensus", "completion": "The block timestamp is less than two hours in the future (allowing for time errors)"}
{"prompt": "Mining and Consensus", "completion": "The block size is within acceptable limits"}
{"prompt": "Mining and Consensus", "completion": "The first transaction (and only the first) is a coinbase transaction"}
{"prompt": "Mining and Consensus", "completion": "All transactions within the block are valid using the transaction checklist discussed in Independent Verification of Transactions"}
{"prompt": "Mining and Consensus", "completion": "The independent validation of each new block by every node on the network ensures that the miners cannot cheat. In previous sections we saw how miners get to write a transaction that awards them the new bitcoin created within the block and claim the transaction fees. Why don\u2019t miners write themselves a transaction for a thousand bitcoin instead of the correct reward? Because every node validates blocks according to the same rules. An invalid coinbase transaction would make the entire block invalid, which would result in the block being rejected and, therefore, that transaction would never become part of the ledger. The miners have to construct a perfect block, based on the shared rules that all nodes follow, and mine it with a correct solution to the Proof-of-Work. To do so, they expend a lot of electricity in mining, and if they cheat, all the electricity and effort is wasted. This is why independent validation is a key component of decentralized consensus."}
{"prompt": "Mining and Consensus", "completion": "The final step in bitcoin\u2019s decentralized consensus mechanism is the assembly of blocks into chains and the selection of the chain with the most Proof-of-Work. Once a node has validated a new block, it will then attempt to assemble a chain by connecting the block to the existing blockchain."}
{"prompt": "Mining and Consensus", "completion": "Nodes maintain three sets of blocks: those connected to the main blockchain, those that form branches off the main blockchain (secondary chains), and finally, blocks that do not have a known parent in the known chains (orphans). Invalid blocks are rejected as soon as any one of the validation criteria fails and are therefore not included in any chain."}
{"prompt": "Mining and Consensus", "completion": "The \"main chain\" at any time is whichever valid chain of blocks has the most cumulative Proof-of-Work associated with it. Under most circumstances this is also the chain with the most blocks in it, unless there are two equal-length chains and one has more Proof-of-Work. The main chain will also have branches with blocks that are \"siblings\" to the blocks on the main chain. These blocks are valid but not part of the main chain. They are kept for future reference, in case one of those chains is extended to exceed the main chain in work. In the next section (Blockchain Forks), we will see how secondary chains occur as a result of an almost simultaneous mining of blocks at the same height."}
{"prompt": "Mining and Consensus", "completion": "When a new block is received, a node will try to slot it into the existing blockchain. The node will look at the block\u2019s \"previous block hash\" field, which is the reference to the block\u2019s parent. Then, the node will attempt to find that parent in the existing blockchain. Most of the time, the parent will be the \"tip\" of the main chain, meaning this new block extends the main chain. For example, the new block 277,316 has a reference to the hash of its parent block 277,315. Most nodes that receive 277,316 will already have block 277,315 as the tip of their main chain and will therefore link the new block and extend that chain."}
{"prompt": "Mining and Consensus", "completion": "Sometimes, as we will see in Blockchain Forks, the new block extends a chain that is not the main chain. In that case, the node will attach the new block to the secondary chain it extends and then compare the work of the secondary chain to the main chain. If the secondary chain has more cumulative work than the main chain, the node will reconverge on the secondary chain, meaning it will select the secondary chain as its new main chain, making the old main chain a secondary chain. If the node is a miner, it will now construct a block extending this new, longer, chain."}
{"prompt": "Mining and Consensus", "completion": "If a valid block is received and no parent is found in the existing chains, that block is considered an \"orphan.\" Orphan blocks are saved in the orphan block pool where they will stay until their parent is received. Once the parent is received and linked into the existing chains, the orphan can be pulled out of the orphan pool and linked to the parent, making it part of a chain. Orphan blocks usually occur when two blocks that were mined within a short time of each other are received in reverse order (child before parent)."}
{"prompt": "Mining and Consensus", "completion": "By selecting the greatest-cumulative-work valid chain, all nodes eventually achieve network-wide consensus. Temporary discrepancies between chains are resolved eventually as more work is added, extending one of the possible chains. Mining nodes \"vote\" with their mining power by choosing which chain to extend by mining the next block. When they mine a new block and extend the chain, the new block itself represents their vote."}
{"prompt": "Mining and Consensus", "completion": "In the next section we will look at how discrepancies between competing chains (forks) are resolved by the independent selection of the greatest-cumulative-work chain."}
{"prompt": "Mining and Consensus", "completion": "Because the blockchain is a decentralized data structure, different copies of it are not always consistent. Blocks might arrive at different nodes at different times, causing the nodes to have different perspectives of the blockchain. To resolve this, each node always selects and attempts to extend the chain of blocks that represents the most Proof-of-Work, also known as the longest chain or greatest cumulative work chain. By summing the work recorded in each block in a chain, a node can calculate the total amount of work that has been expended to create that chain. As long as all nodes select the greatest-cumulative-work chain, the global bitcoin network eventually converges to a consistent state. Forks occur as temporary inconsistencies between versions of the blockchain, which are resolved by eventual reconvergence as more blocks are added to one of the forks."}
{"prompt": "Mining and Consensus", "completion": "The blockchain forks described in this section occur naturally (accidentally) as a result of transmission delays in the global network. Later in this chapter, we will also look at deliberately induced forks (hard forks and soft forks), which are used to modify the consensus rules."}
{"prompt": "Mining and Consensus", "completion": "In the next few diagrams, we follow the progress of a \"fork\" event across the network. The diagram is a simplified representation of the bitcoin network. For illustration purposes, different blocks are shown as different shapes (star, triangle, upside-down triangle, rhombus), spreading across the network. Each node in the network is represented as a circle."}
{"prompt": "Mining and Consensus", "completion": "Each node has its own perspective of the global blockchain. As each node receives blocks from its neighbors, it updates its own copy of the blockchain, selecting the greatest-cumulative-work chain. For illustration purposes, each node contains a shape that represents the block that it believes is currently the tip of the main chain. So, if you see a star shape in the node, that means that the star block is the tip of the main chain, as far as that node is concerned."}
{"prompt": "Mining and Consensus", "completion": "In the first diagram (Before the fork\u2014all nodes have the same perspective), the network has a unified perspective of the blockchain, with the star block as the tip of the main chain."}
{"prompt": "Mining and Consensus", "completion": "A \"fork\" occurs whenever there are two different valid blocks at the same block height competing to form the longest blockchain. This occurs under normal conditions whenever two miners solve the Proof-of-Work algorithm within a short period of time from each other. As both miners discover a solution for their respective candidate blocks, they immediately broadcast their own \"winning\" block to their immediate neighbors who begin propagating the block across the network. Each node that receives a valid block will incorporate it into its blockchain, extending the blockchain by one block. If that node later sees another valid block extending the same parent (at the same block height), it connects the second block on a secondary chain, forking its main chain. As a result, some nodes will \"see\" one winning block first, while other nodes will see the other winning block first, and two competing versions of the blockchain will emerge."}
{"prompt": "Mining and Consensus", "completion": "In Visualization of a blockchain fork event: two blocks found simultaneously, we see two miners (Node X and Node Y) who mine two different blocks almost simultaneously. Both of these blocks are children of the star block, and extend the chain by building on top of the star block. To help us track it, one is visualized as a triangle block originating from Node X, and the other is shown as an upside-down triangle block originating from Node Y."}
{"prompt": "Mining and Consensus", "completion": "Let\u2019s assume, for example, that the miner Node X finds a Proof-of-Work solution for a block \"triangle\" that extends the blockchain, building on top of the parent block \"star.\" Almost simultaneously, the miner Node Y who was also extending the chain from block \"star\" finds a solution for block \"upside-down triangle,\" his candidate block. Now, there are two possible blocks; one we call \"triangle,\" originating in Node X; and one we call \"upside-down triangle,\" originating in Node Y. Both blocks were successfully mined, both blocks are valid (contain a valid solution to the Proof-of-Work), and both blocks extend the same parent (block \"star\"). Both blocks likely contain most of the same transactions, with only perhaps a few differences in the order of transactions."}
{"prompt": "Mining and Consensus", "completion": "As the two blocks propagate, some nodes receive block \"triangle\" first and some receive block \"upside-down triangle\" first. As shown in Visualization of a blockchain fork event: two blocks propagate, splitting the network, the network splits into two different perspectives of the blockchain; one side topped with the triangle block, the other with the upside-down-triangle block."}
{"prompt": "Mining and Consensus", "completion": "In Visualization of a blockchain fork event: two blocks propagate, splitting the network, the miner Node X mined (created) the triangle block and extended the star chain with it. Therefore, Node X initially considers the chain with \"triangle\" block as the main chain. Later, Node X also received the \"upside-down triangle\" block that was mined by Node Y. Since it was received second, it is assumed to have \"lost\" the race. Yet, the \"upside-down triangle\" block is not discarded. It is linked to the \"star\" block parent and forms a secondary chain. While Node X assumes its main chain is the winning chain, it keeps the \"losing\" chain so that it has the information needed to reconverge if the \"losing\" chain ends up \"winning.\""}
{"prompt": "Mining and Consensus", "completion": "On the other side of the network, the miner Node Y constructs a blockchain based on its own perspective of the sequence of events. The miner Node Y mined (created) the \"upside-down triangle\" and initially considers that chain as the main chain (the \"winner\" chain). When it later received the \"triangle\" block that was mined by Node X, it connected it to the \"star\" block parent as a secondary chain."}
{"prompt": "Mining and Consensus", "completion": "Neither side is \"correct,\" or \"incorrect.\" Both are valid perspectives of the blockchain. Only in hindsight will one prevail, based on how these two competing chains are extended by additional work."}
{"prompt": "Mining and Consensus", "completion": "Each mining node whose perspective resembles Node X will immediately begin mining a candidate block that extends the chain with \"triangle\" as its tip. By linking \"triangle\" as the parent of their candidate blocks, they are voting with their hashing power. Their vote supports the chain that they have elected as the main chain."}
{"prompt": "Mining and Consensus", "completion": "Any mining node whose perspective resembles Node Y will start building a candidate block with \"upside-down triangle\" as its parent, extending the chain that they believe is the main chain. And so, the race begins again."}
{"prompt": "Mining and Consensus", "completion": "Forks are almost always resolved within one block time (10 minutes on average). While part of the network\u2019s hashing power is dedicated to building on top of \"triangle\" as the parent, another part of the hashing power is focused on building on top of \"upside-down triangle.\" Even if the hashing power is almost evenly split, it is likely that one set of miners will find a solution and propagate it before the other set of miners have found any solutions. Let\u2019s say, for example, that the miners building on top of \"triangle\" find a new block \"rhombus\" that extends the chain (e.g., star-triangle-rhombus). They immediately propagate this new block and the entire network sees it as a valid solution as shown in Visualization of a blockchain fork event: a new block extends one fork, reconverging the network. Both Node X and Node Y now consider \"upside-down-triangle\" block as a stale block.."}
{"prompt": "Mining and Consensus", "completion": "All nodes that had chosen \"triangle\" as the winner in the previous round will simply extend the chain one more block. The nodes that chose \"upside-down triangle\" as the winner, however, will now see two chains: star-triangle-rhombus and star-upside-down-triangle. The chain star-triangle-rhombus is now longer (more cumulative work) than the other chain. As a result, those nodes will set the chain star-triangle-rhombus as the main chain and change the star-upside-down-triangle chain to a secondary chain, as shown in Visualization of a blockchain fork event: the network reconverges on a new longest chain. This is a chain reconvergence, because those nodes are forced to revise their view of the blockchain to incorporate the new evidence of a longer chain. Any miners working on extending the chain star-upside-down-triangle will now stop that work because their candidate block is now considered a child of a stale block, as its parent \"upside-down-triangle\" is no longer on the longest chain. Since the upside-down-triangle block is now obsolete, the miner Node Y (which mined this block) will not be able to spend the mining reward for this block, even though this block was valid and was successfully mined. The transactions within \"upside-down-triangle\" that are not within \"triangle\" are re-inserted in the mempool for inclusion in the next block to become a part of the main chain. The entire network reconverges on a single blockchain star-triangle-rhombus, with \"rhombus\" as the last block in the chain. All miners immediately start working on candidate blocks that reference \"rhombus\" as their parent to extend the star-triangle-rhombus chain."}
{"prompt": "Mining and Consensus", "completion": "It is theoretically possible for a fork to extend to two blocks, if two blocks are found almost simultaneously by miners on opposite \"sides\" of a previous fork. However, the chance of that happening is very low. Whereas a one-block fork might occur every day, a two-block fork occurs at most once every few weeks."}
{"prompt": "Mining and Consensus", "completion": "Bitcoin\u2019s block interval of 10 minutes is a design compromise between fast confirmation times (settlement of transactions) and the probability of a fork. A faster block time would make transactions clear faster but lead to more frequent blockchain forks, whereas a slower block time would decrease the number of forks but make settlement slower."}
{"prompt": "Mining and Consensus", "completion": "Bitcoin mining is an extremely competitive industry. The hashing power has increased exponentially every year of bitcoin\u2019s existence. Some years the growth has reflected a complete change of technology, such as in 2010 and 2011 when many miners switched from using CPU mining to GPU mining and field programmable gate array (FPGA) mining. In 2013 the introduction of ASIC mining lead to another giant leap in mining power, by placing the SHA256 function directly on silicon chips specialized for the purpose of mining. The first such chips could deliver more mining power in a single box than the entire bitcoin network in 2010."}
{"prompt": "Mining and Consensus", "completion": "The following list shows the total hashing power of the bitcoin network in terahashes/sec (TH/sec), since its inception in 2009 (source: Blockchain.com):"}
{"prompt": "Mining and Consensus", "completion": "0.000004 \u2013 0.00001 TH/sec (2.40\u00d7 growth)"}
{"prompt": "Mining and Consensus", "completion": "0.00001 \u2013 0.14 TH/sec (14,247\u00d7 growth)"}
{"prompt": "Mining and Consensus", "completion": "0.14 \u2013 9.49 TH/sec (63.92\u00d7 growth)"}
{"prompt": "Mining and Consensus", "completion": "9.49 \u2013 22 TH/sec (2.32\u00d7 growth)"}
{"prompt": "Mining and Consensus", "completion": "22.04 \u2013 15,942 TH/sec (723.32\u00d7 growth)"}
{"prompt": "Mining and Consensus", "completion": "15,942 \u2013 306,333 TH/sec (19.21\u00d7 growth)"}
{"prompt": "Mining and Consensus", "completion": "306,333 \u2013 881,232 TH/sec (2.87\u00d7 growth)"}
{"prompt": "Mining and Consensus", "completion": "881,232 \u2013 2,807,540 TH/sec (3.18\u00d7 growth)"}
{"prompt": "Mining and Consensus", "completion": "2,807,540 \u2013 18,206,558 TH/sec (6.48\u00d7 growth)"}
{"prompt": "Mining and Consensus", "completion": "18,206,558 \u2013 41,801,528 TH/sec (2.29\u00d7 growth)"}
{"prompt": "Mining and Consensus", "completion": "41,801,528 \u2013 109,757,127 TH/sec (2.62\u00d7 growth)"}
{"prompt": "Mining and Consensus", "completion": "109,757,127 \u2013 149,064,869 TH/sec (1.35\u00d7 growth)"}
{"prompt": "Mining and Consensus", "completion": "In the chart in Total hashing power, terahashes per second (TH/sec) (chart on a linear scale), we can see that bitcoin network\u2019s hashing power increased over the past two years. As you can see, the competition between miners and the growth of bitcoin has resulted in an exponential increase in the hashing power (total hashes per second across the network)."}
{"prompt": "Mining and Consensus", "completion": "As the amount of hashing power applied to mining bitcoin has exploded, the difficulty has risen to match it. The difficulty metric in the chart shown in Bitcoin\u2019s mining difficulty metric (chart on a logarithmic scale) is measured as a ratio of current difficulty over minimum difficulty (the difficulty of the first block)."}
{"prompt": "Mining and Consensus", "completion": "In the last two years, the ASIC mining chips have become increasingly denser, approaching the cutting edge of silicon fabrication with a feature size (resolution) of 7 nanometers (nm). Currently, ASIC manufacturers are aiming to overtake general-purpose CPU chip manufacturers, designing chips with a feature size of 5 nm, because the profitability of mining is driving this industry even faster than general computing. There are no more giant leaps left in bitcoin mining, because the industry has reached the forefront of Moore\u2019s Law, which stipulates that computing density will double approximately every 18 months. Still, the mining power of the network continues to advance at an exponential pace as the race for higher density chips is matched with a race for higher density data centers where thousands of these chips can be deployed. It\u2019s no longer about how much mining can be done with one chip, but how many chips can be squeezed into a building, while still dissipating the heat and providing adequate power."}
{"prompt": "Mining and Consensus", "completion": "Since 2012, bitcoin mining has evolved to resolve a fundamental limitation in the structure of the block header. In the early days of bitcoin, a miner could find a block by iterating through the nonce until the resulting hash was equal to or below the target. As difficulty increased, miners often cycled through all 4 billion values of the nonce without finding a block. However, this was easily resolved by updating the block timestamp to account for the elapsed time. Because the timestamp is part of the header, the change would allow miners to iterate through the values of the nonce again with different results. Once mining hardware exceeded 4 GH/sec, however, this approach became increasingly difficult because the nonce values were exhausted in less than a second. As ASIC mining equipment started pushing and then exceeding the TH/sec hash rate, the mining software needed more space for nonce values in order to find valid blocks. The timestamp could be stretched a bit, but moving it too far into the future would cause the block to become invalid. A new source of \"change\" was needed in the block header. The solution was to use the coinbase transaction as a source of extra nonce values. Because the coinbase script can store between 2 and 100 bytes of data, miners started using that space as extra nonce space, allowing them to explore a much larger range of block header values to find valid blocks. The coinbase transaction is included in the merkle tree, which means that any change in the coinbase script causes the merkle root to change. Eight bytes of extra nonce, plus the 4 bytes of \"standard\" nonce allow miners to explore a total 296 (8 followed by 28 zeros) possibilities per second without having to modify the timestamp. If, in the future, miners could run through all these possibilities, they could then modify the timestamp. There is also more space in the coinbase script for future expansion of the extra nonce space."}
{"prompt": "Mining and Consensus", "completion": "In this highly competitive environment, individual miners working alone (also known as solo miners) don\u2019t stand a chance. The likelihood of them finding a block to offset their electricity and hardware costs is so low that it represents a gamble, like playing the lottery. Even the fastest consumer ASIC mining system cannot keep up with commercial systems that stack tens of thousands of these chips in giant warehouses near hydroelectric powerstations. Miners now collaborate to form mining pools, pooling their hashing power and sharing the reward among thousands of participants. By participating in a pool, miners get a smaller share of the overall reward, but typically get rewarded every day, reducing uncertainty."}
{"prompt": "Mining and Consensus", "completion": "Let\u2019s look at a specific example. Assume a miner has purchased mining hardware with a combined hashing rate of 14,000 gigahashes per second (GH/s), or 14 TH/s. In 2017 this equipment costs approximately $2,500 USD. The hardware consumes 1375 watts (1.3 kW) of electricity when running, 33 kW-hours a day, at a cost of $1 to $2 per day at very low electricity rates. At current bitcoin difficulty, the miner will be able to solo mine a block approximately once every 4 years. How do we work out that probability? It is based on a network-wide hashing rate of 3 EH/sec (in 2017), and the miner\u2019s rate of 14 TH/sec:"}
{"prompt": "Mining and Consensus", "completion": "\u2026where 210240 is the number of blocks in four years. The miner has a 98% probability of finding a block over four years, based on the global hash rate at the beginning of the period."}
{"prompt": "Mining and Consensus", "completion": "If the miner does find a single block in that timeframe, the payout of 6.25 bitcoin, at approximately $1,000 per bitcoin, will result in a single payout of $6,250, which will produce a net profit of about $750. However, the chance of finding a block in a 4-year period depends on the miner\u2019s luck. He might find two blocks in 4 years and make a larger profit. Or he might not find a block for 5 years and suffer a big financial loss. Even worse, the difficulty of the bitcoin Proof-of-Work algorithm is likely to go up significantly over that period, at the current rate of growth of hashing power, meaning the miner has, at most, one year to break even before the hardware is effectively obsolete and must be replaced by more powerful mining hardware. Financially this only makes sense at very low electricity cost (less than 1 cent per kW-hour) and only at very large scale."}
{"prompt": "Mining and Consensus", "completion": "Mining pools coordinate many hundreds or thousands of miners, over specialized pool-mining protocols. The individual miners configure their mining equipment to connect to a pool server, and specify a bitcoin address, which will receive their share of the rewards. Their mining hardware remains connected to the pool server while mining, synchronizing their efforts with the other miners. Thus, the pool miners share the effort to mine a block and then share in the rewards."}
{"prompt": "Mining and Consensus", "completion": "Successful blocks pay the reward to a pool bitcoin address, rather than individual miners. The pool server will periodically make payments to the miners' bitcoin addresses, once their share of the rewards has reached a certain threshold. Typically, the pool server charges a percentage fee of the rewards for providing the pool-mining service."}
{"prompt": "Mining and Consensus", "completion": "Miners participating in a pool split the work of searching for a solution to a candidate block, earning \"shares\" for their mining contribution. The mining pool sets a higher target (lower difficulty) for earning a share, typically more than 1,000 times easier than the bitcoin network\u2019s target. When someone in the pool successfully mines a block, the reward is earned by the pool and then shared with all miners in proportion to the number of shares they contributed to the effort."}
{"prompt": "Mining and Consensus", "completion": "Pools are open to any miner, big or small, professional or amateur. A pool will therefore have some participants with a single small mining machine, and others with a garage full of high-end mining hardware. Some will be mining with a few tens of a kilowatt of electricity, others will be running a data center consuming a megawatt of power. How does a mining pool measure the individual contributions, so as to fairly distribute the rewards, without the possibility of cheating? The answer is to use bitcoin\u2019s Proof-of-Work algorithm to measure each pool miner\u2019s contribution, but set at a lower difficulty so that even the smallest pool miners win a share frequently enough to make it worthwhile to contribute to the pool. By setting a lower difficulty for earning shares, the pool measures the amount of work done by each miner. Each time a pool miner finds a block header hash that is equal to or less than the pool target, she proves she has done the hashing work to find that result. More importantly, the work to find shares contributes, in a statistically measurable way, to the overall effort to find a hash equal to or lower than the bitcoin network\u2019s target. Thousands of miners trying to find low-value hashes will eventually find one low enough to satisfy the bitcoin network target."}
{"prompt": "Mining and Consensus", "completion": "Let\u2019s return to the analogy of a dice game. If the dice players are throwing dice with a goal of throwing equal to or less than four (the overall network difficulty), a pool would set an easier target, counting how many times the pool players managed to throw equal to or less than eight. When pool players throw equal to or less than eight (the pool share target) but higher than four (higher than the overall network difficulty), they earn shares, but neither they nor the pool win the game because they don\u2019t achieve the game target (equal to or less than four). The pool players will achieve the easier pool target much more often, earning them shares very regularly, even when they don\u2019t achieve the harder target of winning the game. Every now and then, one of the pool players will throw a combined dice throw of equal to or less than four, the pool player wins a share and the whole pool wins the game. Then, the earnings can be distributed to the pool players based on the amount of shares each one has earned. Even though the target of eight-or-less wasn\u2019t winning, it was a fair way to measure dice throws for the players, and it occasionally produces a four-or-less throw."}
{"prompt": "Mining and Consensus", "completion": "Similarly, a mining pool will set a (higher and easier) pool target that will ensure that an individual pool miner can find block header hashes that are equal to or less than the pool target often, earning shares. Every now and then, one of these attempts will produce a block header hash that is equal to or less than the bitcoin network target, making it a valid block and the whole pool wins."}
{"prompt": "Mining and Consensus", "completion": "Most mining pools are \"managed,\" meaning that there is a company or individual running a pool server. The owner of the pool server is called the pool operator, and he charges pool miners a percentage fee of the earnings."}
{"prompt": "Mining and Consensus", "completion": "The pool server runs specialized software and a pool-mining protocol that coordinate the activities of the pool miners. The pool server is also connected to one or more full bitcoin nodes and has direct access to a full copy of the blockchain database. This allows the pool server to validate blocks and transactions on behalf of the pool miners, relieving them of the burden of running a full node. For pool miners, this is an important consideration, because a full node requires a dedicated computer with at least 300 to 350 GB of persistent storage (disk) and at least 2 to 4 GB of memory (RAM). Furthermore, the bitcoin software running on the full node needs to be monitored, maintained, and upgraded frequently. Any downtime caused by a lack of maintenance or lack of resources will hurt the miner\u2019s profitability. For many miners, the ability to mine without running a full node is another big benefit of joining a managed pool."}
{"prompt": "Mining and Consensus", "completion": "Pool miners connect to the pool server using a mining protocol such as Stratum (STM) or GetBlockTemplate (GBT). An older standard called GetWork (GWK) has been mostly obsolete since late 2012, because it does not easily support mining at hash rates above 4 GH/s. Both the STM and GBT protocols create block templates that contain a template of a candidate block header. The pool server constructs a candidate block by aggregating transactions, adding a coinbase transaction (with extra nonce space), calculating the merkle root, and linking to the previous block hash. The header of the candidate block is then sent to each of the pool miners as a template. Each pool miner then mines using the block template, at a higher (easier) target than the bitcoin network target, and sends any successful results back to the pool server to earn shares."}
{"prompt": "Mining and Consensus", "completion": "Managed pools create the possibility of cheating by the pool operator, who might direct the pool effort to double-spend transactions or invalidate blocks (see Consensus Attacks). Furthermore, centralized pool servers represent a single-point-of-failure. If the pool server is down or is slowed by a denial-of-service attack, the pool miners cannot mine. In 2011, to resolve these issues of centralization, a new pool mining method was proposed and implemented: P2Pool, a peer-to-peer mining pool without a central operator."}
{"prompt": "Mining and Consensus", "completion": "P2Pool works by decentralizing the functions of the pool server, implementing a parallel blockchain-like system called a share chain. A share chain is a blockchain running at a lower difficulty than the bitcoin blockchain. The share chain allows pool miners to collaborate in a decentralized pool by mining shares on the share chain at a rate of one share block every 30 seconds. Each of the blocks on the share chain records a proportionate share reward for the pool miners who contribute work, carrying the shares forward from the previous share block. When one of the share blocks also achieves the bitcoin network target, it is propagated and included on the bitcoin blockchain, rewarding all the pool miners who contributed to all the shares that preceded the winning share block. Essentially, instead of a pool server keeping track of pool miner shares and rewards, the share chain allows all pool miners to keep track of all shares using a decentralized consensus mechanism like bitcoin\u2019s blockchain consensus mechanism."}
{"prompt": "Mining and Consensus", "completion": "P2Pool mining is more complex than pool mining because it requires that the pool miners run a dedicated computer with enough disk space, memory, and internet bandwidth to support a full bitcoin node and the P2Pool node software. P2Pool miners connect their mining hardware to their local P2Pool node, which simulates the functions of a pool server by sending block templates to the mining hardware. On P2Pool, individual pool miners construct their own candidate blocks, aggregating transactions much like solo miners, but then mine collaboratively on the share chain. P2Pool is a hybrid approach that has the advantage of much more granular payouts than solo mining, but without giving too much control to a pool operator like managed pools."}
{"prompt": "Mining and Consensus", "completion": "Even though P2Pool reduces the concentration of power by mining pool operators, it is conceivably vulnerable to 51% attacks against the share chain itself. A much broader adoption of P2Pool does not solve the 51% attack problem for bitcoin itself. Rather, P2Pool makes bitcoin more robust overall, as part of a diversified mining ecosystem."}
{"prompt": "Mining and Consensus", "completion": "Bitcoin\u2019s consensus mechanism is, at least theoretically, vulnerable to attack by miners (or pools) that attempt to use their hashing power to dishonest or destructive ends. As we saw, the consensus mechanism depends on having a majority of the miners acting honestly out of self-interest. However, if a miner or group of miners can achieve a significant share of the mining power, they can attack the consensus mechanism so as to disrupt the security and availability of the bitcoin network."}
{"prompt": "Mining and Consensus", "completion": "It is important to note that consensus attacks can only affect future consensus, or at best, the most recent past (tens of blocks). Bitcoin\u2019s ledger becomes more and more immutable as time passes. While in theory, a fork can be achieved at any depth, in practice, the computing power needed to force a very deep fork is immense, making old blocks practically immutable. Consensus attacks also do not affect the security of the private keys and signing algorithm (ECDSA). A consensus attack cannot steal bitcoin, spend bitcoin without signatures, redirect bitcoin, or otherwise change past transactions or ownership records. Consensus attacks can only affect the most recent blocks and cause denial-of-service disruptions on the creation of future blocks."}
{"prompt": "Mining and Consensus", "completion": "One attack scenario against the consensus mechanism is called the \"51% attack.\" In this scenario a group of miners, controlling a majority (51%) of the total network\u2019s hashing power, collude to attack bitcoin. With the ability to mine the majority of the blocks, the attacking miners can cause deliberate \"forks\" in the blockchain and double-spend transactions or execute denial-of-service attacks against specific transactions or addresses. A fork/double-spend attack is where the attacker causes previously confirmed blocks to be invalidated by forking below them and re-converging on an alternate chain. With sufficient power, an attacker can invalidate six or more blocks in a row, causing transactions that were considered immutable (six confirmations) to be invalidated. Note that a double-spend can only be done on the attacker\u2019s own transactions, for which the attacker can produce a valid signature. Double-spending one\u2019s own transactions is profitable if by invalidating a transaction the attacker can get an irreversible exchange payment or product without paying for it."}
{"prompt": "Mining and Consensus", "completion": "Let\u2019s examine a practical example of a 51% attack. In the first chapter, we looked at a transaction between Alice and Bob for a cup of coffee. Bob, the cafe owner, is willing to accept payment for cups of coffee without waiting for confirmation (mining in a block), because the risk of a double-spend on a cup of coffee is low in comparison to the convenience of rapid customer service. This is similar to the practice of coffee shops that accept credit card payments without a signature for amounts below $25, because the risk of a credit-card chargeback is low while the cost of delaying the transaction to obtain a signature is comparatively larger. In contrast, selling a more expensive item for bitcoin runs the risk of a double-spend attack, where the buyer broadcasts a competing transaction that spends the same inputs (UTXO) and cancels the payment to the merchant. A double-spend attack can happen in two ways: either before a transaction is confirmed, or if the attacker takes advantage of a blockchain fork to undo several blocks. A 51% attack allows attackers to double-spend their own transactions in the new chain, thus undoing the corresponding transaction in the old chain."}
{"prompt": "Mining and Consensus", "completion": "In our example, malicious attacker Mallory goes to Carol\u2019s gallery and purchases a beautiful triptych painting depicting Satoshi Nakamoto as Prometheus. Carol sells \"The Great Fire\" paintings for $250,000 in bitcoin to Mallory. Instead of waiting for six or more confirmations on the transaction, Carol wraps and hands the paintings to Mallory after only one confirmation. Mallory works with an accomplice, Paul, who operates a large mining pool, and the accomplice launches a 51% attack as soon as Mallory\u2019s transaction is included in a block. Paul directs the mining pool to remine the same block height as the block containing Mallory\u2019s transaction, replacing Mallory\u2019s payment to Carol with a transaction that double-spends the same input as Mallory\u2019s payment. The double-spend transaction consumes the same UTXO and pays it back to Mallory\u2019s wallet, instead of paying it to Carol, essentially allowing Mallory to keep the bitcoin. Paul then directs the mining pool to mine an additional block, so as to make the chain containing the double-spend transaction longer than the original chain (causing a fork below the block containing Mallory\u2019s transaction). When the blockchain fork resolves in favor of the new (longer) chain, the double-spent transaction replaces the original payment to Carol. Carol is now missing the three paintings and also has no bitcoin payment. Throughout all this activity, Paul\u2019s mining pool participants might remain blissfully unaware of the double-spend attempt, because they mine with automated miners and cannot monitor every transaction or block."}
{"prompt": "Mining and Consensus", "completion": "To protect against this kind of attack, a merchant selling large-value items must wait at least six confirmations before giving the product to the buyer. Alternatively, the merchant should use an escrow multisignature account, again waiting for several confirmations after the escrow account is funded. The more confirmations elapse, the harder it becomes to invalidate a transaction with a 51% attack. For high-value items, payment by bitcoin will still be convenient and efficient even if the buyer has to wait 24 hours for delivery, which would correspond to approximately 144 confirmations."}
{"prompt": "Mining and Consensus", "completion": "In addition to a double-spend attack, the other scenario for a consensus attack is to deny service to specific bitcoin participants (specific bitcoin addresses). An attacker with a majority of the mining power can simply ignore specific transactions. If they are included in a block mined by another miner, the attacker can deliberately fork and remine that block, again excluding the specific transactions. This type of attack can result in a sustained denial-of-service against a specific address or set of addresses for as long as the attacker controls the majority of the mining power."}
{"prompt": "Mining and Consensus", "completion": "Despite its name, the 51% attack scenario doesn\u2019t actually require 51% of the hashing power. In fact, such an attack can be attempted with a smaller percentage of the hashing power. The 51% threshold is simply the level at which such an attack is almost guaranteed to succeed. A consensus attack is essentially a tug-of-war for the next block and the \"stronger\" group is more likely to win. With less hashing power, the probability of success is reduced, because other miners control the generation of some blocks with their \"honest\" mining power. One way to look at it is that the more hashing power an attacker has, the longer the fork he can deliberately create, the more blocks in the recent past he can invalidate, or the more blocks in the future he can control. Security research groups have used statistical modeling to claim that various types of consensus attacks are possible with as little as 30% of the hashing power."}
{"prompt": "Mining and Consensus", "completion": "The massive increase of total hashing power has arguably made bitcoin impervious to attacks by a single miner. There is no possible way for a solo miner to control more than a small percentage of the total mining power. However, the centralization of control caused by mining pools has introduced the risk of for-profit attacks by a mining pool operator. The pool operator in a managed pool controls the construction of candidate blocks and also controls which transactions are included. This gives the pool operator the power to exclude transactions or introduce double-spend transactions. If such abuse of power is done in a limited and subtle way, a pool operator could conceivably profit from a consensus attack without being noticed."}
{"prompt": "Mining and Consensus", "completion": "Not all attackers will be motivated by profit, however. One potential attack scenario is where an attacker intends to disrupt the bitcoin network without the possibility of profiting from such disruption. A malicious attack aimed at crippling bitcoin would require enormous investment and covert planning, but could conceivably be launched by a well-funded, most likely state-sponsored, attacker. Alternatively, a well-funded attacker could attack bitcoin\u2019s consensus by simultaneously amassing mining hardware, compromising pool operators, and attacking other pools with denial-of-service. All of these scenarios are theoretically possible, but increasingly impractical as the bitcoin network\u2019s overall hashing power continues to grow exponentially."}
{"prompt": "Mining and Consensus", "completion": "Undoubtedly, a serious consensus attack would erode confidence in bitcoin in the short term, possibly causing a significant price decline. However, the bitcoin network and software are constantly evolving, so consensus attacks would be met with immediate countermeasures by the bitcoin community, making bitcoin more robust."}
{"prompt": "Mining and Consensus", "completion": "The rules of consensus determine the validity of transactions and blocks. These rules are the basis for collaboration between all bitcoin nodes and are responsible for the convergence of all local perspectives into a single consistent blockchain across the entire network."}
{"prompt": "Mining and Consensus", "completion": "While the consensus rules are invariable in the short term and must be consistent across all nodes, they are not invariable in the long term. In order to evolve and develop the bitcoin system, the rules have to change from time to time to accommodate new features, improvements, or bug fixes. Unlike traditional software development, however, upgrades to a consensus system are much more difficult and require coordination between all the participants."}
{"prompt": "Mining and Consensus", "completion": "In Blockchain Forks we looked at how the bitcoin network may briefly diverge, with two parts of the network following two different branches of the blockchain for a short time. We saw how this process occurs naturally, as part of the normal operation of the network and how the network reconverges on a common blockchain after one or more blocks are mined."}
{"prompt": "Mining and Consensus", "completion": "There is another scenario in which the network may diverge into following two chains: a change in the consensus rules. This type of fork is called a hard fork, because after the fork the network does not reconverge onto a single chain. Instead, the two chains evolve independently. Hard forks occur when part of the network is operating under a different set of consensus rules than the rest of the network. This may occur because of a bug or because of a deliberate change in the implementation of the consensus rules."}
{"prompt": "Mining and Consensus", "completion": "Hard forks can be used to change the rules of consensus, but they require coordination between all participants in the system. Any nodes that do not upgrade to the new consensus rules are unable to participate in the consensus mechanism and are forced onto a separate chain at the moment of the hard fork. Thus, a change introduced by a hard fork can be thought of as not \"forward compatible,\" in that non-upgraded systems can\u2019t process the new consensus rules after the hard fork event."}
{"prompt": "Mining and Consensus", "completion": "Let\u2019s examine the mechanics of a hard fork with a specific example."}
{"prompt": "Mining and Consensus", "completion": "A blockchain with forks shows a blockchain with two forks. At block height 4, a one-block fork occurs. This is the type of spontaneous fork we saw in Blockchain Forks. With the mining of block 5, the network reconverges on one chain and the fork is resolved."}
{"prompt": "Mining and Consensus", "completion": "Later, however, at block height 6, a hard fork occurs. Let\u2019s assume that a new implementation of the client is released with a change in the consensus rules. Starting on block height 7, miners running this new implementation will accept a new type of digital signature, let\u2019s call it a \"Smores\" signature, that is not ECDSA based. Immediately after, a node running the new implementation creates a transaction that contains a Smores signature and a miner with the updated software mines block 7b containing this transaction."}
{"prompt": "Mining and Consensus", "completion": "Any node or miner that has not upgraded the software to validate Smores signatures is now unable to process block 7b. From their perspective, both the transaction that contained a Smores signature and block 7b that contained that transaction are invalid, because they are evaluating them based upon the old consensus rules. These nodes will reject the transaction and the block and will not propagate them. Any miners that are using the old rules will not accept block 7b and will continue to mine a candidate block whose parent is block 6. In fact, miners using the old rules may not even receive block 7b if all the nodes they are connected to are also obeying the old rules and therefore not propagating the block. Eventually, they will be able to mine block 7a, which is valid under the old rules and does not contain any transactions with Smores signatures."}
{"prompt": "Mining and Consensus", "completion": "The two chains continue to diverge from this point. Miners on the \"b\" chain will continue to accept and mine transactions containing Smores signatures, while miners on the \"a\" chain will continue to ignore these transactions. Even if block 8b does not contain any Smores-signed transactions, the miners on the \"a\" chain cannot process it. To them it appears to be an orphan block, as its parent \"7b\" is not recognized as a valid block."}
{"prompt": "Mining and Consensus", "completion": "For software developers, the term \"fork\" has another meaning, adding confusion to the term \"hard fork.\" In open source software, a fork occurs when a group of developers choose to follow a different software roadmap and start a competing implementation of an open source project. We\u2019ve already discussed two circumstances that will lead to a hard fork in bitcoin: a bug in the consensus rules and a deliberate modification of the consensus rules. In the case of a deliberate change to the consensus rules, a software fork precedes the hard fork. However, for this type of hard fork to occur, a new software implementation of the consensus rules must be developed, adopted, and launched."}
{"prompt": "Mining and Consensus", "completion": "Examples of software forks that have attempted to change consensus rules include Bitcoin XT, Bitcoin Classic, and most recently Bitcoin Unlimited. However, none of these software forks have resulted in a hard fork. While a software fork is a necessary precondition, it is not in itself sufficient for a hard fork to occur. For a hard fork to occur, the competing implementation must be adopted and the new rules activated, by miners, wallets, and intermediary nodes. Conversely, there are numerous alternative implementations of Bitcoin Core, and even software forks, that do not change the consensus rules and barring a bug, can coexist on the network and interoperate without causing a hard fork."}
{"prompt": "Mining and Consensus", "completion": "Consensus rules may differ in obvious and explicit ways, in the validation of transactions or blocks. The rules may also differ in more subtle ways, in the implementation of the consensus rules as they apply to bitcoin scripts or cryptographic primitives such as digital signatures. Finally, the consensus rules may differ in unanticipated ways because of implicit consensus constraints imposed by system limitations or implementation details. An example of the latter was seen in the unanticipated hard fork during the upgrade of Bitcoin Core 0.7 to 0.8, which was caused by a limitation in the Berkeley DB implementation used to store blocks."}
{"prompt": "Mining and Consensus", "completion": "Conceptually, we can think of a hard fork as developing in four stages: a software fork, a network fork, a mining fork, and a chain fork."}
{"prompt": "Mining and Consensus", "completion": "The process begins when an alternative implementation of the client, with modified consensus rules, is created by developers."}
{"prompt": "Mining and Consensus", "completion": "When this forked implementation is deployed in the network, a certain percentage of miners, wallet users, and intermediate nodes may adopt and run this implementation. A resulting fork will depend upon whether the new consensus rules apply to blocks, transactions, or some other aspect of the system. If the new consensus rules pertain to transactions, then a wallet creating a transaction under the new rules may precipitate a network fork, followed by a hard fork when the transaction is mined into a block. If the new rules pertain to blocks, then the hard fork process will begin when a block is mined under the new rules."}
{"prompt": "Mining and Consensus", "completion": "First, the network will fork. Nodes based on the original implementation of the consensus rules will reject any transactions and blocks that are created under the new rules. Furthermore, the nodes following the original consensus rules will temporarily ban and disconnect from any nodes that are sending them these invalid transactions and blocks. As a result, the network will partition into two: old nodes will only remain connected to old nodes and new nodes will only be connected to new nodes. A single transaction or block based on the new rules will ripple through the network and result in the partition into two networks."}
{"prompt": "Mining and Consensus", "completion": "Once a miner using the new rules mines a block, the mining power and chain will also fork. New miners will mine on top of the new block, while old miners will mine a separate chain based on the old rules. The partitioned network will make it so that the miners operating on separate consensus rules won\u2019t likely receive each other\u2019s blocks, as they are connected to two separate networks."}
{"prompt": "Mining and Consensus", "completion": "As miners diverge into mining two different chains, the hashing power is split between the chains. The mining power can be split in any proportion between the two chains. The new rules may only be followed by a minority, or by the vast majority of the mining power."}
{"prompt": "Mining and Consensus", "completion": "Let\u2019s assume, for example, an 80%\u201320% split, with the majority of the mining power using the new consensus rules. Let\u2019s also assume that the fork occurs immediately after a retargeting period."}
{"prompt": "Mining and Consensus", "completion": "The two chains would each inherit the difficulty from the retargeting period. The new consensus rules would have 80% of the previously available mining power committed to them. From the perspective of this chain, the mining power has suddenly declined by 20% vis-a-vis the previous period. Blocks will be found on average every 12.5 minutes, representing the 20% decline in mining power available to extend this chain. This rate of block issuance will continue (barring any changes in hashing power) until 2016 blocks are mined, which will take approximately 25,200 minutes (at 12.5 minutes per block), or 17.5 days. After 17.5 days, a retarget will occur and the difficulty will adjust (reduced by 20%) to produce 10-minute blocks again, based on the reduced amount of hashing power in this chain."}
{"prompt": "Mining and Consensus", "completion": "The minority chain, mining under the old rules with only 20% of the hashing power, will face a much more difficult task. On this chain, blocks will now be mined every 50 minutes on average. The difficulty will not be adjusted for 2016 blocks, which will take 100,800 minutes, or approximately 10 weeks to mine. Assuming a fixed capacity per block, this will also result in a reduction of transaction capacity by a factor of 5, as there are fewer blocks per hour available to record transactions."}
{"prompt": "Mining and Consensus", "completion": "This is the dawn of consensus software development. Just as open source development changed both the methods and products of software and created new methodologies, new tools, and new communities in its wake, consensus software development also represents a new frontier in computer science. Out of the debates, experiments, and tribulations of the bitcoin development roadmap, we will see new development tools, practices, methodologies, and communities emerge."}
{"prompt": "Mining and Consensus", "completion": "Hard forks are seen as risky because they force a minority to either upgrade or remain on a minority chain. The risk of splitting the entire system into two competing systems is seen by many as an unacceptable risk. As a result, many developers are reluctant to use the hard fork mechanism to implement upgrades to the consensus rules, unless there is near-unanimous support from the entire network. Any hard fork proposals that do not have near-unanimous support are considered too \"contentious\" to attempt without risking a partition of the system."}
{"prompt": "Mining and Consensus", "completion": "The issue of hard forks is highly controversial in the bitcoin development community, especially as it relates to any proposed changes to the consensus rules controlling the maximum block size limit. Some developers are opposed to any form of hard fork, seeing it as too risky. Others see the mechanism of hard fork as an essential tool for upgrading the consensus rules in a way that avoids \"technical debt\" and provides a clean break with the past. Finally, some developers see hard forks as a mechanism that should be used rarely, with a lot of advance planning and only under near-unanimous consensus."}
{"prompt": "Mining and Consensus", "completion": "Already we have seen the emergence of new methodologies to address the risks of hard forks. In the next section, we will look at soft forks, and the BIP-34 and BIP-9 methods for signaling and activation of consensus modifications."}
{"prompt": "Mining and Consensus", "completion": "Not all consensus rule changes cause a hard fork. Only consensus changes that are forward-incompatible cause a fork. If the change is implemented in such a way that a non-upgraded client still sees the transaction or block as valid under the previous rules, the change can happen without a fork."}
{"prompt": "Mining and Consensus", "completion": "The term soft fork was introduced to distinguish this upgrade method from a \"hard fork.\" In practice, a soft fork is not a fork at all. A soft fork is a forward-compatible change to the consensus rules that allows non-upgraded clients to continue to operate in consensus with the new rules."}
{"prompt": "Mining and Consensus", "completion": "One aspect of soft forks that is not immediately obvious is that soft fork upgrades can only be used to constrain the consensus rules, not to expand them. In order to be forward compatible, transactions and blocks created under the new rules must be valid under the old rules too, but not vice versa. The new rules can only limit what is valid; otherwise, they will trigger a hard fork when rejected under the old rules."}
{"prompt": "Mining and Consensus", "completion": "Soft forks can be implemented in a number of ways\u2014the term does not specify a particular method, rather a set of methods that all have one thing in common: they don\u2019t require all nodes to upgrade or force non-upgraded nodes out of consensus."}
{"prompt": "Mining and Consensus", "completion": "A number of soft forks have been implemented in bitcoin, based on the re-interpretation of NOP opcodes. Bitcoin Script had ten opcodes reserved for future use, NOP1 through NOP10. Under the consensus rules, the presence of these opcodes in a script is interpreted as a null-potent operator, meaning they have no effect. Execution continues after the NOP opcode as if it wasn\u2019t there."}
{"prompt": "Mining and Consensus", "completion": "A soft fork therefore can modify the semantics of a NOP code to give it new meaning. For example, BIP-65 (CHECKLOCKTIMEVERIFY) reinterpreted the NOP2 opcode. Clients implementing BIP-65 interpret NOP2 as OP_CHECKLOCKTIMEVERIFY and impose an absolute locktime consensus rule on UTXO that contain this opcode in their locking scripts. This change is a soft fork because a transaction that is valid under BIP-65 is also valid on any client that is not implementing (ignorant of) BIP-65. To the old clients, the script contains an NOP code, which is ignored."}
{"prompt": "Mining and Consensus", "completion": "The reinterpretation of NOP opcodes was both planned for and an obvious mechanism for consensus upgrades. Recently, however, another soft fork mechanism was introduced that does not rely on NOP opcodes for a very specific type of consensus change. This is examined in more detail in [segwit]. Segwit is an architectural change to the structure of a transaction, which moves the unlocking script (witness) from inside the transaction to an external data structure (segregating it). Segwit was initially envisioned as a hard fork upgrade, as it modified a fundamental structure (transaction). In November 2015, a developer working on Bitcoin Core proposed a mechanism by which segwit could be introduced as a soft fork. The mechanism used for this is a modification of the locking script of UTXO created under segwit rules, such that non-upgraded clients see the locking script as redeemable with any unlocking script whatsoever. As a result, segwit can be introduced without requiring every node to upgrade or split from the chain: a soft fork."}
{"prompt": "Mining and Consensus", "completion": "It is likely that there are other, yet to be discovered, mechanisms by which upgrades can be made in a forward-compatible way as a soft fork."}
{"prompt": "Mining and Consensus", "completion": "Soft forks based on the NOP opcodes are relatively uncontroversial. The NOP opcodes were placed in Bitcoin Script with the explicit goal of allowing non-disruptive upgrades."}
{"prompt": "Mining and Consensus", "completion": "However, many developers are concerned that other methods of soft fork upgrades make unacceptable tradeoffs. Common criticisms of soft fork changes include:"}
{"prompt": "Mining and Consensus", "completion": "Because soft forks are more technically complex than a hard fork upgrade, they introduce technical debt, a term that refers to increasing the future cost of code maintenance because of design tradeoffs made in the past. Code complexity in turn increases the likelihood of bugs and security vulnerabilities."}
{"prompt": "Mining and Consensus", "completion": "Non-upgraded clients see transactions as valid, without evaluating the modified consensus rules. In effect, the non-upgraded clients are not validating using the full range of consensus rules, as they are blind to the new rules. This applies to NOP-based upgrades, as well as other soft fork upgrades."}
{"prompt": "Mining and Consensus", "completion": "Because soft forks create transactions with additional consensus constraints, they become irreversible upgrades in practice. If a soft fork upgrade were to be reversed after being activated, any transactions created under the new rules could result in a loss of funds under the old rules. For example, if a CLTV transaction is evaluated under the old rules, there is no timelock constraint and it can be spent at any time. Therefore, critics contend that a failed soft fork that had to be reversed because of a bug would almost certainly lead to loss of funds."}
{"prompt": "Mining and Consensus", "completion": "Since soft forks allow non-upgraded clients to continue to operate within consensus, the mechanism for \"activating\" a soft fork is through miners signaling readiness: a majority of miners must agree that they are ready and willing to enforce the new consensus rules. To coordinate their actions, there is a signaling mechanism that allows them to show their support for a consensus rule change. This mechanism was introduced with the activation of BIP-34 in March 2013 and replaced by the activation of BIP-9 in July 2016."}
{"prompt": "Mining and Consensus", "completion": "The first implementation, in BIP-34, used the block version field to allow miners to signal readiness for a specific consensus rule change. Prior to BIP-34, the block version was set to \"1\" by convention not enforced by consensus."}
{"prompt": "Mining and Consensus", "completion": "BIP-34 defined a consensus rule change that required the coinbase data field of a coinbase transaction input to contain the block height. Prior to BIP-34, the coinbase data could contain any arbitrary data the miners chose to include. After activation of BIP-34, valid blocks had to contain a specific block-height at the beginning of the coinbase data and be identified with a version number greater than or equal to \"2.\""}
{"prompt": "Mining and Consensus", "completion": "To signal the change and activation of BIP-34, miners set the block version to \"2,\" instead of \"1.\" This did not immediately make version \"1\" blocks invalid. Once activated, version \"1\" blocks would become invalid and all version \"2\" blocks would be required to contain the block height in the coinbase to be valid."}
{"prompt": "Mining and Consensus", "completion": "BIP-34 defined a two-step activation mechanism, based on a rolling window of 1000 blocks. A miner would signal his or her individual readiness for BIP-34 by constructing blocks with \"2\" as the version number. Strictly speaking, these blocks did not yet have to comply with the new consensus rule of including the block-height in the coinbase transaction because the consensus rule had not yet been activated. The consensus rules activated in two steps:"}
{"prompt": "Mining and Consensus", "completion": "If 75% (750 of the most recent 1000 blocks) are marked with version \"2,\" then version \"2\" blocks must contain block height in the coinbase transaction or they are rejected as invalid. Version \"1\" blocks are still accepted by the network and do not need to contain block-height. The old and new consensus rules coexist during this period."}
{"prompt": "Mining and Consensus", "completion": "When 95% (950 of the most recent 1000 blocks) are version \"2,\" version \"1\" blocks are no longer considered valid. Version \"2\" blocks are valid only if they contain the block-height in the coinbase (as per the previous threshold). Thereafter, all blocks must comply with the new consensus rules, and all valid blocks must contain block-height in the coinbase transaction."}
{"prompt": "Mining and Consensus", "completion": "After successful signaling and activation under the BIP-34 rules, this mechanism was used twice more to activate soft forks:"}
{"prompt": "Mining and Consensus", "completion": "BIP-66 Strict DER Encoding of Signatures was activated by BIP-34 style signaling with a block version \"3\" and invalidating version \"2\" blocks."}
{"prompt": "Mining and Consensus", "completion": "BIP-65 CHECKLOCKTIMEVERIFY was activated by BIP-34 style signaling with a block version \"4\" and invalidating version \"3\" blocks."}
{"prompt": "Mining and Consensus", "completion": "After the activation of BIP-65, the signaling and activation mechanism of BIP-34 was retired and replaced with the BIP-9 signaling mechanism described next."}
{"prompt": "Mining and Consensus", "completion": "The standard is defined in BIP-34 (Block v2, Height in Coinbase)."}
{"prompt": "Mining and Consensus", "completion": "The mechanism used by BIP-34, BIP-66, and BIP-65 was successful in activating three soft forks. However, it was replaced because it had several limitations:"}
{"prompt": "Mining and Consensus", "completion": "By using the integer value of the block version, only one soft fork could be activated at a time, so it required coordination between soft fork proposals and agreement on their prioritization and sequencing."}
{"prompt": "Mining and Consensus", "completion": "Furthermore, because the block version was incremented, the mechanism didn\u2019t offer a straightforward way to reject a change and then propose a different one. If old clients were still running, they could mistake signaling for a new change as signaling for the previously rejected change."}
{"prompt": "Mining and Consensus", "completion": "Each new change irrevocably reduced the available block versions for future changes."}
{"prompt": "Mining and Consensus", "completion": "BIP-9 was proposed to overcome these challenges and improve the rate and ease of implementing future changes."}
{"prompt": "Mining and Consensus", "completion": "BIP-9 interprets the block version as a bit field instead of an integer. Because the block version was originally used as an integer, versions 1 through 4, only 29 bits remain available to be used as a bit field. This leaves 29 bits that can be used to independently and simultaneously signal readiness on 29 different proposals."}
{"prompt": "Mining and Consensus", "completion": "BIP-9 also sets a maximum time for signaling and activation. This way miners don\u2019t need to signal forever. If a proposal is not activated within the TIMEOUT period (defined in the proposal), the proposal is considered rejected. The proposal may be resubmitted for signaling with a different bit, renewing the activation period."}
{"prompt": "Mining and Consensus", "completion": "Furthermore, after the TIMEOUT has passed and a feature has been activated or rejected, the signaling bit can be reused for another feature without confusion. Therefore, up to 29 changes can be signaled in parallel and after TIMEOUT the bits can be \"recycled\" to propose new changes."}
{"prompt": "Mining and Consensus", "completion": "While signaling bits can be reused or recycled, as long as the voting period does not overlap, the authors of BIP-9 recommend that bits are reused only when necessary; unexpected behavior could occur due to bugs in older software. In short, we should not expect to see reuse until all 29 bits have been used once."}
{"prompt": "Mining and Consensus", "completion": "Proposed changes are identified by a data structure that contains the following fields:"}
{"prompt": "Mining and Consensus", "completion": "A short description used to distinguish between proposals. Most often the BIP describing the proposal, as \"bipN,\" where N is the BIP number."}
{"prompt": "Mining and Consensus", "completion": "0 through 28, the bit in the block version that miners use to signal approval for this proposal."}
{"prompt": "Mining and Consensus", "completion": "The time (based on Median Time Past, or MTP) that signaling starts after which the bit\u2019s value is interpreted as signaling readiness for the proposal."}
{"prompt": "Mining and Consensus", "completion": "The time (based on MTP) after which the change is considered rejected if it has not reached the activation threshold."}
{"prompt": "Mining and Consensus", "completion": "Unlike BIP-34, BIP-9 counts activation signaling in whole intervals based on the difficulty retarget period of 2016 blocks. For every retarget period, if the sum of blocks signaling for a proposal exceeds 95% (1916 of 2016), the proposal will be activated one retarget period later."}
{"prompt": "Mining and Consensus", "completion": "BIP-9 offers a proposal state diagram to illustrate the various stages and transitions for a proposal, as shown in BIP-9 state transition diagram."}
{"prompt": "Mining and Consensus", "completion": "Proposals start in the DEFINED state, once their parameters are known (defined) in the bitcoin software. For blocks with MTP after the start time, the proposal state transitions to STARTED. If the voting threshold is exceeded within a retarget period and the timeout has not been exceeded, the proposal state transitions to LOCKED_IN. One retarget period later, the proposal becomes ACTIVE. Proposals remain in the ACTIVE state perpetually once they reach that state. If the timeout elapses before the voting threshold has been reached, the proposal state changes to FAILED, indicating a rejected proposal. FAILED proposals remain in that state perpetually."}
{"prompt": "Mining and Consensus", "completion": "BIP-9 was first implemented for the activation of CHECKSEQUENCEVERIFY and associated BIPs (68, 112, 113). The proposal named \"csv\" was activated successfully in July of 2016."}
{"prompt": "Mining and Consensus", "completion": "The standard is defined in BIP-9 (Version bits with timeout and delay)."}
{"prompt": "Mining and Consensus", "completion": "Consensus software continues to evolve and there is much discussion on the various mechanisms for changing the consensus rules. By its very nature, bitcoin sets a very high bar on coordination and consensus for changes. As a decentralized system, it has no \"authority\" that can impose its will on the participants of the network. Power is diffused between multiple constituencies such as miners, core developers, wallet developers, exchanges, merchants, and end users. Decisions cannot be made unilaterally by any of these constituencies. For example, while miners can theoretically change the rules by simple majority (51%), they are constrained by the consent of the other constituencies. If they act unilaterally, the rest of the participants may simply refuse to follow them, keeping the economic activity on a minority chain. Without economic activity (transactions, merchants, wallets, exchanges), the miners will be mining a worthless coin with empty blocks. This diffusion of power means that all the participants must coordinate, or no changes can be made. Status quo is the stable state of this system with only a few changes possible if there is strong consensus by a very large majority. The 95% threshold for soft forks is reflective of this reality."}
{"prompt": "Mining and Consensus", "completion": "It is important to recognize that there is no perfect solution for consensus development. Both hard forks and soft forks involve tradeoffs. For some types of changes, soft forks may be a better choice; for others, hard forks may be a better choice. There is no perfect choice; both carry risks. The one constant characteristic of consensus software development is that change is difficult and consensus forces compromise."}
{"prompt": "Mining and Consensus", "completion": "Some see this as a weakness of consensus systems. In time, you may come to see it as I do, as the system\u2019s greatest strength."}
{"prompt": "Bitcoin Security", "completion": "Securing bitcoin is challenging because bitcoin is not an abstract reference to value, like a balance in a bank account. Bitcoin is very much like digital cash or gold. You\u2019ve probably heard the expression, \"Possession is nine-tenths of the law.\" Well, in bitcoin, possession is ten-tenths of the law. Possession of the keys to unlock the bitcoin is equivalent to possession of cash or a chunk of precious metal. You can lose it, misplace it, have it stolen, or accidentally give the wrong amount to someone. In every one of these cases, users have no recourse, just as if they dropped cash on a public sidewalk."}
{"prompt": "Bitcoin Security", "completion": "However, bitcoin has capabilities that cash, gold, and bank accounts do not. A bitcoin wallet, containing your keys, can be backed up like any file. It can be stored in multiple copies, even printed on paper for hard-copy backup. You can\u2019t \"back up\" cash, gold, or bank accounts. Bitcoin is different enough from anything that has come before that we need to think about bitcoin security in a novel way too."}
{"prompt": "Bitcoin Security", "completion": "The core principle in bitcoin is decentralization and it has important implications for security. A centralized model, such as a traditional bank or payment network, depends on access control and vetting to keep bad actors out of the system. By comparison, a decentralized system like bitcoin pushes the responsibility and control to the users. Because security of the network is based on Proof-of-Work, not access control, the network can be open and no encryption is required for bitcoin traffic."}
{"prompt": "Bitcoin Security", "completion": "On a traditional payment network, such as a credit card system, the payment is open-ended because it contains the user\u2019s private identifier (the credit card number). After the initial charge, anyone with access to the identifier can \"pull\" funds and charge the owner again and again. Thus, the payment network has to be secured end-to-end with encryption and must ensure that no eavesdroppers or intermediaries can compromise the payment traffic, in transit or when it is stored (at rest). If a bad actor gains access to the system, he can compromise current transactions and payment tokens that can be used to create new transactions. Worse, when customer data is compromised, the customers are exposed to identity theft and must take action to prevent fraudulent use of the compromised accounts."}
{"prompt": "Bitcoin Security", "completion": "Bitcoin is dramatically different. A bitcoin transaction authorizes only a specific value to a specific recipient and cannot be forged or modified. It does not reveal any private information, such as the identities of the parties, and cannot be used to authorize additional payments. Therefore, a bitcoin payment network does not need to be encrypted or protected from eavesdropping. In fact, you can broadcast bitcoin transactions over an open public channel, such as unsecured WiFi or Bluetooth, with no loss of security."}
{"prompt": "Bitcoin Security", "completion": "Bitcoin\u2019s decentralized security model puts a lot of power in the hands of the users. With that power comes responsibility for maintaining the secrecy of the keys. For most users that is not easy to do, especially on general-purpose computing devices such as internet-connected smartphones or laptops. Although bitcoin\u2019s decentralized model prevents the type of mass compromise seen with credit cards, many users are not able to adequately secure their keys and get hacked, one by one."}
{"prompt": "Bitcoin Security", "completion": "The most important principle for bitcoin developers is decentralization. Most developers will be familiar with centralized security models and might be tempted to apply these models to their bitcoin applications, with disastrous results."}
{"prompt": "Bitcoin Security", "completion": "Bitcoin\u2019s security relies on decentralized control over keys and on independent transaction validation by miners. If you want to leverage bitcoin\u2019s security, you need to ensure that you remain within the bitcoin security model. In simple terms: don\u2019t take control of keys away from users and don\u2019t take transactions off the blockchain."}
{"prompt": "Bitcoin Security", "completion": "For example, many early bitcoin exchanges concentrated all user funds in a single \"hot\" wallet with keys stored on a single server. Such a design removes control from users and centralizes control over keys in a single system. Many such systems have been hacked, with disastrous consequences for their customers."}
{"prompt": "Bitcoin Security", "completion": "Another common mistake is to take transactions \"off blockchain\" in a misguided effort to reduce transaction fees or accelerate transaction processing. An \"off blockchain\" system will record transactions on an internal, centralized ledger and only occasionally synchronize them to the bitcoin blockchain. This practice, again, substitutes decentralized bitcoin security with a proprietary and centralized approach. When transactions are off blockchain, improperly secured centralized ledgers can be falsified, diverting funds and depleting reserves, unnoticed."}
{"prompt": "Bitcoin Security", "completion": "Unless you are prepared to invest heavily in operational security, multiple layers of access control, and audits (as the traditional banks do) you should think very carefully before taking funds outside of bitcoin\u2019s decentralized security context. Even if you have the funds and discipline to implement a robust security model, such a design merely replicates the fragile model of traditional financial networks, plagued by identity theft, corruption, and embezzlement. To take advantage of bitcoin\u2019s unique decentralized security model, you have to avoid the temptation of centralized architectures that might feel familiar but ultimately subvert bitcoin\u2019s security."}
{"prompt": "Bitcoin Security", "completion": "Traditional security architecture is based upon a concept called the root of trust, which is a trusted core used as the foundation for the security of the overall system or application. Security architecture is developed around the root of trust as a series of concentric circles, like layers in an onion, extending trust outward from the center. Each layer builds upon the more-trusted inner layer using access controls, digital signatures, encryption, and other security primitives. As software systems become more complex, they are more likely to contain bugs, which make them vulnerable to security compromise. As a result, the more complex a software system becomes, the harder it is to secure. The root of trust concept ensures that most of the trust is placed within the least complex part of the system, and therefore least vulnerable, parts of the system, while more complex software is layered around it. This security architecture is repeated at different scales, first establishing a root of trust within the hardware of a single system, then extending that root of trust through the operating system to higher-level system services, and finally across many servers layered in concentric circles of diminishing trust."}
{"prompt": "Bitcoin Security", "completion": "Bitcoin security architecture is different. In bitcoin, the consensus system creates a trusted public ledger that is completely decentralized. A correctly validated blockchain uses the genesis block as the root of trust, building a chain of trust up to the current block. Bitcoin systems can and should use the blockchain as their root of trust. When designing a complex bitcoin application that consists of services on many different systems, you should carefully examine the security architecture in order to ascertain where trust is being placed. Ultimately, the only thing that should be explicitly trusted is a fully validated blockchain. If your application explicitly or implicitly vests trust in anything but the blockchain, that should be a source of concern because it introduces vulnerability. A good method to evaluate the security architecture of your application is to consider each individual component and evaluate a hypothetical scenario where that component is completely compromised and under the control of a malicious actor. Take each component of your application, in turn, and assess the impacts on the overall security if that component is compromised. If your application is no longer secure when components are compromised, that shows you have misplaced trust in those components. A bitcoin application without vulnerabilities should be vulnerable only to a compromise of the bitcoin consensus mechanism, meaning that its root of trust is based on the strongest part of the bitcoin security architecture."}
{"prompt": "Bitcoin Security", "completion": "The numerous examples of hacked bitcoin exchanges serve to underscore this point because their security architecture and design fails even under the most casual scrutiny. These centralized implementations had invested trust explicitly in numerous components outside the bitcoin blockchain, such as hot wallets, centralized ledger databases, vulnerable encryption keys, and similar schemes."}
{"prompt": "Bitcoin Security", "completion": "Humans have used physical security controls for thousands of years. By comparison, our experience with digital security is less than 50 years old. Modern general-purpose operating systems are not very secure and not particularly suited to storing digital money. Our computers are constantly exposed to external threats via always-on internet connections. They run thousands of software components from hundreds of authors, often with unconstrained access to the user\u2019s files. A single piece of rogue software, among the many thousands installed on your computer, can compromise your keyboard and files, stealing any bitcoin stored in wallet applications. The level of computer maintenance required to keep a computer virus-free and trojan-free is beyond the skill level of all but a tiny minority of computer users."}
{"prompt": "Bitcoin Security", "completion": "Despite decades of research and advancements in information security, digital assets are still woefully vulnerable to a determined adversary. Even the most highly protected and restricted systems, in financial services companies, intelligence agencies, and defense contractors, are frequently breached. Bitcoin creates digital assets that have intrinsic value and can be stolen and diverted to new owners instantly and irrevocably. This creates a massive incentive for hackers. Until now, hackers had to convert identity information or account tokens\u2014such as credit cards and bank accounts\u2014into value after compromising them. Despite the difficulty of fencing and laundering financial information, we have seen ever-escalating thefts. Bitcoin escalates this problem because it doesn\u2019t need to be fenced or laundered; it is intrinsic value within a digital asset."}
{"prompt": "Bitcoin Security", "completion": "Fortunately, bitcoin also creates the incentives to improve computer security. Whereas previously the risk of computer compromise was vague and indirect, bitcoin makes these risks clear and obvious. Holding bitcoin on a computer serves to focus the user\u2019s mind on the need for improved computer security. As a direct result of the proliferation and increased adoption of bitcoin and other digital currencies, we have seen an escalation in both hacking techniques and security solutions. In simple terms, hackers now have a very juicy target and users have a clear incentive to defend themselves."}
{"prompt": "Bitcoin Security", "completion": "Over the past three years, as a direct result of bitcoin adoption, we have seen tremendous innovation in the realm of information security in the form of hardware encryption, key storage and hardware wallets, multisignature technology, and digital escrow. In the following sections we will examine various best practices for practical user security."}
{"prompt": "Bitcoin Security", "completion": "Because most users are far more comfortable with physical security than information security, a very effective method for protecting bitcoin is to convert them into physical form. Bitcoin keys are nothing more than long numbers. This means that they can be stored in a physical form, such as printed on paper or etched on a metal coin. Securing the keys then becomes as simple as physically securing the printed copy of the bitcoin keys. A set of bitcoin keys that is printed on paper is called a \"paper wallet,\" and there are many free tools that can be used to create them. I personally keep the vast majority of my bitcoin (99% or more) stored on paper wallets, encrypted with BIP-38, with multiple copies locked in safes. Keeping bitcoin offline is called cold storage and it is one of the most effective security techniques. A cold storage system is one where the keys are generated on an offline system (one never connected to the internet) and stored offline either on paper or on digital media, such as a USB memory stick."}
{"prompt": "Bitcoin Security", "completion": "In the long term, bitcoin security increasingly will take the form of hardware tamper-proof wallets. Unlike a smartphone or desktop computer, a bitcoin hardware wallet has just one purpose: to hold bitcoin securely. Without general-purpose software to compromise and with limited interfaces, hardware wallets can deliver an almost foolproof level of security to nonexpert users. I expect to see hardware wallets become the predominant method of bitcoin storage. For an example of such a hardware wallet, see the Trezor."}
{"prompt": "Bitcoin Security", "completion": "Although most users are rightly concerned about bitcoin theft, there is an even bigger risk. Data files get lost all the time. If they contain bitcoin, the loss is much more painful. In the effort to secure their bitcoin wallets, users must be very careful not to go too far and end up losing the bitcoin. In July 2011, a well-known bitcoin awareness and education project lost almost 7,000 bitcoin. In their effort to prevent theft, the owners had implemented a complex series of encrypted backups. In the end they accidentally lost the encryption keys, making the backups worthless and losing a fortune. Like hiding money by burying it in the desert, if you secure your bitcoin too well you might not be able to find it again."}
{"prompt": "Bitcoin Security", "completion": "Would you carry your entire net worth in cash in your wallet? Most people would consider that reckless, yet bitcoin users often keep all their bitcoin in a single wallet. Instead, users should spread the risk among multiple and diverse bitcoin wallets. Prudent users will keep only a small fraction, perhaps less than 5%, of their bitcoin in an online or mobile wallet as \"pocket change.\" The rest should be split between a few different storage mechanisms, such as a desktop wallet and offline (cold storage)."}
{"prompt": "Bitcoin Security", "completion": "Whenever a company or individual stores large amounts of bitcoin, they should consider using a multisignature bitcoin address. Multisignature addresses secure funds by requiring a minimum number of signatures to make a payment. The signing keys should be stored in a number of different locations and under the control of different people. In a corporate environment, for example, the keys should be generated independently and held by several company executives, to ensure no single person can compromise the funds. Multisignature addresses can also offer redundancy, where a single person holds several keys that are stored in different locations."}
{"prompt": "Bitcoin Security", "completion": "One important security consideration that is often overlooked is availability, especially in the context of incapacity or death of the key holder. Bitcoin users are told to use complex passwords and keep their keys secure and private, not sharing them with anyone. Unfortunately, that practice makes it almost impossible for the user\u2019s family to recover any funds if the user is not available to unlock them. In most cases, in fact, the families of bitcoin users might be completely unaware of the existence of the bitcoin funds."}
{"prompt": "Bitcoin Security", "completion": "If you have a lot of bitcoin, you should consider sharing access details with a trusted relative or lawyer. A more complex survivability scheme can be set up with multi-signature access and estate planning through a lawyer specialized as a \"digital asset executor.\""}
{"prompt": "Bitcoin Security", "completion": "Bitcoin is a completely new, unprecedented, and complex technology. Over time we will develop better security tools and practices that are easier to use by nonexperts. For now, bitcoin users can use many of the tips discussed here to enjoy a secure and trouble-free bitcoin experience."}
{"prompt": "Blockchain Applications", "completion": "Let\u2019s now build on our understanding of bitcoin by looking at it as an application platform. Nowadays, many people use the term \"blockchain\" to refer to any application platform that shares the design principles of bitcoin. The term is often misused and applied to many things that fail to deliver the primary features that bitcoin\u2019s blockchain delivers."}
{"prompt": "Blockchain Applications", "completion": "In this chapter we will look at the features offered by the bitcoin blockchain, as an application platform. We will consider the application building primitives, which form the building blocks of any blockchain application. We will look at several important applications that use these primitives, such as payment (state) channels and routed payment channels (Lightning Network)."}
{"prompt": "Blockchain Applications", "completion": "The bitcoin system was designed as a decentralized currency and payment system. However, most of its functionality is derived from much lower-level constructs that can be used for much broader applications. Bitcoin wasn\u2019t built with components such as accounts, users, balances, and payments. Instead, it uses a transactional scripting language with low-level cryptographic functions, as we saw in [transactions]. Just as the higher-level concepts of accounts, balances, and payments can be derived from these basic primitives, so can many other complex applications. Thus, the bitcoin blockchain can become an application platform offering trust services to applications, such as smart contracts, far surpassing the original purpose of digital currency and payments."}
{"prompt": "Blockchain Applications", "completion": "When operating correctly and over the long term, the bitcoin system offers certain guarantees, which can be used as building blocks to create applications. These include:"}
{"prompt": "Blockchain Applications", "completion": "The most fundamental guarantee of bitcoin\u2019s decentralized consensus algorithm ensures that no UTXO can be spent twice."}
{"prompt": "Blockchain Applications", "completion": "Once a transaction is recorded in the blockchain and sufficient work has been added with subsequent blocks, the transaction\u2019s data becomes immutable. Immutability is underwritten by energy, as rewriting the blockchain requires the expenditure of energy to produce Proof-of-Work. The energy required and therefore the degree of immutability increases with the amount of work committed on top of the block containing a transaction."}
{"prompt": "Blockchain Applications", "completion": "The decentralized bitcoin network propagates valid transactions regardless of the origin or content of those transactions. This means that anyone can create a valid transaction with sufficient fees and trust they will be able to transmit that transaction and have it included in the blockchain at any time."}
{"prompt": "Blockchain Applications", "completion": "The consensus rules reject any block whose timestamp is too far in the past or future. This ensures that timestamps on blocks can be trusted. The timestamp on a block implies an unspent-before guarantee for the inputs of all included transactions."}
{"prompt": "Blockchain Applications", "completion": "Digital signatures, validated in a decentralized network, offer authorization guarantees. Scripts that contain a requirement for a digital signature cannot be executed without authorization by the holder of the private key implied in the script."}
{"prompt": "Blockchain Applications", "completion": "All transactions are public and can be audited. All transactions and blocks can be linked back in an unbroken chain to the genesis block."}
{"prompt": "Blockchain Applications", "completion": "In any transaction (except the coinbase transaction) the value of inputs is equal to the value of outputs plus fees. It is not possible to create or destroy bitcoin value in a transaction. The outputs cannot exceed the inputs."}
{"prompt": "Blockchain Applications", "completion": "A valid transaction does not expire. If it is valid today, it will be valid in the near future, as long as the inputs remain unspent and the consensus rules do not change."}
{"prompt": "Blockchain Applications", "completion": "A bitcoin transaction signed with SIGHASH_ALL or parts of a transaction signed by another SIGHASH type cannot be modified without invalidating the signature, thus invalidating the transaction itself."}
{"prompt": "Blockchain Applications", "completion": "Bitcoin transactions are atomic. They are either valid and confirmed (mined) or not. Partial transactions cannot be mined and there is no interim state for a transaction. At any point in time a transaction is either mined, or not."}
{"prompt": "Blockchain Applications", "completion": "Transaction outputs are discrete and indivisible units of value. They can either be spent or unspent, in full. They cannot be divided or partially spent."}
{"prompt": "Blockchain Applications", "completion": "Multisignature constraints in scripts impose a quorum of authorization, predefined in the multisignature scheme. The M-of-N requirement is enforced by the consensus rules."}
{"prompt": "Blockchain Applications", "completion": "Any script clause containing a relative or absolute timelock can only be executed after its age exceeds the time specified."}
{"prompt": "Blockchain Applications", "completion": "The decentralized storage of the blockchain ensures that when a transaction is mined, after sufficient confirmations, it is replicated across the network and becomes durable and resilient to power loss, data loss, etc."}
{"prompt": "Blockchain Applications", "completion": "A transaction can only spend existing, validated outputs. It is not possible to create or counterfeit value."}
{"prompt": "Blockchain Applications", "completion": "In the absence of miner partitions, blocks that are recorded in the blockchain are subject to reorganization or disagreement with exponentially decreasing likelihood, based on the depth at which they are recorded. Once deeply recorded, the computation and energy required to change makes change practically infeasible."}
{"prompt": "Blockchain Applications", "completion": "A transaction can commit a data value, via OP_RETURN, representing a state transition in an external state machine."}
{"prompt": "Blockchain Applications", "completion": "Less than 21 million bitcoin will be issued, at a predictable rate."}
{"prompt": "Blockchain Applications", "completion": "The list of building blocks is not complete and more are added with each new feature introduced into bitcoin."}
{"prompt": "Blockchain Applications", "completion": "The building blocks offered by bitcoin are elements of a trust platform that can be used to compose applications. Here are some examples of applications that exist today and the building blocks they use:"}
{"prompt": "Blockchain Applications", "completion": "Immutability + Timestamp + Durability. A digital fingerprint can be committed with a transaction to the blockchain, proving that a document existed (Timestamp) at the time it was recorded. The fingerprint cannot be modified ex-post-facto (Immutability) and the proof will be stored permanently (Durability)."}
{"prompt": "Blockchain Applications", "completion": "Consistency + Atomicity + Integrity. If you sign one input and the output (Integrity) of a fundraiser transaction, others can contribute to the fundraiser but it cannot be spent (Atomicity) until the goal (output value) is funded (Consistency)."}
{"prompt": "Blockchain Applications", "completion": "Quorum of Control + Timelock + No Double Spend + Nonexpiration + Censorship Resistance + Authorization. A multisig 2-of-2 (Quorum) with a timelock (Timelock) used as the \"settlement\" transaction of a payment channel can be held (Nonexpiration) and spent at any time (Censorship Resistance) by either party (Authorization). The two parties can then create commitment transactions that double-spend (No Double-Spend) the settlement on a shorter timelock (Timelock)."}
{"prompt": "Blockchain Applications", "completion": "Counterparty is a protocol layer built on top of bitcoin. The Counterparty protocol offers the ability to create and trade virtual assets and tokens. In addition, Counterparty offers a decentralized exchange for assets. Counterparty is also implementing smart contracts, based on the Ethereum Virtual Machine (EVM)."}
{"prompt": "Blockchain Applications", "completion": "Counterparty embeds metadata in bitcoin transactions, using the OP_RETURN opcode or 1-of-N multisignature addresses that encode metadata in the place of public keys. Using these mechanisms, Counterparty implements a protocol layer encoded in bitcoin transactions. The additional protocol layer can be interpreted by applications that are Counterparty-aware, such as wallets and blockchain explorers, or any application built using the Counterparty libraries."}
{"prompt": "Blockchain Applications", "completion": "Counterparty can be used as a platform for other applications and services, in turn. For example, Tokenly is a platform built on top of Counterparty that allows content creators, artists, and companies to issue tokens that express digital ownership and can be used to rent, access, trade, or shop for content, products, and services. Other applications leveraging Counterparty include games (Spells of Genesis) and grid computing projects (Folding Coin)."}
{"prompt": "Blockchain Applications", "completion": "More details about Counterparty can be found at https://counterparty.io. The open source project can be found at https://github.com/CounterpartyXCP."}
{"prompt": "Blockchain Applications", "completion": "Payment channels are a trustless mechanism for exchanging bitcoin transactions between two parties, outside of the bitcoin blockchain. These transactions, which would be valid if settled on the bitcoin blockchain, are held off-chain instead, acting as promissory notes for eventual batch settlement. Because the transactions are not settled, they can be exchanged without the usual settlement latency, allowing extremely high transaction throughput, low (submillisecond) latency, and fine (satoshi-level) granularity."}
{"prompt": "Blockchain Applications", "completion": "Actually, the term channel is a metaphor. State channels are virtual constructs represented by the exchange of state between two parties, outside of the blockchain. There are no \"channels\" per se and the underlying data transport mechanism is not the channel. We use the term channel to represent the relationship and shared state between two parties, outside of the blockchain."}
{"prompt": "Blockchain Applications", "completion": "To further explain this concept, think of a TCP stream. From the perspective of higher-level protocols it is a \"socket\" connecting two applications across the internet. But if you look at the network traffic, a TCP stream is just a virtual channel over IP packets. Each endpoint of the TCP stream sequences and assembles IP packets to create the illusion of a stream of bytes. Underneath, it\u2019s all disconnected packets. Similarly, a payment channel is just a series of transactions. If properly sequenced and connected, they create redeemable obligations that you can trust even though you don\u2019t trust the other side of the channel."}
{"prompt": "Blockchain Applications", "completion": "In this section we will look at various forms of payment channels. First, we will examine the mechanisms used to construct a one-way (unidirectional) payment channel for a metered micropayment service, such as streaming video. Then, we will expand on this mechanism and introduce bidirectional payment channels. Finally, we will look at how bidirectional channels can be connected end-to-end to form multihop channels in a routed network, first proposed under the name Lightning Network."}
{"prompt": "Blockchain Applications", "completion": "Payment channels are part of the broader concept of a state channel, which represents an off-chain alteration of state, secured by eventual settlement in a blockchain. A payment channel is a state channel where the state being altered is the balance of a virtual currency."}
{"prompt": "Blockchain Applications", "completion": "A state channel is established between two parties, through a transaction that locks a shared state on the blockchain. This is called the funding transaction or anchor transaction. This single transaction must be transmitted to the network and mined to establish the channel. In the example of a payment channel, the locked state is the initial balance (in currency) of the channel."}
{"prompt": "Blockchain Applications", "completion": "The two parties then exchange signed transactions, called commitment transactions, that alter the initial state. These transactions are valid transactions in that they could be submitted for settlement by either party, but instead are held off-chain by each party pending the channel closure. State updates can be created as fast as each party can create, sign, and transmit a transaction to the other party. In practice this means that thousands of transactions per second can be exchanged."}
{"prompt": "Blockchain Applications", "completion": "When exchanging commitment transactions the two parties also invalidate the previous states, so that the most up-to-date commitment transaction is always the only one that can be redeemed. This prevents either party from cheating by unilaterally closing the channel with an expired prior state that is more favorable to them than the current state. We will examine the various mechanisms that can be used to invalidate prior state in the rest of this chapter."}
{"prompt": "Blockchain Applications", "completion": "Finally, the channel can be closed either cooperatively, by submitting a final settlement transaction to the blockchain, or unilaterally, by either party submitting the last commitment transaction to the blockchain. A unilateral close option is needed in case one of the parties unexpectedly disconnects. The settlement transaction represents the final state of the channel and is settled on the blockchain."}
{"prompt": "Blockchain Applications", "completion": "In the entire lifetime of the channel, only two transactions need to be submitted for mining on the blockchain: the funding and settlement transactions. In between these two states, the two parties can exchange any number of commitment transactions that are never seen by anyone else, nor submitted to the blockchain."}
{"prompt": "Blockchain Applications", "completion": "A payment channel between Bob and Alice, showing the funding, commitment, and settlement transactions illustrates a payment channel between Bob and Alice, showing the funding, commitment, and settlement transactions."}
{"prompt": "Blockchain Applications", "completion": "To explain state channels, we start with a very simple example. We demonstrate a one-way channel, meaning that value is flowing in one direction only. We will also start with the naive assumption that no one is trying to cheat, to keep things simple. Once we have the basic channel idea explained, we will then look at what it takes to make it trustless so that neither party can cheat, even if they are trying to."}
{"prompt": "Blockchain Applications", "completion": "For this example we will assume two participants: Emma and Fabian. Fabian offers a video streaming service that is billed by the second using a micropayment channel. Fabian charges 0.01 millibit (0.00001 BTC) per second of video, equivalent to 36 millibits (0.036 BTC) per hour of video. Emma is a user who purchases this streaming video service from Fabian. Emma purchases streaming video from Fabian with a payment channel, paying for each second of video shows Emma buying the video streaming service from Fabian using a payment channel."}
{"prompt": "Blockchain Applications", "completion": "In this example, Fabian and Emma are using special software that handles both the payment channel and the video streaming. Emma is running the software in her browser, Fabian is running it on a server. The software includes basic bitcoin wallet functionality and can create and sign bitcoin transactions. Both the concept and the term \"payment channel\" are completely hidden from the users. What they see is video that is paid for by the second."}
{"prompt": "Blockchain Applications", "completion": "To set up the payment channel, Emma and Fabian establish a 2-of-2 multisignature address, with each of them holding one of the keys. From Emma\u2019s perspective, the software in her browser presents a QR code with a P2SH address (starting with \"3\"), and asks her to submit a \"deposit\" for up to 1 hour of video. The address is then funded by Emma. Emma\u2019s transaction, paying to the multisignature address, is the funding or anchor transaction for the payment channel."}
{"prompt": "Blockchain Applications", "completion": "For this example, let\u2019s say that Emma funds the channel with 36 millibits (0.036 BTC). This will allow Emma to consume up to 1 hour of streaming video. The funding transaction in this case sets the maximum amount that can be transmitted in this channel, setting the channel capacity."}
{"prompt": "Blockchain Applications", "completion": "The funding transaction consumes one or more inputs from Emma\u2019s wallet, sourcing the funds. It creates one output with a value of 36 millibits paid to the multisignature 2-of-2 address controlled jointly between Emma and Fabian. It may have additional outputs for change back to Emma\u2019s wallet."}
{"prompt": "Blockchain Applications", "completion": "Once the funding transaction is confirmed, Emma can start streaming video. Emma\u2019s software creates and signs a commitment transaction that changes the channel balance to credit 0.01 millibit to Fabian\u2019s address and refund 35.99 millibits back to Emma. The transaction signed by Emma consumes the 36 millibits output created by the funding transaction and creates two outputs: one for her refund, the other for Fabian\u2019s payment. The transaction is only partially signed\u2014it requires two signatures (2-of-2), but only has Emma\u2019s signature. When Fabian\u2019s server receives this transaction, it adds the second signature (for the 2-of-2 input) and returns it to Emma together with 1 second worth of video. Now both parties have a fully signed commitment transaction that either can redeem, representing the correct up-to-date balance of the channel. Neither party broadcasts this transaction to the network."}
{"prompt": "Blockchain Applications", "completion": "In the next round, Emma\u2019s software creates and signs another commitment transaction (commitment #2) that consumes the same 2-of-2 output from the funding transaction. The second commitment transaction allocates one output of 0.02 millibits to Fabian\u2019s address and one output of 35.98 millibits back to Emma\u2019s address. This new transaction is payment for two cumulative seconds of video. Fabian\u2019s software signs and returns the second commitment transaction, together with another second of video."}
{"prompt": "Blockchain Applications", "completion": "In this way, Emma\u2019s software continues to send commitment transactions to Fabian\u2019s server in exchange for streaming video. The balance of the channel gradually accumulates in favor of Fabian, as Emma consumes more seconds of video. Let\u2019s say Emma watches 600 seconds (10 minutes) of video, creating and signing 600 commitment transactions. The last commitment transaction (#600) will have two outputs, splitting the balance of the channel, 6 millibits to Fabian and 30 millibits to Emma."}
{"prompt": "Blockchain Applications", "completion": "Finally, Emma selects \"Stop\" to stop streaming video. Either Fabian or Emma can now transmit the final state transaction for settlement. This last transaction is the settlement transaction and pays Fabian for all the video Emma consumed, refunding the remainder of the funding transaction to Emma."}
{"prompt": "Blockchain Applications", "completion": "Emma\u2019s payment channel with Fabian, showing the commitment transactions that update the balance of the channel shows the channel between Emma and Fabian and the commitment transactions that update the balance of the channel."}
{"prompt": "Blockchain Applications", "completion": "In the end, only two transactions are recorded on the blockchain: the funding transaction that established the channel and a settlement transaction that allocated the final balance correctly between the two participants."}
{"prompt": "Blockchain Applications", "completion": "The channel we just described works, but only if both parties cooperate, without any failures or attempts to cheat. Let\u2019s look at some of the scenarios that break this channel and see what is needed to fix those:"}
{"prompt": "Blockchain Applications", "completion": "Once the funding transaction happens, Emma needs Fabian\u2019s signature to get any money back. If Fabian disappears, Emma\u2019s funds are locked in a 2-of-2 and effectively lost. This channel, as constructed, leads to a loss of funds if one of the parties disconnects before there is at least one commitment transaction signed by both parties."}
{"prompt": "Blockchain Applications", "completion": "While the channel is running, Emma can take any of the commitment transactions Fabian has countersigned and transmit one to the blockchain. Why pay for 600 seconds of video, if she can transmit commitment transaction #1 and only pay for 1 second of video? The channel fails because Emma can cheat by broadcasting a prior commitment that is in her favor."}
{"prompt": "Blockchain Applications", "completion": "Both of these problems can be solved with timelocks\u2014let\u2019s look at how we could use transaction-level timelocks (nLocktime)."}
{"prompt": "Blockchain Applications", "completion": "Emma cannot risk funding a 2-of-2 multisig unless she has a guaranteed refund. To solve this problem, Emma constructs the funding and refund transactions at the same time. She signs the funding transaction but doesn\u2019t transmit it to anyone. Emma transmits only the refund transaction to Fabian and obtains his signature."}
{"prompt": "Blockchain Applications", "completion": "The refund transaction acts as the first commitment transaction and its timelock establishes the upper bound for the channel\u2019s life. In this case, Emma could set the nLocktime to 30 days or 4320 blocks into the future. All subsequent commitment transactions must have a shorter timelock, so that they can be redeemed before the refund transaction."}
{"prompt": "Blockchain Applications", "completion": "Now that Emma has a fully signed refund transaction, she can confidently transmit the signed funding transaction knowing that she can eventually, after the timelock expires, redeem the refund transaction even if Fabian disappears."}
{"prompt": "Blockchain Applications", "completion": "Every commitment transaction the parties exchange during the life of the channel will be timelocked into the future. But the delay will be slightly shorter for each commitment so the most recent commitment can be redeemed before the prior commitment it invalidates. Because of the nLockTime, neither party can successfully propagate any of the commitment transactions until their timelock expires. If all goes well, they will cooperate and close the channel gracefully with a settlement transaction, making it unnecessary to transmit an intermediate commitment transaction. If not, the most recent commitment transaction can be propagated to settle the account and invalidate all prior commitment transactions."}
{"prompt": "Blockchain Applications", "completion": "For example, if commitment transaction #1 is timelocked to 4320 blocks in the future, then commitment transaction #2 is timelocked to 4319 blocks in the future. Commitment transaction #600 can be spent 600 blocks before commitment transaction #1 becomes valid."}
{"prompt": "Blockchain Applications", "completion": "Each commitment sets a shorter timelock, allowing it to be spent before the previous commitments become valid shows each commitment transaction setting a shorter timelock, allowing it to be spent before the previous commitments become valid."}
{"prompt": "Blockchain Applications", "completion": "Each subsequent commitment transaction must have a shorter timelock so that it may be broadcast before its predecessors and before the refund transaction. The ability to broadcast a commitment earlier ensures it will be able to spend the funding output and preclude any other commitment transaction from being redeemed by spending the output. The guarantees offered by the bitcoin blockchain, preventing double-spends and enforcing timelocks, effectively allow each commitment transaction to invalidate its predecessors."}
{"prompt": "Blockchain Applications", "completion": "State channels use timelocks to enforce smart contracts across a time dimension. In this example we saw how the time dimension guarantees that the most recent commitment transaction becomes valid before any earlier commitments. Thus, the most recent commitment transaction can be transmitted, spending the inputs and invalidating prior commitment transactions. The enforcement of smart contracts with absolute timelocks protects against cheating by one of the parties. This implementation needs nothing more than absolute transaction-level timelocks (nLocktime). Next, we will see how script-level timelocks, CHECKLOCKTIMEVERIFY and CHECKSEQUENCEVERIFY, can be used to construct more flexible, useful, and sophisticated state channels."}
{"prompt": "Blockchain Applications", "completion": "The first form of unidirectional payment channel was demonstrated as a prototype video streaming application in 2015 by an Argentinian team of developers."}
{"prompt": "Blockchain Applications", "completion": "Timelocks are not the only way to invalidate prior commitment transactions. In the next sections we will see how a revocation key can be used to achieve the same result. Timelocks are effective but they have two distinct disadvantages. By establishing a maximum timelock when the channel is first opened, they limit the lifetime of the channel. Worse, they force channel implementations to strike a balance between allowing long-lived channels and forcing one of the participants to wait a very long time for a refund in case of premature closure. For example, if you allow the channel to remain open for 30 days, by setting the refund timelock to 30 days, if one of the parties disappears immediately the other party must wait 30 days for a refund. The more distant the endpoint, the more distant the refund."}
{"prompt": "Blockchain Applications", "completion": "The second problem is that since each subsequent commitment transaction must decrement the timelock, there is an explicit limit on the number of commitment transactions that can be exchanged between the parties. For example, a 30-day channel, setting a timelock of 4320 blocks into the future, can only accommodate 4320 intermediate commitment transactions before it must be closed. There is a danger in setting the timelock commitment transaction interval at 1 block. By setting the timelock interval between commitment transactions to 1 block, a developer is creating a very high burden for the channel participants who have to be vigilant, remain online and watching, and be ready to transmit the right commitment transaction at any time."}
{"prompt": "Blockchain Applications", "completion": "Now that we understand how timelocks can be used to invalidate prior commitments, we can see the difference between closing the channel cooperatively and closing it unilaterally by broadcasting a commitment transaction. All commitment transactions are timelocked, therefore broadcasting a commitment transaction will always involve waiting until the timelock has expired. But if the two parties agree on what the final balance is and know they both hold commitment transactions that will eventually make that balance a reality, they can construct a settlement transaction without a timelock representing that same balance. In a cooperative close, either party takes the most recent commitment transaction and builds a settlement transaction that is identical in every way except that it omits the timelock. Both parties can sign this settlement transaction knowing there is no way to cheat and get a more favorable balance. By cooperatively signing and transmitting the settlement transaction they can close the channel and redeem their balance immediately. Worst case, one of the parties can be petty, refuse to cooperate, and force the other party to do a unilateral close with the most recent commitment transaction. But if they do that, they have to wait for their funds too."}
{"prompt": "Blockchain Applications", "completion": "A better way to handle the prior commitment states is to explicitly revoke them. However, this is not easy to achieve. A key characteristic of bitcoin is that once a transaction is valid, it remains valid and does not expire. The only way to cancel a transaction is by double-spending its inputs with another transaction before it is mined. That\u2019s why we used timelocks in the simple payment channel example above to ensure that more recent commitments could be spent before older commitments were valid. However, sequencing commitments in time creates a number of constraints that make payment channels difficult to use."}
{"prompt": "Blockchain Applications", "completion": "Even though a transaction cannot be canceled, it can be constructed in such a way as to make it undesirable to use. The way we do that is by giving each party a revocation key that can be used to punish the other party if they try to cheat. This mechanism for revoking prior commitment transactions was first proposed as part of the Lightning Network."}
{"prompt": "Blockchain Applications", "completion": "To explain revocation keys, we will construct a more complex payment channel between two exchanges run by Hitesh and Irene. Hitesh and Irene run bitcoin exchanges in India and the USA, respectively. Customers of Hitesh\u2019s Indian exchange often send payments to customers of Irene\u2019s USA exchange and vice versa. Currently, these transactions occur on the bitcoin blockchain, but this means paying fees and waiting several blocks for confirmations. Setting up a payment channel between the exchanges will significantly reduce the cost and accelerate the transaction flow."}
{"prompt": "Blockchain Applications", "completion": "Hitesh and Irene start the channel by collaboratively constructing a funding transaction, each funding the channel with 5 bitcoin. The initial balance is 5 bitcoin for Hitesh and 5 bitcoin for Irene. The funding transaction locks the channel state in a 2-of-2 multisig, just like in the example of a simple channel."}
{"prompt": "Blockchain Applications", "completion": "The funding transaction may have one or more inputs from Hitesh (adding up to 5 bitcoin or more), and one or more inputs from Irene (adding up to 5 bitcoin or more). The inputs have to slightly exceed the channel capacity in order to cover the transaction fees. The transaction has one output that locks the 10 total bitcoin to a 2-of-2 multisig address controlled by both Hitesh and Irene. The funding transaction may also have one or more outputs returning change to Hitesh and Irene if their inputs exceeded their intended channel contribution. This is a single transaction with inputs offered and signed by two parties. It has to be constructed in collaboration and signed by each party before it is transmitted."}
{"prompt": "Blockchain Applications", "completion": "Now, instead of creating a single commitment transaction that both parties sign, Hitesh and Irene create two different commitment transactions that are asymmetric."}
{"prompt": "Blockchain Applications", "completion": "Hitesh has a commitment transaction with two outputs. The first output pays Irene the 5 bitcoin she is owed immediately. The second output pays Hitesh the 5 bitcoin he is owed, but only after a timelock of 1000 blocks. The transaction outputs look like this:"}
{"prompt": "Blockchain Applications", "completion": "Irene has a different commitment transaction with two outputs. The first output pays Hitesh the 5 bitcoin he is owed immediately. The second output pays Irene the 5 bitcoin she is owed but only after a timelock of 1000 blocks. The commitment transaction Irene holds (signed by Hitesh) looks like this:"}
{"prompt": "Blockchain Applications", "completion": "This way, each party has a commitment transaction, spending the 2-of-2 funding output. This input is signed by the other party. At any time the party holding the transaction can also sign (completing the 2-of-2) and broadcast. However, if they broadcast the commitment transaction, it pays the other party immediately whereas they have to wait for a timelock to expire. By imposing a delay on the redemption of one of the outputs, we put each party at a slight disadvantage when they choose to unilaterally broadcast a commitment transaction. But a time delay alone isn\u2019t enough to encourage fair conduct."}
{"prompt": "Blockchain Applications", "completion": "Two asymmetric commitment transactions with delayed payment for the party holding the transaction shows two asymmetric commitment transactions, where the output paying the holder of the commitment is delayed."}
{"prompt": "Blockchain Applications", "completion": "Now we introduce the final element of this scheme: a revocation key that prevents a cheater from broadcasting an expired commitment. The revocation key allows the wronged party to punish the cheater by taking the entire balance of the channel."}
{"prompt": "Blockchain Applications", "completion": "The revocation key is composed of two secrets, each half generated independently by each channel participant. It is similar to a 2-of-2 multisig, but constructed using elliptic curve arithmetic, so that both parties know the revocation public key but each party knows only half the revocation secret key."}
{"prompt": "Blockchain Applications", "completion": "In each round, both parties reveal their half of the revocation secret to the other party, thereby giving the other party (who now has both halves) the means to claim the penalty output if this revoked transaction is ever broadcast."}
{"prompt": "Blockchain Applications", "completion": "Each of the commitment transactions has a \"delayed\" output. The redemption script for that output allows one party to redeem it after 1000 blocks, or the other party to redeem it if they have a revocation key, penalizing transmission of a revoked commitment."}
{"prompt": "Blockchain Applications", "completion": "So when Hitesh creates a commitment transaction for Irene to sign, he makes the second output payable to himself after 1000 blocks, or to the revocation public key (of which he only knows half the secret). Hitesh constructs this transaction. He will only reveal his half of the revocation secret to Irene when he is ready to move to a new channel state and wants to revoke this commitment."}
{"prompt": "Blockchain Applications", "completion": "The second output\u2019s script looks like this:"}
{"prompt": "Blockchain Applications", "completion": "Irene can confidently sign this transaction, since if transmitted it will immediately pay her what she is owed. Hitesh holds the transaction, but knows that if he transmits it in a unilateral channel closing, he will have to wait 1000 blocks to get paid."}
{"prompt": "Blockchain Applications", "completion": "When the channel is advanced to the next state, Hitesh has to revoke this commitment transaction before Irene agrees to sign the next commitment transaction. To do that, all he has to do is send his half of the revocation key to Irene. Once Irene has both halves of the revocation secret key for this commitment, she can sign the next commitment with confidence. She knows that if Hitesh tries to cheat by publishing the prior commitment, she can use the revocation key to redeem Hitesh\u2019s delayed output. If Hitesh cheats, Irene gets BOTH outputs. Meanwhile, Hitesh only has half the revocation secret for that revocation public key and can\u2019t redeem the output until 1000 blocks. Irene will be able to redeem the output and punish Hitesh before the 1000 blocks have elapsed."}
{"prompt": "Blockchain Applications", "completion": "The revocation protocol is bilateral, meaning that in each round, as the channel state is advanced, the two parties exchange new commitments, exchange revocation secrets for the previous commitments, and sign each other\u2019s new commitment transactions. As they accept a new state, they make the prior state impossible to use, by giving each other the necessary revocation secrets to punish any cheating."}
{"prompt": "Blockchain Applications", "completion": "Let\u2019s look at an example of how it works. One of Irene\u2019s customers wants to send 2 bitcoin to one of Hitesh\u2019s customers. To transmit 2 bitcoin across the channel, Hitesh and Irene must advance the channel state to reflect the new balance. They will commit to a new state (state number 2) where the channel\u2019s 10 bitcoin are split, 7 bitcoin to Hitesh and 3 bitcoin to Irene. To advance the state of the channel, they will each create new commitment transactions reflecting the new channel balance."}
{"prompt": "Blockchain Applications", "completion": "As before, these commitment transactions are asymmetric so that the commitment transaction each party holds forces them to wait if they redeem it. Crucially, before signing new commitment transactions, they must first exchange revocation keys to invalidate the prior commitment. In this particular case, Hitesh\u2019s interests are aligned with the real state of the channel and therefore he has no reason to broadcast a prior state. However, for Irene, state number 1 leaves her with a higher balance than state 2. When Irene gives Hitesh the revocation key for her prior commitment transaction (state number 1) she is effectively revoking her ability to profit from regressing the channel to a prior state because with the revocation key, Hitesh can redeem both outputs of the prior commitment transaction without delay. Meaning if Irene broadcasts the prior state, Hitesh can exercise his right to take all of the outputs."}
{"prompt": "Blockchain Applications", "completion": "Importantly, the revocation doesn\u2019t happen automatically. While Hitesh has the ability to punish Irene for cheating, he has to watch the blockchain diligently for signs of cheating. If he sees a prior commitment transaction broadcast, he has 1000 blocks to take action and use the revocation key to thwart Irene\u2019s cheating and punish her by taking the entire balance, all 10 bitcoin."}
{"prompt": "Blockchain Applications", "completion": "Asymmetric revocable commitments with relative time locks (CSV) are a much better way to implement payment channels and a very significant innovation in this technology. With this construct, the channel can remain open indefinitely and can have billions of intermediate commitment transactions. In prototype implementations of Lightning Network, the commitment state is identified by a 48-bit index, allowing more than 281 trillion (2.8 x 1014) state transitions in any single channel!"}
{"prompt": "Blockchain Applications", "completion": "Payment channels can be further extended with a special type of smart contract that allows the participants to commit funds to a redeemable secret, with an expiration time. This feature is called a Hash Time Lock Contract, or HTLC, and is used in both bidirectional and routed payment channels."}
{"prompt": "Blockchain Applications", "completion": "Let\u2019s first explain the \"hash\" part of the HTLC. To create an HTLC, the intended recipient of the payment will first create a secret R. They then calculate the hash of this secret H:"}
{"prompt": "Blockchain Applications", "completion": "This produces a hash H that can be included in an output\u2019s locking script. Whoever knows the secret can use it to redeem the output. The secret R is also referred to as a preimage to the hash function. The preimage is just the data that is used as input to a hash function."}
{"prompt": "Blockchain Applications", "completion": "The second part of an HTLC is the \"time lock\" component. If the secret is not revealed, the payer of the HTLC can get a \"refund\" after some time. This is achieved with an absolute time lock using CHECKLOCKTIMEVERIFY."}
{"prompt": "Blockchain Applications", "completion": "The script implementing an HTLC might look like this:"}
{"prompt": "Blockchain Applications", "completion": "Anyone who knows the secret R, which when hashed equals to H, can redeem this output by exercising the first clause of the IF flow."}
{"prompt": "Blockchain Applications", "completion": "If the secret is not revealed and the HTLC claimed, after a certain number of blocks the payer can claim a refund using the second clause in the IF flow."}
{"prompt": "Blockchain Applications", "completion": "This is a basic implementation of an HTLC. This type of HTLC can be redeemed by anyone who has the secret R. An HTLC can take many different forms with slight variations to the script. For example, adding a CHECKSIG operator and a public key in the first clause restricts redemption of the hash to a named recipient, who must also know the secret R."}
{"prompt": "Blockchain Applications", "completion": "The Lightning Network is a proposed routed network of bidirectional payment channels connected end-to-end. A network like this can allow any participant to route a payment from channel to channel without trusting any of the intermediaries. The Lightning Network was first described by Joseph Poon and Thadeus Dryja in February 2015, building on the concept of payment channels as proposed and elaborated upon by many others."}
{"prompt": "Blockchain Applications", "completion": "\"Lightning Network\" refers to a specific design for a routed payment channel network, which has now been implemented by at least five different open source teams. The independent implementations are coordinated by a set of interoperability standards described in the Basics of Lightning Technology (BOLT) paper."}
{"prompt": "Blockchain Applications", "completion": "Prototype implementations of the Lightning Network have been released by several teams."}
{"prompt": "Blockchain Applications", "completion": "The Lightning Network is one possible way of implementing routed payment channels. There are several other designs that aim to achieve similar goals, such as Teechan and Tumblebit."}
{"prompt": "Blockchain Applications", "completion": "Let\u2019s see how this works."}
{"prompt": "Blockchain Applications", "completion": "In this example, we have five participants: Alice, Bob, Carol, Diana, and Eric. These five participants have opened payment channels with each other, in pairs. Alice has a payment channel with Bob. Bob is connected to Carol, Carol to Diana, and Diana to Eric. For simplicity let\u2019s assume each channel is funded with 2 bitcoin by each participant, for a total capacity of 4 bitcoin in each channel."}
{"prompt": "Blockchain Applications", "completion": "A series of bidirectional payment channels linked to form a Lightning Network that can route a payment from Alice to Eric shows five participants in a Lightning Network, connected by bidirectional payment channels that can be linked to make a payment from Alice to Eric (Routed Payment Channels (Lightning Network))."}
{"prompt": "Blockchain Applications", "completion": "Alice wants to pay Eric 1 bitcoin. However, Alice is not connected to Eric by a payment channel. Creating a payment channel requires a funding transaction, which must be committed to the bitcoin blockchain. Alice does not want to open a new payment channel and commit more of her funds. Is there a way to pay Eric, indirectly?"}
{"prompt": "Blockchain Applications", "completion": "Step-by-step payment routing through a Lightning Network shows the step-by-step process of routing a payment from Alice to Eric, through a series of HTLC commitments on the payment channels connecting the participants."}
{"prompt": "Blockchain Applications", "completion": "Alice is running a Lightning Network (LN) node that is keeping track of her payment channel to Bob and has the ability to discover routes between payment channels. Alice\u2019s LN node also has the ability to connect over the internet to Eric\u2019s LN node. Eric\u2019s LN node creates a secret R using a random number generator. Eric\u2019s node does not reveal this secret to anyone. Instead, Eric\u2019s node calculates a hash H of the secret R and transmits this hash to Alice\u2019s node (see Step-by-step payment routing through a Lightning Network step 1)."}
{"prompt": "Blockchain Applications", "completion": "Now Alice\u2019s LN node constructs a route between Alice\u2019s LN node and Eric\u2019s LN node. The routing algorithm used will be examined in more detail later, but for now let\u2019s assume that Alice\u2019s node can find an efficient route."}
{"prompt": "Blockchain Applications", "completion": "Alice\u2019s node then constructs an HTLC, payable to the hash H, with a 10-block refund timeout (current block + 10), for an amount of 1.003 bitcoin (see Step-by-step payment routing through a Lightning Network step 2). The extra 0.003 will be used to compensate the intermediate nodes for their participation in this payment route. Alice offers this HTLC to Bob, deducting 1.003 bitcoin from her channel balance with Bob and committing it to the HTLC. The HTLC has the following meaning: \"Alice is committing 1.003 of her channel balance to be paid to Bob if Bob knows the secret, or refunded back to Alice\u2019s balance if 10 blocks elapse.\" The channel balance between Alice and Bob is now expressed by commitment transactions with three outputs: 2 bitcoin balance to Bob, 0.997 bitcoin balance to Alice, 1.003 bitcoin committed in Alice\u2019s HTLC. Alice\u2019s balance is reduced by the amount committed to the HTLC."}
{"prompt": "Blockchain Applications", "completion": "Bob now has a commitment that if he is able to get the secret R within the next 10 blocks, he can claim the 1.003 locked by Alice. With this commitment in hand, Bob\u2019s node constructs an HTLC on his payment channel with Carol. Bob\u2019s HTLC commits 1.002 bitcoin to hash H for 9 blocks, which Carol can redeem if she has secret R (see Step-by-step payment routing through a Lightning Network step 3). Bob knows that if Carol can claim his HTLC, she has to produce R. If Bob has R in nine blocks, he can use it to claim Alice\u2019s HTLC to him. He also makes 0.001 bitcoin for committing his channel balance for nine blocks. If Carol is unable to claim his HTLC and he is unable to claim Alice\u2019s HTLC, everything reverts back to the prior channel balances and no one is at a loss. The channel balance between Bob and Carol is now: 2 to Carol, 0.998 to Bob, 1.002 committed by Bob to the HTLC."}
{"prompt": "Blockchain Applications", "completion": "Carol now has a commitment that if she gets R within the next nine blocks, she can claim 1.002 bitcoin locked by Bob. Now she can make an HTLC commitment on her channel with Diana. She commits an HTLC of 1.001 bitcoin to hash H, for eight blocks, which Diana can redeem if she has secret R (see Step-by-step payment routing through a Lightning Network step 4). From Carol\u2019s perspective, if this works she is 0.001 bitcoin better off and if it doesn\u2019t she loses nothing. Her HTLC to Diana is only viable if R is revealed, at which point she can claim the HTLC from Bob. The channel balance between Carol and Diana is now: 2 to Diana, 0.999 to Carol, 1.001 committed by Carol to the HTLC."}
{"prompt": "Blockchain Applications", "completion": "Finally, Diana can offer an HTLC to Eric, committing 1 bitcoin for seven blocks to hash H (see Step-by-step payment routing through a Lightning Network step 5). The channel balance between Diana and Eric is now: 2 to Eric, 1 to Diana, 1 committed by Diana to the HTLC."}
{"prompt": "Blockchain Applications", "completion": "However, at this hop in the route, Eric has secret R. He can therefore claim the HTLC offered by Diana. He sends R to Diana and claims the 1 bitcoin, adding it to his channel balance (see Step-by-step payment routing through a Lightning Network step 6). The channel balance is now: 1 to Diana, 3 to Eric."}
{"prompt": "Blockchain Applications", "completion": "Now, Diana has secret R. Therefore, she can now claim the HTLC from Carol. Diana transmits R to Carol and adds the 1.001 bitcoin to her channel balance (see Step-by-step payment routing through a Lightning Network step 7). Now the channel balance between Carol and Diana is: 0.999 to Carol, 3.001 to Diana. Diana has \"earned\" 0.001 for participating in this payment route."}
{"prompt": "Blockchain Applications", "completion": "Flowing back through the route, the secret R allows each participant to claim the outstanding HTLCs. Carol claims 1.002 from Bob, setting the balance on their channel to: 0.998 to Bob, 3.002 to Carol (see Step-by-step payment routing through a Lightning Network step 8). Finally, Bob claims the HTLC from Alice (see Step-by-step payment routing through a Lightning Network step 9). Their channel balance is updated as: 0.997 to Alice, 3.003 to Bob."}
{"prompt": "Blockchain Applications", "completion": "Alice has paid Eric 1 bitcoin without opening a channel to Eric. None of the intermediate parties in the payment route had to trust each other. For the short-term commitment of their funds in the channel they are able to earn a small fee, with the only risk being a small delay in refund if the channel was closed or the routed payment failed."}
{"prompt": "Blockchain Applications", "completion": "All communications between LN nodes are encrypted point-to-point. In addition, nodes have a long-term public key that they use as an identifier and to authenticate each other."}
{"prompt": "Blockchain Applications", "completion": "Whenever a node wishes to send a payment to another node, it must first construct a path through the network by connecting payment channels with sufficient capacity. Nodes advertise routing information, including what channels they have open, how much capacity each channel has, and what fees they charge to route payments. The routing information can be shared in a variety of ways and different routing protocols are likely to emerge as Lightning Network technology advances. Some Lightning Network implementations use the IRC protocol as a convenient mechanism for nodes to announce routing information. Another implementation of route discovery uses a P2P model where nodes propagate channel announcements to their peers, in a \"flooding\" model, similar to how bitcoin propagates transactions. Future plans include a proposal called Flare, which is a hybrid routing model with local node \"neighborhoods\" and longer-range beacon nodes."}
{"prompt": "Blockchain Applications", "completion": "In our previous example, Alice\u2019s node uses one of these route discovery mechanisms to find one or more paths connecting her node to Eric\u2019s node. Once Alice\u2019s node has constructed a path, she will initialize that path through the network, by propagating a series of encrypted and nested instructions to connect each of the adjacent payment channels."}
{"prompt": "Blockchain Applications", "completion": "Importantly, this path is only known to Alice\u2019s node. All other participants in the payment route see only the adjacent nodes. From Carol\u2019s perspective, this looks like a payment from Bob to Diana. Carol does not know that Bob is actually relaying a payment from Alice. She also doesn\u2019t know that Diana will be relaying a payment to Eric."}
{"prompt": "Blockchain Applications", "completion": "This is a critical feature of the Lightning Network, because it ensures privacy of payments and makes it very difficult to apply surveillance, censorship, or blacklists. But how does Alice establish this payment path, without revealing anything to the intermediary nodes?"}
{"prompt": "Blockchain Applications", "completion": "The Lightning Network implements an onion-routed protocol based on a scheme called Sphinx. This routing protocol ensures that a payment sender can construct and communicate a path through the Lightning Network such that:"}
{"prompt": "Blockchain Applications", "completion": "Intermediate nodes can verify and decrypt their portion of route information and find the next hop."}
{"prompt": "Blockchain Applications", "completion": "Other than the previous and next hops, they cannot learn about any other nodes that are part of the path."}
{"prompt": "Blockchain Applications", "completion": "They cannot identify the length of the payment path, or their own position in that path."}
{"prompt": "Blockchain Applications", "completion": "Each part of the path is encrypted in such a way that a network-level attacker cannot associate the packets from different parts of the path to each other."}
{"prompt": "Blockchain Applications", "completion": "Unlike Tor (an onion-routed anonymization protocol on the internet), there are no \"exit nodes\" that can be placed under surveillance. The payments do not need to be transmitted to the bitcoin blockchain; the nodes just update channel balances."}
{"prompt": "Blockchain Applications", "completion": "Using this onion-routed protocol, Alice wraps each element of the path in a layer of encryption, starting with the end and working backward. She encrypts a message to Eric with Eric\u2019s public key. This message is wrapped in a message encrypted to Diana, identifying Eric as the next recipient. The message to Diana is wrapped in a message encrypted to Carol\u2019s public key and identifying Diana as the next recipient. The message to Carol is encrypted to Bob\u2019s key. Thus, Alice has constructed this encrypted multilayer \"onion\" of messages. She sends this to Bob, who can only decrypt and unwrap the outer layer. Inside, Bob finds a message addressed to Carol that he can forward to Carol but cannot decipher himself. Following the path, the messages get forwarded, decrypted, forwarded, etc., all the way to Eric. Each participant knows only the previous and next node in each hop."}
{"prompt": "Blockchain Applications", "completion": "Each element of the path contains information on the HTLC that must be extended to the next hop, the amount that is being sent, the fee to include, and the CLTV locktime (in blocks) expiration of the HTLC. As the route information propagates, the nodes make HTLC commitments forward to the next hop."}
{"prompt": "Blockchain Applications", "completion": "At this point, you might be wondering how it is possible that the nodes do not know the length of the path and their position in that path. After all, they receive a message and forward it to the next hop. Doesn\u2019t it get shorter, allowing them to deduce the path size and their position? To prevent this, the path is always fixed at 20 hops and padded with random data. Each node sees the next hop and a fixed-length encrypted message to forward. Only the final recipient sees that there is no next hop. To everyone else it seems as if there are always 20 more hops to go."}
{"prompt": "Blockchain Applications", "completion": "A Lightning Network is a second-layer routing technology. It can be applied to any blockchain that supports some basic capabilities, such as multisignature transactions, timelocks, and basic smart contracts."}
{"prompt": "Blockchain Applications", "completion": "If a Lightning Network is layered on top of the bitcoin network, the bitcoin network can gain a significant increase in capacity, privacy, granularity, and speed, without sacrificing the principles of trustless operation without intermediaries:"}
{"prompt": "Blockchain Applications", "completion": "Lightning Network payments are much more private than payments on the bitcoin blockchain, as they are not public. While participants in a route can see payments propagated across their channels, they do not know the sender or recipient."}
{"prompt": "Blockchain Applications", "completion": "A Lightning Network makes it much more difficult to apply surveillance and blacklists on bitcoin, increasing the fungibility of the currency."}
{"prompt": "Blockchain Applications", "completion": "Bitcoin transactions using Lightning Network are settled in milliseconds, rather than minutes, as HTLCs are cleared without committing transactions to a block."}
{"prompt": "Blockchain Applications", "completion": "A Lightning Network can enable payments at least as small as the bitcoin \"dust\" limit, perhaps even smaller. Some proposals allow for subsatoshi increments."}
{"prompt": "Blockchain Applications", "completion": "A Lightning Network increases the capacity of the bitcoin system by several orders of magnitude. There is no practical upper bound to the number of payments per second that can be routed over a Lightning Network, as it depends only on the capacity and speed of each node."}
{"prompt": "Blockchain Applications", "completion": "A Lightning Network uses bitcoin transactions between nodes that operate as peers without trusting each other. Thus, a Lightning Network preserves the principles of the bitcoin system, while expanding its operating parameters significantly."}
{"prompt": "Blockchain Applications", "completion": "Of course, as mentioned previously, the Lightning Network protocol is not the only way to implement routed payment channels. Other proposed systems include Tumblebit and Teechan. At this time, however, the Lightning Network has already been deployed on testnet. Several different teams have developed competing implementations of LN and are working toward a common interoperability standard (called BOLT). It is likely that Lightning Network will be the first routed payment channel network to be deployed in production."}
{"prompt": "Blockchain Applications", "completion": "We have examined just a few of the emerging applications that can be built using the bitcoin blockchain as a trust platform. These applications expand the scope of bitcoin beyond payments and beyond financial instruments, to encompass many other applications where trust is critical. By decentralizing the basis of trust, the bitcoin blockchain is a platform that will spawn many revolutionary applications in a wide variety of industries."}
{"prompt": "Bitcoin: A Peer-to-Peer Electronic Cash System", "completion": "A purely peer-to-peer version of electronic cash would allow online payments to be sent directly from one party to another without going through a financial institution. Digital signatures provide part of the solution, but the main benefits are lost if a trusted third party is still required to prevent double-spending. We propose a solution to the double-spending problem using a peer-to-peer network. The network timestamps transactions by hashing them into an ongoing chain of hash-based proof-of-work, forming a record that cannot be changed without redoing the proof-of-work. The longest chain not only serves as proof of the sequence of events witnessed, but proof that it came from the largest pool of CPU power. As long as a majority of CPU power is controlled by nodes that are not cooperating to attack the network, they'll generate the longest chain and outpace attackers. The network itself requires minimal structure. Messages are broadcast on a best effort basis, and nodes can leave and rejoin the network at will, accepting the longest proof-of-work chain as proof of what happened while they were gone.Commerce on the Internet has come to rely almost exclusively on financial institutions serving as trusted third parties to process electronic payments. While the system works well enough for most transactions, it still suffers from the inherent weaknesses of the trust based model. Completely non-reversible transactions are not really possible, since financial institutions cannot avoid mediating disputes. The cost of mediation increases transaction costs, limiting the minimum practical transaction size and cutting off the possibility for small casual transactions, and there is a broader cost in the loss of ability to make non-reversible payments for non-reversible services. With the possibility of reversal, the need for trust spreads. Merchants must be wary of their customers, hassling them for more information than they would otherwise need. A certain percentage of fraud is accepted as unavoidable. These costs and payment uncertainties can be avoided in person by using physical currency, but no mechanism exists to make payments over a communications channel without a trusted party.What is needed is an electronic payment system based on cryptographic proof instead of trust, allowing any two willing parties to transact directly with each other without the need for a trusted third party. Transactions that are computationally impractical to reverse would protect sellers from fraud, and routine escrow mechanisms could easily be implemented to protect buyers. In this paper, we propose a solution to the double-spending problem using a peer-to-peer distributed timestamp server to generate computational proof of the chronological order of transactions. The system is secure as long as honest nodes collectively control more CPU power than any cooperating group of attacker nodes.We define an electronic coin as a chain of digital signatures. Each owner transfers the coin to the next by digitally signing a hash of the previous transaction and the public key of the next owner and adding these to the end of the coin. A payee can verify the signatures to verify the chain of ownership.The problem of course is the payee can't verify that one of the owners did not double-spend the coin. A common solution is to introduce a trusted central authority, or mint, that checks every transaction for double spending. After each transaction, the coin must be returned to the mint to issue a new coin, and only coins issued directly from the mint are trusted not to be double-spent. The problem with this solution is that the fate of the entire money system depends on the company running the mint, with every transaction having to go through them, just like a bank.We need a way for the payee to know that the previous owners did not sign any earlier transactions. For our purposes, the earliest transaction is the one that counts, so we don't care about later attempts to double-spend. The only way to confirm the absence of a transaction is to be aware of all transactions. In the mint based model, the mint was aware of all transactions and decided which arrived first. To accomplish this without a trusted party, transactions must be publicly announced[1], and we need a system for participants to agree on a single history of the order in which they were received. The payee needs proof that at the time of each transaction, the majority of nodes agreed it was the first received.The solution we propose begins with a timestamp server. A timestamp server works by taking a hash of a block of items to be timestamped and widely publishing the hash, such as in a newspaper or Usenet post[2-5]. The timestamp proves that the data must have existed at the time, obviously, in order to get into the hash. Each timestamp includes the previous timestamp in its hash, forming a chain, with each additional timestamp reinforcing the ones before it.To implement a distributed timestamp server on a peer-to-peer basis, we will need to use a proof-of-work system similar to Adam Back's Hashcash[6], rather than newspaper or Usenet posts. The proof-of-work involves scanning for a value that when hashed, such as with SHA-256, the hash begins with a number of zero bits. The average work required is exponential in the number of zero bits required and can be verified by executing a single hash.For our timestamp network, we implement the proof-of-work by incrementing a nonce in the block until a value is found that gives the block's hash the required zero bits. Once the CPU effort has been expended to make it satisfy the proof-of-work, the block cannot be changed without redoing the work. As later blocks are chained after it, the work to change the block would include redoing all the blocks after it.The proof-of-work also solves the problem of determining representation in majority decision making. If the majority were based on one-IP-address-one-vote, it could be subverted by anyone able to allocate many IPs. Proof-of-work is essentially one-CPU-one-vote. The majority decision is represented by the longest chain, which has the greatest proof-of-work effort invested in it. If a majority of CPU power is controlled by honest nodes, the honest chain will grow the fastest and outpace any competing chains. To modify a past block, an attacker would have to redo the proof-of-work of the block and all blocks after it and then catch up with and surpass the work of the honest nodes. We will show later that the probability of a slower attacker catching up diminishes exponentially as subsequent blocks are added.To compensate for increasing hardware speed and varying interest in running nodes over time, the proof-of-work difficulty is determined by a moving average targeting an average number of blocks per hour. If they're generated too fast, the difficulty increases.The steps to run the network are as follows:Nodes always consider the longest chain to be the correct one and will keep working on extending it. If two nodes broadcast different versions of the next block simultaneously, some nodes may receive one or the other first. In that case, they work on the first one they received, but save the other branch in case it becomes longer. The tie will be broken when the next proof-of-work is found and one branch becomes longer; the nodes that were working on the other branch will then switch to the longer one.New transaction broadcasts do not necessarily need to reach all nodes. As long as they reach many nodes, they will get into a block before long. Block broadcasts are also tolerant of dropped messages. If a node does not receive a block, it will request it when it receives the next block and realizes it missed one.By convention, the first transaction in a block is a special transaction that starts a new coin owned by the creator of the block. This adds an incentive for nodes to support the network, and provides a way to initially distribute coins into circulation, since there is no central authority to issue them. The steady addition of a constant of amount of new coins is analogous to gold miners expending resources to add gold to circulation. In our case, it is CPU time and electricity that is expended.The incentive can also be funded with transaction fees. If the output value of a transaction is less than its input value, the difference is a transaction fee that is added to the incentive value of the block containing the transaction. Once a predetermined number of coins have entered circulation, the incentive can transition entirely to transaction fees and be completely inflation free.The incentive may help encourage nodes to stay honest. If a greedy attacker is able to assemble more CPU power than all the honest nodes, he would have to choose between using it to defraud people by stealing back his payments, or using it to generate new coins. He ought to find it more profitable to play by the rules, such rules that favour him with more new coins than everyone else combined, than to undermine the system and the validity of his own wealth.Once the latest transaction in a coin is buried under enough blocks, the spent transactions before it can be discarded to save disk space. To facilitate this without breaking the block's hash, transactions are hashed in a Merkle Tree [7][2][5], with only the root included in the block's hash. Old blocks can then be compacted by stubbing off branches of the tree. The interior hashes do not need to be stored.A block header with no transactions would be about 80 bytes. If we suppose blocks are generated every 10 minutes, 80 bytes * 6 * 24 * 365 = 4.2MB per year. With computer systems typically selling with 2GB of RAM as of 2008, and Moore's Law predicting current growth of 1.2GB per year, storage should not be a problem even if the block headers must be kept in memory.It is possible to verify payments without running a full network node. A user only needs to keep a copy of the block headers of the longest proof-of-work chain, which he can get by querying network nodes until he's convinced he has the longest chain, and obtain the Merkle branch linking the transaction to the block it's timestamped in. He can't check the transaction for himself, but by linking it to a place in the chain, he can see that a network node has accepted it, and blocks added after it further confirm the network has accepted it.As such, the verification is reliable as long as honest nodes control the network, but is more vulnerable if the network is overpowered by an attacker. While network nodes can verify transactions for themselves, the simplified method can be fooled by an attacker's fabricated transactions for as long as the attacker can continue to overpower the network. One strategy to protect against this would be to accept alerts from network nodes when they detect an invalid block, prompting the user's software to download the full block and alerted transactions to confirm the inconsistency. Businesses that receive frequent payments will probably still want to run their own nodes for more independent security and quicker verification.Although it would be possible to handle coins individually, it would be unwieldy to make a separate transaction for every cent in a transfer. To allow value to be split and combined, transactions contain multiple inputs and outputs. Normally there will be either a single input from a larger previous transaction or multiple inputs combining smaller amounts, and at most two outputs: one for the payment, and one returning the change, if any, back to the sender.It should be noted that fan-out, where a transaction depends on several transactions, and those transactions depend on many more, is not a problem here. There is never the need to extract a complete standalone copy of a transaction's history.The traditional banking model achieves a level of privacy by limiting access to information to the parties involved and the trusted third party. The necessity to announce all transactions publicly precludes this method, but privacy can still be maintained by breaking the flow of information in another place: by keeping public keys anonymous. The public can see that someone is sending an amount to someone else, but without information linking the transaction to anyone. This is similar to the level of information released by stock exchanges, where the time and size of individual trades, the \"tape\", is made public, but without telling who the parties were.As an additional firewall, a new key pair should be used for each transaction to keep them from being linked to a common owner. Some linking is still unavoidable with multi-input transactions, which necessarily reveal that their inputs were owned by the same owner. The risk is that if the owner of a key is revealed, linking could reveal other transactions that belonged to the same owner.We consider the scenario of an attacker trying to generate an alternate chain faster than the honest chain. Even if this is accomplished, it does not throw the system open to arbitrary changes, such as creating value out of thin air or taking money that never belonged to the attacker. Nodes are not going to accept an invalid transaction as payment, and honest nodes will never accept a block containing them. An attacker can only try to change one of his own transactions to take back money he recently spent.The race between the honest chain and an attacker chain can be characterized as a Binomial Random Walk. The success event is the honest chain being extended by one block, increasing its lead by +1, and the failure event is the attacker's chain being extended by one block, reducing the gap by -1.The probability of an attacker catching up from a given deficit is analogous to a Gambler's Ruin problem. Suppose a gambler with unlimited credit starts at a deficit and plays potentially an infinite number of trials to try to reach breakeven. We can calculate the probability he ever reaches breakeven, or that an attacker ever catches up with the honest chain, as follows[8]:p\nq\nq\nz\n=\n=\n=\n probability an honest node finds the next block\n probability the attacker finds the next block\n probability the attacker will ever catch up from z blocks behindq\nz\n={\n1\n(q/p\n)\nz\nifp\u2264q\nifp>q\n}Given our assumption that\np>q\n, the probability drops exponentially as the number of blocks the attacker has to catch up with increases. With the odds against him, if he doesn't make a lucky lunge forward early on, his chances become vanishingly small as he falls further behind.We now consider how long the recipient of a new transaction needs to wait before being sufficiently certain the sender can't change the transaction. We assume the sender is an attacker who wants to make the recipient believe he paid him for a while, then switch it to pay back to himself after some time has passed. The receiver will be alerted when that happens, but the sender hopes it will be too late.The receiver generates a new key pair and gives the public key to the sender shortly before signing. This prevents the sender from preparing a chain of blocks ahead of time by working on it continuously until he is lucky enough to get far enough ahead, then executing the transaction at that moment. Once the transaction is sent, the dishonest sender starts working in secret on a parallel chain containing an alternate version of his transaction.The recipient waits until the transaction has been added to a block and\nz\nblocks have been linked after it. He doesn't know the exact amount of progress the attacker has made, but assuming the honest blocks took the average expected time per block, the attacker's potential progress will be a Poisson distribution with expected value:\u03bb=z\nq\npTo get the probability the attacker could still catch up now, we multiply the Poisson density for each amount of progress he could have made by the probability he could catch up from that point:\u2211\nk=0\n\u221e\n\u03bb\nk\ne\n\u2212\u03bb\nk!\n\u22c5{\n(q/p\n)\n(z\u2212k)\n1\nifk\u2264z\nifk>z\n}Rearranging to avoid summing the infinite tail of the distribution...1\u2212\n\u2211\nk=0\nz\n\u03bb\nk\ne\n\u2212\u03bb\nk!\n(1\u2212(q/p\n)\n(z\u2212k)\n)Converting to C code...Running some results, we can see the probability drop off exponentially with\nz\n.Solving for P less than 0.1%...We have proposed a system for electronic transactions without relying on trust. We started with the usual framework of coins made from digital signatures, which provides strong control of ownership, but is incomplete without a way to prevent double-spending. To solve this, we proposed a peer-to-peer network using proof-of-work to record a public history of transactions that quickly becomes computationally impractical for an attacker to change if honest nodes control a majority of CPU power. The network is robust in its unstructured simplicity. Nodes work all at once with little coordination. They do not need to be identified, since messages are not routed to any particular place and only need to be delivered on a best effort basis. Nodes can leave and rejoin the network at will, accepting the proof-of-work chain as proof of what happened while they were gone. They vote with their CPU power, expressing their acceptance of valid blocks by working on extending them and rejecting invalid blocks by refusing to work on them. Any needed rules and incentives can be enforced with this consensus mechanism.W. Dai, \"b-money,\" http://www.weidai.com/bmoney.txt, 1998. \u21a9H. Massias, X.S. Avila, and J.-J. Quisquater, \"Design of a secure timestamping service with minimal trust requirements,\" In 20th Symposium on Information Theory in the Benelux, May 1999. \u21a9 \u21a9S. Haber, W.S. Stornetta, \"How to time-stamp a digital document,\" In Journal of Cryptology, vol 3, no 2, pages 99-111, 1991. \u21a9D. Bayer, S. Haber, W.S. Stornetta, \"Improving the efficiency and reliability of digital time-stamping,\" In Sequences II: Methods in Communication, Security and Computer Science, pages 329-334, 1993. \u21a9S. Haber, W.S. Stornetta, \"Secure names for bit-strings,\" In Proceedings of the 4th ACM Conference on Computer and Communications Security, pages 28-35, April 1997. \u21a9 \u21a9A. Back, \"Hashcash - a denial of service counter-measure,\" http://www.hashcash.org/papers/hashcash.pdf, 2002. \u21a9R.C. Merkle, \"Protocols for public key cryptosystems,\" In Proc. 1980 Symposium on Security and Privacy, IEEE Computer Society, pages 122-133, April 1980. \u21a9W. Feller, \"An introduction to probability theory and its applications,\" 1957. \u21a9PDF available in English, Chinese (Simplified), Chinese (Traditional), Hebrew, Italian, Japanese, Russian, Spanish, and Vietnamese"}
{"prompt": "b-money", "completion": "I am fascinated by Tim May's crypto-anarchy. Unlike the communities traditionally associated with the word \"anarchy\", in a crypto-anarchy the government is not temporarily destroyed but permanently forbidden and permanently unnecessary. It's a community where the threat of violence is impotent because violence is impossible, and violence is impossible because its participants cannot be linked to their true names or physical locations.Until now it's not clear, even theoretically, how such a community could operate. A community is defined by the cooperation of its participants, and efficient cooperation requires a medium of exchange (money) and a way to enforce contracts. Traditionally these services have been provided by the government or government sponsored institutions and only to legal entities. In this article I describe a protocol by which these services can be provided to and by untraceable entities.I will actually describe two protocols. The first one is impractical, because it makes heavy use of a synchronous and unjammable anonymous broadcast channel. However it will motivate the second, more practical protocol. In both cases I will assume the existence of an untraceable network, where senders and receivers are identified only by digital pseudonyms (i.e. public keys) and every messages is signed by its sender and encrypted to its receiver.In the first protocol, every participant maintains a (seperate) database of how much money belongs to each pseudonym. These accounts collectively define the ownership of money, and how these accounts are updated is the subject of this protocol.The creation of money. Anyone can create money by broadcasting the solution to a previously unsolved computational problem. The only conditions are that it must be easy to determine how much computing effort it took to solve the problem and the solution must otherwise have no value, either practical or intellectual. The number of monetary units created is equal to the cost of the computing effort in terms of a standard basket of commodities. For example if a problem takes 100 hours to solve on the computer that solves it most economically, and it takes 3 standard baskets to purchase 100 hours of computing time on that computer on the open market, then upon the broadcast of the solution to that problem everyone credits the broadcaster's account by 3 units.The transfer of money. If Alice (owner of pseudonym KA) wishes to transfer X units of money to Bob (owner of pseudonym KB), she broadcasts the message \"I give X units of money to KB\" signed by KA. Upon the broadcast of this message, everyone debits KA's account by X units and credits KB's account by X units, unless this would create a negative balance in KA's account in which case the message is ignored.The effecting of contracts. A valid contract must include a maximum reparation in case of default for each participant party to it. It should also include a party who will perform arbitration should there be a dispute. All parties to a contract including the arbitrator must broadcast their signatures of it before it becomes effective. Upon the broadcast of the contract and all signatures, every participant debits the account of each party by the amount of his maximum reparation and credits a special account identified by a secure hash of the contract by the sum the maximum reparations. The contract becomes effective if the debits succeed for every party without producing a negative balance, otherwise the contract is ignored and the accounts are rolled back. A sample contract might look like this:KA agrees to send KB the solution to problem P before 0:0:0 1/1/2000. KB agrees to pay KA 100 MU (monetary units) before 0:0:0 1/1/2000. KC agrees to perform arbitration in case of dispute. KA agrees to pay a maximum of 1000 MU in case of default. KB agrees to pay a maximum of 200 MU in case of default. KC agrees to pay a maximum of 500 MU in case of default.The conclusion of contracts. If a contract concludes without dispute, each party broadcasts a signed message \"The contract with SHA-1 hash H concludes without reparations.\" or possibly \"The contract with SHA-1 hash H concludes with the following reparations: ...\" Upon the broadcast of all signatures, every participant credits the account of each party by the amount of his maximum reparation, removes the contract account, then credits or debits the account of each party according to the reparation schedule if there is one.The enforcement of contracts. If the parties to a contract cannot agree on an appropriate conclusion even with the help of the arbitrator, each party broadcasts a suggested reparation/fine schedule and any arguments or evidence in his favor. Each participant makes a determination as to the actual reparations and/or fines, and modifies his accounts accordingly.In the second protocol, the accounts of who has how much money are kept by a subset of the participants (called servers from now on) instead of everyone. These servers are linked by a Usenet-style broadcast channel. The format of transaction messages broadcasted on this channel remain the same as in the first protocol, but the affected participants of each transaction should verify that the message has been received and successfully processed by a randomly selected subset of the servers.Since the servers must be trusted to a degree, some mechanism is needed to keep them honest. Each server is required to deposit a certain amount of money in a special account to be used as potential fines or rewards for proof of misconduct. Also, each server must periodically publish and commit to its current money creation and money ownership databases. Each participant should verify that his own account balances are correct and that the sum of the account balances is not greater than the total amount of money created. This prevents the servers, even in total collusion, from permanently and costlessly expanding the money supply. New servers can also use the published databases to synchronize with existing servers.The protocol proposed in this article allows untraceable pseudonymous entities to cooperate with each other more efficiently, by providing them with a medium of exchange and a method of enforcing contracts. The protocol can probably be made more efficient and secure, but I hope this is a step toward making crypto-anarchy a practical as well as theoretical possibility.One of the more problematic parts in the b-money protocol is money creation. This part of the protocol requires that all of the account keepers decide and agree on the cost of particular computations. Unfortunately because computing technology tends to advance rapidly and not always publicly, this information may be unavailable, inaccurate, or outdated, all of which would cause serious problems for the protocol.So I propose an alternative money creation subprotocol, in which account keepers (everyone in the first protocol, or the servers in the second protocol) instead decide and agree on the amount of b-money to be created each period, with the cost of creating that money determined by an auction. Each money creation period is divided up into four phases, as follows:Planning. The account keepers compute and negotiate with each other to determine an optimal increase in the money supply for the next period. Whether or not the account keepers can reach a consensus, they each broadcast their money creation quota and any macroeconomic calculations done to support the figures.Bidding. Anyone who wants to create b-money broadcasts a bid in the form of <x, y> where x is the amount of b-money he wants to create, and y is an unsolved problem from a predetermined problem class. Each problem in this class should have a nominal cost (in MIPS-years say) which is publicly agreed on.Computation. After seeing the bids, the ones who placed bids in the bidding phase may now solve the problems in their bids and broadcast the solutions.Money creation. Each account keeper accepts the highest bids (among those who actually broadcasted solutions) in terms of nominal cost per unit of b-money created and credits the bidders' accounts accordingly."}
{"prompt": "The Crypto Anarchist Manifesto", "completion": "A specter is haunting the modern world, the specter of crypto anarchy.Computer technology is on the verge of providing the ability for individuals and groups to communicate and interact with each other in a totally anonymous manner. Two persons may exchange messages, conduct business, and negotiate electronic contracts without ever knowing the True Name, or legal identity, of the other. Interactions over networks will be untraceable, via extensive re- routing of encrypted packets and tamper-proof boxes which implement cryptographic protocols with nearly perfect assurance against any tampering. Reputations will be of central importance, far more important in dealings than even the credit ratings of today. These developments will alter completely the nature of government regulation, the ability to tax and control economic interactions, the ability to keep information secret, and will even alter the nature of trust and reputation.The technology for this revolution--and it surely will be both a social and economic revolution--has existed in theory for the past decade. The methods are based upon public-key encryption, zero-knowledge interactive proof systems, and various software protocols for interaction, authentication, and verification. The focus has until now been on academic conferences in Europe and the U.S., conferences monitored closely by the National Security Agency. But only recently have computer networks and personal computers attained sufficient speed to make the ideas practically realizable. And the next ten years will bring enough additional speed to make the ideas economically feasible and essentially unstoppable. High-speed networks, ISDN, tamper-proof boxes, smart cards, satellites, Ku-band transmitters, multi-MIPS personal computers, and encryption chips now under development will be some of the enabling technologies.The State will of course try to slow or halt the spread of this technology, citing national security concerns, use of the technology by drug dealers and tax evaders, and fears of societal disintegration. Many of these concerns will be valid; crypto anarchy will allow national secrets to be trade freely and will allow illicit and stolen materials to be traded. An anonymous computerized market will even make possible abhorrent markets for assassinations and extortion. Various criminal and foreign elements will be active users of CryptoNet. But this will not halt the spread of crypto anarchy.Just as the technology of printing altered and reduced the power of medieval guilds and the social power structure, so too will cryptologic methods fundamentally alter the nature of corporations and of government interference in economic transactions. Combined with emerging information markets, crypto anarchy will create a liquid market for any and all material which can be put into words and pictures. And just as a seemingly minor invention like barbed wire made possible the fencing-off of vast ranches and farms, thus altering forever the concepts of land and property rights in the frontier West, so too will the seemingly minor discovery out of an arcane branch of mathematics come to be the wire clippers which dismantle the barbed wire around intellectual property.Arise, you have nothing to lose but your barbed wire fences!"}
{"prompt": "Crypto Anarchy and Virtual Communities", "completion": "The combination of strong, unbreakable public key cryptography and virtual network communities in cyberspace will produce interesting and profound changes in the nature of economic and social systems. Crypto anarchy is the cyberspatial realization of anarcho-capitalism, transcending national boundaries and freeing individuals to make the economic arrangements they wish to make consensually.Strong cryptography, exemplified by RSA (a public key algorithm) and PGP (Pretty Good Privacy), provides encryption that essentially cannot be broken with all the computing power in the universe. This ensures security and privacy. Public key cryptography is rightly considered to be a revolution.Digital mixes, or anonymous remailers, use crypto to create untraceable e-mail, which has many uses. (Numerous anonymous remailers, in several countries, are now operating. Message traffic is growing exponentially.)Digital pseudonyms, the creation of persistent network personas that cannot be forged by others and yet which are unlinkable to the \"true names\" of their owners, are finding major uses in ensuring free speech, in allowing controversial opinions to be aired, and in providing for economic transactions that cannot be blocked by local governments. The technology being deployed by the Cypherpunks and others, means their identities, nationalities, and even which continents they are on are untraceable -- unless they choose to reveal this information. This alters the conventional \"relationship topology\" of the world, allowing diverse interactions without external governmental regulation, taxation, or interference.Digital cash, untraceable and anonymous (like real cash), is also coming, though various technical and practical hurdles remain. \"Swiss banks in cyberspace\" will make economic transactions much more liquid and much less subject to local rules and regulations. Tax avoidance is likely to be a major attraction for many. An example of local interest to Monte Carlo might be the work underway to develop anonymous, untraceable systems for \"cyberspace casinos.\" While not as attractive to many as elegant casinos, the popularity of \"numbers games\" and bookies in general suggests a opportunity to pursue.Data havens and information markets are already springing up, using the methods described to make information retrievable anonymously and untraceably.Governments see their powers eroded by these technologies, and are taking various well-known steps to try to limit the use of strong crypto by their subjects. The U.S. has several well-publicized efforts, including the Clipper chip, the Digital Telephony wiretap law, and proposals for \"voluntary\" escrow of cryptographic keys. Cypherpunks and others expect these efforts to be bypassed. Technology has let the genie out of the bottle. Crypto anarchy is liberating individuals from coercion by their physical neighbors\u2014who cannot know who they are on the Net\u2014and from governments. For libertarians, strong crypto provides the means by which government will be avoided.The presentation will describe how several of these systems work, briefly, and will outline the likely implications of this combination of crypto anarchy and virtual cyberspace communities.This paper describes the combination of two major technologies:This paper describes the combination of two major technologies:These areas have generally remained separate, at least in published papers. Certainly the developers of cyberspace systems, such as MUDs, MOOs, and Habitat-like systems, appreciate the importance of cryptography for user authentication, overall security, and certainly for (eventual) digital purchase of services. But for the most part the combination of these two areas has been the province of the science fiction writer, notably writers such as Vernor Vinge, William Gibson, Bruce Sterling, and Orson Scott Card.The \"Cypherpunks\" group, a loose, anarchic mailing list and group of hackers, was formed by several of us in 1992 as a group to make concrete some of the abstract ideas often presented at conferences. We've had some successes, and some failures.[1] The Cypherpunks group also appeared at a fortuitous time, as PGP was becoming popular, as Wired magazine appeared (they featured us on the cover of their second issue), and as the publicity (hype?) about the Information Superhighway and the World Wide Web reached a crescendo.The site ftp.csua.berkeley.edu has a number of essays and files, including crypto files, in the directory pub/cypherpunks. I have also written/ compiled a very large 1.3 MB FAQ on these issues, the Cyphernomicon, available at various sites, including my ftp directory, ftp.netcom.com, in the directory pub/tc/tcmay.The Cypherpunks group is also a pretty good example of a \"virtual community.\" Scattered around the world, communicating electronically in matters of minutes, and seeming oblivious to local laws, the Cypherpunks are indeed a community, and a virtual one. Many members use pseudonyms, and use anonymous remailers to communicate with the list. The list itself thus behaves as a \"message pool,\" a place where information of all sort may be anonymous deposited\u2014and anonymous received (since everyone sees the entire list, like a newspaper, the intended recipient is anonymized).Legal Caveat: Consult your local laws before applying any of the methods described here. In some jurisdictions, it may be illegal to even read papers like this (seriously). In particular, I generally won't be giving ftp site addresses for copies of PGP, remailer access, digital cash systems, etc. These are well-covered in more current forums, e.g., sci.crypt or talk.politics.crypto, and there are some unresolved issues about whether giving the address of such sites constitutes (or \"aids and abets\") violation of various export and munitions laws (crypto is considered a munition in the U.S. and probably elsewhere....some nations consider a laser printer to be a munitions item!).The past two decades have produced a revolution in cryptography (crypto, for short) the science of the making of ciphers and codes. Beyond just simple ciphers, useful mainly for keeping communications secret, modern crypto includes diverse tools for authentication of messages, for digital timestamping of documents, for hiding messages in other documents (steganography), and even for schemes for digital cash.Public key cryptography, the creation of Diffie and Hellman, has dramatically altered the role of crypto. Coming at the same time as the wholesale conversion to computer networks and worldwide communications, it has been a key element of security, confidence, and success. The role of crypto will only become more important over the coming decades.Pretty Good Privacy, PGP, is a popular version of the algorithm developed by Rivest, Shamir, and Adleman, known of course as RSA. The RSA algorithm was given a patent in the U.S., though not in any European countries, and is licensed commercially.[2]These tools are described in detail in various texts and Conference proceedings, and are not the subject of this paper.[3] The focus here is on the implications of strong crypto for cyberspace, especially on virtual communities.Mention should be made of the role of David Chaum in defining the key concepts here. In several seminal papers (for example,[4][5]), Chaum introduced the ideas of using public key cryptography methods for anonymous, untraceable electronic mail, for digital money systems in which spender identity is not revealed, and in schemes related to these. (I make no claims of course that Chaum agrees with my conclusions about the political and socioeconomic implications of these results.)Notes: cyberspace, Habitat, VR, Vinge, etc. Crypto holds up the \"walls\" of these cyberspatial realities. Access control, access rights, modification privileges.Virtual communities are the networks of individuals or groups which are not necessarily closely-connected geographically. The \"virtual\" is meant to imply a non-physical linking, but should not be taken to mean that these are any less community-like than are conventional physical communities.Examples include churches, service organizations, clubs, criminal gangs, cartels, fan groups, etc. The Catholic Church and the Boy Scouts are both examples of virtual communities which span the globe, transcend national borders, and create a sense of allegiance, of belonging, and a sense of \"community.\" Likewise, the Mafia is a virtual community (with its enforcement mechanisms, its own extra-legal rules, etc.) Lots of other examples: Masons, Triads, Red Cross, Interpol, Islam, Judaism, Mormons, Sindero Luminoso, the IRA, drug cartels, terrorist groups, Aryan Nation, Greenpeace, the Animal Liberation Front, and so on. There are undoubtedly many more such virtual communities than there are nation-states, and the ties that bind them are for the most part much stronger than are the chauvinist nationalism emotions. Any group in which the common interests of the group, be it a shared ideology or a particular interest, are enough to create a cohesive community.Corporations are another prime example of a virtual community, having scattered sites, private communication channels (generally inaccessible to the outside world, including the authorities), and their own goals and methods. In fact, many \"cyberpunk\" (not cypherpunk) fiction authors make a mistake, I think, in assuming the future world will be dominated by transnational megacorporate \"states.\" In fact, corporations are just one example\u2014of many\u2014of such virtual communities which will be effectively on a par with nation-states. (Note especially that any laws designed to limit use of crypto cause immediate and profound problems for corporations-countries like France and the Philippines, which have attempted to limit the use of crypto, have mostly been ignored by corporations. Any attempts to outlaw crypto will produce a surge of sudden \"incorporations,\" thus gaining for the new corporate members the aegis of corporate privacy.)In an academic setting, \"invisible colleges\" are the communities of researchers.These virtual communities typically are \"opaque\" to outsiders. Attempts to gain access to the internals of these communities are rarely successful. Law enforcement and intelligence agencies (such as the NSA in the U.S., Chobetsu in Japan, SDECE in France, and so on, in every country) may infiltrate such groups and use electronic surveillance (ELINT) to monitor these virtual communities. Not surprisingly, these communities are early adopters of encryption technology, ranging from scrambled cellphones to full-blown PGP encryption.[6]The use of encryption by \"evil\" groups, such as child pornographers, terrorists, abortionists, abortion protestors, etc., is cited by those who wish to limit civilian access to crypto tools. We call these the \"Four Horseman of the Infocalypse,\" as they are so often cited as the reason why ordinary citizen-units of the nation-state are not to have access to crypto.This is clearly a dangerous argument to make, for various good reasons. The basic right of free speech is the right to speak in a language one's neighbors or governing leaders may not find comprehensible: encrypted speech. There's not enough space here to go into the many good arguments against a limit on access to privacy, communications tools, and crypto.The advent of full-featured communications systems for computer-mediated virtual communities will have even more profound implications. MUDs and MOOs (multi-user domains, etc.) and 3D virtual realities are one avenue, and text-centric Net communications are another. (Someday, soon, they'll merge, as described in Vernor Vinge's prophetic 1980 novella, True Names.)An interesting way to view issues of network visibility is in terms of the \"transparency\" of nodes and links between nodes. Transparent means visible to outsiders, perhaps those in law enforcement or the intelligence community. Opaque mean not transparent, not visible. A postcard is transparent, a sealed letter is opaque. PGP inventor Phil Zimmermann has likened the requirement for transparency to being ordered to use postcards for all correspondence, with encryption the equivalent of an opaque envelope (envelopes can be opened, of course, and long have been).Transparent links and nodes are the norm in a police state, such as the U.S.S.R., Iraq, China, and so forth. Communications channels are tapped, and private use of computers is restricted. (This is becoming increasingly hard to do, even for police states; many cite the spread of communications options as a proximate cause of the collapse of communism in recent years.)There are interesting \"chemistries\" or \"algebras\" of transparent vs. opaque links and nodes. What happens if links must be transparent, but nodes are allowed to be opaque? (The answer: the result is as if opaque links and nodes were allowed, i.e., full implications of strong crypto. Hence, any attempt to ban communications crypto while still allowing private CPUs to exist....)If Alice and Bob are free to communicate, and to choose routing paths, then Alice can use \"crypto arbitrage\" (a variation on the term, \"regulatory arbitrage,\" the term Eric Hughes uses to capture this idea of moving transactions to other jurisdictions) to communicate with sites\u2014perhaps in other countries\u2014that will perform as she wishes. This can mean remailing, mixing, etc. As an example, Canadian citizens who are told they cannot access information on the Homolka-Teale murder case (a controversial case in which the judge has ordered the media in Canada, and entering Canada, not to discuss the gory details) nevertheless have a vast array of options, including using telnet, gopher, ftp, the Web, etc., to access sites in many other countries--or even in no country in particular.Most of the consequences described here arise from this chemistry of links and nodes: unless nearly all node and links are forced to be transparent, including links to other nations and the nodes in those nations, then the result is that private communication can still occur. Crypto anarchy results.\"The Net is an anarchy.\" This truism is the core of crypto anarchy. No central control, no ruler, no leader (except by example, reputation), no \"laws.\" No single nation controls the Net, no administrative body sets policy. The Ayatollah in Iran is as powerless to stop a newsgroup\u2014alt.wanted.moslem.women or alt.wanted.moslem.gay come to mind\u2014he doesn't like as the President of France is as powerless to stop, say, the abuse of French in soc.culture.french. Likewise, the CIA can't stop newsgroups, or sites, or Web pages, which give away their secrets. At least not in terms of the Net itself...what non-Net steps might be taken is left as an exercise for the paranoid and the cautious.This essential anarchy is much more common than many think. Anarchy\u2014the absence of a ruler telling one what to do\u2014is common in many walks of life: choice of books to read, movies to see, friends to socialize with, etc. Anarchy does not mean complete freedom\u2014one can, after all, only read the books which someone has written and had published\u2014but it does mean freedom from external coercion. Anarchy as a concept, though, has been tainted by other associations.First, the \"anarchy\" here is not the anarchy of popular conception: lawlessness, disorder, chaos, and \"anarchy.\" Nor is it the bomb-throwing anarchy of the 19th century \"black\" anarchists, usually associated with Russia and labor movements. Nor is it the \"black flag\" anarchy of anarcho-syndicalism and writers such as Proudhon. Rather, the anarchy being spoken of here is the anarchy of \"absence of government\" (literally, \"an arch,\" without a chief or head).This is the same sense of anarchy used in \"anarchocapitalism,\" the libertarian free market ideology which promotes voluntary, uncoerced economic transactions.[7] I devised the term crypto anarchy as a pun on crypto, meaning \"hidden,\" on the use of \"crypto\" in combination with political views (as in Gore Vidal's famous charge to William F. Buckley: \"You crypto fascist!\"), and of course because the technology of crypto makes this form of anarchy possible. The first presentation of this was in a 1988 \"Manifesto,\" whimsically patterned after another famous manifesto.[8] Perhaps a more popularly understandable term, such as \"cyber liberty,\" might have some advantages, but crypto anarchy has its own charm, I think.And anarchy in this sense does not mean local hierarchies don't exist, nor does it mean that no rulers exist. Groups outside the direct control of local governmental authorities may still have leaders, rulers, club presidents, elected bodies, etc. Many will not, though.Politically, virtual communities outside the scope of local governmental control may present problems of law enforcement and tax collection. (Some of us like this aspect.) Avoidance of coerced transactions can mean avoidance of taxes, avoidance of laws saying who one can sell to and who one can't, and so forth. It is likely that many will be unhappy that some are using cryptography to avoid laws designed to control behavior.National borders are becoming more transparent than ever to data. A flood of bits crosses the borders of most developed countries\u2014phone lines, cables, fibers, satellite up/downlinks, and millions of diskettes, tapes, CDs, etc. Stopping data at the borders is less than hopeless.Finally, the ability to move data around the world at will, the ability to communicate to remote sites at will, means that a kind of \"regulatory arbitrage\" can be used to avoid legal roadblocks. For example, remailing into the U.S. from a site in the Netherlands...whose laws apply? (If one thinks that U.S. laws should apply to sites in the Netherlands, does Iraqi law apply in the U.S.? And so on.)This regulatory arbitrage is also useful for avoiding the welter of laws and regulations which operations in one country may face, including the \"deep pockets\" lawsuits so many in the U.S. face. Moving operations on the Net outside a litigious jurisdiction is one step to reduce this business liability. Like Swiss banks, but different.Something needs to be said about the role of anonymity and digital pseudonyms. This is a topic for an essay unto itself, of course.Are true names really needed? Why are they asked for? Does the nation-state have any valid reason to demand they be used?People want to know who they are dealing with, for psychological/evolutionary reasons and to better ensure traceability should they need to locate a person to enforce the terms of a transaction. The purely anonymous person is perhaps justifiably viewed with suspicion.And yet pseudonyms are successful in many cases. And we rarely know whether someone who presents himself by some name is \"actually\" that person. Authors, artists, performers, etc., often use pseudonyms. What matters is persistence, and nonforgeability. Crypto provides this.On the Cypherpunks list, well-respected digital pseudonyms have appeared and are thought of no less highly than their \"real\" colleagues are.The whole area of digitally-authenticated reputations, and the \"reputation capital\" that accumulates or is affected by the opinions of others, is an area that combines economics, game theory, psychology, and expectations. A lot more study is needed.It is unclear if governments will move to a system of demanding \"Information Highway Driver's Licenses,\" figuratively speaking, or how systems like this could ever be enforced. (The chemistry of opaque nodes and links, again.)It surprises many people that some of these uses are already being intensively explored. Anonymous remailers are used by tens of thousands of persons-and perhaps abused.[9] And of course encryption, via RSA, PGP, etc., is very common in some communities. (Hackers, Net users, freedom fighters, white separatists, etc....I make no moral judgments here about those using these methods).Remailers are a good example to look at in more detail. There are two current main flavors of remailers:\"Cypherpunk\"-style remailers, which process text messages to redirect mail to another sites, using a command syntax that allows arbitrary nesting of remailing (as many sites as one wishes), with PGP encryption at each level of nesting.\"Julf\"-style remailer(s), based on the original work of Karl Kleinpaste and operated/maintained by Julf Helsingius, in Finland. No encryption, and only one such site at present. (This system has been used extensively for messages posted to the Usenet, and is basically successful. The model is based on operator trustworthiness, and his location in Finland, beyond the reach of court orders and subpoenas from most countries.)The Cypherpunks remailers currently number about 20, with more being added every month. There is no reason not to expect hundreds of such remailers in a few years.One experimental \"information market\" is BlackNet, a system which appeared in 1993 and which allows fully-anonymous, two-way exchanges of information of all sorts. There are reports that U.S. authorities have investigated this because of its presence on networks at Defense Department research labs. Not much they can do about it, of course, and more such entities are expected.(The implications for espionage are profound, and largely unstoppable. Anyone with a home computer and access to the Net or Web, in various forms, can use these methods to communicate securely, anonymously or pseudonymously, and with little fear of detection. \"Digital dead drops\" can be used to post information obtained, far more securely than the old physical dead drops...no more messages left in Coke cans at the bases of trees on remote roads.)Whistleblowing is another growing use of anonymous remailers, with folks fearing retaliation using remailers to publicly post information. (Of course, there's a fine line between whistleblowing, revenge, and espionage.)Data havens, for the storage and marketing of controversial information is another area of likely future growth. Nearly any kind of information, medical, religious, chemical, etc., is illegal or proscribed in one or more countries, so those seeking this illegal information will turn to anonymous messaging systems to access\u2014and perhaps purchase, with anonymous digital cash\u2014this information. This might include credit data bases, deadbeat renter files, organ bank markets, etc. (These are all things which have various restrictions on them in the U.S., for example....one cannot compile credit data bases, or lists of deadbeat renters, without meeting various restrictions. A good reason to move them into cyberspace, or at least outside the U.S., and then sell access through remailers.)Matching buyers and sellers of organs is another such market. A huge demand (life and death), but various laws tightly controlling such markets.Digital cash efforts. A lot has been written about digital cash.[10] [11] David Chaum's company, DigiCash, has the most interesting technology, and has recently begun market testing. Stefan Brands may or may not have a competing system which gets around some of Chaum's patents. (The attitude crypto anarchists might take about patents is another topic for discussion. Suffice it to say that patents and other intellectual property issues continue to have relevance in the practical world, despite erosion by technological trends.)Credit card-based systems, such as the First Virtual system, are not exactly digital cash, in the Chaumian sense of blinded notes, but offer some advantages the market may find useful until more advanced systems are available.I expect to see many more such experiments over the next several years, and some of them will likely be market successes.How will these ideas affect the development of cyberspace?\"You can't eat cyberspace\" is a criticism often levelled at argument about the role of cyberspace in everyday life. The argument made is that money and resources \"accumulated\" in some future (or near-future) cyberspatial system will not be able to be \"laundered\" into the real world. Even such a prescient thinker as Neal Stephenson, in Snow Crash, had his protagonist a vastly wealthy man in \"The Multiverse,\" but a near-pauper in the physical world.This is implausible for several reasons. First, we routinely see transfers of wealth from the abstract world of stock tips, arcane consulting knowledge, etc., to the real world. \"Consulting\" is the operative word. Second, a variety of means of laundering money, via phony invoices, uncollected loans, art objects, etc., are well-known to those who launder money...these methods, and more advanced ones to come, are likely to be used by those who wish their cyberspace profits moved into the real world.(Doing this anonymously, untraceably, is another complication. There may be methods of doing this--proposals have looked pretty solid, but more work is needed.)The World Wide Web is growing at an explosive pace. Combined with cryptographically-protected communication and digital cash of some form (and there are several being tried), this should produce the long-awaited colonization of cyberspace.Most Net and Web users already pay little attention to the putative laws of their local regions or nations, apparently seeing themselves more as members of various virtual communities than as members of locally-governed entities. This trend is accelerating.Most importantly, information can be bought and sold (anonymously, too) and then used in the real world. There is no reason to expect that this won't be a major reason to move into cyberspace.I've touched on the implications in several places. Many thoughtful people are worried about some of the possibilities made apparent by strong crypto and anonymous communication systems. Some are proposing restrictions on access to crypto tools. The recent debate in the U.S. over \"Clipper\" and other key escrow systems shows the strength of emotions on this issue.Abhorrent markets may arise. For example, anonymous systems and untraceable digital cash have some obvious implications for the arranging of contract killings and such. (The greatest risk in arranging such hits is that physical meetings expose the buyers and sellers of such services to stings. Crypto anarchy lessens, or even eliminates, this risk, thus lowering transaction costs. The risks to the actual triggermen are not lessened, but this is a risk the buyers need not worry about. Think of anonymous escrow services which hold the digital money until the deed is done. Lots of issues here. It is unfortunate that this area is so little-discussed....people seem to have an aversion for exploring the logical consequences in such areas.)The implications for corporate and national espionage have already been touched upon. Combined with liquid markets in information, this may make secrets much harder to keep. (Imagine a \"Digital Jane's,\" after the military weapons handbooks, anonymously compiled and sold for digital money, beyond the reach of various governments which don't want their secrets told.)New money-laundering approaches are of course another area to explore.Something that is inevitable is the increased role of individuals, leading to a new kind of elitism. Those who are comfortable with the tools described here can avoid the restrictions and taxes that others cannot. If local laws can be bypassed technologically, the implications are pretty clear.The implications for personal liberty are of course profound. No longer can nation-states tell their citizen-units what they can have access to, not if these citizens can access the cyberspace world through anonymous systems.I am making no bold predictions that these changes will sweep the world anytime soon. Most people are ignorant of these methods, and the methods themselves are still under development. A wholesale conversion to \"living in cyberspace\" is just not in the cards, at least not in the next few decades.But to an increasingly large group, the Net is reality. It is where friends are made, where business is negotiated, where intellectual stimulation is found. And many of these people are using crypto anarchy tools. Anonymous remailers, message pools, information markets. Consulting via pseudonyms has begun to appear, and should grow. (As usual, the lack of a robust digital cash system is slowing things down.Can crypto anarchy be stopped? Although the future evolution in unclear, as the future almost always is, it seems unlikely that present trends can be reversed:The Net is integrally tied to economic transactions, and no country can afford to \"disconnect\" itself from it. (The U.S.S.R. couldn't do it, and they were light-years behind the U.S., European, and Asian countries. And in a few more years, no hope of limiting these tools at all, something the U.S. F.B.I. has acknowledged.[13]Technological Inevitability: These tools are already in widespread use, and only draconian steps to limit access to computers and communications channels could significantly impact further use. (Scenarios for restrictions on private use of crypto.)As John Gilmore has noted, \"the Net tends to interpret censorship as damage, and routes around it.\" This applies as well to attempts to legislate behavior on the Net. (The utter impossibility of regulating the worldwide Net, with entry points in more than a hundred nations, with millions of machines, is not yet fully recognized by most national governments. They still speak in terms of \"controlling\" the Net, when in fact the laws of one nation generally have little use in other countries.)Digital money in its various forms is probably the weakest link at this point. Most of the other pieces are operational, at least in basic forms, but digital cash is (understandably) harder to deploy. Hobbyist or \"toy\" experiments have been cumbersome, and the \"toy\" nature is painfully obvious. It is not easy to use digital cash systems at this time (\"To use Magic Money, first create a client...\"), especially as compared to the easily understood alternatives.[14] People are understandably reluctant to entrust actual money to such systems. And it's not yet clear what can be bought with digital cash (a chicken or egg dilemma, likely to be resolved in the next several years).And digital cash, digital banks, etc., are a likely target for legislative moves to limit the deployment of crypto anarchy and digital economies. Whether through banking regulation or tax laws, it is not likely that digital money will be deployed easily. \"Kids, don't try this at home!\" Some of the current schemes may also incorporate methods for reporting transactions to the tax authorities, and may include \"software key escrow\" features which make transactions fully or partly visible to authorities.Strong crypto provides new levels of personal privacy, all the more important in an era of increased surveillance, monitoring, and the temptation to demand proofs of identity and permission slips. Some of the \"credentials without identity\" work of Chaum and others may lessen this move toward a surveillance society.The implications are, as I see it, that the power of nation-states will be lessened, tax collection policies will have to be changed, and economic interactions will be based more on personal calculations of value than on societal mandates.Is this a Good Thing? Mostly yes. Crypto anarchy has some messy aspects, of this there can be little doubt. From relatively unimportant things like price-fixing and insider trading to more serious things like economic espionage, the undermining of corporate knowledge ownership, to extremely dark things like anonymous markets for killings.But let's not forget that nation-states have, under the guise of protecting us from others, killed more than 100 million people in this century alone. Mao, Stalin, Hitler, and Pol Pot, just to name the most extreme examples. It is hard to imagine any level of digital contract killings ever coming close to nationstate barbarism. (But I agree that this is something we cannot accurately speak about; I don't think we have much of a choice in embracing crypto anarchy or not, so I choose to focus on the bright side.)It is hard to argue that the risks of anonymous markets and tax evasion are justification for worldwide suppression of communications and encryption tools. People have always killed each other, and governments have not stopped this (arguably, they make the problem much worse, as the wars of this century have shown).Also, there are various steps that can be taken to lessen the risks of crypto anarchy impinging on personal safety.[15]Strong crypto provides a technological means of ensuring the practical freedom to read and write what one wishes to. (Albeit perhaps not in one's true name, as the nation-state-democracy will likely still try to control behavior through majority votes on what can be said, not said, read, not read, etc.) And of course if speech is free, so are many classes of economic interaction that are essentially tied to free speech.A phase change is coming. Virtual communities are in their ascendancy, displacing conventional notions of nationhood. Geographic proximity is no longer as important as it once was.A lot of work remains. Technical cryptography still hasn't solved all problems, the role of reputations (both positive and negative) needs further study, and the practical issues surrounding many of these areas have barely been explored.We will be the colonizers of cyberspace.My thanks to my colleagues in the Cypherpunks group, all 700 of them, past or present. Well over 100 megabytes of list traffic has passed through he Cypherpunks mailing list, so there have been a lot of stimulating ideas. But especially my appreciation goes to Eric Hughes, Sandy Sandfort, Duncan Frissell, Hal Finney, Perry Metzger, Nick Szabo, John Gilmore, Whit Diffie, Carl Ellison, Bill Stewart, and Harry Bartholomew. Thanks as well to Robin Hanson, Ted Kaehler, Keith Henson, Chip Morningstar, Eric Dean Tribble, Mark Miller, Bob Fleming, Cherie Kushner, Michael Korns, George Gottlieb, Jim Bennett, Dave Ross, Gayle Pergamit, and\u2014especially\u2014the late Phil Salin. Finally, thanks for valuable discussions, sometimes brief, sometimes long, with Vernor Vinge, David Friedman, Rudy Rucker, David Chaum, Kevin Kelly, and Steven Levy.The Cypherpunks group was mainly formed by Eric Hughes, Tim May, and John Gilmore. It began both physical meetings, in the Bay Area and elsewhere, and virtual meetings on an unmoderated mailing list. The name was provided by Judith Milhon, as a play on the \"cyberpunk\" genre and the British spelling of cipher. The mailing list can be subscribed to by sending the single message subscribe cypherpunks in the body of a message to majordomo@toad.com. Expect at least 50 messages a day. About 600 subscribers in many countries are presently on the list. Some are pseudonyms. \u21a9RSA Data Security Inc., Redwood Shores, California, is the license administrator. Contact them for details. \u21a9Many crypto texts exist. A good introduction is Bruce Schneier's Applied Cryptography, John Wiley and Sons, 1994. This text includes pointers to many other sources. The \"Crypto\" Proceedings (Advances in Cryptology, Springer-Verlag, annually) are essential references. The annual Crypto conference in Santa Barbara, and the Eurocrypt and Auscrypt conferences, are where most crypto results are presented. \u21a9David Chaum, \"Untraceable Electronic Mail, Return Addresses, and Digital Pseudonyms,\" Comm. ACM 24, 2, February 1981, pp. 84-88. Cypherpunks-style remailers are a form of Chaum's \"digital mixes,\" albeit far from ideal. \u21a9David Chaum, \"Security without Identification: Transaction Systems to make Big Brother Obsolete,\" Comm. ACM 28, 10, October 1985. This is an early paper on digital cash...be sure to consult more recent papers. \u21a9The political opposition in Myan Mar\u2014formerly Burma\u2014is using Pretty Good Privacy running on DOS laptops in the jungles for communications amongst the rebels, according to Phil Zimmermann, author of PGP. This life-and-death usage underscores the role of crypto. \u21a9David Friedman, The Machinery of Freedom, 2nd edition. A leading theoretician of anarcho-capitalism. (Hayek was another.) \u21a9Tim May, The Crypto Anarchist Manifesto, July 1988, distributed on the Usenet and on various mailing lists. \u21a9Abuse, according to some views, of remailers is already occurring. A Cypherpunks-type remailer was used to post a proprietary hash function of RSA Data Security, Inc. to the Usenet. (Let me hasten to add that it was not a remailer I operate, or have control over, etc.) \u21a9article on digital cash, The Economist, 26 November 1994. pp. 21-23. \u21a9article on digital cash, Steven Levy, Wired. December 1994. \u21a9See Kevin Kelly's Out of Control, 1994, for a discussion of how central control is failing, and how the modern paradigm is one of market mechanisms, personal choice, and technological empowerment. \u21a9During the \"Digital Telephony Bill\" debate, an FBI official said that failure to mandate wiretap capabilities within the next 18 months would make it all moot, as the cost would rise beyond any reasonable budget (currently $500 million for retrofit costs). \u21a9\"Magic Money\" was an experimental implementation of Chaum's digital cash system. It was coded by \"Pr0duct Cypher,\" a pseudonymous member of the Cypherpunks list\u2014none of us knows his real identity, as he used remailers to communicate with the list, and digitally signed his posts. Many of us found it too difficult to use, which is more a measure of the deep issues involved in using digital analogs (no pun intended) to real, physical money. \u21a9Robin Hanson and David Friedman have written extensively about scenarios for dealing with the threats of extortionists, would-be assassins, etc. I am hoping some of their work gets published someday. (Much of the discussion was in 1992-3, on the \"Extropians\" mailing list.) \u21a9"}
{"prompt": "Formalizing and Securing Relationships on Public Networks", "completion": "History has seen successive revolutions in the costs of doing global business. First transportation, then manufacturing, and recently communications costs have fallen dramatically. Yet there are still major barriers to doing business internationally. The cost of doing business globally is increasingly dominated by issues of jurisdiction, security, and trust: the costs of developing, maintaining, and securing our relationships.Despite the recent rise of global computer networks, our institutions still take for granted that we live in a world of paper. We formalize our relationships with written contracts, written laws, and forms designed for paper. Our attitudes and laws regarding intellectual property and privacy have assumed a world of paper which is costly to copy. Increasingly, we can no longer take these deeply embedded, highly evolved paper institutions for granted. Nor, since these institutions involve complex human relationships, can we redesign them overnight. We are entering a period where civilization must once again adapt to a radical new media.Over the long stretch civilization, paper represents only one of many technologies used to mediate commercial relationships. The Inca used quipu \u2013 accounts encoded on strings, a system with interesting tamper-resistance properties. Early Middle Eastern civilizations used clay tokens for thousands of years. These combined the function of, and were a precursor to, both cuneiform writing and coins. Coins started out as lumps of standardize metal and weight. Since these were too expensive to test during a normal business transaction, they came to be stamped by reputable or powerful authorities. Coins played a major role in commerce for thousands of years, but that era is now over.Business is now dominated by paper and institutions of written literacy. Security measures have included chops, seals, and written signatures. Value has been transered via bills of exchange (which evolved into checks), bearer certificates, and accounts using the double-entry bookeeping system. Most importantly, we take for granted that contracts and law are written on this static medium, to be interpreted and enforced by human authorities.We are now entering an era of online communications and software \"literacy\". The \"physics of cyberspace\", studied by computer scientists, are radically different from the properties of paper, to an even greater degree than paper was different from string, clay, and metal. Not only written but also aural, visual, and other sensory media can be combined. Most importantly, digital media are dynamic \u2013 they not only transmit information, but can also make some kinds of decisions. Digital media can perform calculations, directly operate machinery, and work through some kinds of reasoning much more efficiently than humans.The movement from static to dynamic media promises to bring about a fourth cost revolution in the related areas of jurisdiction, trust, and security. Impacts on business will be felt in law, accounting, auditing, billing, collections, contracts, confidentiality, and so on: in short, the entire nature of our business relationships will be altered in ways only partially foreseeable.The main traditional way to formalize a business relationship is the contract, a set of promises agreed to in a \"meeting of the minds\". We naturally think of contracts as written, but oral agreements are also considered contracts, and have been around since prehistory. The contract is the basic building block of a market economy. Over many centuries of cultural evolution has emerged both the concept of contract and principles related to it, encoded into common law. Such evolved structures are often prohibitively costly to rederive. If we started from scratch, using reason and experience, it could take many centuries to redevelop sophisticated ideas like contract law and property rights that make the modern market work. But the digital revolution challenges us to develop new institutions in a much shorter period of time. By extracting from our current laws, procedures, and theories those principles which remain applicable in cyberspace, we can retain much of this deep tradition, and greatly shorten the time needed to develop useful digital institutions.Computers make possible the running of algorithms heretofore prohibitively costly, and networks the quicker transmission of larger and more sophisticated messages. Furthermore, computer scientists and cryptographers have recently discovered many new and quite interesting algorithms. Combining these messages and algorithms makes possible a wide variety of new protocols. These protocols, running on public networks such as the Internet, both challenge and enable us to formalize and secure new kinds of relationships in this new environment, just as contract law, business forms, and accounting controls have long formalized and secured business relationships in the paper-based world.In electronic commerce so far, the design criteria important for automating contract execution have come from disparate fields like economics and cryptography, with little cross-communication: little awareness of the technology on the one hand, and little awareness of its best business uses other. These efforts are striving after common objectives, and converge on the concept of smart contracts[1].Smart contracts reduce mental and computational transaction costs imposed by either principals, third parties, or their tools. The contractual phases of search, negotiation, commitment, performance, and adjudication constitute the realm of smart contracts. This article covers all phases, with an emphasis on performance. Smart contracts utilize protocols and user interfaces to facilitate all steps of the contracting process. This gives us new ways to formalize and secure digital relationships which are far more functional than their inanimate paper-based ancestors.The basic idea behind smart contracts is that many kinds of contractual clauses (such as collateral, bonding, delineation of property rights, etc.) can be embedded in the hardware and software we deal with, in such a way as to make breach of contract expensive (if desired, sometimes prohibitively so) for the breacher. A canonical real-life example, which we might consider to be the primitive ancestor of smart contracts, is the humble vending machine. Within a limited amount of potential loss (the amount in the till should be less than the cost of breaching the mechanism), the machine takes in coins, and via a simple mechanism, which makes a freshman computer science problem in design with finite automata, dispense change and product according to the displayed price. The vending machine is a contract with bearer: anybody with coins can participate in an exchange with the vendor. The lockbox and other security mechanisms protect the stored coins and contents from attackers, sufficiently to allow profitable deployment of vending machines in a wide variety of areas.Smart contracts go beyond the vending machine in proposing to embed contracts in all sorts of property that is valuable and controlled by digital means. Smart contracts reference that property in a dynamic, often proactively enforced form, and provide much better observation and verification where proactive measures must fall short.As another example, consider a hypothetical digital security system for automobiles. The smart contract design strategy suggests that we successively refine security protocols to more fully embed in a property the contractual terms which deal with it. These protocols would give control of the cryptographic keys for operating the property to the person who rightfully owns that property, based on the terms of the contract. In the most straightforward implementation, the car can be rendered inoperable unless the proper challenge-response protocol is completed with its rightful owner, preventing theft. But if the car is being used to secure credit, strong security implemented in this traditional way would create a headache for the creditor \u2013 the repo man would no longer be able to confiscate a deadbeat's car. To redress this problem, we can create a smart lien protocol: if the owner fails to make payments, the smart contract invokes the lien protocol, which returns control of the car keys to the bank. This protocol might be much cheaper and more effective than a repo man. A further reification would provably remove the lien when the loan has been paid off, as well as account for hardship and operational exceptions. For example, it would be rude to revoke operation of the car while it's doing 75 down the freeway.In this process of successive refinement we've gone from a crude security system to a reified contract:Mature security systems will be undertaking different behavior for different contracts. To continue with our example, if the automobile contract were a lease, the final payment would switch off leasee access; for purchase on credit, it would switch off creditor access. A security system, by successive redesign, increasingly approaches the logic of the contract which governs the rights and obligations covering the object, information, or computation being secured. Qualitatively different contractual terms, as well as technological differences in the property, give rise to the need for different protocols.Outside of the financial cryptography community, and long predating it, there is a deep tradition of protocols used in the course of performing contracts. These protocols consist of a flow of forms (\"data flow\", canonically displayed in data flow diagrams), along with checks and procedures called \"controls\". Controls serve many of the same functions as cryptographic protocols: integrity, authorization, and so on. This article uses \"control protocols\" or simply \"controls\" to refer to this combination of data flow and controls.Control protocols, and the professions of auditing and accounting[2] based on them, play a critical but ill-analyzed role in our economy. Economists lump them, along with other costs of negotiating and ensuring the performance of contracts, under their catch-all rubric of \"transaction costs\". But without controls, large corporations and the economies of scale they create would not be possible. Controls allow a quarrelsome species ill-suited to organizations larger than small tribes to work together on vast projects like manufacturing jumbo jets and running hospitals. These control protocols are the result of many centuries of business experience and have a long future ahead of them, but the digital revolution will soon cause these paper-era techniques to be dramatically augmented by, and eventually integrate into, smart contracts.Controls enable auditing of contract performances, allowing more precise inference of the behavior of an agent. Auditing is costly, so it is undertaken by random sampling. Economists study the substitutability between the probability of verifying a breach and the magnitude of legal fines, where physical enforcement is used. Conceivably, one could substitute increasingly high penalties for increasingly rarer and less expensive auditing. However, this is not robust to real-world conditions of imperfect information.Since controls primarily address the implicit contracts between employees and employer, there is little mapping from contract to control. A secondary function of controls to to monitor contracts with other organizations. Here there is some mapping, but it is confounded by the integration of the two functions in most controls. Rather than based on contractual terms, controls are typically based on managerial authorization.Controls are typically based around amounts of money and quantities of goods. A canonical control is double entry bookkeeping, where two books are kept, and there must be arithmetic reconciliation between the books. To conceal an irregularity, necessary to omit from both sides, or to record entries offsetting the irregularity. Notice that there is a problem distinguishing error from fraud. This problem crops up in many areas in both auditing and smart contracts. To illustrate, here are two common control techniques:Imprest: this is a family of controls involving the receipt or disbursement of bearer certificates (usually notes and coins). One example is the protocol used at most movie theaters. Entry is segregated from payment by introducing tickets and establishing two employee roles, the ticket seller in a booth, and the ticket stub salesman at the entrance. Periodically, a bookkeeper reconciles the number of tickets with the total paid. Discrepancy again indicates fraud or error.Customer audit: Techniques to get the customer to generate initial documentation of a transaction. For example, pricing goods at $.99 forces the employee to open the cash register to make change, generating a receipt.A complete control protocol typically features the generation of initial documentation, segregation of duties, and arithmetic reconciliation of quantities of goods, standard service events, and money.Of these, the segregation of duties deserves special comment.In a large business, transactions are divided up so that no single person can commit fraud. Segregation of duties is an instance of the principle of required conspiracy. For example, the functions of warehouse/delivery, sales, and receipt of payments are each performed by different parties, with a policy that each party reports every transaction to a fourth function, accounting. Any singular reported activity (e.g., delivery without receipt of payment) indicates potential fraud (e.g., a delivery was made to a customer and the payment pocketed instead of being put into the corporate treasury). Segregation of duties is the auditor's favorite tool. Where it is absent the auditor cries \"foul\", just as a good engineer would react to a single point of failure. Many cryptographic systems have rightfully gone down to commercial failure because they ground down to trust in a single entity rather than segregating functions so as to require conspiracy.There are least three significant differences between the scope and emphasis of smart contracts and controls. Controls are paper-era protocols designed around static forms, place little emphasis on confidentiality, and are based on management authorizations rather than one-to-one relationships.Smart contracts can be based on a wide variety of interactive protocols and user interfaces, and can be involved in a wide variety of kinds of contractual performance. Control protocols, developed in the era of paper, are based on static forms passed as messages and processed in tables and spreadsheets. Controls focus on money and counts of standardized goods and service events, easily recorded by numbers and manipulated by arithmetic, while mostly ignoring other kinds or aspects of contractual performance. Checksums on numbers, the basis of reconciliation, are crude and forgeable compared to cryptographic hashes. Electronic Data Interchange (EDI) keeps these static forms and maintains reliance on controls. It uses cryptographic hashes for nothing more sophisticated than integrity checks on individual messages.Controls place little emphasis on confidentiality, at least in the modern accounting literature. The emphasis on confidentiality in paper-era protocols is lacking because violation of often implicit confidences, via replication of data, was much more difficult with paper. Furthermore, technologies for protecting confidentiality while auditing were not feasible. Businesses traditionally trusted accounting firms with confidences, a trust that has eroded over the last century, and will erode still further as accounting firms start taking advantage of the vast amounts of inside and marketing information they are collecting from their customers' databases during audits. Using paper-based protocols in a digital world, there are few effective controls against the auditors themselves. Post-unforgeable transaction logs and multiparty secure computation, discussed below, indicate the possibility of cryptographic protocols to implement less relavatory but more effective auditing trails and controls; their use may be able to ameliorate the growing problems with data mining and breach of confidentiality.Auditors place quite a bit of trust in management to authorize transactions in a secure and productive manner. Objecting to this dual trust in management and distrust of employees inherent in the accounting tradition, there has been a trend in the last two decades towards a loosening of controls as a part of hierarchy flattening and empowerment of professional employees. Unfortunately, loose controls have led to several recent scandals in the banking and investment trade. The most recent view is that there must be a learned tradeoff between controls and empowerment. The smart contract view is that we need smarter controls, originating at the ownership of the company, and entailing less asymmetry between management and other professional employees. This means converting many implicit employee contracts to more explicit smart contracts based on more direct relationships between owners (or at least their directors) and employees, and symmetric formalizations between employees.Although most of these differences are biased against controls, these traditional protocols have a long future ahead of them, simply because they have a long past. They are highly evolved, hundreds of years old (double-entry bookkeeping, for example, predates the Renaissance). Smart contracts will incorporate many techniques and strategies from control protocols, such as generation of an initial record, segregation of duties, and reconciliation. It will not be long, however, before smart contracts start augmenting and transforming traditional business procedures, making a wide variety of new business structures possible and in the long run replacing traditional controls.Electronic Data Interchange (EDI) is the computer-to-computer communication of standardized business transactions between organizations, in a standard format that permits the receiver to perform the intended transaction. It renders traditional static business forms in cyberspace, and maintains the dependence on traditional controls. Beyond simple encryption and integrity checks, EDI does not take advantage of algorithms and protocols to add security and \"smarts\" to business relationships. It enables more rapid execution of traditional negotiation and performance monitoring procedures.EDI loses some security features provided by physical paper (such as difficulty of copying) while not gaining advantages from the wide variety of protocols possible beyond simple message-passing of static forms. This article examples a much richer set of protocols.EDI contracts tend to be merely reiterations of existing terms and conditions, with only some timing expectations changed for the electronic environment. By redesigning our business relationships to take advantage of a richer set of protocols, smart contracts can take us far beyond the paper-based paradigm of shipping around forms in a secure manner.The following classification, derived from Sokol[3], illustrates the variety of business forms that have been rendered in electronic form:Focal (or Schelling) points are often designed and submitted into negotiations by one side or another, both to bias the negotiations and to reduce their cost. The fixed price at the supermarket (instead of haggling), the prewritten contract the appliance salesman presents you, etc. are examples of hard focal points. They are simply agreed to right away; they serve as the end as well as the beginning of negotiations, because haggling over whether the nearest neighbor focal point is better is too expensive for both parties.There are many weak enforcement mechanisms which also serve a similar purpose, like the little arms in parking garages that prevent you from leaving without paying, the sawhorses and tape around construction sites, most fences, etc. Civilization is filled with contracts embedded in the world.More subtle examples include taxi meters, cash register readouts, computer displays, and so on. As with hard focal points, the cost of haggling can often be reduced by invoking technology as authority. \"I'm sorry, but that's what the computer says\", argue clerks around the world. \"I know I estimated $50 to get to Manhattan, but the meter reads $75\", says the taxi driver.Economists stress two properties important to good contract design: observability by principals and verifiability by third parties such as auditors and adjudicators. From the traditions behind contract law and the objectives of data security, we derive a third objective, privity. We flesh out the dimensions of contract design by disentangling mental from computational transaction costs, classifying the kinds of enforceability, characterizing the temporal phases of contracting, and discussing the nature of tradeoffs between the three design objectives.The costs that smart contracts address are lumped by economists under the catch-all rubric of \"transaction costs\". We can divide these into mental and computational transaction costs.One major category of costs include the cost of anticipating, agreeing to, and clearly writing down the various eventualities. These are largely mental transaction costs, although online research tools, for example, may bring more information about eventualities.Most contractual dispute involves an unforeseen or unspecified eventuality. We lack a good model for this. Such a model would account for the computational costs of foreseeing these eventualities, some of which may be uncomputable (and therefore of infinite cost). Where eventualities remain unspecified, contracts remain incomplete.Where counterparties lack focal points, they lack a meeting of minds. Negotiation addresses this gap; the farther apart the focal points (in terms of value), the more expensive the negotiations. There are a variety of institutions of negotiation, which economists study under the rubric of \"mechanisms\". These range from simple haggling to sophisticated auctions and exchanges.For the temporal phases of contracting we use the following schema, classified according to the two-phase model used in economics:Smart contracts often involve trusted third parties, exemplified by an intermediary, who is involved in the performance, and an adjudicator, who is invoked to resolve disputes arising out of performance (or lack thereof). Intermediaries can operate during search, negotiation, commitment, and/or performance. Hidden knowledge, or adverse selection, occurs ex-ante; hidden actions (moral hazards) occur ex-post.Here are some examples of contemporary electronic commerce activities and the phases of contracting they deal with:This article covers all phases, with a particular emphasis on performance.The first objective of smart contract design is observability, the ability of the principals to observe each others' performance of the contract, or to prove their performance to other principals. The field of accounting is, roughly speaking, primarily concerned with making contracts an organization is involved in more observable.Economists discuss \"hidden knowledge\", also known as \"adverse selection\", which can occur due to lack of ability to observe potential counterparties during the search and negotiation phases. Another major problem is \"hidden actions\", also known as \"moral hazard\", which can occur due to the lack of observability and ability to drop out of contract during the performance phase of a contract.One important task of smart contracts, that has been largely overlooked by traditional EDI, is critical to \"the meeting of the minds\" that is at the heart of a contract: communicating the semantics of the protocols to the parties involved. There is ample opportunity in smart contracts for \"smart fine print\": actions taken by the software hidden from a party to the transaction.Here's a small example of smart fine print:Without user interfaces smart contracts are largely invisible, like the electronics in newer car engines. This is both a blessing \u2013 counterparties don't have to feel like they're dealing with user-hostile computers \u2013 and a curse \u2013 the \"smart fine print\" problem of hidden actions.To properly communicate transaction semantics, we need good visual metaphors for the elements of the contract. These would hide the details of the protocol without surrendering control over the knowledge and execution of contract terms. For example, encryption can be shown by putting the document in an envelope, and a digital signature by affixing a seal onto the document or envelope.Amid all the hype about \"information warfare\", lost in the noise is the fact that it is impossible to commit an act of physical violence over the Net. That includes not only all physical crimes of coercion, but also arrest, incarceration, and other traditional methods of law enforcement. Because of this fact, and the jurisdictional swamp that is the multinational Internet, this article concentrates on means of protecting against breach and third parties that do not rely on law enforcement.We can categorize the security measures against breach, eavesdropping, and interference in the following manner:Currently, the most prevalent forms of security software are not proactive cryptography, but reactive and panoptic methods like virus scanning software, filtering firewalls, traceroutes of attackers, etc. Once modern cryptographic protocols are more widely deployed, the balance will likely shift towards preventative security.Reactive measures rely upon two areas: verifiability and penalties. As discussed in the section on accounting controls, under ideal economic conditions, the statistical distribution of verification failures is known, so that verification costs and penalties are can be traded off neatly. But with imperfect information, the jurisdictional swamp, and lack of collateral or other security, collection of damage awards is even more severely limited than in contracts confined to traditional geographic jurisdictions. Reputation costs may be the only practical source of penalties in many cases. For reactive measures to work, high verifiability is critical.So our second objective is verifiability, the ability of a principal to prove to an adjudicator that a contract has been performed or breached, or the ability of the adjudicator to find this out by other means. The disciplines of auditing and investigation roughly correspond with verification of contract performance.Our third objective of smart contract design is privity, the principle that knowledge and control over the contents and performance of a contract should be distributed among parties only as much as is necessary for the performance of that contract. This is a generalization of the common law principle of contract privity, which states that third parties, other than the designated adjudicators and intermediaries, should have no say in the enforcement of a contract. To maintain knowledge and control, performance must be encapsulated: protected from outside influences, especially sophisticated attacks. This is the idea behind both the legal doctrine of privity, which restricts redress to the parties to a contract, and the idea of property rights.Attacks against privity are epitomized by third parties Eve the eavesdropper, a passive observer of contents or performance, and malicious Mallet, who actively interferes with performance or steals service. Under this model privacy and confidentiality, or protecting the value of information about a contract, its parties, and its performance from Eve, is subsumed under privity, as are property rights. The most common definitions of \"security\" in the online world roughly correspond to the goal of privity.Our generalized privity thus encompasses property rights as stable objects linked to particular contracts (and thereby the parties in privity to such contracts, the \"owners\"). Privity creates a clear boundary within which operate a coherent set of rights, responsibilities, and the knowledge with which to carry out those responsibilities and protect those rights. Clarified boundaries also allow accountability. Protection from extraneous interference allows us to focus responsibility for the consequences of contract-related activity onto the parties to the contract.Privity says that we want to minimize vulnerability to third parties. Verifiability and observability often require that we invoke them. An intermediary must be trusted with some of the contents and/or performance of the contract. An adjudicator must be trusted with some of the contents, and some of the history of performance, and to resolve disputes and invoke penalties fairly. In smart contract design we want to get the most out of intermediaries and adjudicator, while minimizing exposure to them. One common outcome is that confidentiality is violated only in case of dispute.Many kinds of specific performance are often entrusted to intermediaries. We must be able to trust the intermediary (credit agency, anti-virus software vendor, certificate intermediary, digital cash mint, etc.) with their particular claims (about creditworthiness, dangerous byte patterns, identity, conservation of the money supply, etc.) As Ronald Reagan remarked in a slightly different context, \"trust but verify\". To deserve our trust, intermediaries must convince us that their claims are true. We need to be able to \"ping\" their veracity, verifying that certain claimed transactions in fact occurred. An entire profession exists in market economies to perform this function: auditing.Ideally, observability and verifiability can also include the ability to differentiate between intentional violations of the contract and good faith errors, but this is difficult in practice, since the difference is often largely one of subjective, unrevealed intent.A protocol[5] in computer science is a sequence of messages between at least two computers. At a higher level of abstraction, a protocol consists of algorithms communicating via messages. These programs act as proxies, or agents, for human users, who communicate their preferences via users interfaces. We distinguish protocol endpoints by names such as \"Alice\" and \"Bob\", but it should be kept in mind that the end points are really computer processing units, which may or may not be under the control of, or taking actions contrary to the intent of, the human user. Human users typically do not have full knowledge of the protocol in question, but rather a metaphorical understanding obtained via user interface, manuals, and so on. Unlike most real-world contracts, protocols must be unambiguous and complete.Protocols come in three basic types. I have modified the terminology of Schneier[6] to match more closely to the corresponding business terminology:The corresponding smart contracts elaborate on \"Alice\" to distinguish between the software (in two components, the endpoint of protocol and the user interface), and Alice herself. Cryptographic and other computer security mechanisms give us a kit of tools and parts from which we can build protocols, which form the basis of smart contracts.The security properties of physical media are based on physical properties we often take for granted, for example the unforgeability of an atom of gold. The structural constraints (\"physics\") of cyberspace relevant to security are described by the mathematical theories studied by computer scientists, especially in the specialty called cryptography. Here are the important \"fundamental particles\" of the cryptographic universe:These \"particles\" are potent building blocks for engineering secure protocols. Imagine a material so tough, it is completely impervious to a supernova, and so cheap you could use it to make walls, locks, safes, and envelopes to protect everyday items. This is not just a metaphor: cracking a 4,096 bit RSA key with best known algorithm really would require more electrical power for the computers than the power produced by a supernova. These cryptographic primitives promise to be a main driving force of the fourth cost revolution for global business.A family of protocols, called cryptographic protocols because their first application was computerized \"secret writing\", provide many of the basic building blocks that implement the improved tradeoffs between observability, verifiability, privity, and enforceability in smart contracts. Contrary to the common wisdom, obscurity is often critical to security. Cryptographic protocols are built around foci of obscurity called keys. A key's immense unknown randomness allows the rest of the system to be simple and public. The obscurity of a large random number, so vast that a lucky guess is astronomically unlikely, is the foundation upon which cryptographic protocols, and smart contracts based on them, are built.Two significant cautions are in order when thinking about how cryptographic protocols can be used in online relationships. The first is that protocols usually provide security \"up to\" some assumption. This assumption is a remaining weak point which a complete working system must address in some reasonable manner. One common endpoint is is assumptions about trusted third parties. Often the degree or function of the trust is not well specified, and it is up to the real-world systems analyst to characterize and ameliorate these exposures. The best mediated protocols only trust the intermediary or counterparty with a well limited function.Even without trusted third parties, cryptographic protocols often ground out in trust of the counterparty. For example, encryption of a message provides confidentiality up to the actions of parties with decrypting keys. Encryption does not stop key holders from posting plain text to Usenet. We cannot just say that encryption provides \"confidentiality\" and leave our concern for confidentiality at that.The second caution is that much of the terminology used in the cryptographic literature to name protocols (\"signatures\", \"cash\", etc.) is misleading. Sometimes the terminology falls short on substantial matters: a \"digital signature\", for example, is not biometric and is based on a key that can easily be copied if not protected by another mechanism. Often cryptographic protocols can be generalized to much wider purposes than implied by the label. For example, \"digital cash\" is a very general protocol which can implement a wide variety of bearer certificates and conservation wrappers for distributed objects.Protocols for smart contracts should be structured in such a way as to make their contractsA vandal can be a strategy or sub-strategy of a game whose utility is at least partially a function of one's own negative utility; or it can be a mistake by a contracting party to the same effect. \"Naive\" simply refers to both lack of forethought as to the consequences of an attack , as well as the relatively low amount of resources expended to enable that attack. Naive vandalism is common enough that it must be taken into consideration. A third category, (c) sophisticated vandalism (where the vandals can and are willing to sacrifice substantial resources), for example a military attack by third parties, is of a special and difficult kind that doesn't often arise in typical contracting, so that we can place it in a separate category and ignore it here. The distinction between naive and sophisticated strategies has been computationally formalized in algorithmic information theory.The expected loss due to third party attack is called the exposure. The cost of third parties to defeat the security mechanism is the disruption cost. If the disruption cost is greater than the expected benefit, we can expect an incentive compatible attacker to disrupt the security.One of the drivers of the trust cost revolution will likely be the wide variety of new cryptographic protocols that have emerged in recent years. The most traditional kind of cryptography is secret key cryptography, in which Alice and Bob (our exemplar parties to a smart contract) use a single shared, prearranged key to encrypt messages between them. A fundamental problem we will see throughout these protocols is the need to keep keys secret, and public key cryptography helps solve this. In this technique, Alice generates two keys, called the private and public keys. She keeps the private key secret and well protected, and publishes the public key. When Bob wishes to send a message to Alice, he encrypts a message with her public key, sends the encrypted message, and she decrypts the message with her private key. The private key provides a \"trapdoor\" that allows Alice to compute an easy inverse of the encryption function that used the public key. The public key provides no clue as to what the private key is, even though they are mathematically related. The RSA algorithm is the most widely used method of public key cryptography.Public key cryptography also makes possible a wide variety of digital signatures. These proves that a piece of data (hereafter referred to as just an \"object\") was in active contact with the private key corresponding to the signature: the object was actively \"signed\" with that key. There are two steps to an authentication protocol: signing and verification. These may occur synchronously, or, in many public protocols, a signature may be verified at some distant time in the future.The digital signature probably should have been called a \"digital stamp\" or \"digital seal\" since its function resembles more those methods than an autograph. In particular, it is not biometric like an autograph, although incorporation of a typed-in password as part of the private key used to sign can sometimes substitute for an autograph. In many Asian countries, a hand-carved wooden block, called a \"chop\", is often used instead of autographs. Every chop is unique, and because of the unique carving and wood grain cannot be copied. A digital signature is similar to the chop, since every newly generated key is unique, but it is trivial to copy the key if obtained from the holder. A digital signature relies on the assumption that the holder will keep the private key secret.A blind signature publically authenticates privy information (but can we use non-privy signatures blindly as well?). This is a digital signature and secret-key encryption protocol that together have the mathematical property of commutativity, so that they can be stripped in reverse of the order they were applied. It's like stamping an unknown document through carbon paper (without having to worry about smudging). The effect is that Bob \"signs\" an object, for which he can verify its general form, but cannot see its specific content. Typically the key of the signature defines the meaning of the signed object, rather than the contents of the object signed, so that Bob doesn't sign a blank check. Blind signatures used in digital bearer certificates, where Bob is the clearing agent, and in Chaumian credentials, where Bob is the credential issuer.The blind signature is one example of the many \"magic ink signatures\" cryptographers have invented. Another class of these protocols are used to limit the parties allowed to either verify the signature or to learn the identity of the signer. The most privy are the zero-knowledge proofs, where only the counterparty can authenticate the prover. Designated confirmer signatures allow the signer to designate particular counterparties as verifiers. For example, a business could give particular auditors, investigators, or adjudicators the authority to verify signed objects, while other third parties, such as competitors, can learn nothing from the signature. Group signatures allow members to sign as an authentic member of a group, without revealing which member made the signature.So far, we've assumed parties like Alice and Bob are monolithic. But in the world of smart contracts, they will use computer-based software agents and smart cards to do their electronic bidding. Keys are not necessarily tied to identities, and the task of doing such binding turns out to be more difficult than at first glance. Once keys are bound, they need to be well protected, but wide area network connections are notoriously vulnerable to hacking.If we assume that the attacker has the ability to intercept and redirect any messages in the network protocol, as is the case on wide area networks such as the Internet, then we must also assume, for practical all commercial operating systems, that they would also be able to invade client if not merchant computers and find any keys lying on the disk.There's no completely satisfactory solution to end point operations security from network-based attacks, but here's a strategy for practically defanging this problem for public-key based systems:All public key operation can be performed inside an unreadable hardware board or smart card on a machine with a very narrow serial-line connection (ie, it carries only a simple single-use protocol with well-verified security) to a dedicated firewall. This is economical for high traffic servers, but may be less practical for individual users. Besides better security, it has the added advantage that hardware speeds up the public key computations.If Mallet's capability is to physically seize the machine, a weaker form of key protection will suffice. The trick is to hold the keys in volatile memory. This makes the PC proof from physical attacks \u2013 all that needed to destroy the keys is to turn off the PC. If the key backups can be hidden in a different, secure physical location, this allows the user of this PC to encrypt large amounts of data both on the PC itself and on public computer networks, without fear that physical attack against the PC will compromise that data. The data is still vulnerable to a \"rubber hose attack\" where the owner is coerced into revealing the hidden keys.Object-oriented, or capability, security is a deep and promising area, but beyond the scope of this article. Capabilities can potentially simplify the design of many distributed security protocols. Instead of developing a new or modified cryptographic protocol for each contracting problem, capabilities may allow us to design a rich variety of distributed security protocols over a common cryptographic framework.For more information see Introduction to Capability Based Security.Quorum distribution of performance or control over resources can be based on the secret sharing of keys needed to perform or control a resource. These are also known as threshold techniques. These are methods of splitting a key (and thus control over any object encrypted with that key) into N parts, of which only M are needed to recreate the key, but less than M of the parts provide no information about the key. Secret sharing is a potent tool for distributing control over objects between principals.Markus Jacobsson has designed a quorum of mints for signing digital coins, for example. Quorum establishes a \"required conspiracy\" of M out of N to perform a function, providing an option for stronger protection than the typical 2 out of N used in segregation of duties, and greater confidence in the security underlying the segregation.Traditionally, auditors have contacted counterparties in order to verify that a transaction actually took place (The \"principle of required conspiracy\" at work again). With post-unforgeable logs, via a hierarchical system of one-way hash functions, a party can publically commit to transactions as they are completed by publishing signed cumulative hashes of the transaction stream. The confidentiality of the transaction is fully maintained until an auditor \"pings\" the transaction to determine its actual nature. The counterparty identity can remain confidential, because it is not required to establish the other facts of the transaction. The only attack is to forge transactions in real time, as the transaction itself takes place, which in most practical cases will be unfeasible. Most accounting fraud involves analyzing sets of completed transactions and then forging them to make them compute to a desired counterfactual result.Cryptographers have developed protocols which create virtual machines between two or more parties. Multiparty secure computation allows any number of parties to share a computation, each learning only what can be inferred from their own inputs and the output of the computation. These virtual machines have the exciting property that each party's input is strongly confidential from the other parties. The program and the output are shared by the parties. So, for example, we could run a spreadsheet across the Internet on this virtual computer. We would agree on a set of formulas, set up the virtual computer with these formulas, and each input our own private data. We could only learn only as much about the other participants' inputs as we could infer from our own inputs and the output.There are two major complications. The first is that this virtual computer is very slow: one machine instruction per network message. The second is that some parties learn the results before others. Several papers have disussed the fraction of parties one must trust in order to be assured of learning the correct output. The mechanism must be constructed so that a sufficient number of parties have an incentive to pass on the correct result, or reputation, side contracts, etc. used to the same effect.With these caveats, any algorithmic intermediary can, in principle, be replaced by a trustworthy virtual computer. In practice, because of the two complications, we usually construct more limited protocols out of more efficient elements.Trusted Third Party:Mathematically Trustworthy Protocol:Multiparty secure computer theory, by making possible privy virtual intermediation, has major implications for all phases of contracting. This can be seen most clearly in the area of negotiations. A \"mechanism\" in economics is an abstract model of an institution which communicates with its participants via messages, and whose rules can be specified algorithmically. These institutions can be auctions, exchanges, voting, and so on. They typically implement some kind of negotiation or decision making process.Economists assume a trusted intermediary operates the mechanism. Here's a simple example of using this virtual computer for a mechanism. Alice can submit a bid price, and Bob an ask price, to their shared virtual computer which has one instruction, \"A greater than B?\". The computer then returns \"true\" if Alice's bid is greater than Bob's offer. A slightly more sophisticated computer may then decide the settlement price according to a number of different algorithms (Alice's bid, Bob's ask, split the difference, etc.) This implements the mechanism \"blind bargaining\" with no trusted intermediary.In principle, since any computable problem can be solved on this virtual computer (they are \"Turing complete\"), any computable economic mechanism can be implemented without a trusted intermediary. In practice, these secure virtual computers run very slowly (one virtual machine instruction per network message), and the order in which participants learn results often matters. But the existence proof, that any economic mechanism can be run without a trusted intermediary, up to temporal issues, is very exciting. This means that, in principle, any contract which can be negotiated through a trusted third party (such as an auction or exchange) can be negotiated directly. So, in some abstract sense, the only remaining \"hard\" problems in smart contract negotiations are (a) problems considered hard even with a trusted intermediary (for the standard economic reasons), (b) nonsimultaneity problems in learning the decision, and (c) the task of algorithmically specifying the negotiating rules and output contract terms (This includes cases where an intermediary adds knowledge unavailable to the participants, such as a lawyer giving advice on how to draft a contract).Applying this kind of analysis to the performance phase of contracts is less straightforward. For starters, economic theories of the performance phase are not as well developed or simple as the mechanism theory of negotiations. Indeed, most economic theory simply assumes that all contracts can be perfectly and costlessly enforced. Some of the \"transaction cost\" literature has started to move beyond this assumption, but there are few compelling results or consensus theories in the area of techniques and costs of contract enforcement.Performance phase analysis with multiparty secure computer theory would seem to apply only to those contracts which can be performed inside the virtual computer. But the use of post-unforgeable auditing logs, combined with running auditing protocols inside the shared virtual computer, allows a wide variety of performances outside the virtual computer to at least be observed and verified by selected arbitrators, albeit not proactively self-enforced.The participants in this mutually confidential auditing protocol can verify that the books match the details of transactions stored in a previously committed transaction log, and that the numbers add up correctly. The participants can compute summary statistics on their confidentially shared transaction logs, including cross-checking of the logs against counterparties to a transaction, without revealing those logs. They only learn what can be inferred from the statistics, can't see the details of the transactions. Another intriguing possibility is that the virtual computer can keep state over long periods of time, allowing sophisticated forms of privy and self-enforcing secured credit.With mutually confidential auditing we will be able to gain high confidence in the factuality of counterparties' claims and reports without revealing identifying and other detailed information from the transactions underlying those reports. These provide the basis for solid reputation systems, and other trusted third party systems, that maintain integrity across time, communications, and summarization, and preserve confidentiality for transaction participants. Knowing that mutually confidential auditing can be accomplished in principle may lead us to practical solutions.Bearer certificates implement transferable rights on standardized contracts. Each kind of contract (for example, each denomination of \"coin\" in digital cash) corresponds to a digital signature, just as each issue of Federal Reserve Notes or stock certificates corresponds to a particular plate.In the most straightforward bearer certificate protocol, the issuer and transfer agent (the same entity, for our purposes, though they can easily be unbundled) create a serial number (really a large unguessable random number, rather than a sequence), and add it to a list of issued certificates. The transfer agent clears a transfer by checking the signature to identify and nature of the bearer contract and verify that it was made, then looking on that contract's issued list to make sure the serial number is there, then removing the serial number. Alternatively, the issuer can let the issuee make up the serial number, then, when cleared, check the signature and put the number on the list of cleared certificates. The signature provides the assurance that the certificate is indeed the the particular kind of contract with bearer, while the serial number assures that the same instance of that contract is not cleared or redeemed more than once. In these simple versions, the transfer agent can link the transferee to the transferor for all transfers. To implement the privacy characteristics of coins and physical bearer certificates, we need to add unlinkability features.Unlinkability can be provided by combining the second variation above, a list of cleared certificates, with blind signatures and a mixing effect. Enough instances of a standardized contract are issued over a period of time to create a mix. Between the issuing and clearing of a certificate, many other certificates with the same signature will be cleared, making it highly improbable that a particular clearing can be linked to a particular issue via the signature. There is a tradeoff between the mixing effect and the exposure to the theft of a \"plate\" for a particular issue: the smaller the issue, the smaller the exposure but the greater the linkability; a larger issue has both greater exposure and greater confidentiality.Blind signatures can be used to make certificate transfers unlinkable via serial number. Privacy from the transfer agent can take the form of transferee-unlinkability, transferor-unlinkability, or \"double blinded\" where both transferor and transferee are unlinkable by the transfer agent or a collusion of a transfer agent and counterparty.Bearer certificates come in an \"online\" variety, cleared during every transfer, and thus both verifiable and observable, and an \"offline\" variety, which can be transferred without being cleared, but is only verifiable when finally cleared, by revealing any the clearing name of any intermediate holder who transferred the object multiple times (a breach of contract).This unlinkability is often called \"anonymity\", but the issue of whether accounts are issued to real names or pseudonyms, and whether transferor and transferee identify themselves to each other, is orthogonal to unlinkability by the transfer agent in the online model. In the off-line model, account identification (or at least a highly reputable and/or secured pseudonym) is required: passing an offline certificate a second time reveals this identity. Furthermore, communications channels can allow Eve to link transferor and transferee, unless they take the precaution of using an anonymous remailer. Online clearing does make lack of identification a reasonable option for many kinds of transactions, although common credit and warrantee situations often benefit from or even require identification.When confronting an attempted clearing of a cleared serial number, we face an error-or-fraud dilemma similar to the one we encountered above in double entry bookkeeping. The ecash\u2122 protocol from DigiCash actually takes advantage of this ambiguity, second-transferring certificates on purpose to recover from a network failure. When certificates are lost over the net it is not clear to the transferor whether they have been received and cleared by the transferee or not. Second-transferring directly with the transfer agent resolves the ambiguity. This only works with the online protocol. The issue of distinguishing error from fraud is urgent in the offline protocol, but there is as yet no highly satisfactory solution. This problem is often intractable due to the subjectivity of intent.Issuance and cleared transfer of references to a distributed object conserves the usage of that object. This object becomes \"scarce\" in economic terms, just as use of physical objects is finite. Conserved objects provide the basis for a software economics that more closely resembles economics of scarce physical objects. Conserved objects can be used to selectively exclude not only scarce physical resources (such as CPU time, network bandwidth and response time, etc.), but also fruits of intellectual labor \u2013 as long as one is willing to pay the price to interact with that information over the network rather than locally (cf. content rights management). Conservation immunizes objects and the resources they encapsulate to denial of service attacks. Bearer certificate protocols can be used to transfer references to a particular instance or set of instances of an object, just as they can be used to transfer other kinds of standardized rights.Digital cash is the premier example of a digital bearer certificate. The issue and transfer agent is called a \"mint\". Bearer certificate protocols enable online payment while honoring the characteristics desired of bearer notes, especially unforgeability (via the clearing mechanism) and transfer confidentiality (via mixing and blinding).To implement a full transaction of payment for services, we often need need more than just the digital cash protocol; we need a protocol that guarantees that service will be rendered if payment is made, and vice versa. Current commercial systems use a wide variety of techniques to accomplish this, such as certified mail, face to face exchange, reliance on credit history and collection agencies to extend credit, etc. Potential smart contract protocols in this area are discussed under Credit.Content protection contracts are valuable in that they incentive publishers to allow users to view content directly, rather than indirectly and partially via queries to remote servers. Content protection of software distributed online would allow it to be run locally rather than remotely, while enforcing the contract rights and copyrights of the publisher against the user. This local usage billing of software often goes under the rubric of \"superdistribution\"[11].Watermark schemes work by altering less significant bits of content \u2013 usually a picture; sound works less well and text is difficult. These altered bits typically contain the identities of the publisher and viewer, and perhaps other information related to the contract. The idea is that, when investigators scan released content, the watermark will finger the breacher of the contract (or violator of copyright law).Watermark investigation can be assisted by a quite inexpensive technique, Web spiders. These spiders look for redistributed watermarked material on the Web. The customer originating the copy can then be fingered.One attack against watermarks is to overwrite likely watermark bits with other patterns legitimate to viewing software. The entanglement of watermark bits with bits important to the picture can be made rather obscure, but not strongly so by the standards of cryptography. Another attack is to steal content from a customer and distribute it as is. The watermark will finger the victim, rather than the thief.All watermark schemes can be defeated with sufficient effort. These schemes can then be distributed as software worldwide. Once the initial effort is put into breaking a scheme, the marginal cost of breaking it is minimal. Furthermore, once the watermark is removed, the content can be distributed and even published[12] with secure anonymity.In sum, watermark schemes can add significant risk to the copying of of low value or ephemeral information. This will be sufficient for many kinds of content, such as news or product updates. It won't stop, for long, the redistribution of high-value content. Since watermarks require traceable identification, they reduce customer privacy and require the inconvenience of registration and authentication, adding to the transaction costs of content purchase.Contrary to the hype, there is no strong content protection software. Watermarks are as close as we've come, and they fall far short of the standards of computer security. Large sums have gone into attempts to develop such technology, resulting in hundreds of patents but no substantial results.As a result, some publishers have begun putting their research dollars into a radical alternative, innocuously dubbed the \"secure CPU\" (SPU)[13]. This is a CPU that is \"secure\" against the owner of the computer! To enforce copyright or content contracts, the SPU monitors all content-related activity. Some marketing literature even lists, alongside the traditional copyright, a new \"right\" of publishers to monitor the usage of their content. Remarkably enough, these panoptic non-personal computers are the focus of major R&D efforts.The radical SPU projects demonstrate both the high value of content contracts to publishers and the high price we have to pay to maintain the paper-era intellectual property model online. Strong content protection would be valuable in going beyond indirect and partial viewing of content on servers, to viewing content directly and locally. The price is the loss of control over our own computers, and loss of privacy over our activities on those computers.The online content market is squeezed from above and below. From above, by the ease of redistributing high-value content. From below, by the mental transaction costs of charging for low value content \u2013 costs to which the requirements of registration and traceable identification add substantially. The size of the market in between is an open question. \"Information wants to be free\", but authors and publishers want to be paid for it. The current content market for more difficult to copy media, such as books, films, CD-ROM, and so forth is large, in the hundreds of billions of dollars per year. But on the Internet, free content dominates. Distributing ephemeral content in the form of service subscriptions is in most cases a more viable way to go. It remains to be seen how large the Internet content market will become, and to what extent customers will tolerate impositions on privacy and control of their computers in order to obtain legal content.Reputation can be viewed as the amount of trust an agent has created for himself[14]. Reputation systems ultimately need to be based on fact rather than mere opinion or faith to be effective. For example, if we are to have a good credit rating system, we need to be confident that the credit record assembled by the agency is sufficiently accurate. Reputation information is typical gathered and distributed by intermediaries trusted to perform this task. Reputation can take the form of a public database (such as credit rating services) or credentials issued by the tracking agency and carried by the user. A bearer doesn't want to show his negative credentials, so credentials are often only positive. But we want to protect ourselves against negative behavior sources well as search out positive sources.Tags that bundle the results of a wide variety of transactions - global names, or universal IDs, or \"True Names\" \u2013 may provide the most incentive for parties to carry their negative credentials. Most people have accumulated enough positive reputation is some areas that it is well-nigh impossible for them to start over their entire lives as newcomers.Robin Hanson[15] has observed that in a world of global names, the use of a local name may signal the hiding of negative credentials, so that the use of global names is in equilibrium. A further problem with local names is that our relationships are often not neatly compartmentalizable into standard service types, and even where they are we might like to expand them into new areas. On the other hand, local names are essential for privacy. I suggest that we will want to reveal progressively more local names to our counterparties as our relationships with them become closer and more co-exposed.While the global name equilibrium may hold for many of our relationships, there may be plenty of areas where the privity benefits of localizing names outweigh the costs of being less or unable to differentiate newcomers from hostiles. For example, the preference-tracking service at www.firefly.com increases participation via the use of pseudonyms, thereby protecting customers from exposure to strangers who might abuse that information. On the other hand, credit transactions typically demand identifying information, because the contractual exposure typically outweighs benefits of privity.Global name public keys, which have many drawbacks in terms of privity, may be the best way to track negative reputation, but they are no panacea. There is an important conundrum in an ID-based key system: the conflict between the ability to get a new key when the old one is or could be abused by another (key revocation), and the ability of another to be sure they are dealing with the same person again. This may also provide an opportunity for parties to selectively reveal positive credentials and hide negative ones. For example, a person with a bad credit rating could revoke the key under which that rating is distributed and create a new one, while selectively updating their positive credentials to the new key (e.g., have their alma mater create a new diploma).The current universal (non-cryptographic) key in the U.S., the social security number (SSN), is very difficult to revoke; it's much easier to change your name. This policy is probably no accident, since the biggest economic win of global name identification is the tracking of negative reputations, which revocation can defeat. As long as the SSN is a shared database key, not used for the purpose of securely identifying a faceless transaction, there is little need for revocation beyond the undesired erasure of negative history. Combining a secret authentication key, which must be revocable, with a public universal ID is quite problematic.One of the basic outstanding problems in smart contracts is the ensurement of credit. This comes up not only in loans, but in any other contract which involves a temporal lag between performance and reciprocal performance of the contractual terms.In current practice, there are several partially effective processes for ensuring future performance:These processes have a fundamental property in common \u2013 they violate the privity of credit transactions \u2013 in other words, they bring in third parties to track reputations or enforce repayment. Do credit transactions entail a fundamental imbalance in incentives that can only be redressed by bringing in third parties, or can the security protocols be discovered which allow credit with minimal or no third party involvement?Three important variables have been proposed for reputation economics:In turn, Peter Swire[16] describes two problems facing inadequately secured or unsecured loans to \"credit names\":Adverse selection: Prior deadbeats can start fresh by signing up for the new service. Going in, it will be biased in favor of deadbeats. This problem may be addressed by using Chaumian credentials. These allow the established positive reputations of previous names to be carried over to the credit name, without allowing anyone to link the two names. Entrants without positive reputations can be rejected.The endgame problem: A credit name can establish a good credit rating over time. When the limit is high enough, the borrower can quickly spend it all. A malicious borrower, with a good rating established under a previous name, can systematically profit at the expense of the lender, if the throw-away value is greater than the replacement cost. To address this problem, creditors will have to charge higher rates to new credit names and raise credit limits more slowly than for traceable names. Honest borrowers will subsidize the dishonest, to an even greater extent than they do in the current credit card system.Secured credit need not violate privity if the physical control over the securing property can be shared. So that, for example, automobile credit can be secured as long as repossession is possible, as described in the example above.A standard mechanism of secured credit applicable online is the escrow. An escrow is an intermediary trusted to hold messages until messages from both sides are received, and, optionally, their contents verified - to extent the content is verifiable, and at the expense of some privity. The escrow then sends the messages off to their recipients, along with receipts. Messages can contain any sort of data: content, a bearer certificate, etc.Alice wants a New York City cab ride for which she's willing to pay $100, but she doesn't trust Bob the taxi driver to get her there on time if she pays up front. Bob in turn doesn't trust Alice to pay at the end of the trip. Commerce can be consummated by Alice tearing a $100 bill and giving half to Bob. After the trip she gives the other half to Bob, which he can then reassemble into a negotiable $100 bill. Alice loses her incentive to not pay. Bob gains incentive to get her there on time as promised. Both have made what economists call a \"credible commitment\" to perform their respective parts of the contract. Markus Jacobsson has digitized this idea, coming up with a protocol for ripped digital cash. As with many other aspects of digital cash, the idea can be further generalized to rip some other kinds of bearer instruments \u2013 specifically, those whose value can be divided roughly in half. If the transfer is double-blinded the transfer agent has no knowledge of the participants and therefore no bias to favor one over the other. The transfer agent must, however, be able to assess proof of performance, and the protocol is only workable where such proof (in the form of proof of receipt of a message, for example) is available.The ripped bill is similar to using the transfer agent as an escrow agent. An advantage over using an escrow agent is that the need for extra anonymous channels between the parties and the escrow is avoided. A disadvantage is that the transfer agent now has taken on the major additional job of acting as an adjudicator, assessing proofs of performance (or at the very least, must be responsible for subcontracting out this job and implementing the adjudicator's judgement).Credit cards provide relatively little protection from third parties, especially in the area of privacy, but they do have an interesting contractual feature worth noting, the chargeback. With chargebacks customers can get refunds on allegedly unwanted merchandise. The issuer tracks the number of chargebacks both for customers and merchants; too many chargebacks can get you booted out of the system. This provides an efficient mechanism for refunds without resorting to expensive tort proceedings. Many customers who read the fine print or otherwise learn about chargeback limits often do chargebacks despite receiving and enjoying the merchandise; there is no practical way for the issuer to detect such fraud, and so it can only be pruned by limiting the number of chargebacks per customer. Some merchants complain vociferously about such customer \"theft\", and it seems to make possible coordinated attacks to put merchants out of business, but nevertheless merchants sign up for credit cards, because that's what their customers have signed up for. The chargeback feature makes customers more comfortable purchasing goods of unknown quality, especially mail-order and over the Internet. Chargeback provides a crude but effective partial solution to the information asymmetry problem between retailers and consumers.\"Time release\" money that becomes good only after a certain date, and \"interval money\", that would expire after a certain date have been proposed. These can be implemented by a digital mint expiring or activating special issues of digital cash, or by a third party issuing escrowed keys at specific times. Since these keys are encrypted against the escrow agent, and that agent doesn't know what they will be used for, the escrow agent has no incentive to cheat. A generalization of this is that transfer and redeemability are each associated with interval sets, or validity periods when each can and cannot be performed. This is analogous to clipping coupons on bonds.Hal Finney[17] has described a loan mix, to unlink borrowers from amount borrowed. The identity of the potential borrowers is still public, as well as the system for enforcing payment, but the actual amount loaned or borrowed remains unknown. The system starts with participants putting unknown amounts into a pot and getting receipts (bearer bonds) for these amount. All participants then borrow a standard amount. Whether a participant is a net borrower or a net creditor, and of what amount, remains private. When the loan is due all participants repay the standard amount, and the creditors reclaim the amounts on their bearer bonds. The amount actually borrowed (or, if negative, loaned) is the public amount borrowed minus the amount put into the pot. One consequence is that while negative reputations can still be accumulated when participants fail to pay back the standard amount, positive reputations are minimal, since participants who borrow and loan are indistinguishable. If future creditors put stock in positive participation, one could gain a credit rating by perpetually participating as a net borrower of zero, by loaning and borrowing the same amounts.Smart contracts combine protocols, users interfaces, and promises expressed via those interfaces, to formalize and secure relationships over public networks. This gives us new ways to formalize the digital relationships which are far more functional than their inanimate paper-based ancestors. Smart contracts reduce mental and computational transaction costs, imposed by either principals, third parties, or their tools.Mark Miller[18] foresees that the law of the Internet, and the devices attached to it, will be provided by a grand merger of law and computer security. If so, smart contracts will be a major force behind this merger.A previous version of this paper appeared in the peer-reviewed journal First Monday, at http://www.firstmonday.dk/issues/issue2_9/szabo/index.htmlMany of the links above and references here rely on URLs that can be found in the online edition of this paper, at http://szabo.best.vwh.net/caymanpaper.html.The author has been refining these ideas since the early 1990's. A variety of earlier articles on this topic can be found at http://szabo.best.vwh.net \u21a9George H. Bodnar and William S. Hopwood, 1987.Accounting Information Systems. 3rd ed. Boston: Allyn and Bacon. \u21a9Phyllis K. Sokol, 1995. From EDI to Electronic Commerce: a business initiative. New York: McGraw-Hill. \u21a9Oliver Hart, 1989. \"Incomplete Contracts,\" In: John Eatwell, Murray Milgate, and Peter Newman (eds.), The New Palgrave: Allocation, Information, and Markets. New York: Norton.Bruce Schneier,1996. Applied Cryptography. 2nd ed. New York: Wiley. \u21a9John Bouvier, 1856. A Law Dictionary: Adapted to the Constitution and Laws of the United States of American and of the Several States of the American Union. Rev. 6th ed. \u21a9Michael Polanyi, Personal knowledge: Towards a post-critical philosophy. Chicago: University of Chicago Press.The economics of distributed knowledge is studied by the Austrian school; in particular see Friedrich Hayek, \"On the Use of Knowledge in Society.\"Vernon V. Palmer, 1992. The Paths to Privity: The History of Third-Party Beneficiary Contracts at English Law. San Francisco: Austin and Winfield.Lance Cotrell, 1995. \"Mixmaster & Remailer Attacks.\"Brad Cox, 1995. Superdistribution:: Objects as Property on the Electronic Frontier. Reading, Mass.: Addison-Wesley. \u21a9Ian Goldberg and David Wagner, 1997. \"Enabling Anonymous Publishing on the World Wide Web.\" \u21a9Olin Silbert, David Bernstein, and David Van Wie, 1996. \"Securing the Content, Not the Wire for Information Commerce.\" \u21a9Joseph M. Reagle Jr., 1996. \"Trust in Electronic Markets,\" First Monday, Volume 2, number 2 (August). \u21a9Robin Hanson, personal communication. \u21a9Peter Swire, 1997. \"The Uses and Limits of Financial Cryptography: A Law Professor's Perspective.\" \u21a9Hal Finney, 1997. \"Anonymous Credit\" posts. \u21a9Mark Miller, 1997. \"The Future of Law,\" paper delivered at the Extro 3 Conference (August 9). \u21a9Please send your comments to nszabo (at) law (dot) gwu (dot) edu"}
{"prompt": "A Formal Language for Analyzing Contracts", "completion": "The author presents a mini-language for professionals and researchers interested in drafting and analyzing contracts. It is intended for computers to read, too. The main purpose of this language is to specify, as unambiguously and completely and succinctly as possible, common contracts or contractual terms. These include financial contracts, liens and other kinds of security, transfer of ownership, performance of online services, and supply chain workflow.The following problems may be addressed by the language when interpreted by computer:The process of designing this language is also a great way to explore the basic nature of contracts (what are the \"elements\" out of which a wide variety of useful contracts can be drafted?) and their composibility (what rules for composing these atoms rule out impossible contracts?) The language is also a creative tool for thinking up and \"sketching\" new kinds of contracts. I welcome your participation.The words in our language follow legal terminology as much as possible \u2013 thus for example performance means execution to satisfy the terms of the contract (as in the legal field), rather than measured quantities like speed, memory usage, bandwidth, etc. (as programmers use the term). A law degree is not required to use the language, but some familiarity with contract law and the drafting of contracts is recommended. A lawyer who did reasonably well on the analytical and logical sections of the U.S. LSAT or its overseas equivalent, will, I suspect, have better luck drafting contracts in this language than than a programmer whose sole experience lies in traditional procedural language. That is why I call this a drafting language not a programming language.Our language can specify the output of a negotiation (which could be an auction, an exchange, or two parties drafting the contract, or one party drafting and the other agreeing to it, etc. ). It also can define the input to an engine that drives and monitors the transactions that perform the contract:Performance of the contract, i.e. its reification as a smart contract, can thus be seen as (hypothetical, at this point) execution of a program written in our language. Furthermore, our language incorporates a wide variety of contractual terms, not just abstract monetary terms and their derivatives. These two characteristics make our language very different from special purpose financial contract languages such as[4]. While we use several financial contract examples to introduce our language and demonstrate its flexibility, its scope both in functionality and the kinds of contracts and transaction protocols it can represent is far broader.Each word and phrase in our language has a clear standard meaning. As a result, contracts can be drafted that will be far less subject to disputes over interpretation. On the other hand, the language is not very good at expressing many subjective and ambiguous concepts that are often necessary in contracts. Nor is it any good, in its present state, in referring to jurisdictions or doctrines of law. The language is nevertheless very different from a traditional programming language. Contractual terms are defined in terms of events that trigger their performance. Such events include dates and times, choices made by the parties, observable breaches of contract, and so on.Our language is not a markup language. It is not about manipulating text for the purposes of drafting contracts. It is not about structuring text, specifying fill-out forms, defining static data formats, or similar tasks of languages such as HTML or XML. For those tasks one should use a markup language, or a text-manipulating programming language (e.g. Perl), not this language. Our language does something very different. It models the dynamics of contract performance \u2013 when and under what conditions obligations should be performed.The words and sentences of the language do not consist of instructions followed down the page from one step to the next. Instead, a contract is read (both by human and computer) by following nested definitions of contractual terms as they expand, and by looking at events in when statements and seeing what they trigger. If the drafter does need to explicitly construct a step by step calendar schedule, this can be done by using calendar-driven events or words like for and then.The language encourages composition of contracts. Contracts, rights, and obligations can be nested. We call these nested structures clauses. Contracts and clauses involve two parties, the Holder, from whose point of view we read the contract, and a Counterparty. Multi-party agreements can be drafted by composing several two-party contracts.Our first example is a well-known financial contract, the future. A future is an obligation on the part of the Holder of the futures contract to purchase a certain amount of a certain commodity in a certain month, and the obligation on the part of the future contract writer, the Counterparty, to deliver these goods. For the purposes of introducing this contract, we give it in the abstract form in which financial analysts usually deal with it, leaving out important details that describe the third parties who act as trusted intermediaries to define \"fair bundles\" of commodities, and we also leave out many details about the actual delivery.Since this language is not yet being computer interpreted, the syntax is designed more for human than computer readability. I will be a bit fast and loose with the syntax, and you can be too. I mostly use tabs instead of brackets {} to structure clauses in a way that seems natural and readable to me \u2013 and I hope to you \u2013 but might confuse a computer. Feel free to develop your own style.The top three lines in the contract, in the form name(parameters) = tells us that we are defining a named clause. The named clause can define an entire contract or just a clause in a larger contract. We can pass the names of other named clauses, lists of events, and other kinds of information that the named clause needs \u2013 these are the parameters.when withinPeriod(p) means \"when the first calendar or clock event generated during period p\". The drafter can elsewhere set how often this regular \"clock tick\" event occurs. The first such clock tick after the start of the period, in this case the first scheduled delivery day in the month of July, triggers the clause with the brackets {}. More sophisticated schedules are possible, such as those that minimize delivery costs for the Counterparty by delivering to different Holders on different days in July. Fortunately, we can hide these scheduling details within the calendar event and schedule iterator mechanisms, leaving the drafter free from worrying about exactly when markets are open, which days are weekends or holidays or leap days, and the like. The Counterparty's delivery schedule can be negotiated or this detail can be left up to the Counterparty. In the contract above, the constraints on delivery are that it occur within July and only in conjunction with payment from the Holder.The innermost clause says to swap rightA for rightB. This clause is split into a Holder right and a Counterparty right. The right clause Holder rightA means \"Holder has the right to performance of rightA\", in this case delivery of the pork bellies. The clause Counterparty rightB means \"Counterparty has the right to performance of rightB\", which here is the payment of 1,500 dollars. with indicates a simultaneous swap \u2013 the two transactions should occur together, perhaps intermediated by an escrow agent to enforce both the delivery and payment terms.A then statement allows us to proceed step by step. If we had two clauses written thus:They could be performed in any order \u2013 right2 might be performed first, or right1 might be, or (most likely) performance on both might proceed at the sime time. Several when statements nested together at the same level have any implicit also as they can be triggered in any order.Envision a dancing elf that follows nesting of clauses as they are performed and of events as they are caught. (Programmers call this dancing elf by the boring name \"instruction pointer\"). There can be more than one dancing elf if there is an also or if more than one when statement is triggered while another is active, but usually we only need to think about one at a time.If we wish to add the constraint that right2 cannot be performed until right1 has been, we use then:Traditional programmers will be sorely tempted to fill their contracts with then statements, mimicking the style of procedural programming. Do not! Those experienced with drafting contracts know that in some cases such a constraint is clearly appropriate and in some cases it clearly isn't, and it is important when adding constraints to be explicit. Therefore the following statement is illegal, and will be rejected both by the computer and by any right-thinking drafters working without a computer:Finally, we have already seen this kind of clause:This means that right1 and right2 should be performed simultaneously \u2013 and either both of them should be performed, or neither of them. In the lingo of computer scientists, it should be an \"atomic\" transaction.The then terminate at the end of the named clause ensures that all rights and obligations under the contract are terminated once it has been performed. It is not triggered until the one-line body of the future contract has been completed. as well as any outstanding subordinate clauses with their rights and obligations. This clause is implicit at the end of every named clause, but for this one time we make it explicit. This clause is often used explicitly when the drafter wants to ensure the proper termination of non-named clauses nested within a named clause.Let's now proceed through the futures contract step by step, as clauses are activated and then performed. A normal font indicates the clause is inactive. A bold font indicates an active state \u2013 the clauses is being performed.When the parties commit to the contract its first clauses (the clauses at the highest level of indentation) are awoken. In our futures contract we have only one such clause, and so the when (but not the clauses nested underneath it) go to in an active state, waiting for the withinPeriod() event:When the calendar has advanced to the end of trading on the last trading day of August, the withinPeriod(p) event occurs and the when activates the clauses nested at the next level inside. The when itself becomes inactive \u2013 it is no longer waiting for an event:The then has cause the terminate to wait for the when and its subclauses to be performed. Once the swap of rights has been performed, the performed clauses convert to inactivity and the terminate fires:It is easy to generalize in our language. The generic futures contract looks like this:Instead of pork bellies, we can swap any other rightA for rightB, which can be a wide variety of things beside money. Drafters can specify very general boilerplate and fill in details for specific contracts later.We now present another kind of financial contract. In this American option, the Holder has the right to buy for $20 (the option strike price) per share one round lot (100 shares) of XYZ Corp on or before the last trading day of August. These kinds of contracts are called \"derivatives\" because the call option is derived from the underlying right (here a stock).Think about that dancing elf again. (When reading or writing in our language it's important to follow these dancing elves. If the elves become annoying, think of some other dynamic character or process for a metaphor that suits). As it goes around it wakes up clauses, making them active, causing them to be performed. Sometimes there can be more than one elf dancing through the code at the same time, for example if more than one when statement is triggered while another is active, but usually we only need to think about one at a time.The contract starts out with dancing elves in the two top-level clauses:These when statements are now waiting for their respective events. Since the events are mutually exclusive (it is first beforeTime(time), then afterTime(time), but never both) we only need to worry about the first to be executed. Note that, unless separated by a then, the order of the clauses at the same level is not important. The following code is identical to the code in our example:The beforeTime(time) is immediately activiated, so that we start with the nested clause(s) at the level immediate below it active as well \u2013 in this case, when choiceOf(Holder).A series of whenes at the same level in that clause all start waiting for any of them to be triggered. When a when receives an event thrown below it or at it, the nested clause below it becomes active. Then the clauses below it become active and are performed down to the wheness one level below. The whenes at that level go from inactive to active, now waiting for their events to occur.The when beforeTime(time) becomes active when the option itself is first activated, and remains active until time. Being active it wakes up the when choiceOf(Holder). This when specifies the event that gives the contract its nature as an option -- the choice of its holder to exercise it or not. If the Holder chooses to do so, the Holder gets the stock (rightA) from the Counterparty (the writer of the call option) in exchange for the money (rightB). The dancing elves then move from the when clause to the swap clause:When code gets complicated, we might not be able to easily tell whether the implicit then terminate on the last line will get executed. So it's a good idea to terminate the contract explicitly when the option expires.We will see examples where more than one kind of event, and even sequences of events (such as a calender schedule of payment dates) trigger the execution of contractual terms.Remember that the language does not proceed by default step by step \u2013 instead the reader (human or computer) should follow down the nested contract definitions as they expand, and look at events in when statements to see what they trigger. Explicit step by step calendar schedules can be built using for, then, and calendar events.Here's an example that uses such explicit steps. A bond makes a sequence of fixed payments, called coupons, on a regular schedule, and then makes a final payment, the principal. We don't show here the details of the schedule itself, but in general a schedule could be defined to be any kind of temporal sequence \u2013 we could pay out coupons on the last day of every month, on every Japanese holiday, according to the computation of Easter (don't laugh \u2013 schedulers of medieval fairs had to face this problem), or however we choose. When implemented the calendar events and schedule iterator will contain a very thorough implementation that solves many of the nasty calendar problems that often appear in transaction processing systems.for iterates through the events in the schedule one by one, with the nested when handling them. When it appears after a for clause, a then advances the iterator one more step.Next we sketch a contract to sell a car on credit. Being a sketch rather than a full-fledged design, this is an oversimplified or \"toy\" example \u2013 we leave out fees, any references to a related insurance contract, warrantees, waivers, etc. We also for simplicity have the bank (here the Holder) be the same as the car dealer. Finally, we don't show here any lien on the car to secure the loan. We will make a stab at a lien-like mechanism in an example below.If we want to allow prepayment, our schedule would contain single times rather than periods with a begin time and an end time. And our loan payments would look as follows:We could compute the above payment from other information we are more likely to see in the contract, but this involves just normal programming. We can use a function to perform the computation in the first place:\"=\" sets, for all time (thus constant), the number payment.amount to the value returned by the function computeInterest. We could also do more complicated things \u2013 deduct interest for prepayment, or conversely add prepayment penalties, or a wide variety of other conditions.We can also structure the car purchase contract so that the new owner doesn't get the title until after the downPayment has been received:Let's use our language to analyze some important advances in the history of economic institutions. Genoa was an independent and rather libertarian (for its time) city heavily involved in the Mediterranean sea trade. During its height in the twelth through fifteenth centuries it developed many commercial innovations, including two we will examine here, the \"dry exchange\" loan and pooled-risk insurance.Here is a clause from a contract made in Genoa on June 23 in 1271 A.D. A man is co-signing an obligation being made by his son:Wherefore and for which we promise, both of us [liable] for the whole amount, to give and to pay to you or to your accredited messenger 53 gold hyperpers, good and of correct weight, in Romania [Byzantium], by the Kalends of September. If, however, we do not give you these [hyperpers] within the said time limit, [we promise] for each of the said hyperpers 11 shillings Genoese in Genoa whenever you wish. Otherwise we promise, both of us [liable] for the whole amount, to give to you, making the stipulation, the penalty of the double of the said amount, the aforesaid [conditions] remaining as settled. And we pledge to you as security for the aforesaid [promises] all our goods, existing and future...[5]Now, this is a very clever contract, called by scholars a \"dry exchange\". The Catholic Church forbad the charging of interest, so a loan contract that came right out and charged interest would be unenforceable and expose the drafters to further Church sanctions. But both long-distance exchange (making a trade at a distant market at a later date -- often via a sea voyage, thus a \"wet\" exchange) and currency exchange were quite legal, enforceable, and common. The above contract combined these two, along with damage clauses, in a clever way. None of the above parties had any intention of travelling to Byzantium, or even outside Genoa, to perform on this contract. Its logic can be analyzed as follows (the Holder is the creditor). We've added the statements \"in (geographic location)\", security, and foreclose to highlight important aspects of this contract. The latter sells enough of the goods at auction to satisfy penalty (if there was not enough to satisfy the creditors there was a bankruptcy procedure to fairly allocate the remain security among the creditors, but this is not shown):Neither party expected payment1 to be performed. The amounts of hyperpers and shillings probably reflected accurately the exchange rate between the two coins at the time \u2013 there's no sense being too obvious. But it would have been far too expensive to travel to Byzantium just to do this exchange. So in fact both parties expected payment2, a fake damage clause, to normally be performed. If it wasn't, then we have two real damage clauses \u2013 the somewhat reasonable \"penalty of the double\" and the lethal \"all our goods, existing and future\". Another interpretation of the latter clause is that it would only refer to a value of goods up to the double penalty amount, but the goods could be chosen from among all the goods of the debtor and the co-signer. Certainly a modern court would consider the interpretation I have placed on it in our language to be unconscionable, therefore unenforceable.Above the part we quoted, the contract does not specify how much the original loan amount was \u2013 the debtors simply acknowledge that they have received from the creditor \"a number of Genoese deniers\" and then promise other currencies in return as quoted above. So a Church investigator couldn't prove just from reading the contract that any interest was charged. As for the Genoese judge arbitrating a dispute, he would likely be in favor of loans at interest, and happy to wink and nod and interpret the contract literally.Modern derivatives traders do this all the time, creating synthetic assets or combinations that mimic the financial functionality of some other contract while avoiding its legal limitations. Our language is ideal for drafting and analyzing such contracts.The earliest risk-pooling insurance contracts were structured similarly to, and enforced under the same legal principals as, loans. Indeed, let's start with a simple loan for a purchase of goods with no interest where the Holder (the creditor) can call in the loan any time between days t1 and t2:Let's add to our language a safeArrival(goods) event \u2013 the event that a ship carrying goods arrives safely in port and that goods are offloaded and accounted for. Now by adding to this loan contract only one extra line, whening safeArrival(), and slightly modifying a few others we can transform it into a marine insurance contract. The insured is the Holder, the insurer is the Counterparty. For this simple version damages are paid in a fixed amount (principal) if safeArrival does not occur:Here's an example of an early insurance contract of this kind \u2013 again from Genoa, the birthplace of modern commercial institutions. For the first time we see a pool of insurers \u2013 not one but many counterparties, each pledging their entire property as security. Often these were feudal lords with large landholdings, so the value that could be brought to bear to back these insurance contracts was vast. This is how Lloyds Names still work today. Since several Names back a single contract (e.g. covering a single shipment of goods, as here), each Name puts only a tiny fraction of their estate at risk in that voyage. An insurance exchange like Lloyds allows the agents of goods owners, shippers, and Names to meet and mass-produce these kinds of contracts....Geri, [son] of the late Ser Lapo of Florence, Simone Guascone, [9 more Names listed], each of them [liable] for the amount written below, have acknowledged and in truth have declared to me, notary undersigned, as a public official [holding] a public office, making the stipulation and receiving in the name and stead of Federico Vivaldi, citizen of Genoa, that they have bought, have had, and have received from him a certain amount of goods of the said Frederico...And for these goods and in consideration of their price each of them has promised to give and to pay to said Frederico or to his accredited messenger: [from] the said Geri, 150 gold florins, the said Simone, 50 florins, [100 florins each from the other Names] within the next five months from now. Otherwise they have promised to give and to pay to the said Frederico the penalty of the double of it and of the entire amount to which and to the extent of which [this agreement] is violated or is not observed as above, together with restitution of all losses, unrealized profits, and expenses which might be incurred because of it in court or outside \u2013 the aforesaid remaining as settled, and under hypothecation and pledge of their goods and [the goods] of any one of them, existing and future.[The above is binding] with the exception and special reservation that if the amount of goods, property, and merchandise which was loaded or is to be loaded by Frederico Imperiale or by another in his behalf for the account of the said Frederico Vivaldi in Aigues-Mortes \u2013 to be transported to Ayassoluk and Rhodes or to either of these two localities in a certain ship...and which departed from Aigues-Mortes or is about to depart in order to sail to aforesaid regions \u2013 is brought and unloaded in the said localities of Ayasoluk and Rhodes or in either of them, in safety, then and in such a case the present intrument is cancelled, void, and of no value and pro rata. And be it understood that such a risk begins when the said ship departs and sets sail from Aigues-Mortes, and it remains and lasts, while the captain goes, stays [in port], sails, loads and unloads, from the said locality of Aigues-Mortres up to the said localities of Ayassoluk and Rhodes, in whatever manner and way he wishes, until said amount of goods, property, and merchandise has been brought and unloaded in Ayassoluk and Rhodes or in either of these two localities in safety, and pro rata. Let the present instrument also be cancelled if the said Frederico refrains from asking payments of the aforesaid amounts of money for the space of one year after the time or the time limit has elapsed for asking or obtaining their payment....Done as above, September 15th, around nones. [1393 A.D.][5]Ignoring the pro rata language, the specific definition of the risks that prevent generation or not of the safeArrival() event, and ignoring the multiple Names (i.e. treating them as one Counterparty), the contract can be modelled by the insurance contract we drafted above with its parameters filled in as follows, and with Frederico Vivaldi as the insured (the Holder):This contract was still, legally speaking, a loan. This had at least two interesting consequences on what we now call the insurance premium. Firstly, the premium was treated as goods purchases by the insurer on credit. Secondly, even at this late date, contracts were coy about the actual value of such goods. Leaving the value of those goods unspecified made usury difficult to prove in this \"loan\".Events in a when clause can be combined in logical conditions which must evaluate to true in order to trigger the subclause. This can be used to model conditional clauses in contracts, and, more broadly, procedural and substantive rules of law. When constructing rules we call the primitive events elements. For example, here is, roughly following the Restatement(Second) of Contracts, a legal rule for promissory estoppel:We include a gratuitous \"then\" here for readability. Computer programmers should note that we are following a shorthand here used by lawyers \u2013 we write the logical phrase (A and B and C and D) as (A B C and D). When mixing and and or, write out the complete logic, and use parentheses where appropriate.The rule elements, such as \"there is a promise\", exist in a superimposed state. By default, the logic is ignorant of the facts, and each element is genuinely at issue. As a result, \"there is a promise\" and the other elements of the above rule are both true and false, at the same time. (Those familiar with quantum mechanics or legal reasoning know what I'm talking about here). In the initial state, where every element is genuinely at issue, nontrivial rules will always evaluate to both true and false. Thus, both \"promise will be enforced\" and \"promise will not be enforced\" clauses will be triggered. When the clauses are incompatible, as these appear to be by their label, it is up to the implementor of the clause to deal with this properly. In this case, such a clause should only be treated as advisory until all material elements have been decided \u2013 i.e., they are no longer genuinely at issue, at which point the rule can be used to make a decision, i.e. trigger a single clause which takes a consistent action. A future version of this document will describe how to resolve elements genuinely at issue into elements not genuinely at issue, and thus decide on a single outcome or course of action. It will also describe how to deal with advisory clauses; for example, to analyze which elements are most favorable to one outcome or another. Finally, another future feature will include elements that cover a range of numerical values, rather than just true or false, and a formalized \"balancing test\" that determines outcomes based on underlying numerical estimates.Our rule language is ideal for specifying estates and future interests in real estate deeds. One can also apply these patterns to other kinds of property where appropriate. Here are some examples:Lease for Term: (n.b. \u2013 Grantor = self). This is an old common law lease that actually transfers title for a certain period of time.Life Estate with Reverter: (n.b. \u2013 Grantor = self)Assignable Reverter for Lease. To make future interests assignable, define them separately. Note to make the Grantor explicit. (As usual we are looking at things from the obligor's side):We can now redefine the Life Estate with Reverter in terms of the separately defined future interest:Life Estate with Remainder. The only difference here is that the property is remaindered to a third party instead of reverting to the grantor.Fee Simple Determinable. The Condition can be any verifiable event or change of state of the property or its title. A common real estate condition, for example, is \"used for commercial purposes\" \u2013 i.e., a restriction that the property may not be used for commercial purposes, otherwise the grantee is penalized by losing title to the grantor.Fee Simple Subject to Executory Limitation. Same as Fee Simple Determinable, except the property gets remaindered to a third party instead of revertin to the grantor.Fee Simple Subject to Condition Subsequent. Here title is not automatically transferred upon occurence of the condtion. Instead the Grantor must do some affirmative and verifiable act (in this example \"entering\" the property), to reclaim the title.In this section we will look at ways to construct multiparty agreements, distinguish ambient from thrown events, and examine a number of other more advanced features of or ways to use our language.We will complete the life cycle of the American option we drafted above by \"writing\" the option \u2013 creating it from an underlying security rightA and selling it for rightX. Here the Holder (same party as the Holder above, in this case the person who will buy the written option) first verifies that the Counterparty indeed holds the underlying security (rightA) with Broker. The Broker is trusted by the Holder to make sure Counterparty continues to hold the security until the option is exercised or expired. The contract between the Broker and Holder is escrowRight().)Since Counterparty, the option writer, is not paying anything up front for an option on rightB, this right does not need to be escrowed.We now redraft the option itself to take advantage of the escrow. rightA is transferred to Holder by the throw upon excercise, or back to Counterparty if the option expires.We can think of events as coming in two kinds. The first, ambient events, occur spontaneously in the environment, or are generated by an entity external to our specification such as a user or a schedule. The second, thrown events, are events we explicitly throw as above.In this manual I have expressed contract clauses in terms of rights. Often contract language is expressed in terms of obligations, which can be done as a mirror image \u2013 to Holder right is the same as from Counterparty obligation and vice versa. Use from to distinguish an obligation.Further showing the flexibility of our language we can add sensors and effectors, adding \"smarts\" to our contracts and augmenting legal enforcement with technological constraints.First we draft a specification for the contract-like bevavior of a vending machine:We have here introduced a new language feature, a state variable. Our state variable moneyAmount generates an event upon surpassing the candy price threshold of $0.90. Note that nickels, dimes, etc. are actual physical objects that the sensors (generating events \"nickel\", \"dime\", etc.) detect and treat separately \u2013 they are not merely abstract amounts of money.State variables can be troublesome, and should be avoided unless utterly necessary as here. This one is relatively harmless because the coin slot tends to force the coins to come in one at a time, so that no two clauses are trying to change the state variable at the same time. Even if they were, the addition operation is what mathematicians call \"commutative\", meaning it doesn't matter what order it's done in. But if the operation on the state variable were more complicated or involved certain other kinds of operations, we wouldn't know whether it was commutative. The order in which events occured and changed the state variable might matter very much, and we could get into big trouble. So avoid state variables whenever possible.To simplify things, we've left out making change \u2013 our machine has to have one of those signs you sometimes see, \"exact change only\". If the customer puts in a coin that pushes the amount from, say, $.80 to $1.05 \u2013 too bad, the machine eats it. If the customer puts in $0.90 (or more) and then adds more coins, however, the machine automatically returns the extra coins. The machine will also return whatever has been put in the till, if the customer changes her mind and decides not to buy the candy. Exercise for the reader: verify for yourself that the above behavior descriptions are correct as the code is written.RedirectNewCoinsTo(returnTill) causes any further coins to drop into the return chute instead of onto the sensor that triggers the above events. The reader must here imagine what the mechanism looks like, as part of the behavior is \"encoded\" in its mechaninism rather than explitly in this statement.Think of the nested contracts and rights as an upside-down tree \u2013 a hierarchy of nested clauses. Events propagate from up from the \"leaves\" of the tree towards the \"root\" at the top. They are caught by the first when event they encounter for that event. In this case, once we enter the when threshold() clause, the when (nickel | dime | quarter) clause overrides the when(nickel) and so on clauses above them.Like a perpetuity, our vending machine has no scheduled time or condition where it stops performing \u2013 therefore we have a continue statement to overrid the implicit then terminate on the last line.Alas, neither I nor real world candy machine makers have any code to solve the case where the candy gets stuck in the machine.The above is a transcription of machine behavior. Now we make it even more like a contract. Here we incorporate the customer and his choices, which implicitly generated the coin events in the code above \u2013 here the coins are rights of the Holder. Thinking more about the party, rather than the machine, allows us to recognize that at each step the customer wants feedback on how much money they have put in, thus to Counterparty display(moneyAmount). This display is done by the Holder (the vending machine as an agent of the vendor) as a right of the Counterparty (the customer). To enable better customer choice, we add a new construct to our language: choiceOf(agent, right) which allows the customer multiple choice, based on which right they wish to transfer to the agent's counterparty (here the vending machine, the Holder).How is it that we have specified the behavior of a vending machine in a language designed for drafting contracts? Can nickels, dimes, quarters, and operations like dropping coins from one till to another be thought of as rights and obligations? I think so. They are not legal rights and obligations, to be sure. There is no explicit contract between the vendor and candy machine customers, and if their were it would probably waive liability for violating most of the clauses in our code. What this code describes is the logical and typical behavior of a vending machine. It also reifies the implicit understanding most customers have when using a vending machine. Thus it models a contract-like \"meeting of the minds\" between the customer and the vendor that is mediated by the machine.Here is a stab at formally describing the hypothetical \"auto repo auto\". The car is controlled by a proplet and the proplet looks to property titles to determine ownership authority. The proplet lets only the titled owner enter and drive the car. \"Holder\" is the bank that made the loan and \"Counterparty\" is the new owner. As above we ignore the car dealer; the bank originally owning the car. This example highlights the ability of the language to very succinctly describe contracts but also its inability to describe the actual security that will enforce the contract. There is of course a lot missing here, including the items missing from the above car loan contract. From a smart contracts viewpoint, the biggest thing missing is that there is nothing to motivate the \"Holder getTitle(car)\" in the last when, nor any way specified here to enforce it. And of course all connection between ownership and authority to enter, start, and drive the car is here implicit \u2013 the actual proplet behavior in this regard would have to account for safety, emergency use, etc.For all that work-up, we've only actually added one clause to our car purchase contract above. The clause forfeits the title and is structured much like the damage clauses we have seen. A breachedPerformance() event is generated if it is detected (by the Holder, a third party auditor, or the proplet itself) that the Countparty failed to make a payment according to the schedule specified by loan.Here is a formal specification of the language's grammar in \"Backus-Naur Form\"(BNF). The specification is for a planned computer-readable version of the language and there are a few minor differences, such as the use of brackets {} instead of tabs to denote nesting. BNF is used to define what linguists call \"context-free grammars\". It is also used, as here, to define the syntax of languages that computers can also interpret and execute. I also include some more discussion of the meanings of the words and structures, especially how the computer might interpret them. As you can see, this is an evolving language, a work in progress with many unresolved issues. Your suggestions for changing or adding more kinds of contractual terms to our language are quite welcome.Q: There are already languages for specifying financial contracts[3], what is the novelty here?A: This the first specification language to generalize contractual structures to any kind of exclusive rights, not just money. This is also the first language that incorporates the dynamic nature of many contracts, (their dependence on time or events) in a succinct, complete, and potentially executable manner. Surprisingly, this often makes the specification more not less succinct.Where's the money?A: This language is targeted toward an economy of distributed software and devices performing services for each other. A money economy can be constructed out of a barter economy but not vice versa. Real online money is far more subtle than a mere shared variable (or even the specification of \"bank notes\" in this language). Money is just one kind of fungible exclusive right, and the structure of financial contracts are generalized by converting money terms into any fungible exclusive right.Q: What assumptions are you making?A: This is the most important question to ask of any novel scheme! I have identified at least the following:Q: What are some problems with this language you'd like to see solved?A: Implementations that satisfy the above assumptions for the particular language atoms, and also for compositions of the atoms. (Of course, various protocols in the \"financial cryptography\" field, in my own proposals, in the E language, etc. provide many valuable building blocks for such solutions).There are many instances of deals gone sour at the last minute when the salesfolk check with legal and discover that the deal is not possible due to a clause in another contract \u2013 for example a promise not to sell to a customer's competitors in an industry for a certain period of time. Worse, such a conflict might not be discovered until the contraditory commitment has been made. \u21a9The E programming language \u21a9Proceedings of the Financial Cryptography Conferences, Springer-Verlag \u21a9Composing contracts: an adventure in financial engineering \u2013 A different kind of language for specifying financial contracts in order to compute their risk and value. \u21a9Lopez and Raymond, Medieval Trade in the Mediterranean World: Illustrative Documents, Columbia University Press 2001. \u21a9 \u21a9Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 2002 by Nick Szabo\nPreliminary draft -- Redistribution only with written permission of author.Editor's note: Some links may be broken."}
{"prompt": "Secure Property Titles with Owner Authority", "completion": "The advent of writing greatly improved the tracking of property rights, and indeed gave rise to our modern systems of property rights and law. However, written records have proven to be quite vulnerable to abuse. A common pattern during eras of political instability or oppression has been the confiscation of land via the forgery or destruction of public records. Reconstruction from informal records, such as residency recorded in phone books, even when possible is costly and fraught with error and potential for fraud[1]. Large amounts of, in some areas most, property in developing countries is not formally titled[2]. Even during eras of political stability in developed countries, there occur many expensive problems with titles.[3] Straightforward transcription of written records into a centralized online repository would make many of these problems even worse \u2013 electronic records can be highly vulnerable to loss and forgery, and insiders are the most common source of such attacks. This paper proposes a secure, distributed title database to prevent such attacks against property rights in the future.Many kinds of Internet resources have a basic characteristic: users must agree on their control across trust boundaries. A big example is names. The article \"Names: Decentralized, Secure, Human-Meaningful: Choose Two\" dismisses not only the ubiquity and importance of this problem, but also the possibility of solution.[4] Instead petnames are proposed. These are at best mere mnemonics to translate human-readable into cryptographic names; petnames don't do anything to secure naming across trust boundaries. All three attributes \u2013 decentralized, secure, and human-meaningful \u2013 must be provided if people are to communicate and be communicated about securely over the Internet, and this paper along with the article Advances in Distributed Security shows how to provide all three.More generally, we show how to implement transferable global rights, enforced entirely by protocol, to names, attributions, bit gold, and similar purely informatic property owned by a particular entity but possessed and relied upon by the public, and how to implement a secure title database for other kinds of property. For a particular example of cross-trust-boundary rights enforced entirely by protocol, see my proposal for name integrity in cross-trust-boundary file systems.In all cases of property rights there is a defined space, whether a namespace or physical space, and the task is to agree on simple attributes of or rights to control subdivisions of that space. In some cases a name or other symbol corresponds to a person or object owned or controlled by that person. For example, Internet users must agree on which domain name corresponds to which web site operator. In other cases we are simply concerned with control over a subdivision of the space. With real estate we must agree on who owns various rights (to occupy the surface, to mine the minerals under, etc.) to a piece of land. With radio spectrum we must agree on who owns what range of frequencies and in what physical space (or transmitting power as an easily observed approximation of physical space used).It is the author's hypothesis that all such agreements of control, including control over the semantics of symbols, to be made and respected across trust boundaries are problems of agreeing on and maintaining property rights. Thus the results of this paper are far more general than they might first appear \u2013 I believe this paper provides a solution to secure namespaces and similar problems as well as the problem of securely recording agreements on traditional property rights. Highlighting the property rights nature of public directories also highlights the limitations of these mappings \u2013 for example that names, addresses, and other symbols whose semantics are controlled by a person can often be delegated, just as property can be given or rented.New advances in replicated database technology will give us the ability to securely maintain and transfer ownership for a wide variety of kinds of property, including not only land but chattels, securities, names, and addresses. This technology will give us public records which can \"survive a nuclear war\", along the lines of the original design goal of the Internet. While thugs can still take physical property by force, the continued existence of correct ownership records will remain a thorn in the side of usurping claimants.I use political words in this essay as metaphors to describe how our hypothetical property title software, and especially its protocol for distributing the title database across a public network, could work. A group, called a property club, gets together on the Internet[5] and decides to keep track of the ownership of some kind of property. The property is represented by titles: names referring to the property, and the public key corresponding to a private key held by its current owner, signed by the previous owner, along with a chain of previous such titles. Title names may \"completely\" describe the property, for example allocations in a namspace. (Of course, names always refer to something, the semantics, so such a description is not really complete). Or the title names might simply be labels referring to the property. Various descriptions and rules \u2013 maps, deeds, and so on \u2013 may be included.The property club can be thought of as a \"microgovernment\", an entity that performs globally and independently one narrow function normally associated with government. In particular it is a \"constitutional microdemocracy\" with low entry and exit costs. After the rules of property transfer have been decided, each vote should stay within this constitution \u2013 so that normally the vote will simply implement a distributed operation according to the property rules. The voting is necessary not due to a democratic political ideology but because it is the optimal result in analysis of distributed databases with malicious attackers.[6] If the rules are violated by the winning voters, the correct losers can exit the group and reform a new group, inheriting the old titles. Users of the titles (relying parties) who wish to maintain correct titles can securely verify for themselves which splinter group has correctly followed the rules and switch to the correct group. If the rules are violated by losing voters, they can be excluded from further participation both by correct winners and rule-following relying parties.This voting-or-reformation method works well where exit costs are low. Thus in practice users should not \"put all their eggs in one basket\", but different title clubs should be used for different kinds of property. Note that the key security feature of the club is not the voting, but a set of objective, often automated, rules and an unforgeable audit trail that allows both club members and relying parties to check whether each vote followed the rules. So, to go further with the political metaphor, a property club is a \"constitutional microdemocracy\" with most of the emphasis on the \"constitutional\". The voting is necessary, but is quite regulated.To implement a property club, we set up a replicated database so that the club members, hereafter \"servers\", can securely maintain titles of ownership, and securely transfer them upon the request of current owners. Actually getting end users to respect the property rights agreed upon by this system will be dependent on the specific nature of the property, and is beyond the scope of the current inquiry. The purpose of the replicated database is simply to securely agree on who owns what. The entire database is public.The ideal title database would have the following properties:We cannot achieve ideals (1) and (3), so we introduce \"voting\" as follows. A good model of secure replicated databases is the \"Byzantine Quorum System\" of Malkhi & Reiter[6]. In contrast to most recent work in peer-to-peer software, our design is based on mathematical proofs of security rather than hand-waving. For a short discussion of such threshold-of-servers approaches, see my essay \"Coalition Design for Secure Protocols\". The database is replicated across a universe of servers U, |U|=n. The \"quorum system\" is a collection of subsets (quora) of these servers, each pair of which intersect. Each quorum can operate on behalf of the system; intersection guarantees that operations done on distinct quora preserve consistency. A quorum system tolerant of Byzantine (unconditionally malicious) server failures is a collection of subsets of servers, each pair of which intersect in a set containing sufficiently many correct servers to guarantee the consistency of the replicated data. The authors construct a protocol such that any intersection contains at least 2f+1 servers, thus providing resilience against up to f malicious servers, n > 4f.Using these results it looks like we can approach our ideal title database as follows:Sharing control over property, for example as security for a loan, could be accomplished by sharing the private key corresponding to the current owner's public key. Possession of this private key is required to sign over title; multiparty threshold signatures could also be handled. So it may be a good idea to use one keypair for each combination of title and current owner, rather than keypairs representing the identities of owners. When certain contractual conditions are met, such as the last payment on a loan, this could trigger the generation of a new keypair held solely by the owner, and transfer of title from the shared keypair to the new keypair.The initial allocations might occur by mapping existing property rights from their current institutional incarnation, or by using traditional methods of staking and negotiating mutual recognition of claims. Some methods less dependent on an existing legal regime for the rights will be discussed in this section.For some kinds of allocation, such as spatial regions or a hierarchical namespace, we wish to be able to subdivided and re-merge properties. Current owner Alice should be able to transfer various fractional portions of her title to multiple single relying counterparties. One possibility is to have \"divide\" or \"merge\" messages whereby the current owner of a property can retire the old property specifications(s) and link them to new property spec(s), the whole message being signed by the owner. Then the new property spec(s) are introduced and considered active, and the old ones considered deactivated. It would be the responsibility subsequent transferees to ensure that the new specifications do not intersect, and are otherwise in good order.One way to approach the homesteading, or initial allocation, problem, I call the \"emergent respect\" style: Alice claims the entire unallocated universe. Bob also claims it, the same property spec under a different digital signature. They then may choose to subdivide, sell, give away, etc. property. Each conflicting root grows like a tree into an allocation of all property.How to resolve trees with conflicting roots? Eventually, the thugs, mechanisms, or informal agreements which enforce property rights converge on a particular tree as the standard, proper allocation. Roots who give away more property to more people, or who actually deploy mechanisms to protect their property, will gain more respect for the tree they started.In a namespace, conflicts may be resolved by giving names to the conflicting roots, and keeping track of those name-subtree mappings as property.Usurpers may be able to steal property by setting up their own root and enforcing it, but they can't delete the alternative allocations. The history is always there as evidence for claims.Those with no firsthand knowledge of conflicting claims may resolve them by consulting authorities, and weighing the opinions of these authorities according to trust metrics, similar to trust metrics sometimes used for public key certificates.With secure timestamps, homesteading could be done on a first-come rather than emergent respect basis.For some kinds of property we might want to add the right of adverse possession, or formalized squatting. Here's one general way to implement a kind of adverse possession:This method doesn't attempt to define or utilize a state of \"disuse\". Instead it equates activity of the property with the ongoing active online presence of an owner who knows about the title and wishes to continue ownership. Cost of maintaining the title might be made high by requiring a periodic registry fee from owners. However, this introduces the problem of who obtains the benefit, by property club rules, of the profits from this fee, and the problem of that the fee lowers the profit of owning the property, even perhaps making it negative. One possibility, where costs of protecting the property are high, is to charge a \"Georgian tax\" based on some imprecise but objective estimate of the value potential of the property, and allocate the fees to the task of securing the property. To come up with this estimate, or to account for usage of the property itself, would involve mechanisms or observation of characteristics specific to the kind of property, to which subject we now turn.Largely unaddressed above is the problem of divergence between actual conditions and directory rights. For example, squatters might legitimately, in the eyes of most property rights enforcers, occupy and improve unused land which a title registry indicates is owned by others. De Soto[2] describes squatters and emergent property rights on the American frontier and today's developing world. When names are property, a name may violate a pre-existing trademark, causing the confusion that both the new namespace and the old trademark namespace were designed to solve.When divergence becomes too great, a solution to address the unreality of the title registry is needed. One such solution is for the squatters to set up their own rival registry, and then prove the superior correspondence of their registry to actual reality over control and use of the resources. Another solution for squatters is to use the adverse possession mechanism described above \u2013 but this works only if the cost of maintaining the title is sufficiently high.Another solution is to examine the incentives of the titled owner, to see if they correspond to truthfully claiming control over a resource. In most cases there may be incentive to lie, and we can't use this method. In some cases there is incentive to tell the truth and we can, with caveats, rely on it. Any such incentive assumption in the property rules should be explicated, so that relying parties can examine whether the conditions creating the incentive still hold.Another solution is for property club rules and the registry to originally incorporate rich information about the actual state of property, and modify the actual ownership and transfer on this property based on that state, in a way that leaves few ambiguities so it can be fully audited by club members and third parties. It is most advantageous when this auditing can remain automated, as envisioned above. However the introduction as rule criteria of unrecorded (or unsecurely recorded) transient states common in physical property causes auditing, and thus the titles, to become both less secure and more expensive.My thanks to Gregory Burch, J.D., Eileen O'Connor, J.D., Melora Svoboda, and many others for their helpful comments.Kelly McCollum, \"Using Phone Books, Scholars Build a Data Base for Resettling Kosovars\" \u21a9Hernando de Soto, The Mystery of Capital \u21a9 \u21a9Reasons to buy title insurance \u21a9Bryce \"Zooko\" Wilcox, Names: Decentralized, Secure, Human-Meaningful: Choose Two \u21a9Property on the Internet may take all kinds of new forms. For analysis one recently emerged form, the ownership of open source software projects, see Eric Raymond, \"Homesteading the Noosphere\". \u21a9Malkhi & Reiter, \"Byzantine Quorum Systems\", STOC97 \u21a9 \u21a9Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 1998,1999,2002,2005 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "Trusted Third Parties are Security Holes", "completion": "Commercial security is a matter of solving the practical problems of business relationships such as privacy, integrity, protecting property, or detecting breach of contract. A security hole is any weakness that increases the risk of violating these goals. In this real world view of security, a problem does not dissapear because a designer assumes it away. The invocation or assumption in a security protocol design of a \"trusted third party\" (TTP) or a \"trusted computing base\" (TCB) controlled by a third party constitutes the introduction of a security hole into that design. The security hole will then need to be plugged by other means.If the risks and costs of TTP institutional alternatives were not accounted for in the protocol design, the resulting protocol will in most cases be too costly or risky to be practical. If the protocol beats these odds and proves practical, it will only succeed after extensive effort has gone into plugging the TTP security hole(s). TTP assumptions cause most of the costs and risks in a security protocol, and plugging TTP security holes produces the most benefit and profit.As a result, we propose a security protocol design methodology whereby the most risky and expensive part(s) of a security protocol, the trusted third partie(s), are designed in parallel with security protocol(s) using those parties. The objectives of cost and risk minimization are focused on the TTPs rather than the security protocols themselves, which should be designed to suit the cost and risk minimized TTPs.We also briefly discuss and reference research and implementation in security mechanisms that radically reduce trusted third party costs and risks by distributing automated TTPs across several parties, only a portion of which need to act in a reliable or trustworthy matter for the protocol to be reliable or trustworthy.This author has professional experience implementing a TTP that was assumed by early advocates of public key cryptography. This TTP has come to be called a \"certificate authority\" (CA). It has been given the responsibility of vouching for the \"identity\" of participants. (Here I focus on the costs imposed by the TTP; alternatives such as PGP's Web of Trust and SPKI have been discussed amply elsewhere).The certificate authority has proved to be by far the most expensive component of this centralized public key infrastructure (PKI). This is exacerbated when the necessity for a TTP deemed by protocol designers is translated, in PKI standards such as SSL and S/MIME, into a requirement for a TTP. A TTP that must be trusted by all users of a protocol becomes an arbiter of who may and may not use the protocol. So that, for example, to run a secure SSL web server, or to participate in S/MIME, one must obtain a certifcate from a mutually trusted certificate authority. The earliest and most popular of these has been Verisign. It has been able to charge several hundred dollars for end user certificates \u2013 far outstripping the few dollars charged (implicitly in the cost of end user software) for the security protocol code itself. The bureaucratic process of applying for and renewing certificates takes up far more time than configuring the SSL options, and the CA's identification process is subject to far greater exposure than the SSL protocol itself. Verisign amassed a stock market valuation in the 10's of billions of U.S. dollars (even before it went into another TTP business, the Internet Domain Name System(DNS) by acquiring Network Solutions). How? By coming up with a solution \u2013 any solution, almost, as its security is quite crude and costly compared to the cryptographic components of a PKI \u2013 to the seemingly innocuous assumption of a \"trusted third party\" made by the designers of public key protocols for e-mail and the Web.Some more problems with CAs are dealt with here.The Internet DNS is another example of the high costs and risks imposed by a TTP. This one tiny part of the TCP/IP protocol stack has accounted for a majority of the disputes and handwringing involving that protocol. Why? Because it is one of the few areas of the TCP/IP stack that depends on a centralized hieararchy of TTPs rather than on protocol negotiations between individual Internet nodes. The DNS is also the single component of the Internet most likely to fail even when its names are not being disputed or spoofed.The high costs of implementing a TTP come about mainly because traditional security solutions, which must be invoked where the protocol itself leaves off, involve high personnel costs. For more information on the necessity and security benefits of these traditional security solutions, especially personnel controls, when implementing TTP organizations, see this author's essay on group controls. The risks and costs borne by protocol users also come to be dominated by the unreliability of the TTP \u2013 the DNS and certificate authorities being two quite commom sources of unreliability and frustration with the Internet and PKIs respectively.Companies like Visa, Dun and Bradstreet, Underwriter's Laboratories, and so forth connect untrusting strangers into a common trust network. Our economy depends on them. Many developing countries lack these trust hubs and would benefit greatly from integrating with developed world hubs like these. While these organizations often have many flaws and weaknesses \u2013 credit card companies, for example, have growing problems with fraud, identity theft, and innacurate reports, and Barings recently went belly up because their control systems had not properly adapted to digital securities trading \u2013 by and large these institutions will be with us for a long time.This doesn't help us get TTPs for new protocols. These institutions have a particular way of doing business that is highly evolved and specialized. They usually cannot \"hill climb\" to a substantially different way of doing business. Substantial innovations in new areas, e.g. e-commerce and digital security, must come from elsewhere. Any new protocol design, especially paradigmatically different areas such as capabilities or cryptographic computations, will be a mismatch to the existing institutions. Since building new TTPs from scratch is so costly, it is far cheaper when introducing protocols from these institutionally novel security technologies to minimize their dependencies on TTPs.Many are the reasons why organizations may come to favor costly TTP based security over more efficient and effective security that minimizes the use of TTPs:Limitations of imagination, effort, knowledge, or time amongst protocol designers \u2013 it is far easier to design security protocols that rely on TTPs than those that do not (i.e. to fob off the problem rather than solve it). Naturally design costs are an important factor limiting progress towards minimizing TTPs in security protocols. A bigger factor is lack of awareness of the importance of the problem among many security architects, especially the corporate architects who draft Internet and wireless security standards.The temptation to claim the \"high ground\" as a TTP of choice are great. The ambition to become the next Visa or Verisign is a power trip that's hard to refuse. The barriers to actually building a successful TTP business are, however, often severe \u2013 the startup costs are substantial, ongoing costs remain high, liability risks are great, and unless there is a substantial \"first mover\" advantage barriers to entry for competitors are few. Still, if nobody solves the TTP problems in the protocol this can be a lucrative business, and it's easy to envy big winners like Verisign rather than remembering all the now obscure companies that tried but lost. It's also easy to imagine oneself as the successful TTP, and come to advocate the security protocol that requires the TTP, rather than trying harder to actually solve the security problem.Entrenched interests. Large numbers of articulate professionals make their living using the skills necessary in TTP organizations. For example, the legions of auditors and lawyers who create and operate traditional control structures and legal protections. They naturally favor security models that assume they must step in and implement the real security. In new areas like e-commerce they favor new business models based on TTPs (e.g. Application Service Providers) rather than taking the time to learn new practices that may threaten their old skills.Mental transaction costs. Trust, like taste, is a subjective judgment. Making such judgement requires mental effort. A third party with a good reputation, and that is actually trustworthy, can save its customers from having to do so much research or bear other costs associated with making these judgments. However, entities that claim to be trusted but end up not being trustworthy impose costs not only of a direct nature, when they breach the trust, but increase the general cost of trying to choose between trustworthy and treacherous trusted third parties.For most of human history the dominant form of property has been personal property. The functionality of personal property has not under normal conditions ever depended on trusted third parties. Security properties of simple goods could be verified at sale or first use, and there was no need for continued interaction with the manufacturer or other third parties (other than on occasion repair personel after exceptional use and on a voluntary and temporary basis). Property rights for many kinds of chattel (portable property) were only minimally dependent on third parties \u2013 the only problem where TTPs were neededwas to defend against the depredations of other third parties. The main security property of personal chattel was often not other TTPs as protectors but rather its portability and intimacy.Here are some examples of the ubiquity of personal property in which there was a reality or at least a strong desire on the part of owners to be free of dependence on TTPs for functionality or security:This desire is instinctive and remains today. It manifests in consumer resistance when they discover unexpected dependence on and vulnerability to third parties in the devices they use. Suggestions that the functionality of personal property be dependent on third parties, even agreed to ones under strict conditions such as creditors until a chattel loan is paid off (a smart lien) are met with strong resistance. Making personal property functionality dependent on trusted third parties (i.e. trusted rather than forced by the protocol to keep to the agreement governing the security protocol and property) is in most cases quite unacceptable.We now propose a security protocol design methodology whereby protocol(s) are designed to minimize these costs and risks of the TTPs. Minimizing the costs and risks of the security protocol(s) themselves is an important but secondary priority.Currently, security designers usually invoke or assume TTPs to suit the most elegant and secure or least computationally costly security protocol. These naive TTPs are then used in a proof of concept of an overall protocol architecture. But this does not discover the important things that need to be discovered. Once a security protocol is implemented the code itself costs very little, and exponential cost functions such as Moore's law keep reducing computational, bandwidth, and many other technological costs. The costs of the security protocol itself (except for the costs of message rounds, limited by the speed of light, and the costs of the user interface, limited by mental transaction costs) approach zero. By far the largest long-term cost of the system (as we learned with PKI) is the cost of implementing the TTPs.It's far more fruitful to estimate from the beginning what the TTPs will cost, rather than try to design the security protocols to minimize the costs of the TTPs. This will likely bring the designer to quite different trust assumptions and thus security protocols than if (s)he assumes pure, unanalyzed TTPs in certain places in order to simplify the security protocol. A natural corrolary is if that there exists a security protocol that can eliminate or greatly reduce the costs of a TTP, then it pays greatly to implement it rather than one which assumes a costly TTP. Even if the latter security protocol is simpler and much more computationally efficient.A corollary of \"trusted third parties are security holes\" is \"all security protocols have security holes\", since no protocol is fully free of such assumptions. The key steps in estimating TTP costs and risk are to (1) examine one's assumptions thoroughly to uncover all TTP assumptions and characterize specifically what each TTP is and is not expected to do, (2) observe that each such specific hole and task has an associated cost and risk.There are several other important considerations, including:If for a new context like e-commerce we can find a security protocol which replaces a TTP organization (a complex set of traditions quite unproven in the new context) with mathematics (which at least in itself is quite clear and provable) it will often be a very big win to do so. More often we will replace a complex costly TTP with one or more much simpler TTPs plus mathematics. That too is a big win. We can only tell if and by how much it is a win by focusing on the trust assumptions and the resulting costs of the TTPs rather than focusing on the efficiency of the security protocol. The key is to focus on the cost of the TTPs and design the security protocol to minimize them, rather than assuming TTPs in order to simplify or optimize the efficiency of the security protocol.A good digital security protocol designer is not only an expert in computer science and cryptography, but also very knowledgeable about the traditional costly techniques of physical security, auditing, law, and the business relationships to be secured. This knowledge is not used to substitute these costly security methods for more cost effective digital security, but in order to minimize hidden dependence on costly methods for the real security. A good protocol designer also designs, rather than merely assumes, TTPs that work with minimal use of costly techniques.We saw above that the keys to minimizing TTPs are to identify them, characterize them, estimate their costs and risks, and then design protocols around TTPs of minimal cost and risk. When the risk is mitigated with techniques like those in this session, it can be very substantially reduced.Three areas of research and implementation show special promise in improving trust. Two of these involve the particularly thorny area of privacy, where breach of trust is often irreversible \u2013 once data gets out it can be impossible to put back.The first protocol family in which trust can be distributed to preserve privacy is the Chaum mixes. Mixes allow communications immune from third party tracing. Only any one out of N proxies in a proxy chain need be trustworthy for the privacy to be preserved. Unfortunately, all N of the proxies need to be reliable or the message will be lost and must be resent. The digital mix protocol's tradeoff is to increase messaging delays (resends) in order to minimizes the risk of irreversible privacy loss.Another protocol family in which trust can be distributed to preserve privacy is the multiparty private computations. Here a virtual computer is distributed across the N parties who provide specially encrypted input to each other rather than to a trusted third party. The distributed computer takes inputs from each of the N parties, computes an agreed to algorithm, then outputs the answer. Each party learns only the answer not the inputs of any other party. The threshold of parties that that must collude to violate privacy or threaten reliability can be traded off and have been studied in detail in the ample literature on this topic. Multiparty private computations can be used for confidential auditing, confidential preference gathering and data mining, auctions and exchanges with confidential bids, and so on.A protocol family that replicates data, and distributes operations on that data, while preserving the integrity of that data, are the Byzantine resilient replicated databases. Implementations of Byzantine resilient replicated databases include Fleet and Phalanx. Fleet implements replicated persistence of general purpose objects. Some open source implementations, which approach but do not achieve Byzantine resilience, general purpose, or complete decentralization include Mojo Nation and Freenet. Applications include secure name registries and property titles as well as securely published content in Mojo Nation and Freenet. The most advace work in this area involves Byzantine fault tolerant quorum systems and other recent advanced in distributed security.It is important to note that these threshold techniques are only meant to enhance the integrity of a single step or run of the protocol. Practical systems, such as Mojo Nation, combine a majority or super-majority within a particular run with failure detection and choice by clients of servers between runs. So we can add back all the reputation systems, auditing, and so on that add robustness in the long term to distributed systems. The majorities or super-majorities within an invocation create a very good short-term robustness that is missing from current systems like Freenet and Mojo Nation. (It's only party missing from Mojo, which has a 4-of-8 voting scheme but this has not been shown to be Byzantine resilient up to 4-of-8).Remote attestation has been proposed for verifying the state of software running on clients to protect intellectual property. A more valuable use for remote attestation is for verifying the behavior of servers. This is also called the transparent server approach. Through remote attestation, clients can verify that the specific desired code is running on a server. Combined with the ability to audit that code as open source, remote attestation of servers can greatly decrease the vulnerability of clients and users to the server. Given the importance of the trusted third party problem we have discussed here, this approach has vast potential to convert trusted third party protocols into secure protocols, and to make possible a wide variety of secure protocols that were heretofore impossible. For example, Hal Finney has implemented a version of bit gold called reusable proofs of work, based on a secure coprrocessor board that allows users to remotely attest the code running on the card. While one still needs to trust the manufacturer of the card, this manufacturer is separated from the installation of server code onto and the operation of the server on the card.Often the protocol designer can't figure out how to fix a vulnerability. If the attack one needs a TTP to protect against is not a serious real-world threat in the context of the application the designer is trying to secure, it is better to simply leave the small hole unplugged than to assign the task to a TTP. In the case of public key cryptography, for example, protocol designers haven't figured out how to prevent a \"man-in-the-middle\" (MITM) attack during the initial key exchange. SSL tried to prevent this by requiring CAs as trusted third parties, as described above, and this solution cost the web community billions of dollars in certificate fees and lost opportunities to secure communications. SSH, on the other hand, decided to simply leave this small hole unplugged. The MITM hole has, to the best of my knowledge, never even once been exploited to compromise the privacy of an SSH user, yet SSH is far more widely used to protect privacy than SSL, at a tiny fraction of the cost. This economical approach to security has been looked at at greater length by Ian Grigg.Alan Karp, Mark Miller, and others have observed the confusion over words like \"trust\" and \"trusted\" as used in the security community, and proposed replacing the verb \"trusts\" with \"is vulnerable to\". This substitution is a great way to radically clarify security protocol designs. \"Trusted third party\" as used in this essay becomes \"vulnerable to a third party\", and the point of this paper, that this is a security hole, becomes obvious.In the context of protocol designs, instead of saying the protocol designer trusts some little-known generic class of parties (referred to in the singular as \"a trusted third party\") with a given authorization (which probably really means the protocol designer just can't figure out how to plug a security hole), an honest protocol designer will admit that there is a vulnerability here \u2013 and that it is up to \"out of band\" mechanisms to plug or minimize, or up to users to knowledgeably ignore, that hole. The class of parties is little-known because security protocol designers typically don't know much about the traditional non-digital security, legal, and institutional solutions needed to make such a party trustworthy. The substitution of \"vulnerable to\" for \"trusted\" works well in protocol design, and in communicating honestly about the security of a protocol.Alas, are security designers and sellers of security systems who invoke \"trusted third parties\", \"trusted computing\", and the like really going to come out and admit that their protocols are \"vulnerable\"? Security designs sound so much more secure when they use the euphemism \"trust\".In the real world, beyond the technical context of security protocol design, \"trust\" has a variety of meanings. One different use of \"trust\" is well-informed trust, for example \"I trust this armor to protect me from normal bullets, because it's been very well tested\", \"I trust this site with this authorization because we're using a strong security protocol to protect me when I grant this authorization\", or \"I trust my wife with the kids\", in which cases translating \"trust\" to \"am vulnerable to\" would be to reverse its meaning. That \"trust\" can take on practically opposite meanings, depending upon the context, is another strong argument for avoiding use of the word when describing the vulnerabilities, or lack thereof, of security protocols. Whether a designer thinks he does or must trust some generic class of parties is one thing. Whether a particular user will actually trust a particular entity in that class when the protocol actually runs is quite another matter. Whether either the user's trust or the designer's trust is well informed is yet another matter still.Traditional security is costly and risky. Digital security when designed well diminishes dramatically in cost over time. When a protocol designer invokes or assumes a TTP, (s)he is creating the need for a novel organization to try to solve an unsolved security problem via traditional security and control methods. Especially in a digital context these methods require continuing high expenditures by the TTP and the TTP creates a bottleneck which imposes continuing high costs and risks on the end user.A far better methodology is to work starting from TTPs that either well known, or easy to characterize, and of minimal cost. The best \"TTP\" of all is one that does not exist, but the necessity for which has been eliminated by the protocol design, or which has been automated and distributed amongst the parties to a protocol. The latter strategy has given rise to the most promising areas of security protocol research including digital mixes, multiparty private computations, and Byzantine resiliant databases. These and similar implementations will be used to radically reduce the cost of current TTPs and to solve the many outstanding problems in privacy, integrity, property rights, and contract enforcement while minimizing the very high costs of creating and operating new TTP institutions.Links in the text.My thanks to Mark Miller who encouraged me to write down these thoughts and provided many good comments. My thanks also to Hal Finney, Marc Stiegler, David Wager, and Ian Grigg for their comments.Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 2001, 2004, 2005 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "Contracts with Bearer", "completion": "\"Digital bearer certificate\" is a broad term developed by this author[1] incorporating at least two emerging technologies: digital cash and distributed capabilities (secure distributed object references). I will first describe the Chaumian protocol and its innovative privacy feature. I will then discuss how these ideas map to the world of capabilities in the section on generic vs. specific rights. I have altered digital cash terminology from digital cash to bearer certificate or token, from mint to issuer or transfer agent, and so on to reflect the ability of Chaum's protocols to generalize. Chaumian bearer certificates implement standardized rights transferable regardless of the identity of the holder. Each kind of contract (for example, each denomination of \"coin\" in digital cash) corresponds to a digital signature, just as each issue of Federal Reserve Notes or stock certificates corresponds to a particular plate.In the most straightforward Chaumian protocol, the issuer and transfer agent (the same entity, for our purposes, though they can easily be unbundled) create a serial number (really a large unguessable random number, rather than a sequence), and append it to a list of issued certificates. The transfer agent clears a transfer (i.e., redeems the certificate) by checking the signature to identify the class of bearer contract and verify that it was made, then looking on that contract's issued list to make sure the serial number is there, then removing the serial number. Alternatively, the issuer can let the issuee make up the serial number, then, when cleared, check the signature and put the number on the list of cleared certificates. The signature provides the assurance that the certificate is indeed the the particular kind of contract with bearer, while the serial number assures that the same instance of that contract is not cleared or redeemed more than once. In these simple versions, the transfer agent can link the transferee to the transferor for all transfers. To implement the privacy characteristics of coins and physical bearer certificates, we need to add unlinkability features.Meet the greatest simple equation since e=mc2:S is a digital signature. f is the blinding function, and g an unblinding function. The blinding functions are usually based on a secret random number called the \"blinding factor\". m is another random number, a unique identifier which can, for example, refer to an instance of some object.The idea is very clever but very simple. It may be counterintuitive because the simplest physical world metaphor of this highly useful e-commerce primitive sounds worse than useless: Alice can get Carol to sign a blank check! Here's how:The genius behind this discovery: cryptography guru David Chaum. The brilliance lies in step 3: Chaum discovered that some signatures have the property of being \"commutative\" with the blinding functions: Alice can strip off the blinding in the reverse order which the blinding and signature were applied, leaving just Alice's signature of n. It is as if Alice put a piece of carbon paper inside the envelope!In particular for RSA signatures, with public key (pq, e) and private key d, the blind signature functions are the following modulo pq:We can check that the blind signature property holds: gSf(m) = (m(ke))d * k-1 = md * k * k-1 = md, which is the valid RSA signature of private key d on m.Distinguish between either a counter or third party tracing one person's true name, via lack of or weak communications mix, and a third party linking two entities (whether nyms, use-more-than-once-addresses, account numbers, or true names) as being involved in the same transaction. By unlinkability herein we mean the latter. The goal where true names are used (this occurs, for example, when using true name accounts or not using good communications mixes), is to prevent third party linking of two people doing business with each other. Where nyms are used the goal is to minimize the release of traffic information, to prevent the unwanted accumulation of unique behavior patterns, which could be used to link nyms (including to their true names), or could augment other means of breaching privacy. Blinding especially helps where rights holders want to keep third party or public accounts denominated in generic rights. In that case a communications mix doesn't even in principle give us what blinding does.Besides protecting against the transfer agent, Chaum's transferor-, transferee-, and double-blinding protocols protect against collusion of a party with a transfer agent to identify the countparty account or nym.Unlinkability can be provided by combining a list of cleared certificates with blind signatures and a delay-mixing effect. Enough instances of a standardized contract are issued over a period of time to create a mix. Between the issuing and clearing of a certificate, many other certificates with the same signature will be cleared, making it highly improbable that a particular clearing can be linked to a particular issue via the signature. There is a tradeoff between the mixing effect and the exposure to the theft of a \"plate\" for a particular issue: the smaller the issue, the smaller the exposure but the greater the linkability; a larger issue has both greater exposure and greater confidentiality.Blind signatures can be used to make certificate transfers unlinkable via serial number. Privacy from the transfer agent can take the form of transferee-unlinkability, transferor-unlinkability, or \"double blinded\" where both transferor and transferee are unlinkable by the transfer agent or a collusion of a transfer agent and counterparty.A use-once-address communications mix plus foreswearing any reputation gain from keeping accounts, in theory also buys us unlinkability, but a communications mix is weak and very expensive.Bearer certificates come in an \"online\" variety, cleared during every transfer, and thus both verifiable and observable, and an \"offline\" variety, which can be transferred without being cleared, but is only verifiable when finally cleared, by revealing any the clearing name of any intermediate holder who transferred the object multiple times (a breach of contract).This unlinkability is often called \"anonymity\", but the issue of whether accounts are issued to real names or pseudonyms, and whether transferor and transferee identify themselves to each other, is orthogonal to unlinkability by the transfer agent in the online model. In the off-line model, account identification (or at least a highly reputable and/or secured pseudonym) is required: passing an offline certificate a second time reveals this identity. Furthermore, communications channels can allow Eve to link transferor and transferee, unless they take the precaution of using an anonymous remailer. Online clearing does make lack of identification a reasonable option for many kinds of transactions, although common credit and warrantee situations often benefit from or even require identification.When confronting an attempted clearing of a cleared serial number, we face an error-or-fraud dilemma similar to the one we encountered above in double entry bookkeeping. The ecash\u2122 protocol from DigiCash actually takes advantage of on purpose to recover from a network failure. When certificates are lost over the net it is not clear to the transferor whether they have been received and cleared by the transferee or not. Second-transferring directly with the transfer agent resolves the ambiguity. This only works with the online protocol. The issue of distinguishing error from fraud is urgent in the offline protocol, but there is as yet no highly satisfactory solution. This problem is often intractable due to the subjectivity of intent.With ideal two-way anonymous communications between use-once keys, and completely accountless clearing, unlinkability via blind signatures becomes redundant. This ideal case has yet to be even closely approached with implemented technology, and necessarily involves long communications delays which are often intolerable. Real imperfect communications mixes and less expensive blinded tokens complement each other.Issuance and cleared transfer of references to a distributed object conserves the usage of that object. This object becomes \"scarce\" in economic terms, just as use of physical objects is finite. Conserved objects provide the basis for a software economics that more closely resembles economics of scarce physical objects. Conserved objects can be used to selectively exclude not only scarce physical resources (such as CPU time, network bandwidth and response time, etc.), but also fruits of intellectual labor \u2013 as long as one is willing to pay the price to interact with that information over the network rather than locally (cf. content rights management). Conservation immunizes objects and the resources they encapsulate to denial of service attacks. Bearer certificate protocols can be used to transfer references to a particular instance or set of instances of an object, just as they can be used to transfer other kinds of standardized rights.To implement a full transaction of payment for services, we often need need more than just the digital cash protocol; we need a protocol that guarantees that service will be rendered if payment is made, and vice versa. Current commercial systems use a wide variety of techniques to accomplish this, such as certified mail, face to face exchange, reliance on credit history and collection agencies to extend credit, etc. I discuss such issues in my article on smart contracts.To discuss the mapping between Chaumian certificates and distributed capabilities as implemented in for example E I introduce some different, partly overlapping terminology: generic vs. specific, exclusive vs. non-, Transfer Agent vs. Provider, token vs. Swiss number.Rights can be generic or specific. Generic rights correspond to a class of objects, specific rights to an instance. So a specific right is implemented with a Swiss number, a large random number. The signed numbers corresponding to generic rights I will call \"tokens\".Rights can also be exclusive or non-exlusive. Any object which must be conserved, or finally allocated to a specific user, is \"exclusive\".Simple example: the right to an exclusive lock on some 1 MB of memory is generic and exclusive. The right to an exclusive lock on the specific address space 100-101 is specific and exclusive. The right to two dozen particular stock quotes at 12:22 p.m. today is specific and non-exclusive.The main motivation for these distinctions are different mechanisms of unlinkable transfer of these rights, set out below.For simplicity generic rights are all \"use-once\": the life cycle of a token consists of issuance, followed by a series of transfers, followed by consumption. More sophisticated life cycles, such as alternating transfer and consumption, are likely possible with some extra protocol.With a perfect communications mix, including use-once return addresses, and no reputation building, we wouldn't need blinded tokens. However, communications mixes are expensive, and we want the option of having certain public records by which to build reputations, yet do certain rights transfers privately. For these reasons, we should allow clients to blind token transfers in addition to providing a communications mix.For inexpensive, unlinkable, and verifiable transfer of exclusive generic rights, using blinded tokens, there must be a signficant population of interchangable generic rights. Such rights bundled with nonexlusive specific rights can also be cheaply transferred since online clearing is not required for the latter. Unlinkable and verifiable transfer of exclusive specific rights seems to require online clearing via an expensive communications mix.Two kinds of TTPs: a Transfer Agent (TA) and a Provider. The TA operates like an accountless digital cash mint, clearing the transfer of tokens for generic rights. Digital cash is a special case: money is the most generic of rights.The Provider is responsible for actually holding the object, which can contain unique state. The Provider issues a Swiss number, or better a signed description of the specific right and its Swiss number. This signature allows offline verification of the nonexlusive right where the Provider is reputable. The TA issues a token for the corresponding generic rights.Chaum has also developed other means for dealing with unique state[2].I'm assuming the TA and Provider have known reputable signatures. The trust or reputation needed to ensure correctness of transfer between Provider, TA, and users is partly left for later analysis. The two main goals here are to assure that users can verify their rights (including exclusivity from transferors where promised) and retain full privacy from TAs and Providers. Some other trust assumptions are likely made here which need to be explicated and analyzed.To implement exclusive transfers, the TA keeps a list of cleared (cancelled) token numbers. The TA corresponds to a \"mint\" in the Chaumian online digital cash protocol (see above). A class of generic rights corresponds to a \"denomination\" of coin. The Provider may also keep a list of outstanding or used Swiss numbers, like an E Registrar.Here is another example of a generic right, or class of fungible objects: \"A queriable SQL database with up to 10 MB of storage, and certain standard response time guarantees\".The TA sees only classes of fungible objects. The Provider and users see particular instances with unique state, for example a database filled with unique information.The Provider acts analogously to a \"shop\". It is just another token client to the TA, which like other clients can transfer or receive tokens. Its special role is that it is responsible for issuance, where it tells the TA about a new instance, obtains a new token, and transfers it to the client to whom the new generic right is being issued. The TA generates and destroys token supply only at the behest of the Provider; otherwise all its transfers conserve the supply of a particular generic right. The Provider is also responsible for the delivery of service to the client bearing the promised right(s), at which time the Provider \"deposits\" the generic token(s), instructing the TA to decrement the token supply. In digital cash terminology, the Provider is the only entity which has to keep something like a bank account. Rights holders can also keep an account, if they wish to use it to help build reputation, or they can just use the TA for accountless conserved rights transfer.The Provider issues along with the initial generic rights token a signed affadavit, machine or human readable, describing aspects of the object which may be non-exlusive and unique, along with that instance's Swiss number and the public key(s) of the generic right(s) for which it is valid. For example, it might say \"a database containing quotes of these two dozen listed stocks as of 12:22 pm Monday\", without actually containing those quotes. Often such description is worth more when bundled with generic exclusive rights, such as the right to a fast response time. The specific rights can elaborate in unique ways upon the generic rights, as long as these elaborations are not taken to define exclusive rights. The generic rights let the TAs garuntee exclusivity to users and conservation of resources to Providers, while the specific rights describe the unique state to any desired degree of elaboration. The Provider must be prepared to service any specific promise it has issued, as long as it is accompanied by the proper conserved generic tokens.This method of composing specific and generic rights, transferred as a bundle but with exlusive generic atoms cleared by different TAs, allows arbitrarily sophisticated rights bundles, referring to objects with arbitrarily unique state, to be transferred unlinkably. A wide variety of derivatives and combinations are possible. The only restriction is that obtaining rights to specific exclusive resources must either be deferred to the consumption phase, or transferred with online clearing via expensive communications mix.If the Provider wished to guarantee exclusivity to a specific right, transfer seems to require an expensive communications mix between Provider and transferee, rather than a cheap blinded token. For example, \"Deep Space Station 60 from 0500-0900 Sunday\" or \"a lock on autoexec.bat now\" demands exclusivity to a specific right, and thus seems to require a communications mix to unlinkably transfer. On the other hand, \"A one hour block on DSS-60 in May\" and \"the right to lock autoexec.bat at some point\" are generic and can be transferred privately with the much less expensive blinding, given a sufficient population of other tokens for this class of generic right transfered between the issuance and consumption of a given token.Clients can deal with the TA without a communications mix. They deal with the Provider via a communications mix. If both the initial and final holders failed to do this, the Provider could link them. If just the final holder failed to do so, the Provider could identify him as the actual user of the resource. Thus for full privacy generic transfers are cheap, and nonexclusive transfers are cheap, while specific exsclusive transfers and actually using the object seem to require the expensive communications mix.My thanks to David Chaum, Mark Miller, Bill Frantz, Norm Hardy, and many others for taking the time to give me their valuable insights into these issues.The first public references to this idea can be found here, here. I also referred to this idea during this period in many personal communications, using the phrases \"digital bearer instrument\", \"digital bearer certificate\", \"scarce object\", and \"conserved object\". The idea of digital bearer certificates as a serious proposal for the financial industry has been popularized, with many intruiging additional ideas, by Bob Hettinga. \u21a9David Chaum, Online Cash Checks \u21a9\"Blind Signatures for Untraceable Payments,\" D. Chaum,\nAdvances in Cryptology Proceedings of Crypto 82,\nD. Chaum, R.L. Rivest, & A.T. Sherman (Eds.), Plenum, pp. 199-203.The E distributed object languagePlease send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 1997, 1999 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "The God Protocols", "completion": "Imagine the ideal protocol. It would have the most trustworthy third party imaginable \u2013 a diety who is on everybody's side. All the parties would send their inputs to God. God would reliably determine the results and return the outputs. God being the ultimate in confessional discretion, no party would learn anything more about the other parties' inputs than they could learn from their own inputs and the output.Alas, in the our temporal world we deal with humans rather than deities. Yet, too often we are forced to treat people in a nearly theological manner, because our infrastructure lacks the security needed to protect ourselves.Network security theorists have recently solved this problem to an astonishing extent. They have developed protocols which create virtual machines between two or more parties. Multiparty secure computation allows any number of parties to share a computation, each learning only what can be inferred from their own inputs and the output of the computation. These virtual machines have the exciting property that each party's input is strongly confidential from the other parties. The program and the output are shared by the parties.For example, we could run a spreadsheet across the Internet on this virtual computer. We would agree on a set of formulas and set up the virtual computer with these formulas. Each participant would have their own input cells, which remain blank on the other participants' computers. The participants share output cell(s). Each input our own private data into our input cells. Alice could only learn only as much about the other participants' input cells as she could infer from her own inputs and the output cells.There are three major limitations. The first is that this virtual computer is very slow: in some cases, one arithmetic calculation per network message. Currently it is at best practical only for small logic or arithmetic calculations used as an adjunct to or component of more efficient computations and protocols.The second is that there is a tradeoff between privacy, fairness, and fault tolerance. Fairness means everybody learning the results in such a way that nobody can gain an advantage by learning first. Fault tolerance can provide robustness against a minority, so that it takes a majority dropping out to halt the protocol, or it can be nonrobust but fail-stop, so that a single participant can terminate the protocol. Many papers have discussed the fraction of parties one must trust in order to be assured of learning the correct output. In traditional results, fairness and privacy could not both be achieved with a faulty majority. Recent papers[3][4][5][6] have produced fair and private protocols even with faulty majorities. They trade robustness for privacy and fairness against any proportion of faulty parties. The advantage of this fail-stop approach is that one can usually find new partners and start over again, but one does not want to suffer irreversible losses such as leaking information, being left holding the bag, or being convinced of an incorrect result.The third limitation is that, far from being omniscient or omnipotent, the protocol will accomplish only what is specified in the algorithm and the inputs. It won't be able to replace human trusted third parties where those parties provide insight or knowledge that cannot be provided by a computer.With these caveats, any algorithmic intermediary can, in principle, be replaced by a trustworthy virtual computer. In practice, because of the three complications, we usually construct more limited protocols out of more efficient elements.Multiparty computation theory, by making possible privy virtual intermediation, has major implications, in theory, for all kinds of contractual relationships. This can be seen most clearly in the area of negotiations. A \"mechanism\" in economics is an abstract model of an institution which communicates with its participants via messages, and whose rules can be specified algorithmically. These institutions can be auctions, exchanges, voting, and so on. They typically implement some kind of negotiation or decision making process.Economists assume a trusted intermediary operates the mechanism. Here's a simple example of using this virtual computer for a mechanism. Alice can submit a bid price, and Bob an ask price, then their shared virtual program which has one instruction, \"A greater than B?\". The computer then returns \"true\" if Alice's bid is greater than Bob's offer. A slightly more sophisticated computer may then decide the settlement price according to a number of different algorithms (Alice's bid, Bob's ask, split the difference, etc.) This implements the mechanism \"blind bargaining\" with no trusted intermediary.In principle, since any computable problem can be solved on this virtual computer (they are \"Turing complete\"), any computable economic mechanism can be implemented without a trusted intermediary. In practice, we face the three limitations discussed above. But the existence proof, that any economic mechanism can be run without a trusted intermediary, is very exciting. This means that, in principle, any contract which can be negotiated through a trusted third party (such as an auction or exchange) can be negotiated directly. So, in some abstract sense, the only remaining \"hard\" problems in smart contract negotiations are (a) problems considered hard even with a trusted intermediary (for the standard economic reasons), and (b) the task of algorithmically specifying the negotiating rules and output contract terms (This includes cases where an intermediary adds knowledge unavailable to the participants, such as a lawyer giving advice on how to draft a contract). In practice, many problems which can be solved in principle with multiparty computation will re-arise when we implement protocols in an efficient, practical manner. The God Protocols give us a target to shoot for.Applying this kind of analysis to the performance phase of contracts is less straightforward. For starters, economic theories of the performance phase are not as well developed or simple as the mechanism theory of negotiations. Indeed, most economic theory simply assumes that all contraccts can be perfectly and costlessly enforced. Some of the \"transaction cost\" literature has started to move beyond this assumption, but there are few compelling results or consensus theories in the area of techniques and costs of contract enforcement.Performance phase analysis with multiparty secure computer theory would seem to apply only to those contracts which can be performed inside the virtual computer. But the use of post-unforgeable auditing logs, combined with running auditing protocols inside the shared virtual computer, allows a wide variety of performances outside the virtual computer to at least be observed and verified by selected arbitrators, albeit not proactively self-enforced.The participants in this mutually confidential auditing protocol can verify that the books match the details of transactions stored in a previously committed transaction log, and that the numbers add up correctly. The participants can compute summary statistics on their confidentially shared transaction logs, including cross-checking of the logs against counterparties to a transaction, without revealing those logs. They only learn what can be inferred from the statistics, can't see the details of the transactions. Another intriguing possibility is that the virtual computer can keep state over long periods of time, allowing sophisticated forms of privy and self-enforcing secured credit.If mutually confidential auditing ever becomes practical, we will be able to gain high confidence in the factuality of counterparties' claims and reports without revealing identifying and other detailed information from the transactions underlying those reports. These would provide the basis for solid reputation systems, and other trusted third party systems, that maintain integrity across time, communications, summarization, and preserve confidentiality for transaction participants. Knowing that mutually confidential auditing can be accomplished in principle will hopefully lead us to practical solutions to these important problems.D. Chaum, C. Cr\u00e9peau, and I. Damgaard, Multiparty unconditionally secure protocols; In 19th Symp. on Theory of Computing, pages 11-19. ACM, 1988.\"The Spymasters Double Agent Problem: Multiparty Computations Secure Unconditionally from Minorities and Cryptographically from Majorities,\" D. Chaum, Advances in Cryptology CRYPTO'89, G. Brassard (Ed.), Springer-Verlag, pp. 591-601.C. Cr\u00e9peau, J. van de Graaf, and A. Tapp, Committed Oblivious Transfer and Private Multi-Party Computations; Advances in Cryptology: Proceedings of Crypto '95, Springer-Verlag, pages 110-123, 1995. \u21a9Complete Characterization of Adversaries Tolerable in Secure Multi-Party Computation, Martin Hirt and Ueli Maurer. Computer Science Department, ETH Z\u00fcrich. 1997. in Proceedings of PODC '97 \u21a9Matthias Fitzi, Martin Hirt, and Ueli Maurer: Trading correctness for privacy in unconditional multi-party computation. In Advances in Cryptology \u2014 CRYPTO '98, volume 1462 of Lecture Notes in Computer Science, 1998. \u21a9R. Cramer, I. Damgaard, S. Dziembowski, M. Hirt, T. Rabin, Efficient Multi-Party Computations with Dishonest Majority, Proceedings of Eurocrypt '99, Springer Verlag LNCS, to appear (May '99). \u21a9Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 1997-1999 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "Multinational Small Business", "completion": "Currently the vast majority of businesses on the planet are small, but the vast bulk of multinational business is conducted by large corporations.In the future the size distribution of multinationals will approach that of local business. The phase change between these states may be quite rapid as telecomm and transport costs pass through a \"melting point\", creating a wide variety of new multinational small businesses, and industries to support those businesses.Barriers to multinational small business includeBoth transport and telecomm costs have become unprecedentedly low, and with fiber optics telecomm costs will drop orders of magnitude further.Small business can cut through the Gordian knot of jurisdictions with the technologies of jurisdictional independence, including strong encryption for communications and databases, digital cash, firewalls, foiling of traffic analysis with proxy servers and digital mixes, and other system security measures. For use of these capabilities to become routine they must be made seamlessly available in the telecommunications equipment and software used by small business. In their commercial dealings, businesses will increasingly deal with industry specific dispute arbitrators rather than traditional legal jurisdictions, and auditing information from transactions will be shared only between the parties necessary to resolve the dispute. Businesses will learn to share the information needed to attract investment and sales, only to those investors and customers, without jeopardizing their legal status in any major market in the maze of obscure jurisdictions they operate in. The companies that first bring these capabilities to international small business at affordable prices stand to reap large fortunes. The new paradigm of smart contracts may provide the cornerstone for building these tools.Once jurisdictional indepdence is won, small business has nearly endless opportunities to arbitrage between the relative strengths and weaknesses of various localities in various aspects of their business, much like multinationals currently take advantage of relaxed regulatory burdens and low labor costs in Third World countries now. Government intervention probably costs the global economy over $3 trillion U.S. dollars annually; thus vast markets wait to be cracked open by short-circuiting the intervention of governments in both macro and micro markets.Language and culture may remain the largest barriers. Two methods of attack:The rise of virtual nations. Multinational small businesses might speak entirely English, Japanese, Mandarin, etc. Their employees might live primarily within a single cultural milieu, dispersed thru a large number of small ethnic communities around the world, keeping close culture-specific, multimedia communications links between the communities. The worldwide Anglo, Japanese, and Mandarin business networks will be taken up by other cultures, and physically dispersed in most cases.Language-translation software. Crude, specialized versions might soon be reliable, convenient, and inexpensive enough for many kinds of small business uses, such as translating technical manuals.English is becoming increasingly the de facto language for business and technology.One interesting question is what small changes might bring about the phase change faster. Something as simple as a user-friendly voice teleconferencing system, might be enough to tip the penguins into the water. Or it might be widespread Internet access with encrypted, route-mixed TCP/IP connections and virtual whiteboards.Another interesting question in any major new trend is what will be the bottleneck pieces. With the clonable PC, Intel's CPUs and Microsoft's DOS turned out to be the only proprietary elements, with assembly, disk drives, terminals, and the like highly competitive. Wealth will flow to the businesses that provide the bottleneck tools for the coming explosion in multinational small business.The flip side of multinational small business is setting up market processes internal to the large multinational corporation.Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 1997, 1999 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "Shelling Out: The Origins of Money", "completion": "The precursors of money, along with language, enabled early modern humans to solve problems of cooperation that other animals cannot \u2013 including problems of reciprocal altruism, kin altruism, and the mitigation of aggression. These precursors shared with non-fiat currencies very specific characteristics \u2013 they were not merely symbolic or decorative objects.From the very start, England's 17th century colonies in America had a problem \u2013 a shortage of coins[D94][T01] The British idea was to grow large amounts of tobacco, cut timber for the ships of their global navy and merchant marine, and so forth, sending in return the supplies they felt were needed to keep the Americans working. In effect, early colonists were supposed to both work for the company and shop at the company store. The investors and the Crown much preferred this to paying in coin what the farmers might ask, letting the farmers themselves buy the supplies \u2013 and, heaven forbid, keep some of the profit as well.The colonists' solution was at hand, but it took a few years for them to recognize it. The natives had money, but it was very different from the money Europeans were used to. American Indians had been using money for millenia, and quite useful money it turned out to be for the newly arrived Europeans \u2013 despite the prejudice among some that only metal with the faces of their political leaders stamped on it constituted real money. Worse, the New England natives used neither silver nor gold. Instead, they used the most appropriate money to be found in their environment \u2013 durable skeleton parts of their prey. Specifically, they used wampum, shells of the clam venus mercenaria and its relatives, strung onto pendants.Necklace of wampum. During trade the beads were counted, removed, and re-assembled on new necklaces. Native American shell beads were also sometimes woven into belts or other mnemonic and ceremonial devices that demonstrated the wealth and commitment of a tribe to a treaty.Clams were found only at the ocean, but wampum traded far inland. Sea-shell money of a variety of types could be found in tribes across the American continent. The Iriquois managed to collect the largest wampum treasure of any tribe, without venturing anywhere near the clam's habitat.[D94] Only a handful of tribes, such as the Narragansetts, specialized in manufacturing wampum, while hundreds of other tribes, many of them hunter-gatherers, used it. Wampum pendants came in a variety of lengths, with the number of beads proportional to the length. Pendants could be cut or joined to form a pendant of length equal to the price paid.Once they got over their hangup about what constitutes real money, the colonists went wild trading for and with wampum. Clams entered the American vernacular as another way to say \"money\". The Dutch governor of New Amsterdam (now New York) took out a large loan from an English-American bank \u2013 in wampum. After a while the British authorities were forced to go along. So between 1637 and 1661, wampum became legal tender in New England. Colonists now had a liquid medium of exchange, and trade in the colonies flourished.[D94]The beginning of the end of wampum came when the British started shipping more coin to the Americas, and Europeans started applying their mass-manufacturing techniques. By 1661, British authorities had thrown in the towel, and decided it would pay in coin of the realm \u2013 which being real gold and silver, and its minting audited and branded by the Crown, had even better monetary qualities than shells. In that year wampum ceased to be legal tender in New England. In 1710 briefly became legal tender in North Carolina. It continued to be used as a medium of exchange, in some cases into the 20th century \u2013 but its value had been inflated one hundred fold by Western harvesting and manufacturing techniques, and it gradually went the route that gold and silver jewelry had gone in the West after the invention of coinage \u2013 from well crafted money to decoration. The American language of shell money became a quaint holdover \u2013 \"a hundred clams\" became \"a hundred dollars\". \"Shelling out\" came to mean paying in coins or bills, and eventually by check or credit card.[D94] Little did we know that we had touched the very origins of our species.Native American money took many forms besides shells. Furs, teeth, and a variety of other objects with properties we will discuss below were also commonly used as media of exchange. 12,000 years ago, in what is now Washington state, the Clovis people developed some marvelously long chert blades. The only problem \u2013 they break far too easily. They were useless for cutting. The flints were being made \"for the sheer enjoyment\" \u2013 or for some other purpose that had nothing to do with cutting.[G01] As we shall see, this seeming frivolity was, quite likely, actually very important to their survival.Native Americans had not, however, been the first to make artful but useless blades, nor had they invented shell money. Nor, for that matter, had Europeans, even though they, too, in ages past had widely used shells and teeth for money \u2013 not to mention cattle, gold, silver, weapons, and much else. Asians had used all that and faux axes issued by governments to boot, but they as well imported this institution. For archaeologists have found pendants of shells dating to the early Paleolithic that could easily have substituted for Native American money.Beads made from shells of the pea-sized snail Nassarius kraussianus, that lived in a nearby estuary. Blombos Cave, South Africa, 75,000 B.P.[B04]In the late 1990s archaeologist Stanley Ambrose discovered, in a rock-shelter in the Rift Valley of Kenya, a cache of beads made of ostrich eggshell, blanks, and shell fragments. They are dated using the argon-argon (40Ar/39Ar) ratio to at least 40,000 years old[A98]. Pierced animal teeth have been found in Spain also dating to this time.[W95] Perforated shells have also been recovered from early Paleolithic sites in Lebanon[G95]. Recently regular shells, prepared as strung beads and dating further back still, to 75,000 BP, have been found in Blombos Cave in South Africa.[B04]Ostrich-eggshell beads, Kenya Rift Valley, 40,000 B.P. (Courtesy Stanley Ambrose)Our modern subspecies had migrated to Europe and necklaces of shell and tooth appear there, from 40,000 B.P. onward. Shell and tooth pendants appear in Australia from 30,000 B.P. onward[M93]. In all cases, the work is highly skilled, indicating a practice that probably dates much further back in time. The origin of collecting and decorating is quite likely Africa, the original homeland of the anatomically modern subspecies. Collecting and making necklaces must have had an important selection benefit, since it was costly \u2013 manufacture of these shells took a great deal of both skill and time during an era when humans lived constantly on the brink of starvation[C94].Practically all human cultures, even those that do not engage in substantial trade or that use more modern forms of money, make and enjoy jewelry, and value certain objects more for their artistic or heirloom qualities than for their utility. We humans collect necklaces of shells and other kinds of jewelry \u2013 for the sheer enjoyment of it. For the evolutionary psychologists an explanation that humans do something for \"the sheer enjoyment of it\" is not an explanation at all \u2013 but the posing of a problem. Why do so many people find the collection and wearing of jewelry enjoyable? For the evolutionary psychologist, this question becomes \u2013 what caused this pleasure to evolve?Detail of necklace from a burial at Sungir, Russia, 28,000 BP. Interlocking and interchangeable beads. Each mammoth ivory bead may have required one to two hours of labor to manufacture.[W97]Evolutionary psychology starts with a key mathematical discovery of John Maynard Smith[D89]. Using models of populations of co-evolving genes, from the well-developed area of population genetics, Smith posited genes that can code for strategies, good or bad, used in simple strategic problems (the \"games\" of game theory). Smith proved that these genes, competing to be propagated into future generations, will evolve strategies that are Nash equilibria to the strategic problems presented by the competition. These games include the prisoner's dilemma, a prototypical problem of cooperation, and hawk/dove, a prototypical problem of aggression and its mitigation.Critical to Smith's theory is that these strategic games, while played out between phenotypes proximately, are in fact games between genes at the ultimate level \u2013 the level of competition to be propagated. The genes \u2013 not necessarily the individuals \u2013 influence behavior as if they were boundedly rational (coding for strategies as optimal as possible, within the limits of what phenotypes can express given the biological raw materials and previous evolutionary history) and \"selfish\" (to use Richard Dawkins' metaphor). Genetic influences on behavior are adaptations to the social problems presented by genes competing through their phenotypes. Smith called these evolved Nash equilibria evolutionary stable strategies.The \"epicycles\" built on top of the earlier individual selection theory, such as sexual selection and kin selection, disappear into this more general model which, in a Copernican manner, puts the genes rather than individuals at the center of the theory. Thus Dawkins' metaphorical and often misunderstood phrase, \"selfish gene\", to describe Smith's theory.Few other species cooperate on the order of even Paleolithic humans. In some cases \u2013 brood care, the colonies of ants, termites, and bees, and so forth, animals cooperate because they are kin \u2013 because they can help copies of their \"selfish genes\" found in their kin. In some highly constrained cases, there is also ongoing cooperation between non-kin, which evolutionary psychologists call reciprocal altruism. As Dawkins describes it[D89], unless an exchange of favors is simultaneous (and sometimes even then), one party or the other can cheat. And they usually do. This is the typical result of a game theorists call the Prisoner's Dilemma \u2013 if both parties cooperated, both would be better off, but if one cheats, he gains at the expense of the sucker. In a population of cheaters and suckers, the cheaters always win. However, sometimes animals come to cooperate through repeated interactions and a strategy called Tit-for-Tat: start cooperating and keep cooperating until the other party cheats \u2013 then defect yourself. This threat of retaliation motivates continued cooperation.The situations where such cooperation in fact occurs in the animal world are highly constrained. The main constraint is that such cooperation is restricted to relationships where at least one of the participants is more or less forced to be in the proximity of the other. The most common case is when parasites, and hosts whose bodies they share, evolve into symbiotes. If the interests of the parasite and the host coincide, so that both working together would be more fit than either on their own, (i.e. the parasite is also providing some benefit to the host), then, if they can play a successful game of Tit-for-Tat, they will evolve into symbiosis \u2013 a state where their interests, and especially the exit mechanism of genes from one generation to the next, coincides. They become as a single organism. However, there is much more than cooperation going on here \u2013 there is also exploitation. They occur simultaneously. The situation is analogous to an institution humans would develop \u2013 tribute \u2013 which we will analyze below.Some very special instances occur that do not involve parasite and host sharing the same body and evolving into symbiotes. Rather, they involve non-kin animals and highly constrained territory. A prominent example Dawkins describes are cleaner fish. These fish swim in and out of the mouths of their hosts, eating the bacteria there, benefiting the host fish. The host fish could cheat \u2013 it could wait for the cleaner to finish its job, then eat it. But they don't. Since they are both mobile, they are both potentially free to leave the relationship. However, the cleaner fish have evolved a very strong sense of individual territoriality, and have stripes and dances that are difficult to spoof \u2013 much like a difficult to forge brand logo. So the host fish know where to go to get cleaned \u2013 and they know that if they cheat, they will have to start over again with a new distrustful cleaner fish. The entrance costs, and thus the exit costs, of the relationship are high, so that it works out without cheating. Besides, the cleaner fish are tiny, so the benefit of eating them is not large compared to the benefit of a small number of, or even one, cleaning.One of the most pertinent examples.is the vampire bat. As their name suggests, they suck the blood of prey mammals. The interesting thing is that, on a good night, they bring back a surplus; on a bad night, nothing. Their dark business is highly unpredictable. As a result, the lucky (or skilled) bats often share blood with the less lucky (or skilled) bats in their cave. They vomit up the blood and the grateful recipient eats it.The vast majority of these recipients are kin. Out of 110 such regurgitations witnessed by the strong-stomached biologist G.S. Wilkinson, 77 were cases of mothers feeding their children, and most of the other cases also involved genetic kin. There were, however, a small number that could not be explained by kin altruism. To demonstrate these were cases of reciprocal altruism, Wilkinson combined the populations of bats from two different groups. Bats, with very rare exception, only fed old friends from their original group.[D89] Such cooperation requires building a long-term relationship, where partners interact often, recognize each other, and keep track of each other's behavior. The bat cave helps constrain the bats into long-term relationships where such bonds can form.We will see that some humans, too, chose highly risky and discontinuous prey items, and shared the resulting surpluses with non-kin. Indeed, they accomplished this to a far greater extent than the vampire bat. How they did so is the main subject of our essay. Dawkins suggests, \"money is a formal token of delayed reciprocal altruism\", but then pursues this fascinating idea no further. We will.Among small human groups, public reputation can supercede retaliation by a single individual to motivate cooperation in delayed reciprocation. However, reputational beliefs can suffer from two major kinds of errors \u2013 errors of about which person did what, and errors in appraising the value or damages caused by that act.The need to remember faces and favors is a major cognitive hurdle, but one that most humans find relatively easy to overcome. Recognizing faces is easy, but remembering that a favor took place when such memory needs to be recalled can be harder. Remembering the specifics about a favor that gave it a certain value to the favored is harder still. Avoiding disputes and misunderstandings can be improbable or prohibitively difficult.The appraisal or value measurement problem is very broad. For humans it comes into play in any system of exchange \u2013 reciprocation of favors, barter, money, credit, employment, or purchase in a market. It is important in extortion, taxation, tribute, and the setting of judicial penalties. It is even important in reciprocal altruism in animals. Consider monkeys exchanging favors \u2013 say pieces of fruit for back scratches. Mutual grooming can remove ticks and fleas that an individual can't see or reach. But just how much grooming versus how many pieces of fruit constitutes a reciprocation that both sides will consider to be \"fair\", or in other words not a defection? Is twenty minutes of backscratching worth one piece of fruit or two? And how big a piece?Even the simple case of trading blood for blood is more complicated than it seems. Just how do the bats estimate the value of blood they have received? Do they estimate the value of a favor by weight, by bulk, by taste, by its ability to satiate hunger, or other variables? Just the same, measurement complications arise even in the simple monkey exchange of \"you scratch my back and I'll scratch yours\".For the vast majority of potential exchanges, the measurement problem is intractable for animals. Even more than the easier problem of remembering faces and matching them to favors, the ability of both parties to agree with sufficient accuracy on an estimate of the value of a favor in the first place is probably the main barrier to reciprocal altruism among animals.Just the stone tool-kit of even early Paleolithic man that has survived for us to find was in some ways too complicated for brains of our size. Keeping track of favors involving them \u2013 who manufactured what quality of tool for whom, and therefore who owed whom what, and so on \u2013 would have been too difficult outside the boundaries of the clan. Add onto that, quite likely, a large variety of organic objects, ephemeral services (such as grooming), and so on that have not survived. After even a small fraction of these goods had been transferred and services performed our brains, as inflated as they are, could not possibly keep track of who owed what to whom. Today we often write these things down \u2013 but Paleolithic man had no writing. If cooperation occurred between clans and even tribes, as the archaeological record indicates in fact occured, the problem gets far worse still, since hunter-gatherer tribes were usually highly antagonistic and mutually distrustful.If clams can be money, furs can be money, gold can be money, and so on \u2013 if money is not just coins or notes issued by a government under legal tender laws, but rather can be a wide variety of objects \u2013 then just what is money anyway? And why did humans, often living on the brink of starvation, spend so much time making and enjoying those necklaces when they could have been doing more hunting and gathering? Nineteenth century economist Carl Menger[M1892] first described how money evolves naturally and inevitably from a sufficient volume of commodity barter. In modern economic terms the story is similar to Menger's.Barter requires a coincidence of interests. Alice grows some pecans and wants some apples; Bob grows apples and want some pecans. They just happen to have their orchards near each other, and Alice just happens to trust Bob enough to wait between pecan harvest time and apple harvest time. Assuming all these conditions are met, barter works pretty well. But if Alice was growing oranges, even if Bob wanted oranges as well as pecans, they'd be out of luck \u2013 oranges and apples don 't both grow well in the same climate. If Alice and Bob didn't trust each other, and couldn't find a third party to be a middleman[L94] or enforce a contract, they'd also be out of luck.Further complications could arise. Alice and Bob can't fully articulate a promise to sell pecans or apples in the future, because, among other possibilities, Alice could keep the best pecans to herself (and Bob the best apples), giving the other the dregs. Comparing the qualities as well as the quantities of two different kinds of goods is all the more difficult when the state of one of the goods is only a memory. Furthermore, neither can anticipate events such as a bad harvest. These complications greatly add to the problem of Alice and Bob deciding whether separated reciprocal altruism has truly been reciprocal. These kinds of complications increase the greater the time interval and uncertainty between the original transaction and the reciprocation.A related problem is that, as engineers would say, barter \"doesn't scale\". Barter works well at small volumes but becomes increasingly costly at large volumes, until it becomes too costly to be worth the effort. If there are n goods and services to be traded, a barter market requires n^2 prices. Five products would require twenty-five prices, which is not too bad, but 500 products would require 250,000 prices, which is far beyond what is practical for one person to keep track of. With money, there are only n prices \u2013 500 products, 500 prices. Money for this purpose can work either as a medium of exchange or simply as a standard of value \u2013 as long as the number of money prices themselves do not grow too large to memorize or change too often. (The latter problem, along with an implicit insurance \"contract\", along with the lack of a competitive market may explain why prices were often set by long-evolved custom rather than proximate negotiation).Barter requires, in other words, coincidences of supply or skills, preferences, time, and low transaction costs. Its cost increases far faster than the growth in the number of goods traded. Barter certainly works much better than no trade at all, and has been widely practiced. But it is quite limited compared to trade with money.Primitive money existed long before large scale trade networks. Money had an even earlier and more important use. Money greatly improved the workings of even small barter networks by greatly reducing the need for credit. Simultaneous coincidence of preference was far rarer than coincidences across long spans of time. With money Alice could gather for Bob during the ripening of the blueberries this month, and Bob hunt for Alice during the migration of the mammoth herds six months later, without either having to keep track of who owed who, or trust the other's memory or honesty. A mother's much greater investment in child rearing could be secured by gifts of unforgeable valuables. Money converts the division of labor problem from a prisoner's dilemma into a simple swap.The proto-money used by many hunter-gatherer tribes looks very different from modern money, now serves a different role in our modern culture, and had a function probably limited to small trade networks and other local institutions discussed below. I will thus call such money collectibles instead of money proper. The terms used in the anthropological literature for such objects are usually either \"money\", defined more broadly than just government printed notes and coins but more narrowly than we will use \"collectible\" in this essay, or the vague \"valuable\", which sometimes refers to items that are not collectibles in the sense of this essay. Reasons for choosing the term collectible over other possible names for proto-money will become apparent. Collectibles had very specific attributes. They were not merely symbolic. While the concrete objects and attributes valued as collectible could vary between cultures, they were far from arbitrary. The primary and ultimate evolutionary function of collectibles was as a medium for storing and transferring wealth. Some kinds of collectibles, such as wampum, could be quite functional as money as we moderns know it, where the economic and social conditions encouraged trade. I will occasionally use the terms \"proto-money\" and \"primitive money\" interchangeably with \"collectible\" when discussing pre-coinage media of wealth transfer.People, clans or tribes trade voluntarily because both sides believe they gain something. Their beliefs about the value may change after the trade, for example as they gain experience with the good or service. Their beliefs at the time of the trade, although to some degree inaccurate as to the value, are still usually correct as to the existence of gain. Especially in early intertribal trade, restricted to high value items, there was strong incentive for each party to get their beliefs right. Thus trade almost always did benefit both parties. Trade created value as much as the physical act of making something.Because individuals, clans, and tribes all vary in their preferences, vary in their ability to satisfy these preferences, and vary in the beliefs they have about these skills and preferences and the objects that are consequent of them, there are always gains to be made from trade. Whether the costs of making these trades \u2013 transaction costs \u2013 are low enough to make the trades worthwhile is another matter. In our civilization, far more trades are possible than were through most of human history. Nevertheless, as we shall see some kinds of trades were worth more than the transaction costs, for some cultures, probably back to the beginning of homo sapiens sapiens.Voluntary spot trades are not the only kinds of transactions that benefit from lower transaction costs. This is the key to understanding the origin and evolution of money. Family heirlooms could be used as collateral to remove the credit risk from delayed exchanges. The ability of a victorious tribe to extract tribute from the vanquished was of great benefit to the victor . The victor's ability to collect tribute benefited from some of the same kinds of transaction cost techniques as did trade. So did the plaintiff in assessment of damages for offenses against custom or law, and kin groups arranging a marriage. Kin also benefited from timely and peaceful gifts of wealth by inheritance. The major human life events that modern cultures segregate from the world of trade benefited no less than trade, and sometimes more so, from techniques that lowered transaction costs. None of these techniques was more effective, important, or early than primitive money \u2013 collectibles.When H. sapiens sapiens displaced H. sapiens neanderthalensis, population explosions followed. Evidence from the takeover in Europe, c. 40,000 to 35,000 B.P, indicates that H. sapiens sapiens increased the carrying capacity of its environment by a factor of ten over H. sapiens neanderthalensis \u2013 i.e., the population density increased tenfold[C94]. Not only that, the newcomers had spare time to create the world's first art \u2013 such as the wonderful cave paintings, a wide variety of well crafted figurines \u2013 and of course the wonderful pendants and necklaces of seashells, teeth, and eggshell.These objects were not useless decorations. Newly effective wealth transfers, made possible by collectibles as well as other probable advance of the era, language, created new cultural institutions that quite likely played the leading role in the increase of carrying capacity.The newcomers, H. sapiens sapiens, had the same size brain, weaker bones, and smaller muscles than the Neanderthals. Their hunting tools were more sophisticated, but in 35,000 B.P. they were basically the same tools \u2013 they were probably not even twice as effective, much less ten times more effective. The biggest difference may have been wealth transfers made more effective or even possible by collectibles. H. sapiens sapiens took pleasure from collecting shells, making jewelry out of them, showing them off, and trading them. H. sapiens neanderthalensis did not. The same dynamic would have been at work, tens of thousands of years earlier, on the Serengeti, when H. sapiens sapiens first appeared in that dynamic maelstrom of human evolution, Africa.We shall describe how collectibles lowered transaction costs in each kind of wealth transfer \u2013 in the voluntary free gift of inheritance, in voluntary mutual trade or marriage, and in the involuntary transfers of legal judgments and tribute.All these kinds of value transfer occurred in many cultures of human prehistory, probably from the beginning of Homo sapiens sapiens. The gains to be made, by one or both parties, from these major life event transfers of wealth, were so great that they occurred despite high transaction costs. Compared to modern money, primitive money had a very low velocity \u2013 it might be transferred only a handful of times in an average individual's lifetime. Nevertheless, a durable collectible, what today we would call an heirloom, could persist for many generations and added substantial value at each transfer \u2013 often making the transfer even possible at all. Tribes therefore often spent large amounts of time on the seemingly frivolous tasks of manufacturing and exploring for the raw materials of jewelry and other collectibles.The Kula trading network of pre-colonial Melanesia. The kula valuables doubled as \"high power\" money and mnemonic for stories and gossip. Many of the goods traded, mostly agricultural products, were available in different seasons, and so could not be traded in kind. Kula collectibles solved this double-coincidence problem as an unforgeabaly costly, wearable (for security), and circulated (literally!) money. Necklaces circulated clockwise, and armshells counter-clockwise, in a very regular pattern. By solving the double-coincidence problem an armshell or necklace would prove more valuable than its cost after only a few trades, but could circulate for decades. Gossip and stories that about prior owners of the collectibles further provided information about upstream credit and liquidity. In other Neolithic cultures collectibles, usually shells, circulated in a less regular pattern but had similar purposes and attributes.[L94]Kula armshell (mwali).Kula necklaces (bagi).For any institution in which wealth transfer is an important component, we will ask the following questions:What coincidence in time between the event, the supply for the transferred good, and demand for the transferred good was necessary? How unlikely or how high a barrier to the wealth transfer did the improbability of coincidence represent?Would the wealth transfers formed a closed loop of collectibles just based on that institution, or were other wealth transfer institutions necessary to complete circulation cycles? Taking the actual flow graph of monetary circulation seriously is critical to understanding the emergence of money. General circulation among a wide variety of trades did not and would not exist for most of human prehistory. Without completed and repeated loops collectibles would not circulate and would become worthless. A collectible, to be worth making, had to add value in enough transactions to amortize its cost.We shall first examine the kind of transfer most familiar and economically important to us today \u2013 trade.Bruce Winterhalder[W98] surveys models of how and why food is sometimes transferred between animals: tolerated theft, producing/scrounging/opportunism, risk-sensitive subsistence, by-product mutualism, delayed reciprocity, trade/exchange not in kind, and other selection models (including kin altruism). Here we focus on risk-sensitive subsistence, delayed reciprocity, and trade (exchange not in kind). We argue that substituting trade of food for collectibles for delayed reciprocity can increase food sharing. It does so by mitigating the risks of a variable food supply while avoiding the largely insurmountable problems of delayed reciprocity between bands. We will deal with kin altruism and theft (tolerated or not) in broader contexts below.Food is worth far more to starving people than to well fed ones. If the starving man can save his life by trading his most precious valuables, it may be worth to him months or even years of the labor it might take to replace that value. He will usually consider his life worth more than the sentimental value of the family heirlooms. Like fat itself, collectibles can provide insurance against food shortages. Starvation from local shortages could be staved off with at least two different kinds of trades \u2013 for the food itself, or for foraging or hunting rights.Nevertheless, the transaction costs were usually too high \u2013 bands were far more likely to fight than ever trust each other. The hungry band that couldn't find its own food usually starved. However, if the transaction costs could be lowered, by lowering the need for trust between bands, food that was worth a day's labor to one band might be worth several months' labor to the starving band.Local but extremely valuable trade was, this essay argues, made possible among many cultures by the advent of collectibles, by the time of the Upper Paleolithic. Collectibles substituted for otherwise necessary but non-existent trusting long term relationships. If there had existed a high degree of sustained interaction and trust between tribes, or individuals of different tribes, so that they gave each other unsecured credit, this would have stimulated time-lagged barter trade. However, such a high degree of trust then is highly implausible \u2013 for the reasons stated above regarding reciprocal altruism, confirmed by the empirical evidence that most hunter-gatherer tribal relations have been observed to be quite antagonistic. Hunter-gatherer bands usually broke up into small bands for most of the year and gathered into \"aggregates\", something like medieval European fairs, for a few weeks out of the year. Despite the lack of trust between bands, an important trade in staples, of the kind illustrated in the accompanying figure, almost surely occurred in European and probably elsewhere, such as with the big game hunters of America and Africa.The scenario illustrated by the accompanying figure is hypothetical, but it would be very surprising if it did not occur. While many Europeans even in the Paleolithic enjoyed wearing shell necklaces, many lived farther inland and made necklaces instead out of the teeth of their prey. Flints, axes, furs, and other collectibles were also quite likely used as media of exchange.Reindeer, bison, and other human prey migrated at different times of the year. Different tribes specialized in different prey, to the point where over 90%, and sometimes as much as 99%, of the remains from many sites during the Paleolithic in Europe come from a single species[C94]. This indicates at least seasonal specialization and perhaps full-time specialization by a tribe in a single species. To the extent they specialized, the members of a single tribe would have become experts at the behavior, migration habits, and other patterns surrounding their specific prey species, as well as the specialized tools and techniques for hunting them. Some tribes observed in recent times are known to have specialized. Some North American Indian tribes specialized respectively in hunting bison, antelope, and fishing for salmon. In northern Russia and parts of Finland, many tribes, including the Lapp even today, specialized in herding a single species of reindeer.Such specialization was probably far higher when more large prey (horse, auroch, giant elk, bison, giant sloth, mastodon, mammoth, zebra, elephant, hippopotamus, giraffe, musk oxen, etc.) roamed North America, Europe, and Africa in large herds during the Paleolithic. Large wild animals unafraid of humans no longer exist. During the Paleolithic they were either driven extinct or adapted to be afraid of humans and our projectiles. However, for most of the time span of H. sapiens sapiens these herds were abundant and easy pickings to specialist hunters. According to our theory of trade-based predation, specialization was quite likely far higher when large prey roamed North America, Europe, and Africa in large herds during the Paleolithic. Trade-based division of labor in hunting between tribes is consistent with (although not securely confirmed by) the archaeological evidence from the Paleolithic in Europe.These migrating bands, following their herds, frequently interacted, creating many opportunities for trade. American Indians preserved food by drying, making pemmican, and so on in ways that lasted for a few months but typically not a full year. Such food was commonly traded, along with skins, weapons, and collectibles. Often these trades occurred during annual trading expeditions[T01].Large herd animals migrated through a territory only two times a year, with a window most often of one or two months. Without any other source of protein besides their own prey species, these specialist tribes would have starved. The very high degree of specialization demonstrated in the archaeological record could only have occurred if there was trade.Thus, even if the time-offset barter of meat were the only kind of trade, this is quite sufficient to make the use of collectibles quite worthwhile. The necklaces, flints, and any other objects used as money circulate in a closed loop, back and forth, in roughly equal amounts so long as the value of meat traded remains roughly equal. Note that it is not enough, for the theory of collectibles put forth in this paper to be correct, that single beneficial trades were possible. We must identify closed loops of mutually beneficial trades. With closed loops the collectibles continue to circulate, amortizing their costs.As mentioned, we know from archaeological remains that many tribes specialized in a single large prey species. This specialization was at least seasonal; if there was extensive trade it could have been full-time. Becoming experts in the habits and migration patterns, and best methods of taking down, a tribe reaped enormous productive benefits. These benefits, however, would normally be unattainable, for specializing in a single species meant going without food most of the year. Division of labor between tribes paid off \u2013 and trade made it possible. The supply of food would nearly double from trade just between two complementary tribes. There were, however, rather than two prey species, often up to a dozen that migrated through most hunting territories in areas like the Serengeti and the European steppe. The amount of meat available to a species-specializing tribe would thus likely more than double with such trade among a handful of neighboring tribes. On top of this, the extra meat would be there when needed most \u2013 when the meat from a tribe's own species prey would already have been eaten, and without food the hunters would starve.Thus there were at least four gains, or sources of surplus, from a trade cycle as simple as two prey species and two non-simultaneous but offsetting trades. These gains are distinct but not necessarily independent:Making or saving collectibles to trade for food itself was not the only way to insure against bad times. Perhaps even more common, especially where large prey items were not available, was territoriality combined with trade in foraging rights. This can be observed even in some of the remnants of hunter-gatherer culture that exist today.The !Kung San of southern Africa, like all other modern remnants of hunter-gatherer cultures, live on marginal lands. They have no opportunity to be specialists but must take the meager remnants available. They may thus be rather uncharacteristic of many ancient hunter-gatherer cultures, and uncharacteristic of the original Homo sapien sapiens, which first seized the lushest lands and best game routes from Homo sapiens neanderthalensis and only much later drove the Neanderthals from marginal lands. Yet despite their severe ecological handicap, the !Kung use collectibles as items of trade.Like most hunter-gatherers, the !Kung spend most of the year in small, dispersed bands and a few weeks of the year in an aggregate with several other bands. Aggregation is like a fair with added features \u2013 trade is accomplished, alliances are cemented, partnerships strengthened, and marriages transacted. Preparation for aggregation is filled with the manufacture of tradeable items, partly utilitarian but mostly of a collectible nature. The exchange system, called by the !Kung hxaro, involves a substantial trade in beaded jewelry, including ostrich-shell pendants quite similar to those found in Africa 40,000 years ago.Pattern of hxaro exchanges and kinship relations among neighboring tribes of !Khung San hunter-gatherers.Necklaces used in the hxaro exchange.One of the main things the !Kung buy and sell with their collectibles are abstract rights to enter another band's territory and hunt or gather food there. Trade in these rights is especially brisk during local shortages which can be alleviated by foraging in a neighbor's territory[W77][W82] !Kung bands mark their territories with arrows; trespassing without having purchased the right to enter and forage is tantamount to a declaration of war. Like the inter-band food trade discussed above, the use of collectibles to purchase foraging rights constitutes an \"insurance policy against starvation\", to use the phrase of Stanley Ambrose[A98].Although anatomically modern humans surely had conscious thought, language, and some ability to plan, it would have required little conscious thought or language, and very little planning, to generate trades. It was not necessary that tribe members reasoned out the benefits of anything but a single trade. To create this institution it would have sufficed that people follow their instincts to make obtain collectibles with the characteristics outlined below. (as indicated by proxy observations that make approximate estimations for these characteristics). This is to various extents true of the other institutions we will study \u2013 they evolved, rather than being consciously designed. No one participating in the institution's rituals would have explained their function in terms of ultimate evolutionary function; rather they explained in terms of a wide variety of mythologies that served more as proximate motivators of behavior than as theories of ultimate purpose or origin.Direct evidence for trade in food has long since decayed. We may, in the future, find more direct evidence than is now available for this article, via comparison of hunting remains in one tribe with the consumption patterns in another tribe \u2013 the hardest part of this task likely being to identify the boundaries of different tribes or kin groups. According to our theory, such transfer of meat from one tribe to another was common in many parts of the world during the Paleolithic where large-scale and specialized big game hunting occurred.For now, we do have extensive indirect evidence of trade, via the movement of the collectibles themselves. Fortunately there is a good correlation between the durability desired for collectibles and the conditions under which an artifact has survived to be found by today's archaeologists. In the early Paleolithic, when all human movement was on foot, we have instances of perforated sea shells found up to 500 kilometers away from the nearest source[C94]. There was a similar long-distance movement of flint.Unfortunately, trade was severely restricted by high transaction costs in most times and places. The primary barrier was the antagonism between tribes. The predominant relationship between tribes was one of distrust on good days and outright violence on bad days. Only ties of marriage or kinship could bring tribes into a relationship with trust, albeit only occasionally and of limited scope. The poor ability to protect property, even collectibles worn on the person or buried in well-hidden caches, meant that collectibles had to amortize their costs in a few transactions.Trade was thus not the only kind of wealth transfer, and probably not the most important kind during the long human prehistory where high transaction costs prevented the development of the kinds of markets, firms, and other economic institutions we now take for granted[L94]. Underneath our great economic institutions are far more ancient institutions that also involved wealth transfer \u2013 in prehistoric times, the main kinds of wealth transfer. All of these institutions distinguished Homo sapiens sapiens from previous animals. We now turn to one of the most basic kinds of wealth transfer that we humans take for granted but other animals do not have \u2013 passing wealth onto the next generation.Coincidence in time and locale of supply and demand for trade was rare \u2013 so much so, that most kinds of trades and trade-based economic institutions we now take for granted could not exist. Even more unlikely was the triple coincidence of supply with demand with a major event for a kin group \u2013 the formation of a new family, death, crime, or victory or defeat in war. As we shall see, clans, and individuals greatly benefited from a timely transfer of wealth during these events. Such wealth transfer in turn was much less wasteful when it was the transfer of a store of wealth more durable and general than consumables or tools designed for other purposes. The demand for a durable and general store of wealth for use in these institutions was thus even more urgent than for trade itself. Furthermore, the institutions of marriage, inheritance, dispute resolution, and tribute may predate intertribal trade, and involved for most tribes a greater transfer of wealth than trade. These institutions thus more than trade served as the motivator and incubator of the earliest primitive money.In most hunter-gatherer tribes this wealth came in a form that strikes us preposterously wealthy moderns as trivial \u2013 a collection of wooden utensils, flint and bone tools and weapons, shells on strings, perhaps a hut and in colder climates some mangy furs. Sometimes it could all be carried on the person. Nevertheless, these motley assortments were wealth for a hunter-gatherer no less than real estate, stocks, and bonds are wealth for us. To the hunter-gatherer tools and sometimes warm clothes were necessary for survival. Many of the items were highly valued collectibles that insured against starvation, purchased mates, and could substitute for massacre or starvation in event of war and defeat. The ability to transfer the capital of survival to one's descendants was another advantage Homo sapiens sapiens had over previous animals. Furthermore, the skilled tribesman or clan could accumulate a surplus of wealth from the occasional, but cumulative over a lifetime, trade of surplus consumables for durable wealth, especially collectibles. A temporary fitness advantage could be translated into a more durable fitness advantage for one's descendants.Another form of wealth, hidden from the archaeologist, were titles to offices. Such social positions were more valuable than the tangible forms of wealth in many hunter-gatherer cultures. Examples of such positions included clan leaders, war party leaders, hunting party leaders, membership in a particular long-term trading partnership (with a particular person in a neighboring clan or tribe), midwives, and religious healers. Often collectibles not only embodied wealth, but also served as a mnemonic, representing the title to a clan position of responsibility and privilege. Upon death, to maintain order, the heirs to such positions had to be quickly and clearly determined. Delays could spawn vicious conflicts. Thus, a common event was the mortuary feast, in which the deceased was feted while both his tangible and intangible forms of wealth were distributed to descendants, as determined by custom, clan decision-makers, or the will of the deceased.Other kinds of free gifts were quite rare in pre-modern cultures, as Marcel Mauss[M50] and other anthropologists have pointed out. Seemingly free gifts in fact implicitly invoked an obligation in the recipient. Before contract law, this implicit obligation of the \"gift\", along with community dishonor and punishments ensuing if the implicit obligation was not met, was perhaps the most common motivator of reciprocation in delayed exchange, and is still common in the variety of informal favors we do for each other. Inheritance and other forms of kin altruism were the only widely practiced forms of what we moderns would call gift proper, namely a gift that imposed no obligation on the recipient.Early Western traders and missionaries, who often saw natives as childish primitives, sometimes called their tribute payments \"gifts\" and trades \"gift exchanges\", as if they bore more resemblance to the Christmas and birthday present exchanges of Western children than to the contractual and tax obligations of adults. Partly this may have reflected prejudice, and partly the fact that in the West by that time obligations were usually formalized in writing which the natives lacked. Westerners thus usually translated the rich variety of words natives had for their exchange institutions, rights, and obligations as \"gift\". Seventeenth century French settlers in America were thinly scattered among much larger populations of Indian tribes, and often found themselves paying tribute to these tribes. Calling these payments \"gifts\" was a way for them to save face with other Europeans who faced no such necessity and found it cowardly.Mauss and modern anthropologists have unfortunately kept this terminology. The uncivilized human is still like a child, but now innocent like a child, a creature of moral superiority who would not stoop to our kind of base, cold-blooded economic transactions. However in the West, especially in the official terminology used for our laws covering transactions, a \"gift\" refers to a transfer that imposes no obligation. When coming across anthropological discussions of \"gift exchange\" these caveats should be kept in mind \u2013 modern anthropologists are not at all referring to the free or informal gifts we commonly refer to in our modern use on the term \"gift\". They are rather referring to any of a wide variety of often quite sophisticated systems of rights and obligations involved in wealth transfers. The only major transactions in prehistoric cultures similar to our modern gift, in that it was neither itself a widely recognized obligation nor imposed any obligation on the recipient, were parents or maternal kin caring for their children and inheritance. (An exception was that inheriting title to a position imposed the responsibilities of the position on the heir as well as its privileges).Inheritance of some heirlooms might proceed for several generations uninterrupted, but it did not by itself form a closed loop of collectibles transfers. Heirlooms were only valuable if they eventually got used for something else. They often were used in marriage transactions between clans that could form closed loop cycles of collectibles.An early and important example of a small closed loop trade network made possible by collectibles involves the much higher investment humans make in raising offspring than our primate relatives, and the related human institution of marriage. Combining arrangements of long-term matches for mating and child-raising, negotiated between clans, with wealth transfer, marriage is a human universal and probably dates back to the first Homo sapiens sapiens.Parental investment is a long-term and almost one-shot affair \u2013 there is no time for repeated interactions. Divorce from a negligent father or unfaithful wife usually represented several years of time wasted, in genetic fitness terms, by the jilted party. Fidelity and commitment to the children were primarily enforced by in-laws \u2013 the clan. The marriage was the contract between clans that usually included such promises of fidelity and commitment as well as wealth transfer.The contributions a man and a woman will bring to a marriage are seldom equal. This was even more true in an era when mate choice was largely determined by clans and the population from which clan leaders could choose was quite small. Most commonly, the woman was considered more valuable and the groom's clan paid a bride price to the brides clan. Quite rare in comparison was dowry, a payment by the bride's clan to the new couple. Mostly this was practiced by upper classes of monogamous but highly unequal societies in medieval Europe and India, and was ultimately motivated by the far greater reproductive potential of upper class sons than upper class daughters in those societies. Since literature was mostly written about upper classes, dowry often plays a role in European traditional stories. This does not reflect its actual frequency across human cultures \u2013 it was quite rare.Marriages between clans could form a closed cycle of collectibles. Indeed, two clans exchanging partners would be sufficient to maintain a closed loop, as long as brides tended to alternate. If one clan was wealthier in collectibles from some other kind of transfer, it could marry more of its sons to better brides (in monogamous societies) or a greater number of brides (in polygamous societies). In a loop involving only marriages, primitive money would simply serve to replace the need for memory and trust between clans over a long period of delay between unbalanced transfers of reproductive resources.Like inheritance, lawsuit, and tribute, marriage requires a triple coincidence of the event, in this case the marriage, with supply and demand. Without a transferable and durable store of value, the current ability of a groom's clan to supply the current desires of the bride's clan, to a large enough degree to make up the value mismatch between bride and groom, while also satisfying the political and romantic constraints of the match, were quite unlikely to be well satisfied. One solution is imposing an ongoing service obligation from the groom or his clan to the bride's clan. This occurs in about 15% of known cultures[DW88]. In a much larger number, 67%, the groom or groom's clan pays the brides clan a substantial amount of wealth. Some of this bride price is paid in immediate consumables, in plants to be gathered harvested and animals slaughtered for the marriage feast. In herding or agricultural societies much of the bride price is paid in livestock, a long lasting form of wealth. The balance, and usually the most valuable portion of the bride-price in cultures without livestock, is paid with what are usually the most valuable family heirlooms \u2013 the rarest, costliest, and most durable pendants, rings, and so on. The Western practice of the groom giving the bride a ring \u2013 and a suitor giving a maiden other kinds of jewelry \u2013 was once a substantial transfer of wealth and was common in many other cultures. In about 23% of cultures, mostly modern ones, there is no substantial wealth exchange. In about 6% of cultures there is mutual exchange of substantial wealth between bride and groom clans. In only about 2% of cultures does the bride's clan pay the new couple a dowry.[DW88]Unfortunately, some wealth transfers were a far cry from the altruism of the inheritance gift or the joy of marriage. Quite the opposite, in the case of tribute.Death rates from violence in chimp troops and hunter-gatherer human cultures alike are far higher than in modern civilizations. This probably dates at least as far back as our common ancestor with the chimpanzees \u2013 chimp troops, as well, are constantly fighting.Warfare involved, among other things, killing, maiming, torture, kidnapping, rape, and the extortion of tribute in exchange for avoiding such fates. When two neighboring tribes were not at war, one was usually paying tribute to the other. Tribute could also serve to bind alliances, achieving economies of scale in warfare. Mostly, it was a form of exploitation more lucrative to the victor than further violence against the defeated.Victory in war was sometimes followed by an immediate payment from the losers to the winners. Often this just took the form of looting by the enthusiastic victors, while the losers desperately hid their collectibles. More often, tribute was demanded on a regular basis. In this case, the triple coincidence could and sometimes was avoided by a sophisticated schedule of payments in kind that matched the losing tribe's ability to supply a good or service with the victor's demand for it. However, even with this solution primitive money could provide a better way \u2013 a common medium of value that greatly simplified the terms of payment \u2013 very important in an era when terms of the treaty could not be recorded but had to be memorized. In some cases, as with the wampum as used in the Iriquois Confederacy, the collectibles doubled as a primitive mnemonic device that, while not verbatim, could be used as an aid to recall the terms of the treaty. For the winners, collectibles provided a way to collect tribute at closer to the Laffer optimum. For the losers, collectibles buried in caches provided a way to \"under-report\", leading the victors to believe the losers were less wealthy and thus demand less than they might. Caches of collectibles also provided insurance against overzealous tribute collectors. Much of the wealth in primitive societies escaped the notice of the missionaries and anthropologists due to its highly secretive nature. Only archeology can reveal the existence of this hidden wealth.Hiding and other strategies presented a problem that tribute collectors share with modern tax collectors \u2013 how to estimate the amount of wealth they can extract. Value measurement is a thorny problem in many kinds of transactions, but never more so than in the antagonistic collection of tax or tribute. In making these very difficult and nonintuitive trade-offs, and then executing them in a series of queries, audits, and collection actions, tribute collectors efficiently optimized their revenue, even if the results seemed quite wasteful to the tribute payer.Imagine a tribe collecting tribute from several neighbor tribes it previously defeated in war. It must estimate how much it can extract from each tribe. Bad estimates leave the wealth of some tribes understated, while forcing others to pay tribute based on estimates of wealth they don't actually have. The result: the tribes that are hurt tend to shrink. The tribes that benefit pay less tribute than could be extracted. In both cases, less revenue is generated for the victors than they might be able to get with better rules. This is an application of the Laffer curve to the fortunes of specific tribes. On this curve, applied to income taxes by the brilliant economist Arthur Laffer, as the tax rate increases, the amount of revenue increases, but at an increasingly slower rate than the tax rate, due to increased avoidance, evasion, and most of all disincentive to engage in the taxed activity. At a certain rate due to these reasons tax revenues are optimized. Hiking the tax rate beyond the Laffer optimum results in lower rather than higher revenues for the government. Ironically, the Laffer curve was used by advocates for lower taxes, even though it is a theory of tax collection optimum to government revenue, not a theory of tax collection optimal to social welfare or individual preference satisfaction.On a larger scale, the Laffer curve may be the most important economic law of political history. Charles Adams[A90] uses it to explain the rise and fall of empires. The most successful governments have been implicitly guided by their own incentives \u2013 both their short-term desire for revenue and their long-term success against other governments \u2013 to optimize their revenues according to the Laffer Curve. Governments that overburdened their taxpayers, such as the Soviet Union and later Roman Empire, ended up on the dust-heap of history, while governments that collected below the optimum were often conquered by their better-funded neighbors. Democratic governments may maintain high tax revenues over historical time by more peaceful means than conquering underfunded states. They are the first states in history with tax revenues so high relative to external threats that they have the luxury of spending most of the money in non-military areas. Their tax regimes have operated closer to the Laffer optimum than those of most previous kinds of governments. (Alternatively, this luxury may be made possible by the efficiency of nuclear weapons in deterring attack rather than the increased incentives of democracies to optimize to tax collection). When we apply the Laffer curve to examining the relative impact of treaty tributterms on various tribes, we conclude that the desire to optimize revenues causes victors to want to accurately measure the income and wealth of the vanquished. Measuring value is crucial to determining the tributaries' incentives to avoid or evade the tribute by hiding wealth, fight, or flight. For their part, tributaries can and do spoof these measurements in various ways, for example by burying collectibles in caches. Tribute collection involves a measurement game with unaligned incentives.With collectibles, one can demand tribute at strategically optimal times instead of when items can be supplied by the tributary or is in demand by the victor. The victors can then choose when they will in the future consume the wealth, rather than having to consume it at the time the tribute is extracted. Much later, well into the dawn of history, in 700 BC, though trade was widespread, money still took the form of collectibles \u2013 made out of more precious metals, but in their basic characteristics, such as lack of uniform value, similar to most of the proto-money used since the dawn of Homo sapiens sapiens. This was changed by a Greek-speaking culture in Anatolia (modern Turkey), the Lydians. Specifically, the kings of Lydia were the first major issuers of coins in the archaeological and historical record.From that day to this, government mints with self-granted monopolies, rather than private mints, have been the main issuers of coin. Why wasn't minting dominated by private interests, such as private bankers, which did exist at the time in these semi-market economies? The main explanation for government dominance of coin minting has been that only governments could enforce anti-counterfeiting measures. However, they could have enforced such measures in protection of competing private mints, just as they enforce trademarks today and at that time as well.It was far easier to estimate the value of a coin than that of a collectible \u2013 especially at low transaction values. Far more trades could be made with money instead of barter; indeed many kinds of low-value trades became possible for the first time as the small gains from trade for the first time exceeded transaction costs. Collectibles were low velocity money, involved in a small number of high value transactions. Coins were high velocity money, facilitating a large number of low value trades.Given what we have seen about the benefits of proto-money to tribute and tax collectors, as well as the critical nature of the value measurement problem in optimally coercing such payments, it is not surprising that tax collectors, specifically the kings of Lydia, were the first major issuers of coinage. The king, deriving his revenue from tax collection, had a strong incentive to measure to value of wealth held and exchanged by his subjects more accurately. That the exchange also benefited from cheaper measurement by traders of the medium of exchange, creating something closer to efficient markets, and allowing individuals to enter into the marketplace on a larger scale for the first time, was for the king a fortuitous side effect. The greater wealth flowing through markets, now available to be taxed, boosted the king's revenues even beyond the normal Laffer curve effect of reducing mis-measurement between given tax sources.This combination of more efficient tax collection with more efficient markets meant a vast increase in overall tax revenues. These tax collectors almost literally hit a gold mine, and the wealth of Lydian kings Midas, Croesus, and Giges is famous to this day.A few centuries later, the Greek king Alexander the Great conquered Egypt, Persia and much of India, funding his spectacular conquest by plundering Egyptian and Persian temples, filled with assemblages of low-velocity collectibles, and melting them down into high-velocity coins. More efficient and encompassing market economies as well as more efficient tax collection sprung up in his wake.Tribute payments did not form by themselves a closed loop of collectibles. These were only valuable if they ultimately could be used by the victors for something else, such as marriage, trade, or collateral. However, victors could coerce the vanquished into manufacturing for obtaining collectibles, even if it did not serve the vanquished's voluntary interests.Ancient hunter-gatherers did not have our modern tort or criminal law, but they did have an analogous means of settling disputes, often judged by clan or tribal leaders or vote, that covered what modern law calls crimes and torts. Settling disputes through punishments or payments sanction by the clans of the disputing parties substituted for cycles of revenge or vendetta wars. Most pre-modern cultures, ranging from the Iriquois in America to the pre-Christian Germanic peoples, decided that payment was better than punishment. Prices (e.g. the Germanic \"weregeld\" and Iriquois blood money) were assigned to all actionable offenses, ranging from petty theft to rape to murder. Where money was available, the payment took the form of money. Livestock was used in herding cultures. Otherwise, payment of collectibles were the most commonly used remedy.The payment of remedies for damages in a lawsuit or similar complaint led to the same kind of problem of triple coincidence of event, supply, and demand as occurred in inheritance, marriage, and tribute. The judgment of the case had to coincide with the ability of the plaintiff to pay the damages as well as the opportunity and desire of the defendant to benefit from them. If the remedy was a consumable the plaintiff already had plenty of, the remedy still served as a punishment but would not likely satisfy the defendant \u2013 and thus would not curb the cycle of violence. Thus, we here again the value added by collectibles \u2013 in this case, in making possible the remedy to resolve a dispute or terminate a cycle of revenge.Dispute remedies would not form a closed loop if the payments served to entirely eliminate vendettas. However, if the payments did not completely dampen the vendetta, the payments could form a cycle following the cycle of revenge. For this reason, it is possible that the institution reached an equilibrium when it had reduced but not eliminated cycles of revenge until the advent of more densely connected trading networks.Since humans evolved in small, largely self-sufficient, and mutually antagonistic tribes, the use of collectibles to reduce the need for favor-tracking, and to make possible the other human institutions of wealth transfer we have explored, was far more important than the scale problems of barter for most of the timespan of our species. Indeed, collectibles provided a fundamental improvement to the workings of reciprocal altruism, allowing humans to cooperate in ways unavailable to other species. For them, reciprocal altruism is severely limited by unreliable memory. Some other species have large brains, build their own homes, or make and use tools. No other species has produced such an improvement to the workings of reciprocal altruism. The evidence indicates this new development had matured by 40,000 B.P.Menger called this first money an \"intermediate commodity\" \u2013 what this paper calls collectibles. An artifact useful for other things, such as cutting, could also be used as a collectible. However, once institutions involving wealth transfer became valuable, collectibles would be manufactured just for their collectible properties. What are these properties? For a particular commodity to be chosen as a valuable collectible, it would have had, relative to products less valuable as collectibles, at least the following desirable qualities:Humans the world over are strongly motivated to collect items that better satisfy these properties. Some of this motivation probably includes genetically evolved instincts. Such objects are collected for the sheer pleasure of collecting them (not for any particularly good explicit and proximate reasons), and such pleasure is nearly universal across human cultures. One of the immediate proximate motivations is decoration. According to Dr. Mary C. Stiner, an archaeologist at the University of Arizona, \"Ornamentation is universal among all modern human foragers.\"[W02] For an evolutionary psychologist, such a behavior that has a good ultimate explanation, in terms of natural selection, but has no proximate rationale other than pleasure, is a prime candidate to be a genetically evolved pleasure that motivates the behavior. Such is, if the reasoning in this essay is correct, the human instinct to collect rare items, art, and especially jewelry.Point (2) requires some further explanation. At first, the production of a commodity simply because it is costly seems quite wasteful. However, the unforgeably costly commodity repeatedly adds value by enabling beneficial wealth transfers. More of the cost is recouped every time a transaction is made possible or made less expensive. The cost, initially a complete waste, is amortized over many transactions. The monetary value of precious metals is based on this principle. It also applies to collectibles, which are more prized the rarer they are and the less forgeable this rarity is. It also applies where provably skilled or unique human labor is added to the product, as with art.We have never discovered or made a product that does really well on all three scores. Art and collectibles (in the sense that word is used in modern culture, rather in the technical sense it is used in this paper) optimize (2), but not (1) or (3). Common beads satisfy (1) but not (2) or (3). Jewelry, made at first out of the most beautiful and less common shells but eventually in many cultures out of precious metals, comes closer to satisfying all three properties. It is no coincidence that precious metal jewelry usually came in thin forms such as chains and rings, allowing for inexpensive assaying at randomly chosen locations. Coins were a further improvement \u2013 substituting small standard weights and trademarks for assays greatly reduced the costs of small transactions using precious metals. Money proper was just a further step in the evolution of collectibles.The kind of mobile art also made by Paleolithic man, (small figurines and the like) also matches these characteristics well. Indeed, Paleolithic man made very few objects that were not either utilitarian, or shared characteristics (1)-(3).There are many puzzling instances of useless or at least unused flints with homo sapiens. We have mentioned the unusable flints of the Clovis people. Culiffe[C94] discusses a European Mesolithic era find of hundreds of flints, carefully crafted, but which micrograph analysis reveals were never used for cutting.Flints were quite likely the first collectibles, preceding special-purpose collectibles like jewelry. Indeed, the first flint collectibles would have been made for their cutting utility. Their added value as a medium of wealth transfer was a fortuitous side effect that enabled the institutions described in this article to blossom. These institutions, in turn, would have motivated the manufacture of special-purpose collectibles, at first flints that need have no actual use as cutting tools, then the wide variety of other kinds of collectibles that were developed by Homo sapiens sapiens.Shell money from Sumer, c. 3,000 B.C.During the Neolithic era, in many parts of the Middle East and Europe, some kinds of jewelry became more standardized \u2013 to the point where standard sizes and assayability were often valued over beauty. In commercial areas the quantity of this jewelry sometimes greatly exceeded that of traditional jewelry in hoards. This is an intermediate step between jewelry and coins, when some collectibles increasingly took a fungible form. Around 700 B.C., the Lydian kings started issuing coins, as described above. The unforgeable costliness of standard weights of precious metals could now be \"assayed\" in a marketplace, by wage earners, or by tax collectors via trademark, i.e. trust in the mint's brand, instead of chopping coiled wire at a randomly selected spot.It is no coincidence that the attributes of collectibles are shared with precious metals, coins, and the reserve commodities that have backed most non-fiat currencies. Money proper implemented these properties a purer form than the collectibles used during almost all of human prehistory.Silver ring and coil money from Sumer, c. 2,500 B.C. Note the standard size of cross-sections. Many of the pieces had a standard weight, ranging from one-twelfth of a shekel to sixty shekels. To assay a ring or coil, it could be weighed and cut at random locations. (Courtesy Oriental Institute, University of Chicago)A novelty of the 20th century was the issue of fiat currencies by governments. (\"Fiat\" means not backed by any reserve commodity, as the gold- and silver-based currencies of previous centuries were). While generally excellent as a media of exchange, fiat currencies have proven to be very poor stores of value. Inflation has destroyed many a \"nest egg\". It is no coincidence that markets in rare objects and unique artwork \u2013 usually sharing the attributes of collectibles described above \u2013 have enjoyed a renaissance during the last century. One of our most advanced high-tech marketplaces, EBay, is centered around these objects of primordial economic qualities. The collectibles market is larger than ever, even if the fraction of our wealth invested in them is smaller than when they were crucial to evolutionary success. Collectibles both satisfy our instinctive urges and remain useful in their ancient role as a secure store of value.Many kinds of wealth transfers \u2013 one-way and mutual, voluntary and coerced \u2013 face transaction costs. In voluntary trades both parties gain; a truly free gift is usually an act of kin altruism. These transactions create value for one or both parties as much as the physical act of making something. Tribute benefits the victor and a judgment of damages can prevent further violence as well as benefiting the victim. Inheritance made humans the first animals to pass wealth to their next generation kin. These heirlooms could in turn be used as collateral or payment in trade for goods, for food to stave off starvation, or to pay a marriage bride price. Whether the costs of making these transfers \u2013 transaction costs \u2013 are low enough to make the transfers worthwhile is another matter. Collectibles were crucial in making these kinds of transactions possible for the first time.Collectibles augmented our large brains and language as solutions to the Prisoner's Dilemma that keeps almost all animals from cooperating via delayed reciprocation with nonkin. Reputational beliefs can suffer from two major kinds of errors \u2013 errors of about which person did what, and errors in appraising the value or damages caused by that act. Within clans (the small and immediately local kin group, or extended family, which formed a subset of a tribe), our large brains could minimize these errors, so that public reputation and coercive sanctions superseded the limited motivation provided by the counterparty's ability to cooperate or defect in the future as the main enforcer of delayed reciprocation. In both Homo sapiens neanderthalensis and Homo sapiens sapiens, with the same large brain size, it is quite likely that every local clan member kept track of everybody other local clan member's favors. The use of collectibles for trade within the small local kin group may have been minimal. Between clans within a tribe both favor tracking and collectibles were used. Between tribes, collectibles entirely replaced reputation as the enforcer of reciprocation, although violence still played a major role in enforcing rights as well as being a high transaction cost that prevented most kinds of trade.When costliness becomes forgeable \u2013 Glass trade beads, manufactured in Venice in the 16th or 17th century, excavated from Mali, Africa. Such beads were very popular wherever European colonialists encountered Neolithic or hunter-gatherer cultures.To be useful as a general-purpose store of wealth and means of wealth transfer, a collectible had to be embedded in at least one institution with a closed-loop cycle, so that the cost of discovering and/or manufacturing the object was amortized over multiple transactions. Furthermore, a collectible was not just any kind of beautiful decorative object. It had to have certain functional properties, such as the security of being wearable on the person, compactness for hiding or burial, and unforgeable costliness. That costliness must have been verifiable by the recipient of the transfer \u2013 using many of the same skills that collectors use to appraise collectibles today.The theories presented in this paper can be tested by looking for these characteristics (or the lack of them) in the \"valuables\" often exchanged in these cultures, by examining the economic gains from the cycles through which these valuables move, and by observing preferences for objects with these characteristics in a wide variety of cultures (including modern ones).With its unprecedented technology of cooperation, humans had become the most fearsome predator ever seen on the planet. They adapted to a shifting climate, while dozens of their large herd prey were driven, by hunting and climate change in America, Europe, and Asia, to extinction. Today, most large animals on the planet are afraid of projectiles \u2013 an adaption to only one species of predator [R97]. Cultures based more on gathering than hunting also greatly benefitted. A population explosion followed \u2013 Homo sapiens sapiens was able to populate more parts of the planet and at a density over ten times that of Homo sapiens neanderthalensis [C94], despite weaker bones and no increase in brain size. Much of this increase may be attributed to the social institutions made possible by effective wealth transfer and language \u2013 trade, marriage, inheritance, tribute, collateral, and the ability to assess damages to dampen cycles of vengeance.Primitive money was not modern money as we know it. It took on some of the function modern money now performs, but its form was that of heirlooms, jewelry, and other collectibles. The use of these is so ancient that the desires to explore, collect, make, display, appraise, carefully store, and trade collectibles are human universals \u2013 to some extent instincts. This constellation of human desires might be called the collecting instinct. Searching for the raw materials, such as shells and teeth, and manufacturing of collectibles took up a considerable portion of many ancient humans' time, just as many modern humans expend substantial resources on these activities as hobbies. The results for our ancient forebears were the first secure forms of embodied value very different from concrete utility \u2013 and the forerunner of today's money.[A90] Adams, Charles, For Good and Evil: The Impact of Taxes on Civilization \u21a9[A98] Tim Appenzeller, \"Art: Evolution or Revolution?\", Science 282(Nov 20, 1998), p. 1452. See also the home page of Stanley Ambrose \u21a9 \u21a9[B04] The Blombos Cave Project \u21a9 \u21a9[C94] Culiffe, Barry, ed., The Oxford Illustrated History of Prehistoric Europe, Oxford University Press 1994. \u21a9 \u21a9 \u21a9 \u21a9 \u21a9[D89] Dawkins, Richard, The Selfish Gene, Oxford University Press 1989. \u21a9 \u21a9 \u21a9[D94] Davies, Glyn, A History of Money, From Ancient Times to the Present Day, University of Wales Press 1994. \u21a9 \u21a9 \u21a9 \u21a9[DW88] Daly, Martin and Wilson, Margo, Homicide, New York: Aldine (1998). \u21a9 \u21a9[G95] Gilead, I. 1995. \"The Foragers of the Upper Paleolithic Period,\" in Archaeology and Society in the Holy Land. Ed. by T. E. Levy. New York, Facts on File. \u21a9[G01] [ref: http://www-geology.ucdavis.edu/~GEL115/115CH1.html] \u21a9[Gr01] Graeber, David, Towards an Anthropological Theory of Value, Palgrave 2001.[I98] Ifrah, Georges, The Universal History of Numbers, John Wiley & Sons 1998, pg. 73.[K99] Kohn, M. and Mithen, S. \"Handaxes: Products of sexual selection?\", Antiquity, 73, 518-526.[K99] Kohn, M. and Mithen, S. \"Handaxes: Products of sexual selection?\", Antiquity, 73, 518-526.[L94] Landa, Janet, Trust, Ethnicity, and Identity: Beyond the New Institutional Economics of Ethnic Trading Networks, Contract Law, and Gift-Exchange, The University of Michigan Press, second edition, 1998. \u21a9 \u21a9 \u21a9[M1892] Menger, Carl, \"On the Origins of Money\" Economic Journal, volume 2,(1892) p. 239-55. translated by C.A. Foley, at http://www.socsci.mcmaster.ca/~econ/ugcm/3ll3/menger/money.txt \u21a9[M50] Mauss, Marcel, The Gift, 1950, English translation by W.D. Halls, W.W. Norton 1990. \u21a9[M93] (Morse 1993) via http://www.wac.uct.ac.za/wac4/symposia/papers/s095wht1.pdf \u21a9[R96] Riddley, Matt, The Origins of Virtue, Viking 1996.[T01] Taylor, Alan, American Colonies \u2013 The Settling of North America, Penguin 2001. \u21a9 \u21a9[P89] Plattner, Stuart, Economic Anthropology, Stanford University Press 1989.[W77] Wiessner, P. 1977. Hxaro: a regional system at reciprocity for reducing risk among the !Kung San. Unpublished PhD thesis: University of Michigan. \u21a9[W82] Wiessner, P. 1982. Risk, reciprocity and social influences on !Kung San economies. In: Leacock, H. R. & Lee, R.B. (eds) Politics and history in band societies: 61-84. London: Cambridge University Press.[W95] White, Randall, \"Ivory Personal Ornaments of Aurignacian Age: Technological, Social and Symbolic Perspectives\", Institute For Ice Age Studies, http://www.insticeagestudies.com/library/Ivory/Ivorypersonal.html \u21a9[W97] White, Randall, \"From Materials To Meaning\", Institute For Ice Age Studies, http://www.insticeagestudies.com/library/materialstomeaning/index.html \u21a9[W98] Winterhalder, Bruce, \"Intra-Group Resource Transfers: Comparative Evidence, Models, and Implications for Human Evolution\", http://www.unc.edu/depts/ecology/winterweb/intra_group.html \u21a9[W02] Wilford, John, \"Debate is Fueled on When Humans Became Human\", New York Times, February 26th, 2002  \u21a9My thanks to Jerome Barkow, Andrew Odlyzko, Bruce Smith, K. Eric Drexler, Markus Krummenacker, Mark Wiley, Norm Hardy, and others for their insightful comments.Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 2002, 2005 by Nick Szabo\nPermission to redistribute without alteration hereby grantedEditor's note: Some links may be broken."}
{"prompt": "The Ricardian Contract", "completion": "Describing digital value for payment systems is not a trivial task. Simplistic methods of using numbers or country codes to describe currencies, and ticker tape symbols to issue bonds, shares, and other financial instruments soon run into shortcomings in their ability to handle dynamic and divergent demands. The seemingly arbitrary variations in the meanings of different instruments are best captured as contracts between issuers and holders. Thus, the digital issuance of instruments can be viewed as the issuance of contracts.This paper proposes that the contract is the issue. A document form is described that encompasses the inherent contractual nature of the financial instrument yet copes with the requirements of being an integral part of a payment system.Little work has been done on classification and description of value in the field of financial cryptography. This paper presents the Ricardian Contract, a method to identify and describe issues of financial instruments as contracts[1]. It was originally developed by Ian Grigg and Gary Howland as part of the Ricardo payment system.The original application was a bond trading system[2]. For trading, a basic component is a transfer or payment system which receives and acts on transfer instructions to move instruments (cash, bonds) from one account to another. Each instruction therefore must identify the instrument.A means was required to capture, identify, and describe the traded instruments. There are thousands of bonds, and potentially millions of other instruments that could be issued and traded, and each has unique characteristics that are not amenable to compression into databases. To such a system, cash is no different to bonds, and requires the same description.When someone issues a currency (or bond or share) over the Internet, what is it? What does the recipient have?Few systems for issuance of value (payment systems) treat these questions adequately. They generally refer to existing external units of currency and tidy up loose edges in a user agreement. For example, Paypal, an issuer of dollars, relies on the familiarity of the US dollar to define much of its service offering. Gold issuers lean more heavily on their user agreements as the metal unit is not so familiar.For trading, it is not sufficient to refer to well-known familiar references, as each instrument is different in finicky ways and these differences matter to traders. Even with currencies, however, the user has difficulty in determining the security and safety of one dollar with respect to another.Classification by numbers or symbols is a starting point. Almost all systems of digital issuance identify their basic issue by allocating numbers or letters as currencies (for example, 840, \"USD\", \"AUG\" [3]). These systems runs into trouble quickly.An issuer with many currencies or many issuers with the same nominal currency raises difficult questions. Can an issuer have two or more dollar units? For example, within ISO3166-1, there are three different US dollars: 840/USD (cash), 998/USS (same day), and 997/USN (next day). Similarly, how does one Digital Gold Currency (\"DGC\") differentiate his gold over that of another issuer, when all are known as \"AUG\"?As bonds are, at their essence, contracts between issuers and users, our problem reduces to one of issuing contracts. Whereas other issues have contracts, our issues are contracts.Our innovation is to express an issued instrument as a contract, and to link that contract into every aspect of the payment system. By this process, a document of some broad utility (readable by user and program) is drafted and digitally signed by the issuer of the instrument. This document, the Ricardian Contract, forms the basis for understanding an issue and every transaction within that issue.By extension, all issues of value, such as currencies, shares, derivatives, loyalty systems and vouchers, can benefit from this approach.This paper is structured as follows. In Section 2, we discuss conventional approaches to identifying and describing issuance, and explore questions and doubts surrounding these approaches. Then, in Section 3, a design to express issuance as a contract is presented. Finally, in Section 4, concluding remarks are added.Consider the case of the pioneering digital cash scheme, eCash, as originally fielded by DigiCash BV. The first valuable currency, issued by Mark Twain Bank of the USA, was identified with the number 4. Lore has it that the early system allocated a small sequential number to each currency. Test systems had already acquired 0,1,2,3 and thus 4 was the next. DigiCash's marketing assumptions then changed to assume one issue per country. In time, this scheme was adjusted to issue currencies numbered after international dialling codes (e.g., 49 for Germany, 61 for Australia). The shortfalls of this scheme became apparent, so a new design was created [4]. One 32 bit number to describe the issue was used, on the pragmatic assumption that this would be large enough to cover foreseeable eventualities.Yet the strains of one issuer, one currency were obvious almost immediately. A more advanced scheme could use a tuple of (issuer, currency) to describe a system whereby each issuer is empowered in some sense to issue multiple competing currencies[5]. It is easy to generalise this system by adding additional elements to the tuple: (issuer, type, identifier) tuple[6]. For example, a zero coupon bond issued by the Joint Universal and Nationwide Keiretsu that pays out in January of 2100 might have a tuple of (JUNK, zero, Jan_2100).Numbers as a space for identifying digital instruments are limiting, and having tuples as an extension is not really an answer.Firstly, what do they describe? In the case of electronic cash systems, they can describe currencies and issuers. Is it one or both, and how do we generalise to other aspects? Secondly, what surety do we have that what is described is accurate? Whilst a lot can be achieved by simply relying on the reputation of the issuer, financial insiders know that the real value is expressed in the detail and the reliability of the claim. Thirdly, how are the numbers derived? Is a central registry required, or can any issuer of digital value acquire a number as per local requirements? Finally, is there a limit to the space? Integer numbers as expressed in packets are generally limited to some quantity of bits, such as 32. For practical software engineering, there need to be limits, but do these limits need to limit the business possibilities?Any successful system will be used in ways that make it appear to be broken. As software engineers, we need to present our inventions with the humility of toolmakers for future generations of builders, not as bureaucrats planning the zoning of the digital commerce space.What happens when we have gone through the early adopters, dominated the moms and pops, and competition is fiercely turning onto our elderly retired set? Imagine mints in the pockets of billions of idle game-playing senior citizens. Or, imagine a world with an issuer of digital loyalty points on every parking meter, or where students must pay for tuition with shares of future earnings. Already we have seen popular musicians selling bonds backed by their music[7], and proposals for software bug fixes financed by securitized issues to anonymous users[8].Consider the zero coupon bond, an instrument that pays a face value of a currency on a given date. The zero is perhaps the simplest general financial instrument in common use, and it formed the benchmark for our design.To describe the face value, the currency of the face value, and the expiry date of this bond, we would add additional elements to the above tuple. But this is only a beginning. In his description of Eurobonds, Noel Clarke expects dozens or hundreds of fields[9]. If we examine just one of these characteristics, for example Event-Related Put Options, we find that a bond needs to describe what happens in the event of:These items bind tightly to the instrument in question, but they represent difficulties to the software architect. We can make a number of observations.Firstly, each event is not simple. Today, one may be able to shoehorn the notion of \"a hostile or friendly takeover\" into a single name-value pair, but this would not survive the evolving scene of regulation and litigation that applies to such events.Secondly, there is no reason to believe that the above list is complete.Thirdly, not only is it going to be hard to design a single field of any sort to cope with these, they are mostly going to be full of legal text.Consider a data layout point of view. To describe the document that forms the basis of a bond we will need a tree-structured database of tuples, as a minimum. More, that layout is only going to work for one instrument, or one extremely tight, nearly fungible set of instruments.Currencies, or cash, might be that tight set. After all, a dollar is a dollar is a dollar. Can we describe money with some simple set of tuples? Even for cash, we argue that a layout of tuples is not sufficient.Take the case of a digital dollar issued by a bank. The digital dollars would be derivatives, often backed by deposits in the same amount. This may be sufficient for marketing purposes but it would not survive a serious financial analysis.Compare such derivative dollars to those issued by the US Federal Reserve Board. The Fed has yet to deny acceptance of its notes if presented with same, if only as a claim on another bunch of the same instrument, or for taxation liabilities. Radical interpretations aside, the Fed has never filed for bankruptcy and remains a pretty solid bet.The same cannot be said of just any bank issuer of derivative dollars. Its digital dollars would be backed by deposits with ... the very same institution. Such a bank can close its doors at any time, and, given the history of the banking sector in the 20th Century, an analyst should take this risk seriously. Further, in the USA at least, the FDIC has already ruled that funds so held on a user's PC are considered to be uninsured deposits[10].This is not to suggest that any given bank is about to close doors, but to ask what happens when an issuer does indeed default on its promise?Any holder of any asset will carry a risk. A holder of electronic dollars will carry the risk that the issuer fails, and the holder of another issuer's dollars carries a similar, comparable, but distinct risk. Each of those risks result in a cost, which should be subtracted from the face value of the dollar to calculate a comparative value. In this risk distinction lies the inescapable fact that any given dollar is not of constant value, even when measured against some well-known dollar such as that issued by the Federal Reserve.If there is no such thing as a single dollar, what is left? Clearly, we must describe each and every dollar for what it is. This would seem to be a task of fine print and detail, and, indeed, every distinct issued currency is a distinct contract between the issuer and the holder.A contract can encapsulate the detail. Consider the original sovereign currency contracts, in which the issuer promised to pay the bearer in ounces of precious metal. That is four datum in the contract already: which sovereign, \"pay to bearer,\" what to pay, and how much of it.So it is with every bond, every currency, and any financial instrument of any complexity. In fact, within the digital domain, the question of how to treat a financial instrument reduces in great part to how to treat a contract.Or, an issue is a contract. Issues within other payment systems have contracts but only as adjunct documents such as user agreements. Often, their role and importance is subject to battles; marketing wants them hidden, while Legal asks for them to be thrust in the user's face at all times.Once we accept that the issue is a contract, the task becomes simple: create a contract that can be linked into the payment system as the centerpiece. That is the subject of the next section.Almost all aspects of Ricardian Contracts are best seen by examining examples, and this section only briefly covers the salient details, before discussing the ramifications. Examples can be found at webfunds.org/ricardo/contracts/ .A Ricardian Contract can be defined as a single document that is a) a contract offered by an issuer to holders, b) for a valuable right held by holders, and managed by the issuer, c) easily readable by people (like a contract on paper), d) readable by programs (parsable like a database), e) digitally signed, f) carries the keys and server information, and g) allied with a unique and secure identifier.In the simplest possible terms, a Ricardian Contract is a document defining a type of value for issuance over the Internet[11]. It identifies the Issuer, being the signatory, and any terms and clauses the Issuer sees fit to add in to make the document stand as a contract.The same document has to be both readable by people and parsable by programs. The Ricardian Contract is formatted as a text file that can be easily read (displayed or printed), and programs can convert it into internal forms for searching for name-value pairs. It includes a special section for each type of contract, such as bond, share, currency, etc. Further sections within describe, in program-parsable terms, usage of decimal points, titles, and symbols.As legal signatory, the Issuer signs the document in the OpenPGP cleartext form with his contract signing key[12]. He includes the full chain of OpenPGP keys within the document to permit programs to directly verify and authenticate.To uniquely identify the contract, any user can calculate a canonical message digest over the clearsigned document. This message digest is included in all records of transactions, and provides a secure (unforgeable) link from the document to the accounting of the issue.E.g., e3b445c2a6d82df81ef46b54d386da23ce8f3775 is the full message digest for Systemics Inc's issue of prepaid services dollars. Commonly called a hash, the message digest is a cryptographic technique to create a relatively small number that is one to one with the document. That is, for each document, there is only one hash, and the hash refers uniquely to that document. The algorithm is the well-known standard, SHA1.The following observations highlight how strong the result is.Hash Limits Frog-Boiling. A gradual change in contract by the stronger party over time is known as frog-boiling. The stronger party is generally the issuer, and can be expected to change the contract if there is a benefit. This is a frequent attack. One result of the use of the hash identifier is that neither party can change the contract arbitrarily or surreptitiously.To see this is true, we need to examine the records that refer to the hash. An application can sign all important records (e.g., payments, tokens, receipts, balances), and these signed records include the hash of a Ricardian Contract. The hash within the record cannot be changed without losing its ability to pass a test of signature validity. Likewise, the contract cannot be changed without losing its relationship to records already signed and delivered. In other words, every record, held by every user, incorporates an unalterable copy of that hash. Any change to the contract creates a new hash, and that new hash is not the one which the users have or value.This crystallises the contract for both parties, stopping the stronger party from modifying the contract subtly at some later stage. To some extent, this redresses the imbalance of power between provider and customer in the offering of a form contract. The lesser party has no option to negotiate, but neither has the greater party the option to claim a distinct contract at a later time. The limitation comes at some cost as it can be a nuisance for the support team of that financial instrument.The Ricardian PKI Delivers Clarity. Ricardian Contracts carry their own Public Key Infrastructure (\"PKI\") with them. The Issuer's top level public key is included in the contract, and it signs his contract-signing key, also included. The contract-signing key signs the contract itself.This achieves several things. Firstly, client software can check the entire digital signature chain in one automated sequence.Secondly, there is no need for a complex multi-party PKI. All the keys are present, and there is no need to go looking for them on the net. This eliminates substitution attacks, whereby a key that might pass some checks could be inserted in some key lookup phase. It also reduces costs dramatically.Thirdly, the canonical hash of the contract also represents a signature on the contract. It is recorded in all relevant records, and thus entangles the contract with those activities[13]. Once the contract has been in play for a while, it establishes its provenance through presence and reliance by the user public. This provides far more persuasive evidence than the issuer's signature itself; once the issuer and the public have spent time and money relying on the contract, via the hash, it is hard for the issuer to renege on the nature of the contract or his signature.The result is a PKI that delivers strong end-to-end reliability, based on a single document. This is simply not present in other designs for PKIs[14]. This reliability pays off in the dispute resolution phase, where, we suggest, the Ricardian Contract can stand alone on its merits and requires no complex descriptions of PKI, digital signatures, or references to uncertain third parties to bolster its provenance. By including the keys, we can draw a couple of simple lines within the contract, asserting \"this key signs that key, and that latter signs the contract. The first key is the top-level key of the individual that signed this contract. That's the whole story, mi'lud.\"Validating the Issuer's Key. All good crypto protocols divide into two parts, the first of which says to the second, \"trust this key completely.\"The top-level key of the Issuer ultimately authenticates the contract. The keys and other information in the contract also permit a protocol such as SOX to bootstrap a strongly secured connection to the server[15].How then to verify that this ultimate key is really the Issuer's? This is not difficult. The business process of digital issuance involves a great deal of relationship-building between Issuers and Users. Many different interactions involve chances to establish trust. For example, from his web site, the Issuer can publish the contract, keys and hashes, and have other sites mirror them. The value so issued will be distributed via payments that include the hash. An already trusted party usually delivers these payments. The payments validly identify the contract, and derive their own validity, via the hash.Contrast this to assumptions in the x.509 PKI behind SSL/HTTPS browsing (the following is highly debatable, but is presented for comparison only). In that PKI, it was originally claimed that a user would present her credit card to sites with which she had no prior relationship and no way for her to establish the provenance of the site's key. Thus, a trusted third party, the Certificate Authority, was put in place to confirm the key.Payments, trading and matters of finance are fundamentally relationship-rich. The nature of money and finance is that participants always conduct their own due diligence, they prefer to listen to peers they already trust, and do not readily accept the word of an independent party. Thus, there is no place for a central third party to stand in and authenticate players. Before the user desires to place any value on a given payment, she has almost certainly been made aware of the contract via other means.Presumption of Possession. The use of the hash as an identifier is a compromise as it is unintelligible to humans[16]. Yet this very compromise delivers an unexpected benefit: Use of the issue leads to a presumption that the user has the contract. To use an issue of value, such as a currency, the user must have the hash in the applicable records. That is, if the user receives a payment, that payment record will include the hash. As the hash is not descriptive, this implies that the user has the contract in order to interpret the issue.To see that this is true, imagine having a record with the hash but without having the contract. The first thing the user will need is a database of parameters telling her what the hash refers to. Unlike a payment in 10 of \"GBP\", a payment of 1000 in \"972097bb...\" is not intelligible.Yet how could software predict what the user needs to know about the hash? Very quickly it becomes apparent that the software is better off storing the source of the information \u2013 the full contract itself \u2013 as it removes an unlimited degree of complexity in storing intermediate or secondary information.Software can still function with only the hash. However, it would be entirely blind to the semantics of the instrument. Such a cavalier approach might be acceptable for communications and storage, but for user software, it is equivalent to a traumatic failure. To cope with this, the client-side software takes especial care to acquire and keep contracts. Hence, we can state the presumption with some degree of confidence: in a functioning system, the user has available the full Ricardian Contract (albeit under software control).This is only a small step for the client software, but is a giant leap forward for the relationship between the issuer and the holder. Specifically, having a strong presumption that the user has the full contract available will simplify many legal aspects about the issuer's responsibilities. (We suggest and thus acknowledge the legal ramifications of the term presumption, but neither space nor expertise permits more in this paper.)The Ricardian Contract delivers a rich source of primary, complete information. The full story is right there in textual form, in parsable parameters, and in the signature chain. Thus, within a dispute, a hostile legal attack has less room to manoeuvre, and can only confirm the facts as laid out in the contract.Our intent is that the contract is the beginning and the end of the discussion; we call this principle the rule of one contract. The legal fraternity refers to \"the contract being bounded by the four corners of the page.\" By showing how we have carefully laid out a readable document, with a verifiable digital signature, and an unforgeable identifier linking to every record, we can more readily ask the judiciary to accept that the single document which is being presented is indeed the valid contract agreed to by the parties.The contract is the keystone of issuance[17]. Our innovation is to express all the salient details of an issuance as an unforgeable contract, unforgeably linked into every action within a payment system. In this way, financial innovation can develop along the lines it always has done \u2013 by means of innovation within contracts. By translating the institution of the contract into the digital domain, we build upon centuries' and even millenia' worth of experience in documenting, sharing and disputing the meaning of agreements between parties.To capture complexity, we can put documents such as contracts into electronic form and sign them using digital signature technologies such as OpenPGP. The result is a reasonable analogue of the paper and ink contracts that most people and businesses are familiar with, bolstered with cryptographic integrity.With the hash as the identifier, software can now uniquely identify a given financial arrangement and can confirm a strong chain of signatures. The hash strongly implies the user has the contract available at all times, and it cannot be changed without being noticed.The Ricardian Contract delivers one huge benefit to the issuer \u2013 clarity in many legal and customer support questions. The user benefits from lower overall costs, and better presentation of information, within a more consistent framework.The form has been in successful use since 1996. Since that time, it has delivered about 20 financial instruments without failure.Disputes. The Ricardian Contract has appeared in two distinct forums of dispute resolution to resolve claims[18]. Anecdotally, each claim was resolved directly and efficiently, and without undue fuss, simply by referring to the applicable Ricardian Contract.Automation. Relatively little has needed to be automated. In practice, fields have been inserted and standardised so that programs can extract decimalisation (dollars versus cents), labels for units (USD versus $), and titles for the issuer and the issue. In contrast to expectations, there has been no demand to parse every field.Cost. The cost of the concept has compared favourably with that incurred with other payment systems. The preparation of the contract text carries some costs, but no more so than a user agreement. OpenPGP infrastructure requirements (keys and signing) add some minor costs to issuers but they are easily offset by the benefits of risk reduction from contract distribution. Custom signing editors have helped to reduce those costs[19].Layering. Layering of contracts is an impending need. Many businesses can take a standard and defined set of terms and draw on them directly. Other contracts result from earlier contracts and need to reference them.XML. Initial efforts suggested that XML would break the rule of one contract, but it seems that we will need something better than the archaic INI format[20]. One recent proposal, the XML Voucher, stops short of presenting itself as a contract[21].Law of Contract. The treatment of the Ricardian Contract as a contract may raise more legal questions than it answers. For example, is this form indeed a contract? How do distinct jurisidictions view the concept (common law, civil law, UCC, Koranic code)? Is this a negotiated or a form contract? When did the user accept the contract? How strong, or rebuttable, is the presumption that the user has the contract?Smart Contracts. By unifying all information in a program-readable file, there is the enhanced potential of smart contracts[22]. We have not gone further in this direction than methods to handle decimals. This is partly for lack of demand, and partly because it is not clear how a court would treat a computer program presented as a contract.Originally introduced in Ian Grigg, \"Financial Cryptography in 7 Layers,\" 4th Conference on Financial Cryptography, Anguilla, 2000, Springer-Verlag LNCS 1962. All papers are at http://iang.org/papers/ \u21a9Ian Grigg, \"Digital Trading,\" Virtual Finance Report, November 1997. \u21a9Country and Currency Codes, ISO3166-1. \u21a9Bryce Wilcox, open design review, DigiCash's developer list, <ecash-dev@digicash.com>, August 1997. \u21a9Ibid, Rachel Willmer, 14 August 1997. \u21a9Robert Hettinga, \"What's a Digital Bearer Bond?\" e$ rants, 19th November, 1995 \u21a9Alex Tajirian, \"David Bowie Bonds,\" \u21a9Ian Grigg and C. Petro, \"Using Electronic Markets Achieve Efficient Task Distribution,\" 1st Conference on Financial Cryptography, Anguilla, 1997, Springer-Verlag LNCS 1318. \u21a9Noel Clarke, Guide to Eurobonds, The Economist Intelligence Unit, 1993. \u21a9FDIC General Counsel's Opinion No. 8; Stored Value Cards, Federal Register, August 2, 1996. Also see the (readable) Press Release entitled FDIC will Continue to rely on General Counsel Opinion rather than issue rules on Stored-Value Cards, 24 June 97. \u21a9Ian Grigg, Guide to Ricardian Contracts, WebFunds project. \u21a9Jon Callas, et al, \"OpenPGP Message Format,\" Internet Draft, RFC2440bis (-10 draft). \u21a9Petros Maniatis, Mary Baker \"Secure History Preservation through Timeline Entanglement\", 11th USENIX Security Symposium, San Francisco, USA. August 2002. \u21a9Jane K. Winn, \"Couriers without Luggage\" 49 South Carolina Law Review 739 (1998) \u21a9Gary Howland, \"Development of an Open and Flexible Payment System\" 1996. \u21a9Bryce Wilcox, \"Names: Decentralized, Secure, Human-Meaningful: Choose Two\", 2003 \u21a9Metaphor by Martin (Hasan) Bramwell. See \"The Contract is the Keystone of Issuance,\" Financial Cryptography blog, 19th September 2003. \u21a9DigiGold v. Systemics, before the Supreme Court of Anguilla (2001), and thereafter referred to the American Arbitration Association (2002). \u21a9Edwin Woudt, ContractSignWizard, WebFunds project. \u21a9Erwin van der Koogh, \"Ricardian Contracts in XML,\" (presented at) Edinburgh Financial Cryptography Engineering (EFCE-2), 2001. \u21a9Ko Fujimura and Masayuki Terada, XML Voucher: Generic Voucher Language, Internet Draft. \u21a9Nick Szabo, \"The Idea of Smart Contracts,\" 1997. \u21a9Ian Grigg\nSystemics, Inc.\niang@iang.org"}
{"prompt": "Triple Entry Accounting", "completion": "The digitally signed receipt, an innovation from financial cryptography, presents a challenge to classical double entry bookkeeping. Rather than compete, the two melded together form a stronger system. Expanding the usage of accounting into the wider domain of digital cash gives 3 local entries for each of 3 roles, the result of which I call triple entry accounting.This system creates bullet proof accounting systems for aggressive uses and users. It not only lowers costs by delivering reliable and supported accounting, it makes much stronger governance possible in a way that positively impacts on the future needs of corporate and public accounting.This paper brings together financial cryptography innovations such as the Signed Receipt with the standard accountancy techniques of double entry bookkeeping.The first section presents a brief backgrounder to explain the importance of double entry bookkeeping. It is aimed at the technologist, and accountancy professionals may skip this. The second section presents how the Signed Receipt arises and why it challenges double entry bookkeeping.The third section integrates the two together and the Conclusion attempts to predict wider ramifications into Governance issues.This paper benefitted from comments by Graeme Burnett and Todd Boyle[1].Accounting or accountancy is these days thought to go back to the genesis of writing; the earliest discovered texts have been deciphered as simple lists of the counts of animal and food stock. The Sumerians of Mesopotamia, around 5000 years ago, used Cuneiform or wedge shaped markings as a base-60 number form, which we still remember as seconds and minutes, and squared, as the degrees in a circle. Mathematics and writing themselves may well have been derived from the need to add, subtract and indeed account for the basic assets and stocks of early society.Single entry bookkeeping is how 'everyone' would do accounting: start a list, and add in entries that describe each asset. A more advanced arrangement would be to create many lists. Each list or 'book' would represent a category, and each entry would record a date, an amount, and perhaps a comment. To move an asset around, one would cross it off from one list and enter it onto another list.Very simple, but it was a method that was fraught with the potential for errors. Worse, the errors could be either accidental, and difficult to track down and repair, or they could be fraudulent. As each entry or each list stood alone, there was nothing to stop a bad employee from simply adding more to the list; even when discovered there was nothing to say whether it was an honest mistake, or a fraud.Accounting based on single entry bookkeeping places an important limitation on the trust of the books. Likely, only the owner's family or in times long past, his slaves could be trusted with the enterprise's books, leading to a supportive influence on extended families or slavery as economic enterprises.Double Entry bookkeeping adds an additional important property to the accounting system; that of a clear strategy to identify errors and to remove them. Even better, it has a side effect of clearly firewalling errors as either accident or fraud.This property is enabled by means of three features, being the separation of all books into two groups or sides, called assets and liabilities, the redundancy of the duplicative double entries with each entry having a match on the other side, and the balance sheet equation, which says that the sum of all entries on the asset side must equal the sum of all entries on the liabilities side.A correct entry must refer to its counterparty, and its counterpart entry must exist on the other side. An entry in error might have been created for perhaps fraudulent reasons, but to be correct at the local level, it must refer to its counterparty book. If not, it can simply be eliminated as an incomplete entry. If it does refer, the existence of the other entry can be easily confirmed, or indeed recreated depending on the sense of it, and the loop is thus closed.Previously, in single entry books, the fraudster simply added his amount to a column of choice. In double entry books, that amount has to come from somewhere. If it comes from nowhere, it is eliminated above as an accidental error, and if it comes from somewhere in particular, that place is identified. In this way, fraud leaves a trail; and its purpose is revealed in the other book because the value taken from that book must also have come from somewhere.This then leads to an audit strategy. First, ensure that all entries are complete, in that they refer to their counterpart. Second, ensure that all movements of value make sense. This simple strategy created a record of transactions that permitted an accountancy of a business, without easily hiding frauds in the books themselves.Double Entry bookkeeping is one of the greatest discoveries of commerce, and its significance is difficult to overstate. Historians think it to have been invented around the 1300s AD, although there are suggestions that it existed in some form or other as far back as the Greek empire. The earliest strong evidence is a 1494 treatise on mathematics by the Venetian Friar Luca Pacioli[2]. In his treatise, Pacioli documented many standard techniques, including a chapter on accounting. It was to become the basic text in double entry bookkeeping for many a year.Double Entry bookkeeping arose in concert with the arisal of modern forms of enterprise as pioneered by the Venetian merchants. Historians have debated whether Double Entry was invented to support the dramatically expanded demands of the newer ventures then taking place surrounding the expansion of city states such as Venice or whether Double Entry was an enabler of this expansion.Our experiences weigh in on the side of enablement. I refer to the experiences of digital money issuers. Our own first deployment of a system was with a single entry bookkeeping system. Its failure rate even though coding was tight was such that it could not sustain more than 20 accounts before errors in accounting crept in and the system lost cohesion. This occurred within weeks of initial testing and was never capable of being fielded. The replacement double entry system was fielded in early 1996 and has never lost a transaction (although there have been some close shaves[3]).Likewise, the company DigiCash BV of the Netherlands fielded an early digital cash system into a bank in the USA. During its testing period, the original single entry accounting system had to be field replaced with a double entry system for the same reason \u2013 errors crept in and rendered the accounting underneath the digital cash system unreliable.Another major digital money system lasted for many years on a single entry accounting system. Yet, the company knew it was running on luck. When a cracker managed to find a flaw in the system, an overnight attack allowed the creation of many millions of dollars worth of value. As this was more than the contractual issue of value to date, it caused dramatic contortions to the balance sheet, including putting it in breach of its user contract and at dire risk of a 'bank run'. Luckily, the cracker deposited the created value into the account of an online game that failed shortly afterwards, so the value was able to be neutralised and monetarily cleansed, without disclosure, and without scandal.In the opinion of this author at least, single entry bookkeeping is incapable of supporting any enterprise more sophisticated than a household. Given this, I suggest that evolution of complex enterprises required double entry as an enabler.Double Entry has always been the foundation of accounting systems for computers. The capability to detect, classify and correct errors is even more important to computers than it is to humans, as there is no luxury of human intervention; the distance between the user and the bits and bytes is far greater than the distance between the bookkeeper and the ink marks on his ledgers.How Double Entry is implemented is a subject in and of itself. Computer science introduces concepts such as transactions, which are defined as units of work that are atomic, consistent, isolated, and durable (or ACID for short). The core question for computer scientists is how to add an entry to the assets side, then add an entry to the liabilities side, and not crash half way through this sequence. Or even worse, have another transaction start half way through. This makes more sense when considered in the context of the millions of entries that a computer might manage, and a very small chance that something goes wrong; eventually something does, and computers cannot handle errors of that nature very well.For the most part, these concepts simply reduce to \"how do we implement double entry bookkeeping?\" As this question is well answered in the literature, we do no more than mention it here.Recent advances in financial cryptography have provided a challenge to the concept of double entry bookkeeping. The digital signature is capable of creating a record with some strong degree of reliabilty, at least in the senses expressed by ACID, above. A digital signature can be relied upon to keep a record safe, as it will fail to verify if any details in the record are changed.If we can assume that the the record was originally created correctly, then later errors are revealed, both of an accidental nature and of fraudulent intent. (Computers very rarely make accidental errors, and when they do, they are most normally done in a clumsy fashion more akin to the inkpot being spilt than a few numbers.) In this way, any change to a record that makes some sort of accounting or semantic sense is almost certainly an attempt at fraud, and a digital signature makes this obvious.A digital signature gives us a particular property, to whit:There are several variants, with softer and harder claims to that property. For example, message digests with entanglement form one simple and effective form of signature, and public key cryptosystems provide another form where signers hold a private key and verifiers hold a public key[4]. There are also many ways to attack the basic property. In this essay I avoid comparisons, and assume the basic property as a reliable mark of having been seen by a computer at some point in time.Digital signatures then represent a new way to create reliable and trustworthy entries, which can be constructed into accounting systems. At first it was suggested that a variant known as the blinded signature would enable digital cash[5]. Then, certificates would circulate as rights or contracts, in much the same way as the share certificates of old and thus replace centralised accounting systems[6]. These ideas took financial cryptography part of the way there. Although they showed how to strongly verify each transaction, they stopped short of placing the the digital signature in an overall framework of accountancy and governance. A needed step was to add in the redundancy implied in double entry bookkeeping in order to protect both the transacting agents and the system operators from fraud.Designs that derived from the characteristics of the Internet, the capabilities of cryptography and the needs of governance led to the development of the signed receipt[7]. In order to develop this concept, let us assume a simple three party payment system, wherein each party holds an authorising key which can be used to sign their instructions. We call these players Alice, Bob (two users) and Ivan (the Issuer) for convenience.When Alice wishes to transfer value to Bob in some unit or contract managed by Ivan, she writes out the payment instruction and signs it digitally, much like a cheque is dealt with in the physical world. She sends this to the server, Ivan, and he presumably agrees and does the transfer in his internal set of books. He then issues a receipt and signs it with his signing key. As an important part of the protocol, Ivan then reliably delivers the signed receipt to both Alice and Bob, and they can update their internal books accordingly.Our concept of digital value sought to eliminate as many risks as possible. This was derived simply from one of the high level requirements, that of being extremely efficient at issuance of value. Efficiency in digital issuance is primarily a function of support costs, and a major determinant of support costs is the costs of fraud and theft.One risk that consistently blew away any design for efficient digital value at reasonable cost was the risk of insider fraud. In our model of many users and a single centralised server, the issuers of the unit of digital value (as signatory to the contract) and any governance partners such as the server operators are powerful candidates for insider fraud. Events over the last few years such as the mutual funds and stockgate scandals are canonical cases of risks that we decided to address.In order to address the risk of insider fraud, the written receipt was historically introduced as being a primary source of evidence. Mostly forgotten to the buying public these days, the purpose of a written receipt in normal retail trade is not to permit returns and complaints by the customer, but rather to engage her in a protocol of documentation that binds the shop attendant into safekeeping of the monies. A good customer will notice fraud by the shop attendant and warn the owner to look out for the monies identified by the receipt; the same story applies to the invention of the cash till or register, which was originally just a box separating the owner's takings from the monies in the shop attendant's pockets. We extend this primary motive into the digital world by using a signed receipt to bind the Issuer into a governance protocol with the users.We also go several steps further forward. Firstly, to achieve a complete binding, Alice's original authorisation is also included within the record. The receipt then includes all the evidence of both the user's intention and the server's action in response, and it now becomes a dominating record of the event. This then means that the most efficient record keeping strategy is to drop all prior records and keep safe the signed receipt.This domination affects both the Issuer and the user, and allows us to state the following principle:As the signed receipt is delivered from Issuer to both users, all three parties hold the same dominating record for each event. This reduces support costs by dramatically reducing problems caused by differences in information.Secondly, we bind a signed contract of issuance known as a Ricardian Contract into the receipt[8]. This invention relates a digitally signed document securely to the signed receipt by means of a unique identifier called a message digest, again provided by cryptography. It provides strong binding for the unit of account, the nature of the issue, the terms, conditions and promises being made by the Issuer, and of course the identity of the Issuer.Finally, with these enabling steps in place, we can now introduce the principle:Within the full record of the signed receipt, the user's intention is expressed, and is fully confirmed by the server's response. Both of these are covered by digital signatures, locking these data down. A reviewer such as an auditor can confirm the two sets of data, and can verify the signatures.The principle of the Receipt as the Transaction has become sacrosact over time. In our client software, the principle has been hammered into the design consistently, resulting in a simplified accounting regime, and delivering a high reliability. Issues still remain, such as the loss of receipts and the counting of balances by the client side software, but these become reasonably tractable once the goal of receipts as transactions is placed paramount in the designer's mind.In order to calculate balances on a related set of receipts, or to present a transaction history, a book would be constructed on the fly from the set. This amounts to using the Signed Receipt as a basis for single entry bookkeeping. In effect, the bookkeeping is derived from the raw receipts, and this raises the question as to whether to keep the books in place.The principles of Relational Databases provide guidance here. The fourth normal form directs that we store the primary records, in this case the set of receipts, and we construct derivative records, the accounting books, on the fly[9].Similar issues arise for Ivan the Issuer. The server has to accept each new transaction on the basis of the available balance in the effected books; for this reason Ivan needs those books to be available efficiently. Due to the greater number of receipts and books (one for each user account), both receipts and books will tend to exist, in direct contrast to fourth normal form. A meld between relationally sound sets of receipts and double entry books comes to assist here.Alice and Bob both are granted a book each within the server's architecture. As is customary, we place those books on the liabilities side. Receipts then can be placed in a separate single book and this could be logically placed on the assets side. Each transaction from Alice to Bob now has a logical contra entry, and is then represented in 3 places within the accounts of the server. Yet, the assets side remains in fourth normal form terms as the liabilities entries are derived, each pair from one entry on the assets side.By extension, a more sophisticated client-side software agent, working for Alice or Bob, could employ the same techniques. At this extreme, entries are now in place in three separate locations, and each holding potentially three records.The digitally signed receipt, with the entire authorisation for a transaction, represents a dramatic challenge to double entry bookkeeping at least at the conceptual level. The cryptographic invention of the digital signature gives powerful evidentiary force to the receipt, and in practice reduces the accounting problem to one of the receipt's presence or its absence. This problem is solved by sharing the records \u2013 each of the agents has a good copy.In some strict sense of relational database theory, double entry book keeping is now redundant; it is normalised away by the fourth normal form. Yet this is more a statement of theory than practice, and in the software systems that we have built, the two remain together, working mostly hand in hand.Which leads to the pairs of double entries connected by the central list of receipts; three entries for each transaction. Not only is each accounting agent led to keep three entries, the natural roles of a transaction are of three parties, leading to three by three entries.We term this triple entry bookkeeping. Although the digitally signed receipt dominates in information terms, in processing terms it falls short. Double entry book keeping fills in the processing gap, and thus the two will work better together than apart. In this sense, our term of triple entry bookkeeping recommends an advance in accounting, rather than a revolution.The precise layout of the entries in software and data terms is not settled, and may ultimately become one of those ephemeral implementation issues. The signed receipts may form a natural asset-side contra account, or they may be a separate non-book list underlying the bookkeeping system and its two sides.Auditing issues arise where construction of the books derives from the receipts, and normalisation issues arise when a receipt is lost. These are issues for future research.Likewise, it is worth stating that the technique of signing receipts works both with private key signatures and also with entanglement message digest signatures; whether the security aspects of these techniques is adequate to task is dependent on the business environment.It will be noted that the above design of triple entry bookkeeping assumed that Alice and Bob were agents of some independence. This was made possible, and reflected the usage of the system as a digital cash system, and not as a classical accounting system.Far from reducing the relevance of this work to the accounting profession, it introduces digital cash as an alternate to corporate bookkeeping. If an accounting system for a corporation or other administrative entity is recast as a system of digital cash, or internal money, then experience shows that benefits accrue to the organisation.Although the core of the system looks exactly like an accounting system, each department's books are pushed out as digital cash accounts. Departments no longer work so much with budgets as have control over their own corporate money. Fundamental governance control is still held within the accounting department by dint of their operation of the system, and by the limited scope of the money as only being usable within the organisation; the accounting department might step in as a market maker, exchanging payments in internal money for payments in external money to outside suppliers.We have operated this system on a small scale. Rather than be inefficient on such a small scale, the system has generated dramatic savings in coordination. No longer are bills and salaries paid using conventional monies; many transactions are dealt with by internal money transfers and at the edges of the corporation, formal and informal agents work to exchange between internal money and external money. Paperwork reduces dramatically, as the records of the money system are reliable enough to quickly resolve questions even years after the event.The innovations present in internal money go beyond the present paper, but suffice to say that they answer the obvious question of why this design of triple entry accounting sprung from the world of digital cash, and has relevence back to the corporate world.Todd Boyle looked at a similar problem from the point of view of small business needs in an Internet age, and reached the same conclusion \u2013 triple entry accounting[10]. His starting premises were that:From those foundations, Boyle concluded that therefore what is needed is a shared access repository that provides arms-length access. Fundamentally, this repository is akin to the classic double-entry accounting ledger of transaction rows (\"GLT\" for General Ledger - Transactions), yet its entries are dynamic and shared.Simple examples will help. When Alice forms a transaction, she enters it into her software. Every GLT transaction requires naming her external counterparty, Bob. When she posts the transaction, her software stores it in her local GLT and also submits it to the shared repository service's GLT.The Shared Transaction Repository (\"STR\") then forwards the transaction on to Bob. Both Bob and Alice are now expected to store the handle to the transaction as an index or stub, and the STR then stores the entire transaction.Boyle's ideas are logically comparable to Grigg and Howland's, although they arive from different directions (the STR is Grigg's Ivan, above) and are not totally equivalent. Where the latter limited themselves to payments, the accuracy of amounts, and protection with hard cryptographic shells, Boyle looked at wider patterns of transactions, and showed that the STR could mediate these transactions, if the core shared data could be extracted and made into a single shared record. Boyle's focus was on the economic substance of the transaction.Imagine a simple invoicing procedure. Alice creates an invoice and posts it to her software (GLT). As she has named Bob, the GLT automatically posts it to Ivan, the STR, and he forwards it to Bob. At this point Bob has a decision to make, accept or reject. Assuming acceptance, his software can then respond by sending an acceptance message to Ivan. The STR now assembles an accepted invoice record to replace the earlier speculative invoice record and posts that threeways. At some related time (to do with payment policy) Bob also posts a separate transaction to pay for the invoice. This could operate in much the same way as a separate transaction, linking directly to the original invoice.Now, as the payment links back, and the invoice is a live transaction within the three entries in the three accounting systems, it is possible for a new updated invoice record to refer back to the payment activity. When the payment clears, the new record can again replace the older unpaid copy and promulgate to all three parties.Software could be written to facilitate and monitor this flow and similar flows. If the payments system is sufficiently flexible, and integrated with the needs of the users, if might be possible to merge the above invoice with the payment itself, at the Receipts level. Seen in this light, the Signed receipt of Ricardo is simply the smallest and simplest pattern within the more general set of patterns. We could then suggest that the narrow principle of the Receipt is the Transaction could be extended into The Invoice is the Transaction.A particular transaction in business almost never stands alone. They come in patterns. For example offers and acceptances form a wider transaction but seldom encapsulate the entire fulfillment and payment cycle. Even if there has been a payment accompanying a PO message, the customer then waits for fulfillment.There is a large body of science and literature built around these patterns of transactions. These have been adopted by the Business Process workgroup of ebXML and other standards bodies, where they are called \"Commercial Transactions.\" Where however the present work distinguishes itself is in breaking down these transactions into the atomic elements. It is to that we now turn.The implementation of Triple Entry Accounting will in time evolve to support patterns of transactions. What has become clear is that double entry does not sufficiently support these patterns, as it is a framework that breaks down as soon as the number of parties exceeds one. Yet, even as double entry is \"broken\" on the net and unable to support commercial demands, triple entry is not widely understood, nor are the infrastructure requirements that it imposes well recognised.Below are the list of requirements that we believed to be important[11][12].1. Strong Psuedonymity, At Least. As there are many cycles in the patterns, the system must support a clear relationship of participants. At the minimum this requires a nymous architecture of the nature of Ricardo or AADS. (This requirement is very clear, but space prevents any discussion of it.)2. Entry Signing. In order to neutralise the threats to and by the parties, a mechanism that freezes and confirms the basic data is needed. This is signing, and we require that all entries are capable of carrying digital signatures (see 1, above, which suggests public key signatures).3. Message Passing. The system is fundamentally one of message passing, in contrast to much of the net's connection based architecture. Boyle recognised early on that a critical component was the generic message passing nature, and Systemics proposed and built this into Ricardo over the period 2001-2004[13].4. Entry Enlargement and Migration. Each new version of a message coming in represents an entry that is either to be updated or added. As each message adds to a prior conversation, the stored entry needs to enlarge and absorb the new information, while preserving the other properties.5. Local Entry Storage and Reports. The persistent saving and responsive availability of entries. In practice, this is the classical accounting general ledger, at least in storage terms. It needs to bend somewhat to handle much more flexible entries, and its report capabilities become more key as they conduct instrinsic reconciliation on a demand or live basis.6. Integrated Hard Payments. Trade can only be as efficient as the payment. That means that the payment must be at least as efficient as every other part; which in practice means that a payment system should be built-in at the infrastructure level. C.f., Ricardo.7. Integrated Application-Level Messaging. As distinct to the messaging at the lower protocol levels (1 above), there is a requirement for Alice and Bob to be able to communicate. That is because the vast majority of the patterns turns around the basic communications of the agents. There is no point in establishing a better payment and invoice mechanism than the means of communication and negotiation. This concept is perhaps best seen in the SWIFT system which is a messaging system, first and foremost, to deliver instructions for payments.Double Entry bookkeeping provides evidence of intent and origin, leading to strategies for dealing with errors of accident and fraud. The financial cryptography invention of the signed receipt provides the same benefits, and thus challenges the 800 year reign of double entry. Indeed, in evidentiary terms, the signed receipt is more powerful than double entry records due to the technical qualities of its signature.There remain some weaknesses in strict comparison with double entry bookkeeping. Firstly, in the Ricardo instantiation of triple entry accounting, the receipts themselves may be lost or removed, and for this reason we stress as a principle that the entry is the transaction. This results in three active agents who are charged with securing the signed entry as their most important record of transaction.Secondly, the software ramifications of the triple entry system that are less convenient than that offered by double entry bookkeeping. For this reason, we expand the information held in the receipt into a set of double entry books; in this way we have the best of both worlds on each node: the evidentiary power of the signed entries and the convenience and local crosschecking power of the double entry concept.Both of these imperitives meld signed receipts in with double entry bookkeeping. As we end up with a logical arrangement of three by three entries, we feel the term triple entry bookkeeping is useful to describe the advance on the older form.To fully benefit from triple entry bookkeeping, we have to expand accounting systems out to agents and offer them direct capabilities to do transactions. That is, we make the agents stakeholders by giving them internal money[14]. Use of digital cash to do company accounts empowers the use of this concept as a general replacement for accounting using books and departmental budgets, and is an enabler for verifying and auditing the centralised accounts system by way of signed receipts.Once there, governance receives substantial benefits. Accounts are now much more difficult to change, and much more transparent. It is our opinion that various scandals and failures of governance would have been impossible given these techniques: the mutual funds scandal would have shown a clear audit trail of transactions and thus late timing and otherwise perverted or dropped transactions would have been clearly identified or eliminated completely[15]. The emerging scandal in the USA known as Stockgate would have been impossible as forgery of shares and value for manipulative trading purposes is revealed by signed receipts. Likewise, Barings would still be a force in investment banking if accounts had been organised around easily transparent digital cash with open and irreducible signed receipts that evidence invisible accounts (88888). Enron style scandals would have permitted more direct \"follow the money\" governance lifting the veil on various innovative but economically meaningless swaps.A draft form of this paper credited Todd Boyle as an author, but this was later withdrawn at his request due to wider differences between the views. \u21a9Friar Luca Pacioli, Summa de Arithmetica, Geometria, Proportioni et Proportionalita 1494, Venice. \u21a9Ian Grigg \"The Twilight Zone,\" Financial Cryptography blog 16th April 2005 \u21a9Entanglement is discussed in: Petros Maniatis and Mary Baker, \"Secure History Preservation through Timeline Entanglement,\" Proc. 11th USENIX Security Symposium, August 2002. \u21a9David Chaum, \"Achieving Electronic Privacy,\" Scientific American, v. 267, n. 2 Aug 1992. \u21a9Robert A. Hettinga \"The Book-Entry/Certificate Distinction\" 1995, Cypherpunks \u21a9Gary Howland \"Development of an Open and Flexible Payment System\" 1996, Amsterdam, NL. \u21a9Ian Grigg \"The Ricardian Contract,\" First IEEE International Workshop on Electronic Contracting (WEC) 6th July 2004 \u21a9E.F. Codd, \"A Relational Model of Data for Large Shared Data Banks,\" Comm. ACM 13 (6), June 1970, pp. 377-387. \u21a9Todd Boyle, \"GLT and GLR: conceptual architecture for general ledgers,\" Ledgerism.net, 1997-2005. \u21a9Todd Boyle, \"STR software specification,\" Goals, 1-5. This section adopts that numbering convention. \u21a9Ian Grigg, various design and requirements documents, Systemics, unpublished. \u21a9A substantial part of the programming and design was conducted by Edwin Woudt (first demo, SOX layers, UI) and Jeroen van Gelderen (message passing client architecture). \u21a9Using internal money instead of an accounting system is not a new idea but has only been recently experienced: Ian Grigg, How we raised capital at 0%, saved our creditors from an accounting nightmare, gave our suppliers a discount and got to bed before midnight. Informal essay (rant), 7 Jul 2003. \u21a9James Nesfield and Ian Grigg \"Mutual Funds and Financial Flaws,\" U.S. Senate Finance Subcommittee 27th January, 2004 \u21a9"}
{"prompt": "Truledger in Plain English", "completion": "Truledger is an anonymous, digitally-signed vault and trading system. Like Loom, it allows anyone to issue assets (digital currencies). Unlike Loom, which relies entirely on (very good) obscurity for security, Truledger's digital signatures allow the server and the customer to prove to each other that they agreed at a particular time on their balances. It does this while allowing destruction of transaction history for closed trades. Truledger will initially provide server-based trading. Eventually, it will provide digital checks and bearer certificates. These, however, WILL require permanent storage of transaction history (unless they expire).doc/db.txt gives a terse description of the Truledger server database and protocol. This page attempts to render the protocol in plain English.Truledger uses public key cryptography to sign all messages passed back and forth between its web interface and the Truledger server. Digital signatures are a virtually unforgeable way to ensure that a message was written by its purported author. Truledger uses OpenSSL for its public key cryptography. You probably use OpenSSL every time you visit a secure web site, https://somewhere.com/, as does the web server. I didn't roll my own. Just used the same tried and true technology that secures the web. You can read more about public key cryptography, digital signatures, and hashing here and here.I'm going to use four actors in the scenarios that follow. \"Server\" is the name of the Truledger server. \"Bob\" and \"Sue\" are two customers, who will trade with each other. \"Spammer\" is a third customer, unknown to Bob or Sue.Sue (via email or IM): Hey, Bob. Check out Truledger. Go to Truledger.com, download the client, and install it on your computer. Then create a private key, and send me your ID, and I'll give you some usage tokens so that you can create an account.Bob (via email or IM): Thanks, Sue! I installed the Truledger client and created a private key. Here's my ID.Sue (via her Truledger client): Hey server, Here's a new request number. Give me a transaction number please.\nSigned: SueServer: Here's a new transaction number.\nSigned: ServerSue: Hey server, here's that transaction number you gave me. Please spend 50 usage tokens to Bob's ID, with a message of \"Hey Bob. Welcome to Truledger!\" I'm paying 2 usage tokens as a transaction fee, which I'll get back when Bob accepts the spend. My balance after this transaction will be 1025 usage tokens. My outbox hash after this transaction will be X.\nSigned: SueServer: I processed your spend of 50 usage tokens to Bob's ID. I agree that the transaction fee at the time of this transaction is 2 usage tokens, and that your balance after this transaction is 1025 usage tokens. I agree with you on your outbox hash.\nSigned: ServerSue (via email or IM): OK, Bob. I've given you 50 usage tokens. You should now be able to create an account at Truledger.com. Send me a message via Truledger when you've registered.Bob (via his Truledger client): Hello server. Here's my ID and my public key. What's your ID and public key?\nSigned: BobServer: Here's my ID and public key.\nSigned: ServerBob: Here's my ID and my public key, please create an account for me.\nSigned: BobServer: I've registered your ID and public key. Somebody gave you enough tokens to register. Welcome to Truledger.\nSigned: ServerIn order to sign a message, you need to have a private key. In order to verify the signature on a message, you need to have the corresponding public key. Truledger identifies customers by the hash of their public key, their ID. The ID is a 40-character string of numbers and the letters A to F, the hexadecimal representation of a 160-bit number. You identify your account to the Truledger client with a passphrase, which is used to encrypt your private key on your disk. You'll only need to copy and paste your ID when you want to tell a trading partner how to send you money for the first time, or to seed your account with usage tokens, as Sue did for Bob.Usage tokens are an idea from Patrick Chkoreff's Loom system. They are a way to charge for the server's resources. You have to buy storage for your account balances, and lease temporary storage for transactions. Usage tokens are the \"currency\" used to do this. Truledger also supports fees in other asset types, for server management that wants to make more than the sale of usage tokens. Truledger uses the file system as a database. One file in the Truledger database costs one usage token. Files vary in size, but are usually about 8K, mostly signatures.Note that Bob had to send his public key to the server twice, once when he requested the server's public key, and again when he registered. Every message going to and from Truledger is digitally signed. It's only possible to verify a digital signature if you know the public key of the signer. A new customer's public key isn't in the database until after he's registered, so the first two messages, in which the new customer gets the server's public key, so that he can verify the server's signatures, and the registration request, both need to include the customers's public key, so that the signatures on those two messages can themselves be verified. After registration is complete, subsequent messages need to carry only the ID; the public key can then be looked up in the database.Actual messages sent (with the signature that goes with each parenthesized item omitted):Bob: Hello server. Here's my ID and a new request number. What's in my inbox?\nSigned: BobServer: Your inbox contains a 50 usage token spend from Sue with a message of \"Hey Bob. Welcome to Truledger!\" It also contains a 10 usage token charge from the server with a message of \"Registration Fee\". Here are two transaction numbers you can use to accept these spends and do a spend yourself.\nSigned: ServerBob: Here's my ID and the first of the transaction numbers you gave me. Accept the spend from Sue with a message of, \"Thanks, Sue. I'm excited about Truledger!\" Accept the server charge. My balance after this transaction will be 39 usage tokens.\nSigned: BobServer: I've processed the spend from Sue and the server charge. I agree that your balance after this transaction is 39 usage tokens.\nSigned: ServerOne possible attack on an electronic server can be for someone to replay an intercepted message. Unless the protocol protects against that, this can cause problems. Except for the serverid request, the registration request, and a request for a customer's last request number, every information request must be accompanied by a request number that is larger than the customer's last used request number, and every transaction must be accompanied by a transaction number that is given out by the server. The server maintains a counter, which it increments each time someone asks for a transaction number. This makes requests that reveal information or initiate transactions impossible to replay without a customer's passphrase and private key. In the Truledger world, your passphrase and your private key are your identity. Guard them well.Another possible replay attack is to intercept a message for one server and send it to another. Customers could protect against this by having different IDs, hence different public/private key pairs, for different servers. But it will be very convenient to use the same ID. Your friends will recognize you, and you'll have only one passphrase to remember. So the server's ID is included in almost every request. Requests meant for another server will not work.You're probably wondering why Bob's balance after the transaction is 39, instead of 40, usage tokens. He got 50 usage tokens from Sue, and paid the server 10 usage tokens for his registration fee. The additional usage token is the price of the new file used to store the usage token balance. Storage costs usage tokens. Loom charges 1 usage token for each 16 bytes of storage. I considered charging per byte, but decided that charging per file was easier to handle, though not quite as fair. It only makes sense if message sizes are limited, of course. If you were allowed megabyte messages, then Truledger would have to charge per byte, or per kilobyte.Actual messages sent:Sue: Hello server. Here's my ID and a new request number. What's in my inbox?\nSigned: SueServer: Your inbox contains an acceptance from Bob of your 50 usage token spend with a message of, \"Thanks Sue. I'm excited about Truledger!\" Here are two transaction numbers you can use to close that transaction and do a new spend.\nSigned: ServerSue: Here's my ID and the first of the transaction numbers you gave me. Clear the spend to Bob. My balance after this transaction will be 1027 usage tokens. My outbox hash after this transaction will be Y.\nSigned: SueServer: I've cleared the spend to Bob (and refunded the usage tokens that were leasing the outbox and inbox locations). I agree that your balance after this transaction is 1027 usage tokens. And I agree that your outbox hash after this transaction is Y.\nSigned: ServerThere are three main parts of a Truledger account: the balances, the outbox, and the inbox. Value is stored in all three places. When you do a spend, your balance for the spent asset is debited, and the spend request is stored in your outbox and in the recipients inbox. You are charged two usage tokens to lease the new outbox and inbox files. When the recipient accepts the spend, his balance for the spent asset is credited, the spend notice is removed from his inbox, and a spend acceptance notice is added to your inbox. When you acknowledge his acceptance of the spend, the spend request is removed from your outbox, the acceptance notice is removed from your inbox, and the two usage tokens you paid to lease those files is credited to your balance. This three step process is necessary, because the server can't modify your balances without your signed permission, and it can't modify the recipient's balances without his signed permission.You may be wondering what an \"outbox hash\" is. Your balances plus your outbox represent the part of your account that you and the server have agreed upon. Your inbox is changed without your knowledge, but the server needs your signed permission to change your outbox (do a spend) or your balances. Since your outbox might get large, instead of sending the entire contents back and forth every time you do a spend, or acknowledge the acceptance (or rejection) of a spend by a recipient, you compute a hash of your outbox, and send that instead, and the server responds with an acknowledgement of that outbox hash (thank you to Patrick Chkoreff for this idea).Actual messages sent:Spammer (likely via an automated client): Hey server. Here's a new request number. Give me a transaction number please.\nSigned: SpammerServer: Here's a new transaction number.\nSigned: ServerSpammer: Hey server. Here's that transaction number you gave me. Please spend 0 usage tokens to Bob's ID, with a message of, \"Go all night. Visit BuyViagra.com.\" I'm paying 2 usage tokens as a transaction fee, which I'll get back when Bob accepts the spend. My balance after this transaction will be 2425 usage tokens. My outbox hash after this transaction will be Z.\nSigned: SpammerServer: I processed your spend of 0 usage tokens to Bob's ID. I agree that the transaction fee at the time of this transaction is 2 usage tokens, and that your balance after this transaction is 2425 usage tokens. I agree with you on your outbox hash.\nSigned: ServerBob: Hello server. Here's my ID and a new request number. What's in my inbox?\nSigned: BobServer: Your inbox contains a 0 usage token spend from Spammer with a message of, \"Go all night. Visit BuyViagra.com.\" Here are two transaction numbers you can use to accept these spends and do a spend yourself.\nSigned: ServerBob: Here's my ID and the first of the transaction numbers you gave me. Reject the spend from Spammer with a message of, \"Thanks for the tokens\", and give me the two usage tokens he paid to send that spam. My balance after this transaction will be 41 usage tokens.\nSigned: BobServer: I've rejected the spend from Spammer. I agree that your balance after this transaction is 41 usage tokens.\nSigned: ServerSpends can be rejected. The amount spent goes back to the spender, but the recipient pockets the transaction fee. Zero spends use Truledger as a simple messaging service. But not a free one, unless the recipient wants the message. IMHO, spam exists largely because it is nearly free to send email. In a system where each spam message costs 2 usage tokens, cheap but not free, I doubt it will be much of a problem. Time will tell.Actual messages sent:Bob: Hey server. Here's a new request number. Give me a transaction number please.\nSigned: BobServer: Here's a new transaction number.\nSigned: ServerBob: Hey server. Here's that transaction number you gave me. Please register a new asset named \"Bob GoldGrams\". It has a scale of 7 and a precision of 3. Its ID is <bobggid>. My balance after this transaction will be 39 usage tokens and -1 <bobggid>.Server: I have registered the new \"Bob GoldGrams\" asset. I agree that your balance after this transaction is 39 usage tokens and -1 <bobggid>.Like Loom, Truledger allows customers to create their own asset types. Then, if they can convince them to do so, other customers can trade in that asset type. The ID of a Truledger asset is the sha1 hash of the creator's ID, its scale, its precision, and its name. But the message the customer signs to create the asset, and that the server signs to acknowledge creation, also contains the serverid. This allows the asset to be registered at multiple servers, with the same ID, but makes each particular registration specific to a specific server. Hence, it makes sense for an asset issuer to provide a service of transferring his holdings of his asset between servers at which he's registered; it's self-evident that Bob GoldGrams at Server A are the same asset as Bob GoldGrams at server B.I plan to support transfer of asset issuance, but I haven't figured out the intricacies yet.Like Loom, all amounts in Truledger are stored as integers. The scale value controls where the decimal point goes in the real-world representation of that value: move it left by scale places. The precision controls the minimum number of decimal places that are printed. So with a scale of 7 and a precision of 3, the value 12000000 will be printed by Truledger clients as 1.200, and the minimum value for Bob's new currency is 0.0000001, one ten-millionth of a gram of gold, or $0.000003 at $30/gram: 3 ten-thousandths of a cent. Hello micropayments.Also like Loom, the sum of all the amounts, in accounts and outboxes, for one asset type is -1. There is one negative balance, owned by the issuer, who can spend as much as he wants, and a bunch of positive balances, and outbox entries. A -1 balance in the issuer's account means there are no outstanding balances or outbox entries in that asset, so that's where Bob's Bob GoldGrams balance begins. Users of an asset have to trust the issuer when he tells them, outside of Truledger, that his asset is backed by something of real value, and that he'll never issue more of the virtual asset than he has in the backing commodity. Well, unless he wants to act like a country, and issue fiat currency that is backed by his Full Faith and Credit and nothing else. Good luck getting people to go for that.Actual messages sent:Bob: Hey server. Here's a new request number. Give me a transaction number please.\nSigned: BobServer: Here's a new transaction number.\nSigned: ServerBob: Hey server. Here's that transaction number you gave me. Make a zero spend to myself. My balance after the transaction will be 38 usage tokens, -311.0347681 Bob GoldGrams in my default sub-account, and 311.034768 Bob GoldGrams in my \"Gun Safe\" sub-account.Server: I did that spend. I agree with you that after the transaction, your balance is 38 usages tokens, -311.0347681 Bob GoldGrams in your default account, and 311.034768 Bob GoldGrams in your \"Gun Safe\" sub-account.Bob: Hey server. Here's a new request number. Give me a transaction number please.\nSigned: BobServer: Here's a new transaction number.\nSigned: ServerBob: Hey server. Here's that transaction number you gave me. Please spend 2.4056304 Bob GoldGrams to Sue, with a message of, \"Well, I finally issued my new currency, backed by Krugerands in my gun safe. I'm giving you a gram in thanks for turning me on to Truledger, and 1.4056304 grams for 36 Capulin Coffee Units, which you said you'd sell me, so I can buy more of Daniel Fourwinds' fine coffee that we relished at your house the other day. I used a gold price of $796.60/ounce, Kitco's bid price this morning.\" My transaction fee will be 2 usage tokens. My balance after this transaction will be 36 usage tokens, and 309.6291376 Bob GoldGrams in my \"Gun Safe\" sub-account. My outbox hash after this transaction will be A.\nSigned: BobServer: I have done your spend of 2.4056304 Bob GoldGrams to Sue, with your message, and a transaction fee of 2 usage tokens. I agree that your balance after this transaction is 36 usage tokens, and 309.6291376 Bob GoldGrams in your \"Gun Safe\" sub-account. I agree on the outbox hash.\nSigned: ServerTruledger supports splitting up your balances into multiple \"sub-accounts\". Much like a conventional server gives you a checking account and a savings account, you can use these sub-accounts to help manage your assets. You can have as many of them as you wish, limited only by having usage tokens to pay for the files.Bob has decided to keep track of his Bob GoldGrams assets with a \"Gun Safe\" sub-account, with a balance recording how many grams of the gold in his safe have not yet been put into circulation. He seeds it with 10 ounces of gold, the part of his holdings that he's willing to sell. Then he spends some of it to Sue, asking for enough Capulin Coffee Units for two pounds of Capulin Coffee ($17.95 per pound, shipped).Note that you don't have to mention all of your balances with every spend. You only mention the balances that change. Also notice that there's no transaction fee for spends to yourself. Moving assets between your sub-accounts costs only tokens for new files. No need for the outbox and inbox stuff.Actual messages sent:To be doneTo be doneCopyright \u00a9 2008 Bill St. Clair, All Rights Reserved."}
{"prompt": "A Cypherpunk's Manifesto", "completion": "Privacy is necessary for an open society in the electronic age. Privacy is not secrecy. A private matter is something one doesn't want the whole world to know, but a secret matter is something one doesn't want anybody to know. Privacy is the power to selectively reveal oneself to the world.If two parties have some sort of dealings, then each has a memory of their interaction. Each party can speak about their own memory of this; how could anyone prevent it? One could pass laws against it, but the freedom of speech, even more than privacy, is fundamental to an open society; we seek not to restrict any speech at all. If many parties speak together in the same forum, each can speak to all the others and aggregate together knowledge about individuals and other parties. The power of electronic communications has enabled such group speech, and it will not go away merely because we might want it to.Since we desire privacy, we must ensure that each party to a transaction have knowledge only of that which is directly necessary for that transaction. Since any information can be spoken of, we must ensure that we reveal as little as possible. In most cases personal identity is not salient. When I purchase a magazine at a store and hand cash to the clerk, there is no need to know who I am. When I ask my electronic mail provider to send and receive messages, my provider need not know to whom I am speaking or what I am saying or what others are saying to me; my provider only need know how to get the message there and how much I owe them in fees. When my identity is revealed by the underlying mechanism of the transaction, I have no privacy. I cannot here selectively reveal myself; I must _always_ reveal myself.Therefore, privacy in an open society requires anonymous transaction systems. Until now, cash has been the primary such system. An anonymous transaction system is not a secret transaction system. An anonymous system empowers individuals to reveal their identity when desired and only when desired; this is the essence of privacy.Privacy in an open society also requires cryptography. If I say something, I want it heard only by those for whom I intend it. If the content of my speech is available to the world, I have no privacy. To encrypt is to indicate the desire for privacy, and to encrypt with weak cryptography is to indicate not too much desire for privacy. Furthermore, to reveal one's identity with assurance when the default is anonymity requires the cryptographic signature.We cannot expect governments, corporations, or other large, faceless organizations to grant us privacy out of their beneficence. It is to their advantage to speak of us, and we should expect that they will speak. To try to prevent their speech is to fight against the realities of information. Information does not just want to be free, it longs to be free. Information expands to fill the available storage space. Information is Rumor's younger, stronger cousin; Information is fleeter of foot, has more eyes, knows more, and understands less than Rumor.We must defend our own privacy if we expect to have any. We must come together and create systems which allow anonymous transactions to take place. People have been defending their own privacy for centuries with whispers, darkness, envelopes, closed doors, secret handshakes, and couriers. The technologies of the past did not allow for strong privacy, but electronic technologies do.We the Cypherpunks are dedicated to building anonymous systems. We are defending our privacy with cryptography, with anonymous mail forwarding systems, with digital signatures, and with electronic money.Cypherpunks write code. We know that someone has to write software to defend privacy, and since we can't get privacy unless we all do, we're going to write it. We publish our code so that our fellow Cypherpunks may practice and play with it. Our code is free for all to use, worldwide. We don't much care if you don't approve of the software we write. We know that software can't be destroyed and that a widely dispersed system can't be shut down.Cypherpunks deplore regulations on cryptography, for encryption is fundamentally a private act. The act of encryption, in fact, removes information from the public realm. Even laws against cryptography reach only so far as a nation's border and the arm of its violence. Cryptography will ineluctably spread over the whole globe, and with it the anonymous transactions systems that it makes possible.For privacy to be widespread it must be part of a social contract. People must come and together deploy these systems for the common good. Privacy only extends so far as the cooperation of one's fellows in society. We the Cypherpunks seek your questions and your concerns and hope we may engage you so that we do not deceive ourselves. We will not, however, be moved out of our course because some may disagree with our goals.The Cypherpunks are actively engaged in making the networks safer for privacy. Let us proceed together apace.Onward.Eric Hughes"}
{"prompt": "The Right to Read: A Dystopian Short Story", "completion": "From The Road to Tycho, a collection of articles about the antecedents of the Lunarian Revolution, published in Luna City in 2096.For Dan Halbert, the road to Tycho began in college\u2014when Lissa Lenz asked to borrow his computer. Hers had broken down, and unless she could borrow another, she would fail her midterm project. There was no one she dared ask, except Dan.This put Dan in a dilemma. He had to help her\u2014but if he lent her his computer, she might read his books. Aside from the fact that you could go to prison for many years for letting someone else read your books, the very idea shocked him at first. Like everyone, he had been taught since elementary school that sharing books was nasty and wrong\u2014something that only pirates would do.And there wasn't much chance that the SPA\u2014the Software Protection Authority\u2014would fail to catch him. In his software class, Dan had learned that each book had a copyright monitor that reported when and where it was read, and by whom, to Central Licensing. (They used this information to catch reading pirates, but also to sell personal interest profiles to retailers.) The next time his computer was networked, Central Licensing would find out. He, as computer owner, would receive the harshest punishment\u2014for not taking pains to prevent the crime.Of course, Lissa did not necessarily intend to read his books. She might want the computer only to write her midterm. But Dan knew she came from a middle-class family and could hardly afford the tuition, let alone her reading fees. Reading his books might be the only way she could graduate. He understood this situation; he himself had had to borrow to pay for all the research papers he read. (Ten percent of those fees went to the researchers who wrote the papers; since Dan aimed for an academic career, he could hope that his own research papers, if frequently referenced, would bring in enough to repay this loan.)Later on, Dan would learn there was a time when anyone could go to the library and read journal articles, and even books, without having to pay. There were independent scholars who read thousands of pages without government library grants. But in the 1990s, both commercial and nonprofit journal publishers had begun charging fees for access. By 2047, libraries offering free public access to scholarly literature were a dim memory.There were ways, of course, to get around the SPA and Central Licensing. They were themselves illegal. Dan had had a classmate in software, Frank Martucci, who had obtained an illicit debugging tool, and used it to skip over the copyright monitor code when reading books. But he had told too many friends about it, and one of them turned him in to the SPA for a reward (students deep in debt were easily tempted into betrayal). In 2047, Frank was in prison, not for pirate reading, but for possessing a debugger.Dan would later learn that there was a time when anyone could have debugging tools. There were even free debugging tools available on CD or downloadable over the net. But ordinary users started using them to bypass copyright monitors, and eventually a judge ruled that this had become their principal use in actual practice. This meant they were illegal; the debuggers' developers were sent to prison.Programmers still needed debugging tools, of course, but debugger vendors in 2047 distributed numbered copies only, and only to officially licensed and bonded programmers. The debugger Dan used in software class was kept behind a special firewall so that it could be used only for class exercises.It was also possible to bypass the copyright monitors by installing a modified system kernel. Dan would eventually find out about the free kernels, even entire free operating systems, that had existed around the turn of the century. But not only were they illegal, like debuggers\u2014you could not install one if you had one, without knowing your computer's root password. And neither the FBI nor Microsoft Support would tell you that.Dan concluded that he couldn't simply lend Lissa his computer. But he couldn't refuse to help her, because he loved her. Every chance to speak with her filled him with delight. And that she chose him to ask for help, that could mean she loved him too.Dan resolved the dilemma by doing something even more unthinkable\u2014he lent her the computer, and told her his password. This way, if Lissa read his books, Central Licensing would think he was reading them. It was still a crime, but the SPA would not automatically find out about it. They would only find out if Lissa reported him.Of course, if the school ever found out that he had given Lissa his own password, it would be curtains for both of them as students, regardless of what she had used it for. School policy was that any interference with their means of monitoring students' computer use was grounds for disciplinary action. It didn't matter whether you did anything harmful\u2014the offense was making it hard for the administrators to check on you. They assumed this meant you were doing something else forbidden, and they did not need to know what it was.Students were not usually expelled for this\u2014not directly. Instead they were banned from the school computer systems, and would inevitably fail all their classes.Later, Dan would learn that this kind of university policy started only in the 1980s, when university students in large numbers began using computers. Previously, universities maintained a different approach to student discipline; they punished activities that were harmful, not those that merely raised suspicion.Lissa did not report Dan to the SPA. His decision to help her led to their marriage, and also led them to question what they had been taught about piracy as children. The couple began reading about the history of copyright, about the Soviet Union and its restrictions on copying, and even the original United States Constitution. They moved to Luna, where they found others who had likewise gravitated away from the long arm of the SPA. When the Tycho Uprising began in 2062, the universal right to read soon became one of its central aims.This note has been updated several times since the first publication of the story.The right to read is a battle being fought today. Although it may take 50 years for our present way of life to fade into obscurity, most of the specific laws and practices described above have already been proposed; many have been enacted into law in the US and elsewhere. In the US, the 1998 Digital Millennium Copyright Act (DMCA) established the legal basis to restrict the reading and lending of computerized books (and other works as well). The European Union imposed similar restrictions in a 2001 copyright directive. In France, under the DADVSI law adopted in 2006, mere possession of a copy of DeCSS, the free program to decrypt video on a DVD, is a crime.In 2001, Disney-funded Senator Hollings proposed a bill called the SSSCA that would require every new computer to have mandatory copy-restriction facilities that the user cannot bypass. Following the Clipper chip and similar US government key-escrow proposals, this shows a long-term trend: computer systems are increasingly set up to give absentees with clout control over the people actually using the computer system. The SSSCA was later renamed to the unpronounceable CBDTPA, which was glossed as the \"Consume But Don't Try Programming Act.\"The Republicans took control of the US senate shortly thereafter. They are less tied to Hollywood than the Democrats, so they did not press these proposals. Now that the Democrats are back in control, the danger is once again higher.In 2001 the US began attempting to use the proposed Free Trade Area of the Americas (FTAA) treaty to impose the same rules on all the countries in the Western Hemisphere. The FTAA is one of the so-called free trade treaties, which are actually designed to give business increased power over democratic governments; imposing laws like the DMCA is typical of this spirit. The FTAA was effectively killed by Lula, President of Brazil, who rejected the DMCA requirement and others.Since then, the US has imposed similar requirements on countries such as Australia and Mexico through bilateral \"free trade\" agreements, and on countries such as Costa Rica through another treaty, CAFTA. Ecuador's President Correa refused to sign a \"free trade\" agreement with the US, but I've heard Ecuador had adopted something like the DMCA in 2003.One of the ideas in the story was not proposed in reality until 2002. This is the idea that the FBI and Microsoft will keep the root passwords for your personal computers, and not let you have them.The proponents of this scheme have given it names such as \"trusted computing\" and \"Palladium.\" We call it treacherous computing\" because the effect is to make your computer obey companies even to the extent of disobeying and defying you. This was implemented in 2007 as part of Windows Vista; we expect Apple to do something similar. In this scheme, it is the manufacturer that keeps the secret code, but the FBI would have little trouble getting it.What Microsoft keeps is not exactly a password in the traditional sense; no person ever types it on a terminal. Rather, it is a signature and encryption key that corresponds to a second key stored in your computer. This enables Microsoft, and potentially any web sites that cooperate with Microsoft, the ultimate control over what the user can do on his own computer.Vista also gives Microsoft additional powers; for instance, Microsoft can forcibly install upgrades, and it can order all machines running Vista to refuse to run a certain device driver. The main purpose of Vista's many restrictions is to impose DRM (Digital Restrictions Management) that users can't overcome. The threat of DRM is why we have established the Defective by Design campaign.When this story was first written, the SPA was threatening small Internet service providers, demanding they permit the SPA to monitor all users. Most ISPs surrendered when threatened, because they cannot afford to fight back in court. One ISP, Community ConneXion in Oakland, California, refused the demand and was actually sued. The SPA later dropped the suit, but obtained the DMCA, which gave them the power they sought.The SPA, which actually stands for Software Publishers Association, has been replaced in its police-like role by the Business Software Alliance. The BSA is not, today, an official police force; unofficially, it acts like one. Using methods reminiscent of the erstwhile Soviet Union, it invites people to inform on their coworkers and friends. A BSA terror campaign in Argentina in 2001 made slightly veiled threats that people sharing software would be raped.The university security policies described above are not imaginary. For example, a computer at one Chicago-area university displayed this message upon login:This is an interesting approach to the Fourth Amendment: pressure most everyone to agree, in advance, to waive their rights under it.The battle for the right to read is already in progress. The enemy is organized, while we are not, so it is going against us. Here are articles about bad things that have happened since the original publication of this article.If we want to stop the bad news and create some good news, we need to organize and fight. The FSF's Defective by Design campaign has made a start \u2014 subscribe to the campaign's mailing list to lend a hand. And join the FSF to help fund our work.The Free Software Foundation is the principal organizational sponsor of the GNU Operating System. Their mission is to preserve, protect and promote the freedom to use, study, copy, modify, and redistribute computer software, and to defend the rights of Free Software users.Copyright \u00a9 1996, 2002, 2007, 2009, 2010 Richard Stallman\nThis essay was written in 1996 and was published in Communications of the ACM, vol. 40, n. 2, February 1997."}
{"prompt": "Areopagitica;\nA Speech of Mr. John Milton\nFor the Liberty of Unlicens'd Printing,\nto the Parliament of England", "completion": "This is true liberty, when free-born men,\nHaving to advise the public, may speak free,\nWhich he who can, and will, deserves high praise;\nWho neither can, nor will, may hold his peace:\nWhat can be juster in a state than this?They, who to states and governors of the Commonwealth direct their speech, High Court of Parliament, or, wanting such accesse in a private condition, write that which they foresee may advance the publick good; I suppose them, as at the beginning of no mean endeavour, not a little alter'd and mov'd inwardly in their mindes: some with doubt of what will be the successe, others with fear of what will be the censure; some with hope, others with confidence of what they have to speake. And me perhaps each of these dispositions, as the subject was whereon I enter'd, may have at other times variously affected; and likely might in these foremost expressions now also disclose which of them sway'd most, but that the very attempt of this address thus made, and the thought of whom it hath recourse to, hath got the power within me to a passion, farre more welcome than incidental to a preface.Which though I stay not to confesse ere any aske, I shall be blamelesse, if it be no other than the joy and gratulation which it brings to all who wish and promote their country's liberty; whereof this whole discourse proposed will be a certain testimony, if not a trophy. For this is not the liberty which we can hope, that no grievance ever should arise in the Commonwealth--that let no man in this world expect; but when complaints are freely heard, deeply considered and speedily reformed, then is the utmost bound of civil liberty attained that wise men look for. To which if I now manifest by the very sound of this which I shall utter, that we are already in good part arrived, and yet from such a steep disadvantage of tyranny and superstition grounded into our principles as was beyond the manhood of a Roman recovery, it will be attributed first, as is most due, to the strong assistance of God our deliverer, next to your faithful guidance and undaunted wisdom, Lords and Commons of England. Neither is it in God's esteem the diminution of his glory, when honourable things are spoken of good men and worthy magistrates; which if I now first should begin to do, after so fair a progress of your laudable deeds, and such a long obligement upon the whole realm to your indefatigable virtues, I might be justly reckoned among the tardiest, and the unwillingest of them that praise ye.Nevertheless there being three principal things, without which all praising is but courtship and flattery: First, when that only is praised which is solidly worth praise: next, when greatest likelihoods are brought that such things are truly and really in those persons to whom they are ascribed: the other, when he who praises, by showing that such his actual persuasion is of whom he writes, can demonstrate that he flatters not; the former two of these I have heretofore endeavour'd, rescuing the employment from him who went about to impair your merits with a trivial and malignant encomium; the latter as belonging chiefly to mine own acquittal, that whom I so extolled I did not flatter, hath been reserved opportunely to this occasion.For he who freely magnifies what hath been nobly done, and fears not to declare as freely what might be done better, gives ye the best covenant of his fidelity; and that his loyalest affection and his hope waits on your proceedings. His highest praising is not flattery, and his plainest advice is a kind of praising. For though I should affirm and hold by argument, that it would fare better with truth, with learning and the Commonwealth, if one of your published Orders, which I should name, were called in; yet at the same time it could not but much redound to the lustre of your mild and equal government, whenas private persons are hereby animated to think ye better pleased with public advice, than other statists have been delighted heretofore with public flattery. And men will then see what difference there is between the magnanimity of a triennial Parliament, and that jealous haughtiness of prelates and cabin counsellors that usurped of late, whenas they shall observe ye in the midst of your victories and successes more gently brooking written exceptions against a voted Order than other courts, which had produced nothing worth memory but the weak ostentation of wealth, would have endured the least signified dislike at any sudden proclamation.If I should thus far presume upon the meek demeanour of your civil and gentle greatness, Lords and Commons, as what your published Order hath directly said, that to gainsay, I might defend myself with ease, if any should accuse me of being new or insolent, did they but know how much better I find ye esteem it to imitate the old and elegant humanity of Greece, than the barbaric pride of a Hunnish and Norwegian stateliness. And out of those ages, to whose polite wisdom and letters we owe that we are not yet Goths and Jutlanders, I could name him who from his private house wrote that discourse to the Parliament of Athens, that persuades them to change the form of democracy which was then established. Such honour was done in those days to men who professed the study of wisdom and eloquence, not only in their own country, but in other lands, that cities and signiories heard them gladly, and with great respect, if they had aught in public to admonish the state. Thus did Dion Prusaeus, a stranger and a private orator, counsel the Rhodians against a former edict; and I abound with other like examples, which to set here would be superfluous.But if from the industry of a life wholly dedicated to studious labours, and those natural endowments haply not the worst for two and fifty degrees of northern latitude, so much must be derogated, as to count me not equal to any of those who had this privilege, I would obtain to be thought not so inferior, as yourselves are superior to the most of them who received their counsel: and how far you excel them, be assured, Lords and Commons, there can no greater testimony appear, than when your prudent spirit acknowledges and obeys the voice of reason from what quarter soever it be heard speaking; and renders ye as willing to repeal any Act of your own setting forth, as any set forth by your predecessors.If ye be thus resolved, as it were injury to think ye were not, I know not what should withhold me from presenting ye with a fit instance wherein to show both that love of truth which ye eminently profess, and that uprightness of your judgment which is not wont to be partial to yourselves; by judging over again that Order which ye have ordained to regulate printing:--that no book, pamphlet, or paper shall be henceforth printed, unless the same be first approved and licensed by such, or at least one of such, as shall be thereto appointed. For that part which preserves justly every man's copy to himself, or provides for the poor, I touch not, only wish they be not made pretences to abuse and persecute honest and painful men, who offend not in either of these particulars. But that other clause of licensing books, which we thought had died with his brother quadragesimal and matrimonial when the prelates expired, I shall now attend with such a homily, as shall lay before ye, first the inventors of it to be those whom ye will be loath to own; next what is to be thought in general of reading, whatever sort the books be; and that this Order avails nothing to the suppressing of scandalous, seditious, and libellous books, which were mainly intended to be suppressed. Last, that it will be primely to the discouragement of all learning, and the stop of truth, not only by disexercising and blunting our abilities in what we know already, but by hindering and cropping the discovery that might be yet further made both in religious and civil wisdom.I deny not, but that it is of greatest concernment in the Church and Commonwealth, to have a vigilant eye how books demean themselves as well as men; and thereafter to confine, imprison, and do sharpest justice on them as malefactors. For books are not absolutely dead things, but do contain a potency of life in them to be as active as that soul was whose progeny they are; nay, they do preserve as in a vial the purest efficacy and extraction of that living intellect that bred them. I know they are as lively, and as vigorously productive, as those fabulous dragon's teeth; and being sown up and down, may chance to spring up armed men. And yet, on the other hand, unless wariness be used, as good almost kill a man as kill a good book. Who kills a man kills a reasonable creature, God's image; but he who destroys a good book, kills reason itself, kills the image of God, as it were in the eye. Many a man lives a burden to the earth; but a good book is the precious life-blood of a master spirit, embalmed and treasured up on purpose to a life beyond life. 'Tis true, no age can restore a life, whereof perhaps there is no great loss; and revolutions of ages do not oft recover the loss of a rejected truth, for the want of which whole nations fare the worse.We should be wary therefore what persecution we raise against the living labours of public men, how we spill that seasoned life of man, preserved and stored up in books; since we see a kind of homicide may be thus committed, sometimes a martyrdom, and if it extend to the whole impression, a kind of massacre; whereof the execution ends not in the slaying of an elemental life, but strikes at that ethereal and fifth essence, the breath of reason itself, slays an immortality rather than a life. But lest I should be condemned of introducing license, while I oppose licensing, I refuse not the pains to be so much historical, as will serve to show what hath been done by ancient and famous commonwealths against this disorder, till the very time that this project of licensing crept out of the Inquisition, was catched up by our prelates, and hath caught some of our presbyters.In Athens, where books and wits were ever busier than in any other part of Greece, I find but only two sorts of writings which the magistrate cared to take notice of; those either blasphemous and atheistical, or libellous. Thus the books of Protagoras were by the judges of Areopagus commanded to be burnt, and himself banished the territory for a discourse begun with his confessing not to know WHETHER THERE WERE GODS, OR WHETHER NOT. And against defaming, it was decreed that none should be traduced by name, as was the manner of Vetus Comoedia, whereby we may guess how they censured libelling. And this course was quick enough, as Cicero writes, to quell both the desperate wits of other atheists, and the open way of defaming, as the event showed. Of other sects and opinions, though tending to voluptuousness, and the denying of divine Providence, they took no heed.Therefore we do not read that either Epicurus, or that libertine school of Cyrene, or what the Cynic impudence uttered, was ever questioned by the laws. Neither is it recorded that the writings of those old comedians were suppressed, though the acting of them were forbid; and that Plato commended the reading of Aristophanes, the loosest of them all, to his royal scholar Dionysius, is commonly known, and may be excused, if holy Chrysostom, as is reported, nightly studied so much the same author and had the art to cleanse a scurrilous vehemence into the style of a rousing sermon.That other leading city of Greece, Lacedaemon, considering that Lycurgus their lawgiver was so addicted to elegant learning, as to have been the first that brought out of Ionia the scattered works of Homer, and sent the poet Thales from Crete to prepare and mollify the Spartan surliness with his smooth songs and odes, the better to plant among them law and civility, it is to be wondered how museless and unbookish they were, minding nought but the feats of war. There needed no licensing of books among them, for they disliked all but their own laconic apophthegms, and took a slight occasion to chase Archilochus out of their city, perhaps for composing in a higher strain than their own soldierly ballads and roundels could reach to. Or if it were for his broad verses, they were not therein so cautious but they were as dissolute in their promiscuous conversing; whence Euripides affirms in Andromache, that their women were all unchaste. Thus much may give us light after what sort of books were prohibited among the Greeks.The Romans also, for many ages trained up only to a military roughness resembling most the Lacedaemonian guise, knew of learning little but what their twelve Tables, and the Pontific College with their augurs and flamens taught them in religion and law; so unacquainted with other learning, that when Carneades and Critolaus, with the Stoic Diogenes, coming ambassadors to Rome, took thereby occasion to give the city a taste of their philosophy, they were suspected for seducers by no less a man than Cato the Censor, who moved it in the Senate to dismiss them speedily, and to banish all such Attic babblers out of Italy. But Scipio and others of the noblest senators withstood him and his old Sabine austerity; honoured and admired the men; and the censor himself at last, in his old age, fell to the study of that whereof before he was so scrupulous. And yet at the same time Naevius and Plautus, the first Latin comedians, had filled the city with all the borrowed scenes of Menander and Philemon. Then began to be considered there also what was to be done to libellous books and authors; for Naevius was quickly cast into prison for his unbridled pen, and released by the tribunes upon his recantation; we read also that libels were burnt, and the makers punished by Augustus. The like severity, no doubt, was used, if aught were impiously written against their esteemed gods. Except in these two points, how the world went in books, the magistrate kept no reckoning.And therefore Lucretius without impeachment versifies his Epicurism to Memmius, and had the honour to be set forth the second time by Cicero, so great a father of the Commonwealth; although himself disputes against that opinion in his own writings. Nor was the satirical sharpness or naked plainness of Lucilius, or Catullus, or Flaccus, by any order prohibited. And for matters of state, the story of Titus Livius, though it extolled that part which Pompey held, was not therefore suppressed by Octavius Caesar of the other faction. But that Naso was by him banished in his old age, for the wanton poems of his youth, was but a mere covert of state over some secret cause: and besides, the books were neither banished nor called in. From hence we shall meet with little else but tyranny in the Roman empire, that we may not marvel, if not so often bad as good books were silenced. I shall therefore deem to have been large enough, in producing what among the ancients was punishable to write; save only which, all other arguments were free to treat on.By this time the emperors were become Christians, whose discipline in this point I do not find to have been more severe than what was formerly in practice. The books of those whom they took to be grand heretics were examined, refuted, and condemned in the general Councils; and not till then were prohibited, or burnt, by authority of the emperor. As for the writings of heathen authors, unless they were plain invectives against Christianity, as those of Porphyrius and Proclus, they met with no interdict that can be cited, till about the year 400, in a Carthaginian Council, wherein bishops themselves were forbid to read the books of Gentiles, but heresies they might read: while others long before them, on the contrary, scrupled more the books of heretics than of Gentiles. And that the primitive Councils and bishops were wont only to declare what books were not commendable, passing no further, but leaving it to each one's conscience to read or to lay by, till after the year 800, is observed already by Padre Paolo, the great unmasker of the Trentine Council.After which time the Popes of Rome, engrossing what they pleased of political rule into their own hands, extended their dominion over men's eyes, as they had before over their judgments, burning and prohibiting to be read what they fancied not; yet sparing in their censures, and the books not many which they so dealt with: till Martin V., by his bull, not only prohibited, but was the first that excommunicated the reading of heretical books; for about that time Wickliffe and Huss, growing terrible, were they who first drove the Papal Court to a stricter policy of prohibiting. Which course Leo X. and his successors followed, until the Council of Trent and the Spanish Inquisition engendering together brought forth, or perfected, those Catalogues and expurging Indexes, that rake through the entrails of many an old good author, with a violation worse than any could be offered to his tomb. Nor did they stay in matters heretical, but any subject that was not to their palate, they either condemned in a Prohibition, or had it straight into the new purgatory of an index.To fill up the measure of encroachment, their last invention was to ordain that no book, pamphlet, or paper should be printed (as if St. Peter had bequeathed them the keys of the press also out of Paradise) unless it were approved and licensed under the hands of two or three glutton friars. For example:Let the Chancellor Cini be pleased to see if in this present work be contained aught that may withstand the printing.I have seen this present work, and find nothing athwart the Catholic faith and good manners: in witness whereof I have given, etc.Attending the precedent relation, it is allowed that this present work of Davanzati may be printed.It may be printed, July 15.Sure they have a conceit, if he of the bottomless pit had not long since broke prison, that this quadruple exorcism would bar him down. I fear their next design will be to get into their custody the licensing of that which they say Claudius intended, but went not through with. Vouchsafe to see another of their forms, the Roman stamp:Imprimatur, If it seem good to the reverend Master of the Holy Palace.ImprimaturasdfasdfSometimes five Imprimaturs are seen together dialogue-wise in the piazza of one title-page, complimenting and ducking each to other with their shaven reverences, whether the author, who stands by in perplexity at the foot of his epistle, shall to the press or to the sponge. These are the pretty responsories, these are the dear antiphonies, that so bewitched of late our prelates and their chaplains with the goodly echo they made; and besotted us to the gay imitation of a lordly Imprimatur, one from Lambeth House, another from the west end of Paul's; so apishly Romanizing, that the word of command still was set down in Latin; as if the learned grammatical pen that wrote it would cast no ink without Latin; or perhaps, as they thought, because no vulgar tongue was worthy to express the pure conceit of an Imprimatur, but rather, as I hope, for that our English, the language of men ever famous and foremost in the achievements of liberty, will not easily find servile letters enow to spell such a dictatory presumption English.And thus ye have the inventors and the original of book-licensing ripped up and drawn as lineally as any pedigree. We have it not, that can be heard of, from any ancient state, or polity or church; nor by any statute left us by our ancestors elder or later; nor from the modern custom of any reformed city or church abroad, but from the most anti-christian council and the most tyrannous inquisition that ever inquired. Till then books were ever as freely admitted into the world as any other birth; the issue of the brain was no more stifled than the issue of the womb: no envious Juno sat cross-legged over the nativity of any man's intellectual offspring; but if it proved a monster, who denies, but that it was justly burnt, or sunk into the sea? But that a book, in worse condition than a peccant soul, should be to stand before a jury ere it be born to the world, and undergo yet in darkness the judgment of Radamanth and his colleagues, ere it can pass the ferry backward into light, was never heard before, till that mysterious iniquity, provoked and troubled at the first entrance of Reformation, sought out new limbos and new hells wherein they might include our books also within the number of their damned. And this was the rare morsel so officiously snatched up, and so ill-favouredly imitated by our inquisiturient bishops, and the attendant minorites their chaplains. That ye like not now these most certain authors of this licensing order, and that all sinister intention was far distant from your thoughts, when ye were importuned the passing it, all men who know the integrity of your actions, and how ye honour truth, will clear ye readily.But some will say, what though the inventors were bad, the thing for all that may be good? It may so; yet if that thing be no such deep invention, but obvious, and easy for any man to light on, and yet best and wisest commonwealths through all ages and occasions have forborne to use it, and falsest seducers and oppressors of men were the first who took it up, and to no other purpose but to obstruct and hinder the first approach of Reformation; I am of those who believe it will be a harder alchemy than Lullius ever knew, to sublimate any good use out of such an invention. Yet this only is what I request to gain from this reason, that it may be held a dangerous and suspicious fruit, as certainly it deserves, for the tree that bore it, until I can dissect one by one the properties it has. But I have first to finish, as was propounded, what is to be thought in general of reading books, whatever sort they be, and whether be more the benefit or the harm that thence proceeds.Not to insist upon the examples of Moses, Daniel, and Paul, who were skilful in all the learning of the Egyptians, Chaldeans, and Greeks, which could not probably be without reading their books of all sorts; in Paul especially, who thought it no defilement to insert into Holy Scripture the sentences of three Greek poets, and one of them a tragedian; the question was notwithstanding sometimes controverted among the primitive doctors, but with great odds on that side which affirmed it both lawful and profitable; as was then evidently perceived, when Julian the Apostate and subtlest enemy to our faith made a decree forbidding Christians the study of heathen learning: for, said he, they wound us with our own weapons, and with our own arts and sciences they overcome us. And indeed the Christians were put so to their shifts by this crafty means, and so much in danger to decline into all ignorance, that the two Apollinarii were fain, as a man may say, to coin all the seven liberal sciences out of the Bible, reducing it into divers forms of orations, poems, dialogues, even to the calculating of a new Christian grammar. But, saith the historian Socrates, the providence of God provided better than the industry of Apollinarius and his son, by taking away that illiterate law with the life of him who devised it. So great an injury they then held it to be deprived of Hellenic learning; and thought it a persecution more undermining, and secretly decaying the Church, than the open cruelty of Decius or Diocletian.And perhaps it was the same politic drift that the devil whipped St. Jerome in a lenten dream, for reading Cicero; or else it was a phantasm bred by the fever which had then seized him. For had an angel been his discipliner, unless it were for dwelling too much upon Ciceronianisms, and had chastised the reading, not the vanity, it had been plainly partial; first to correct him for grave Cicero, and not for scurril Plautus, whom he confesses to have been reading, not long before; next to correct him only, and let so many more ancient fathers wax old in those pleasant and florid studies without the lash of such a tutoring apparition; insomuch that Basil teaches how some good use may be made of Margites, a sportful poem, not now extant, writ by Homer; and why not then of Morgante, an Italian romance much to the same purpose?But if it be agreed we shall be tried by visions, there is a vision recorded by Eusebius, far ancienter than this tale of Jerome, to the nun Eustochium, and, besides, has nothing of a fever in it. Dionysius Alexandrinus was about the year 240 a person of great name in the Church for piety and learning, who had wont to avail himself much against heretics by being conversant in their books; until a certain presbyter laid it scrupulously to his conscience, how he durst venture himself among those defiling volumes. The worthy man, loath to give offence, fell into a new debate with himself what was to be thought; when suddenly a vision sent from God (it is his own epistle that so avers it) confirmed him in these words: READ ANY BOOKS WHATEVER COME TO THY HANDS, FOR THOU ART SUFFICIENT BOTH TO JUDGE ARIGHT AND TO EXAMINE EACH MATTER. To this revelation he assented the sooner, as he confesses, because it was answerable to that of the Apostle to the Thessalonians, PROVE ALL THINGS, HOLD FAST THAT WHICH IS GOOD. And he might have added another remarkable saying of the same author: TO THE PURE, ALL THINGS ARE PURE; not only meats and drinks, but all kind of knowledge whether of good or evil; the knowledge cannot defile, nor consequently the books, if the will and conscience be not defiled.For books are as meats and viands are; some of good, some of evil substance; and yet God, in that unapocryphal vision, said without exception, RISE, PETER, KILL AND EAT, leaving the choice to each man's discretion. Wholesome meats to a vitiated stomach differ little or nothing from unwholesome; and best books to a naughty mind are not unappliable to occasions of evil. Bad meats will scarce breed good nourishment in the healthiest concoction; but herein the difference is of bad books, that they to a discreet and judicious reader serve in many respects to discover, to confute, to forewarn, and to illustrate. Whereof what better witness can ye expect I should produce, than one of your own now sitting in Parliament, the chief of learned men reputed in this land, Mr. Selden; whose volume of natural and national laws proves, not only by great authorities brought together, but by exquisite reasons and theorems almost mathematically demonstrative, that all opinions, yea errors, known, read, and collated, are of main service and assistance toward the speedy attainment of what is truest. I conceive, therefore, that when God did enlarge the universal diet of man's body, saving ever the rules of temperance, he then also, as before, left arbitrary the dieting and repasting of our minds; as wherein every mature man might have to exercise his own leading capacity.How great a virtue is temperance, how much of moment through the whole life of man! Yet God commits the managing so great a trust, without particular law or prescription, wholly to the demeanour of every grown man. And therefore when he himself tabled the Jews from heaven, that omer, which was every man's daily portion of manna, is computed to have been more than might have well sufficed the heartiest feeder thrice as many meals. For those actions which enter into a man, rather than issue out of him, and therefore defile not, God uses not to captivate under a perpetual childhood of prescription, but trusts him with the gift of reason to be his own chooser; there were but little work left for preaching, if law and compulsion should grow so fast upon those things which heretofore were governed only by exhortation. Solomon informs us, that much reading is a weariness to the flesh; but neither he nor other inspired author tells us that such or such reading is unlawful: yet certainly had God thought good to limit us herein, it had been much more expedient to have told us what was unlawful than what was wearisome. As for the burning of those Ephesian books by St. Paul's converts; 'tis replied the books were magic, the Syriac so renders them. It was a private act, a voluntary act, and leaves us to a voluntary imitation: the men in remorse burnt those books which were their own; the magistrate by this example is not appointed; these men practised the books, another might perhaps have read them in some sort usefully.Good and evil we know in the field of this world grow up together almost inseparably; and the knowledge of good is so involved and interwoven with the knowledge of evil, and in so many cunning resemblances hardly to be discerned, that those confused seeds which were imposed upon Psyche as an incessant labour to cull out, and sort asunder, were not more intermixed. It was from out the rind of one apple tasted, that the knowledge of good and evil, as two twins cleaving together, leaped forth into the world. And perhaps this is that doom which Adam fell into of knowing good and evil, that is to say of knowing good by evil. As therefore the state of man now is; what wisdom can there be to choose, what continence to forbear without the knowledge of evil? He that can apprehend and consider vice with all her baits and seeming pleasures, and yet abstain, and yet distinguish, and yet prefer that which is truly better, he is the true warfaring Christian.I cannot praise a fugitive and cloistered virtue, unexercised and unbreathed, that never sallies out and sees her adversary but slinks out of the race, where that immortal garland is to be run for, not without dust and heat. Assuredly we bring not innocence into the world, we bring impurity much rather; that which purifies us is trial, and trial is by what is contrary. That virtue therefore which is but a youngling in the contemplation of evil, and knows not the utmost that vice promises to her followers, and rejects it, is but a blank virtue, not a pure; her whiteness is but an excremental whiteness. Which was the reason why our sage and serious poet Spenser, whom I dare be known to think a better teacher than Scotus or Aquinas, describing true temperance under the person of Guion, brings him in with his palmer through the cave of Mammon, and the bower of earthly bliss, that he might see and know, and yet abstain. Since therefore the knowledge and survey of vice is in this world so necessary to the constituting of human virtue, and the scanning of error to the confirmation of truth, how can we more safely, and with less danger, scout into the regions of sin and falsity than by reading all manner of tractates and hearing all manner of reason? And this is the benefit which may be had of books promiscuously read.But of the harm that may result hence three kinds are usually reckoned. First, is feared the infection that may spread; but then all human learning and controversy in religious points must remove out of the world, yea the Bible itself; for that ofttimes relates blasphemy not nicely, it describes the carnal sense of wicked men not unelegantly, it brings in holiest men passionately murmuring against Providence through all the arguments of Epicurus: in other great disputes it answers dubiously and darkly to the common reader. And ask a Talmudist what ails the modesty of his marginal Keri, that Moses and all the prophets cannot persuade him to pronounce the textual Chetiv. For these causes we all know the Bible itself put by the Papist must be next removed, as Clement of Alexandria, and that Eusebian book of Evangelic preparation, transmitting our ears through a hoard of heathenish obscenities to receive the Gospel. Who finds not that Irenaeus, Epiphanius, Jerome, and others discover more heresies than they well confute, and that oft for heresy which is the truer opinion?Nor boots it to say for these, and all the heathen writers of greatest infection, if it must be thought so, with whom is bound up the life of human learning, that they writ in an unknown tongue, so long as we are sure those languages are known as well to the worst of men, who are both most able and most diligent to instil the poison they suck, first into the courts of princes, acquainting them with the choicest delights and criticisms of sin. As perhaps did that Petronius whom Nero called his Arbiter, the master of his revels; and the notorious ribald of Arezzo, dreaded and yet dear to the Italian courtiers. I name not him for posterity's sake, whom Henry VIII. named in merriment his vicar of hell. By which compendious way all the contagion that foreign books can infuse will find a passage to the people far easier and shorter than an Indian voyage, though it could be sailed either by the north of Cataio eastward, or of Canada westward, while our Spanish licensing gags the English press never so severely.But on the other side that infection which is from books of controversy in religion is more doubtful and dangerous to the learned than to the ignorant; and yet those books must be permitted untouched by the licenser. It will be hard to instance where any ignorant man hath been ever seduced by papistical book in English, unless it were commended and expounded to him by some of that clergy: and indeed all such tractates, whether false or true, are as the prophecy of Isaiah was to the eunuch, not to be UNDERSTOOD WITHOUT A GUIDE. But of our priests and doctors how many have been corrupted by studying the comments of Jesuits and Sorbonists, and how fast they could transfuse that corruption into the people, our experience is both late and sad. It is not forgot, since the acute and distinct Arminius was perverted merely by the perusing of a nameless discourse written at Delft, which at first he took in hand to confute.Seeing, therefore, that those books, and those in great abundance, which are likeliest to taint both life and doctrine, cannot be suppressed without the fall of learning and of all ability in disputation, and that these books of either sort are most and soonest catching to the learned, from whom to the common people whatever is heretical or dissolute may quickly be conveyed, and that evil manners are as perfectly learnt without books a thousand other ways which cannot be stopped, and evil doctrine not with books can propagate, except a teacher guide, which he might also do without writing, and so beyond prohibiting, I am not able to unfold, how this cautelous enterprise of licensing can be exempted from the number of vain and impossible attempts. And he who were pleasantly disposed could not well avoid to liken it to the exploit of that gallant man who thought to pound up the crows by shutting his park gate.Besides another inconvenience, if learned men be the first receivers out of books and dispreaders both of vice and error, how shall the licensers themselves be confided in, unless we can confer upon them, or they assume to themselves above all others in the land, the grace of infallibility and uncorruptedness? And again, if it be true that a wise man, like a good refiner, can gather gold out of the drossiest volume, and that a fool will be a fool with the best book, yea or without book; there is no reason that we should deprive a wise man of any advantage to his wisdom, while we seek to restrain from a fool, that which being restrained will be no hindrance to his folly. For if there should be so much exactness always used to keep that from him which is unfit for his reading, we should in the judgment of Aristotle not only, but of Solomon and of our Saviour, not vouchsafe him good precepts, and by consequence not willingly admit him to good books; as being certain that a wise man will make better use of an idle pamphlet, than a fool will do of sacred Scripture.'Tis next alleged we must not expose ourselves to temptations without necessity, and next to that, not employ our time in vain things. To both these objections one answer will serve, out of the grounds already laid, that to all men such books are not temptations, nor vanities, but useful drugs and materials wherewith to temper and compose effective and strong medicines, which man's life cannot want. The rest, as children and childish men, who have not the art to qualify and prepare these working minerals, well may be exhorted to forbear, but hindered forcibly they cannot be by all the licensing that Sainted Inquisition could ever yet contrive. Which is what I promised to deliver next: that this order of licensing conduces nothing to the end for which it was framed; and hath almost prevented me by being clear already while thus much hath been explaining. See the ingenuity of Truth, who, when she gets a free and willing hand, opens herself faster than the pace of method and discourse can overtake her.It was the task which I began with, to show that no nation, or well-instituted state, if they valued books at all, did ever use this way of licensing; and it might be answered, that this is a piece of prudence lately discovered. To which I return, that as it was a thing slight and obvious to think on, so if it had been difficult to find out, there wanted not among them long since who suggested such a course; which they not following, leave us a pattern of their judgment that it was not the rest knowing, but the not approving, which was the cause of their not using it.Plato, a man of high authority, indeed, but least of all for his Commonwealth, in the book of his Laws, which no city ever yet received, fed his fancy by making many edicts to his airy burgomasters, which they who otherwise admire him wish had been rather buried and excused in the genial cups of an Academic night sitting. By which laws he seems to tolerate no kind of learning but by unalterable decree, consisting most of practical traditions, to the attainment whereof a library of smaller bulk than his own Dialogues would be abundant. And there also enacts, that no poet should so much as read to any private man what he had written, until the judges and law-keepers had seen it, and allowed it. But that Plato meant this law peculiarly to that commonwealth which he had imagined, and to no other, is evident. Why was he not else a lawgiver to himself, but a transgressor, and to be expelled by his own magistrates; both for the wanton epigrams and dialogues which he made, and his perpetual reading of Sophron Mimus and Aristophanes, books of grossest infamy, and also for commending the latter of them, though he were the malicious libeller of his chief friends, to be read by the tyrant Dionysius, who had little need of such trash to spend his time on? But that he knew this licensing of poems had reference and dependence to many other provisos there set down in his fancied republic, which in this world could have no place: and so neither he himself, nor any magistrate or city, ever imitated that course, which, taken apart from those other collateral injunctions, must needs be vain and fruitless. For if they fell upon one kind of strictness, unless their care were equal to regulate all other things of like aptness to corrupt the mind, that single endeavour they knew would be but a fond labour; to shut and fortify one gate against corruption, and be necessitated to leave others round about wide open.If we think to regulate printing, thereby to rectify manners, we must regulate all recreation and pastimes, all that is delightful to man. No music must be heard, no song be set or sung, but what is grave and Doric. There must be licensing dancers, that no gesture, motion, or deportment be taught our youth but what by their allowance shall be thought honest; for such Plato was provided of. It will ask more than the work of twenty licensers to examine all the lutes, the violins, and the guitars in every house; they must not be suffered to prattle as they do, but must be licensed what they may say. And who shall silence all the airs and madrigals that whisper softness in chambers? The windows also, and the balconies must be thought on; there are shrewd books, with dangerous frontispieces, set to sale; who shall prohibit them, shall twenty licensers? The villages also must have their visitors to inquire what lectures the bagpipe and the rebeck reads, even to the ballatry and the gamut of every municipal fiddler, for these are the countryman's Arcadias, and his Monte Mayors.Next, what more national corruption, for which England hears ill abroad, than household gluttony: who shall be the rectors of our daily rioting? And what shall be done to inhibit the multitudes that frequent those houses where drunkenness is sold and harboured? Our garments also should be referred to the licensing of some more sober workmasters to see them cut into a less wanton garb. Who shall regulate all the mixed conversation of our youth, male and female together, as is the fashion of this country? Who shall still appoint what shall be discoursed, what presumed, and no further? Lastly, who shall forbid and separate all idle resort, all evil company? These things will be, and must be; but how they shall be least hurtful, how least enticing, herein consists the grave and governing wisdom of a state.To sequester out of the world into Atlantic and Utopian polities, which never can be drawn into use, will not mend our condition; but to ordain wisely as in this world of evil, in the midst whereof God hath placed us unavoidably. Nor is it Plato's licensing of books will do this, which necessarily pulls along with it so many other kinds of licensing, as will make us all both ridiculous and weary, and yet frustrate; but those unwritten, or at least unconstraining, laws of virtuous education, religious and civil nurture, which Plato there mentions as the bonds and ligaments of the commonwealth, the pillars and the sustainers of every written statute; these they be which will bear chief sway in such matters as these, when all licensing will be easily eluded. Impunity and remissness, for certain, are the bane of a commonwealth; but here the great art lies, to discern in what the law is to bid restraint and punishment, and in what things persuasion only is to work.If every action, which is good or evil in man at ripe years, were to be under pittance and prescription and compulsion, what were virtue but a name, what praise could be then due to well-doing, what gramercy to be sober, just, or continent? Many there be that complain of divine Providence for suffering Adam to transgress; foolish tongues! When God gave him reason, he gave him freedom to choose, for reason is but choosing; he had been else a mere artificial Adam, such an Adam as he is in the motions. We ourselves esteem not of that obedience, or love, or gift, which is of force: God therefore left him free, set before him a provoking object, ever almost in his eyes; herein consisted his merit, herein the right of his reward, the praise of his abstinence. Wherefore did he create passions within us, pleasures round about us, but that these rightly tempered are the very ingredients of virtue?They are not skilful considerers of human things, who imagine to remove sin by removing the matter of sin; for, besides that it is a huge heap increasing under the very act of diminishing, though some part of it may for a time be withdrawn from some persons, it cannot from all, in such a universal thing as books are; and when this is done, yet the sin remains entire. Though ye take from a covetous man all his treasure, he has yet one jewel left, ye cannot bereave him of his covetousness. Banish all objects of lust, shut up all youth into the severest discipline that can be exercised in any hermitage, ye cannot make them chaste, that came not hither so; such great care and wisdom is required to the right managing of this point. Suppose we could expel sin by this means; look how much we thus expel of sin, so much we expel of virtue: for the matter of them both is the same; remove that, and ye remove them both alike.This justifies the high providence of God, who, though he command us temperance, justice, continence, yet pours out before us, even to a profuseness, all desirable things, and gives us minds that can wander beyond all limit and satiety. Why should we then affect a rigour contrary to the manner of God and of nature, by abridging or scanting those means, which books freely permitted are, both to the trial of virtue and the exercise of truth? It would be better done, to learn that the law must needs be frivolous, which goes to restrain things, uncertainly and yet equally working to good and to evil. And were I the chooser, a dream of well-doing should be preferred before many times as much the forcible hindrance of evil-doing. For God sure esteems the growth and completing of one virtuous person more than the restraint of ten vicious.And albeit whatever thing we hear or see, sitting, walking, travelling, or conversing, may be fitly called our book, and is of the same effect that writings are, yet grant the thing to be prohibited were only books, it appears that this Order hitherto is far insufficient to the end which it intends. Do we not see, not once or oftener, but weekly, that continued court-libel against the Parliament and City, printed, as the wet sheets can witness, and dispersed among us, for all that licensing can do? Yet this is the prime service a man would think, wherein this Order should give proof of itself. If it were executed, you'll say. But certain, if execution be remiss or blindfold now, and in this particular, what will it be hereafter and in other books? If then the Order shall not be vain and frustrate, behold a new labour, Lords and Commons, ye must repeal and proscribe all scandalous and unlicensed books already printed and divulged; after ye have drawn them up into a list, that all may know which are condemned, and which not; and ordain that no foreign books be delivered out of custody, till they have been read over. This office will require the whole time of not a few overseers, and those no vulgar men. There be also books which are partly useful and excellent, partly culpable and pernicious; this work will ask as many more officials, to make expurgations and expunctions, that the commonwealth of learning be not damnified. In fine, when the multitude of books increase upon their hands, ye must be fain to catalogue all those printers who are found frequently offending, and forbid the importation of their whole suspected typography. In a word, that this your Order may be exact and not deficient, ye must reform it perfectly according to the model of Trent and Seville, which I know ye abhor to do.Yet though ye should condescend to this, which God forbid, the Order still would be but fruitless and defective to that end whereto ye meant it. If to prevent sects and schisms, who is so unread or so uncatechized in story, that hath not heard of many sects refusing books as a hindrance, and preserving their doctrine unmixed for many ages, only by unwritten traditions? The Christian faith, for that was once a schism, is not unknown to have spread all over Asia, ere any Gospel or Epistle was seen in writing. If the amendment of manners be aimed at, look into Italy and Spain, whether those places be one scruple the better, the honester, the wiser, the chaster, since all the inquisitional rigour that hath been executed upon books.Another reason, whereby to make it plain that this Order will miss the end it seeks, consider by the quality which ought to be in every licenser. It cannot be denied but that he who is made judge to sit upon the birth or death of books, whether they may be wafted into this world or not, had need to be a man above the common measure, both studious, learned, and judicious; there may be else no mean mistakes in the censure of what is passable or not; which is also no mean injury. If he be of such worth as behooves him, there cannot be a more tedious and unpleasing journey-work, a greater loss of time levied upon his head, than to be made the perpetual reader of unchosen books and pamphlets, ofttimes huge volumes. There is no book that is acceptable unless at certain seasons; but to be enjoined the reading of that at all times, and in a hand scarce legible, whereof three pages would not down at any time in the fairest print, is an imposition which I cannot believe how he that values time and his own studies, or is but of a sensible nostril, should be able to endure. In this one thing I crave leave of the present licensers to be pardoned for so thinking; who doubtless took this office up, looking on it through their obedience to the Parliament, whose command perhaps made all things seem easy and unlaborious to them; but that this short trial hath wearied them out already, their own expressions and excuses to them who make so many journeys to solicit their licence are testimony enough. Seeing therefore those who now possess the employment by all evident signs wish themselves well rid of it; and that no man of worth, none that is not a plain unthrift of his own hours, is ever likely to succeed them, except he mean to put himself to the salary of a press corrector; we may easily foresee what kind of licensers we are to expect hereafter, either ignorant, imperious, and remiss, or basely pecuniary. This is what I had to show, wherein this Order cannot conduce to that end whereof it bears the intention.I lastly proceed from the no good it can do, to the manifest hurt it causes, in being first the greatest discouragement and affront that can be offered to learning, and to learned men.It was the complaint and lamentation of prelates, upon every least breath of a motion to remove pluralities, and distribute more equally Church revenues, that then all learning would be for ever dashed and discouraged. But as for that opinion, I never found cause to think that the tenth part of learning stood or fell with the clergy: nor could I ever but hold it for a sordid and unworthy speech of any churchman who had a competency left him. If therefore ye be loath to dishearten utterly and discontent, not the mercenary crew of false pretenders to learning, but the free and ingenuous sort of such as evidently were born to study, and love learning for itself, not for lucre or any other end but the service of God and of truth, and perhaps that lasting fame and perpetuity of praise which God and good men have consented shall be the reward of those whose published labours advance the good of mankind; then know that, so far to distrust the judgment and the honesty of one who hath but a common repute in learning, and never yet offended, as not to count him fit to print his mind without a tutor and examiner, lest he should drop a schism, or something of corruption, is the greatest displeasure and indignity to a free and knowing spirit that can be put upon him.What advantage is it to be a man, over it is to be a boy at school, if we have only escaped the ferula to come under the fescue of an Imprimatur; if serious and elaborate writings, as if they were no more than the theme of a grammar-lad under his pedagogue, must not be uttered without the cursory eyes of a temporizing and extemporizing licenser? He who is not trusted with his own actions, his drift not being known to be evil, and standing to the hazard of law and penalty, has no great argument to think himself reputed in the Commonwealth wherein he was born for other than a fool or a foreigner. When a man writes to the world, he summons up all his reason and deliberation to assist him; he searches, meditates, is industrious, and likely consults and confers with his judicious friends; after all which done he takes himself to be informed in what he writes, as well as any that writ before him. If, in this the most consummate act of his fidelity and ripeness, no years, no industry, no former proof of his abilities can bring him to that state of maturity, as not to be still mistrusted and suspected, unless he carry all his considerate diligence, all his midnight watchings and expense of Palladian oil, to the hasty view of an unleisured licenser, perhaps much his younger, perhaps his inferior in judgment, perhaps one who never knew the labour of bookwriting, and if he be not repulsed or slighted, must appear in print like a puny with his guardian, and his censor's hand on the back of his title to be his bail and surety that he is no idiot or seducer, it cannot be but a dishonour and derogation to the author, to the book, to the privilege and dignity of learning.And what if the author shall be one so copious of fancy, as to have many things well worth the adding come into his mind after licensing, while the book is yet under the press, which not seldom happens to the best and diligentest writers; and that perhaps a dozen times in one book? The printer dares not go beyond his licensed copy; so often then must the author trudge to his leave-giver, that those his new insertions may be viewed; and many a jaunt will be made, ere that licenser, for it must be the same man, can either be found, or found at leisure; meanwhile either the press must stand still, which is no small damage, or the author lose his accuratest thoughts, and send the book forth worse than he had made it, which to a diligent writer is the greatest melancholy and vexation that can befall.And how can a man teach with authority, which is the life of teaching; how can he be a doctor in his book as he ought to be, or else had better be silent, whenas all he teaches, all he delivers, is but under the tuition, under the correction of his patriarchal licenser to blot or alter what precisely accords not with the hidebound humour which he calls his judgment? When every acute reader, upon the first sight of a pedantic licence, will be ready with these like words to ding the book a quoit's distance from him: I hate a pupil teacher, I endure not an instructor that comes to me under the wardship of an overseeing fist. I know nothing of the licenser, but that I have his own hand here for his arrogance; who shall warrant me his judgment? The State, sir, replies the stationer, but has a quick return: The State shall be my governors, but not my critics; they may be mistaken in the choice of a licenser, as easily as this licenser may be mistaken in an author; this is some common stuff; and he might add from Sir Francis Bacon, THAT SUCH AUTHORIZED BOOKS ARE BUT THE LANGUAGE OF THE TIMES. For though a licenser should happen to be judicious more than ordinary, which will be a great jeopardy of the next succession, yet his very office and his commission enjoins him to let pass nothing but what is vulgarly received already.Nay, which is more lamentable, if the work of any deceased author, though never so famous in his lifetime and even to this day, come to their hands for licence to be printed, or reprinted, if there be found in his book one sentence of a venturous edge, uttered in the height of zeal (and who knows whether it might not be the dictate of a divine spirit?) yet not suiting with every low decrepit humour of their own, though it were Knox himself, the reformer of a kingdom, that spake it, they will not pardon him their dash: the sense of that great man shall to all posterity be lost, for the fearfulness or the presumptuous rashness of a perfunctory licenser. And to what an author this violence hath been lately done, and in what book of greatest consequence to be faithfully published, I could now instance, but shall forbear till a more convenient season.Yet if these things be not resented seriously and timely by them who have the remedy in their power, but that such iron-moulds as these shall have authority to gnaw out the choicest periods of exquisitest books, and to commit such a treacherous fraud against the orphan remainders of worthiest men after death, the more sorrow will belong to that hapless race of men, whose misfortune it is to have understanding. Henceforth let no man care to learn, or care to be more than worldly-wise; for certainly in higher matters to be ignorant and slothful, to be a common steadfast dunce, will be the only pleasant life, and only in request.And it is a particular disesteem of every knowing person alive, and most injurious to the written labours and monuments of the dead, so to me it seems an undervaluing and vilifying of the whole nation. I cannot set so light by all the invention, the art, the wit, the grave and solid judgment which is in England, as that it can be comprehended in any twenty capacities how good soever, much less that it should not pass except their superintendence be over it, except it be sifted and strained with their strainers, that it should be uncurrent without their manual stamp. Truth and understanding are not such wares as to be monopolized and traded in by tickets and statutes and standards. We must not think to make a staple commodity of all the knowledge in the land, to mark and licence it like our broadcloth and our woolpacks. What is it but a servitude like that imposed by the Philistines, not to be allowed the sharpening of our own axes and coulters, but we must repair from all quarters to twenty licensing forges? Had anyone written and divulged erroneous things and scandalous to honest life, misusing and forfeiting the esteem had of his reason among men, if after conviction this only censure were adjudged him that he should never henceforth write but what were first examined by an appointed officer, whose hand should be annexed to pass his credit for him that now he might be safely read; it could not be apprehended less than a disgraceful punishment. Whence to include the whole nation, and those that never yet thus offended, under such a diffident and suspectful prohibition, may plainly be understood what a disparagement it is. So much the more, whenas debtors and delinquents may walk abroad without a keeper, but unoffensive books must not stir forth without a visible jailer in their title.Nor is it to the common people less than a reproach; for if we be so jealous over them, as that we dare not trust them with an English pamphlet, what do we but censure them for a giddy, vicious, and ungrounded people; in such a sick and weak state of faith and discretion, as to be able to take nothing down but through the pipe of a licenser? That this is care or love of them, we cannot pretend, whenas, in those popish places where the laity are most hated and despised, the same strictness is used over them. Wisdom we cannot call it, because it stops but one breach of licence, nor that neither: whenas those corruptions, which it seeks to prevent, break in faster at other doors which cannot be shut.And in conclusion it reflects to the disrepute of our ministers also, of whose labours we should hope better, and of the proficiency which their flock reaps by them, than that after all this light of the Gospel which is, and is to be, and all this continual preaching, they should still be frequented with such an unprincipled, unedified and laic rabble, as that the whiff of every new pamphlet should stagger them out of their catechism and Christian walking. This may have much reason to discourage the ministers when such a low conceit is had of all their exhortations, and the benefiting of their hearers, as that they are not thought fit to be turned loose to three sheets of paper without a licenser; that all the sermons, all the lectures preached, printed, vented in such numbers, and such volumes, as have now well nigh made all other books unsaleable, should not be armour enough against one single Enchiridion, without the castle of St. Angelo of an Imprimatur.And lest some should persuade ye, Lords and Commons, that these arguments of learned men's discouragement at this your Order are mere flourishes, and not real, I could recount what I have seen and heard in other countries, where this kind of inquisition tyrannizes; when I have sat among their learned men, for that honour I had, and been counted happy to be born in such a place of philosophic freedom, as they supposed England was, while themselves did nothing but bemoan the servile condition into which learning amongst them was brought; that this was it which had damped the glory of Italian wits; that nothing had been there written now these many years but flattery and fustian. There it was that I found and visited the famous Galileo, grown old, a prisoner to the Inquisition, for thinking in astronomy otherwise than the Franciscan and Dominican licensers thought. And though I knew that England then was groaning loudest under the prelatical yoke, nevertheless I took it as a pledge of future happiness, that other nations were so persuaded of her liberty. Yet was it beyond my hope that those worthies were then breathing in her air, who should be her leaders to such a deliverance, as shall never be forgotten by any revolution of time that this world hath to finish. When that was once begun, it was as little in my fear that what words of complaint I heard among learned men of other parts uttered against the Inquisition, the same I should hear by as learned men at home, uttered in time of Parliament against an order of licensing; and that so generally that, when I had disclosed myself a companion of their discontent, I might say, if without envy, that he whom an honest quaestorship had endeared to the Sicilians was not more by them importuned against Verres, than the favourable opinion which I had among many who honour ye, and are known and respected by ye, loaded me with entreaties and persuasions, that I would not despair to lay together that which just reason should bring into my mind, toward the removal of an undeserved thraldom upon learning. That this is not therefore the disburdening of a particular fancy, but the common grievance of all those who had prepared their minds and studies above the vulgar pitch to advance truth in others, and from others to entertain it, thus much may satisfy.And in their name I shall for neither friend nor foe conceal what the general murmur is; that if it come to inquisitioning again and licensing, and that we are so timorous of ourselves, and so suspicious of all men, as to fear each book and the shaking of every leaf, before we know what the contents are; if some who but of late were little better than silenced from preaching shall come now to silence us from reading, except what they please, it cannot be guessed what is intended by some but a second tyranny over learning: and will soon put it out of controversy, that bishops and presbyters are the same to us, both name and thing. That those evils of prelaty, which before from five or six and twenty sees were distributively charged upon the whole people, will now light wholly upon learning, is not obscure to us: whenas now the pastor of a small unlearned parish on the sudden shall be exalted archbishop over a large diocese of books, and yet not remove, but keep his other cure too, a mystical pluralist. He who but of late cried down the sole ordination of every novice Bachelor of Art, and denied sole jurisdiction over the simplest parishioner, shall now at home in his private chair assume both these over worthiest and excellentest books and ablest authors that write them.This is not, ye Covenants and Protestations that we have made! this is not to put down prelaty; this is but to chop an episcopacy; this is but to translate the Palace Metropolitan from one kind of dominion into another; this is but an old canonical sleight of commuting our penance. To startle thus betimes at a mere unlicensed pamphlet will after a while be afraid of every conventicle, and a while after will make a conventicle of every Christian meeting. But I am certain that a State governed by the rules of justice and fortitude, or a Church built and founded upon the rock of faith and true knowledge, cannot be so pusillanimous. While things are yet not constituted in religion, that freedom of writing should be restrained by a discipline imitated from the prelates and learnt by them from the Inquisition, to shut us up all again into the breast of a licenser, must needs give cause of doubt and discouragement to all learned and religious men.Who cannot but discern the fineness of this politic drift, and who are the contrivers; that while bishops were to be baited down, then all presses might be open; it was the people's birthright and privilege in time of Parliament, it was the breaking forth of light. But now, the bishops abrogated and voided out of the Church, as if our Reformation sought no more but to make room for others into their seats under another name, the episcopal arts begin to bud again, the cruse of truth must run no more oil, liberty of printing must be enthralled again under a prelatical commission of twenty, the privilege of the people nullified, and, which is worse, the freedom of learning must groan again, and to her old fetters: all this the Parliament yet sitting. Although their own late arguments and defences against the prelates might remember them, that this obstructing violence meets for the most part with an event utterly opposite to the end which it drives at: instead of suppressing sects and schisms, it raises them and invests them with a reputation. The punishing of wits enhances their authority, saith the Viscount St. Albans; and a forbidden writing is thought to be a certain spark of truth that flies up in the faces of them who seek to tread it out. This Order, therefore, may prove a nursing-mother to sects, but I shall easily show how it will be a step-dame to Truth: and first by disenabling us to the maintenance of what is known already.Well knows he who uses to consider, that our faith and knowledge thrives by exercise, as well as our limbs and complexion. Truth is compared in Scripture to a streaming fountain; if her waters flow not in a perpetual progression, they sicken into a muddy pool of conformity and tradition. A man may be a heretic in the truth; and if he believe things only because his pastor says so, or the Assembly so determines, without knowing other reason, though his belief be true, yet the very truth he holds becomes his heresy.There is not any burden that some would gladlier post off to another than the charge and care of their religion. There be--who knows not that there be?--of Protestants and professors who live and die in as arrant an implicit faith as any lay Papist of Loretto. A wealthy man, addicted to his pleasure and to his profits, finds religion to be a traffic so entangled, and of so many piddling accounts, that of all mysteries he cannot skill to keep a stock going upon that trade. What should he do? fain he would have the name to be religious, fain he would bear up with his neighbours in that. What does he therefore, but resolves to give over toiling, and to find himself out some factor, to whose care and credit he may commit the whole managing of his religious affairs; some divine of note and estimation that must be. To him he adheres, resigns the whole warehouse of his religion, with all the locks and keys, into his custody; and indeed makes the very person of that man his religion; esteems his associating with him a sufficient evidence and commendatory of his own piety. So that a man may say his religion is now no more within himself, but is become a dividual movable, and goes and comes near him, according as that good man frequents the house. He entertains him, gives him gifts, feasts him, lodges him; his religion comes home at night, prays, is liberally supped, and sumptuously laid to sleep; rises, is saluted, and after the malmsey, or some well-spiced brewage, and better breakfasted than he whose morning appetite would have gladly fed on green figs between Bethany and Jerusalem, his religion walks abroad at eight, and leaves his kind entertainer in the shop trading all day without his religion.Another sort there be who, when they hear that all things shall be ordered, all things regulated and settled, nothing written but what passes through the custom-house of certain publicans that have the tonnaging and poundaging of all free-spoken truth, will straight give themselves up into your hands, make 'em and cut 'em out what religion ye please: there be delights, there be recreations and jolly pastimes that will fetch the day about from sun to sun, and rock the tedious year as in a delightful dream. What need they torture their heads with that which others have taken so strictly and so unalterably into their own purveying? These are the fruits which a dull ease and cessation of our knowledge will bring forth among the people. How goodly and how to be wished were such an obedient unanimity as this, what a fine conformity would it starch us all into! Doubtless a staunch and solid piece of framework, as any January could freeze together.Nor much better will be the consequence even among the clergy themselves. It is no new thing never heard of before, for a parochial minister, who has his reward and is at his Hercules' pillars in a warm benefice, to be easily inclinable, if he have nothing else that may rouse up his studies, to finish his circuit in an English Concordance and a topic folio, the gatherings and savings of a sober graduateship, a Harmony and a Catena; treading the constant round of certain common doctrinal heads, attended with their uses, motives, marks, and means, out of which, as out of an alphabet, or sol-fa, by forming and transforming, joining and disjoining variously, a little bookcraft, and two hours' meditation, might furnish him unspeakably to the performance of more than a weekly charge of sermoning: not to reckon up the infinite helps of interlinearies, breviaries, synopses, and other loitering gear. But as for the multitude of sermons ready printed and piled up, on every text that is not difficult, our London trading St. Thomas in his vestry, and add to boot St. Martin and St. Hugh, have not within their hallowed limits more vendible ware of all sorts ready made: so that penury he never need fear of pulpit provision, having where so plenteously to refresh his magazine. But if his rear and flanks be not impaled, if his back door be not secured by the rigid licenser, but that a bold book may now and then issue forth and give the assault to some of his old collections in their trenches, it will concern him then to keep waking, to stand in watch, to set good guards and sentinels about his received opinions, to walk the round and counter-round with his fellow inspectors, fearing lest any of his flock be seduced, who also then would be better instructed, better exercised and disciplined. And God send that the fear of this diligence, which must then be used, do not make us affect the laziness of a licensing Church.For if we be sure we are in the right, and do not hold the truth guiltily, which becomes not, if we ourselves condemn not our own weak and frivolous teaching, and the people for an untaught and irreligious gadding rout, what can be more fair than when a man judicious, learned, and of a conscience, for aught we know, as good as theirs that taught us what we know, shall not privily from house to house, which is more dangerous, but openly by writing publish to the world what his opinion is, what his reasons, and wherefore that which is now thought cannot be sound? Christ urged it as wherewith to justify himself, that he preached in public; yet writing is more public than preaching; and more easy to refutation, if need be, there being so many whose business and profession merely it is to be the champions of truth; which if they neglect, what can be imputed but their sloth, or unability?Thus much we are hindered and disinured by this course of licensing, toward the true knowledge of what we seem to know. For how much it hurts and hinders the licensers themselves in the calling of their ministry, more than any secular employment, if they will discharge that office as they ought, so that of necessity they must neglect either the one duty or the other, I insist not, because it is a particular, but leave it to their own conscience, how they will decide it there.There is yet behind of what I purposed to lay open, the incredible loss and detriment that this plot of licensing puts us to; more than if some enemy at sea should stop up all our havens and ports and creeks, it hinders and retards the importation of our richest merchandise, truth; nay, it was first established and put in practice by Antichristian malice and mystery on set purpose to extinguish, if it were possible, the light of Reformation, and to settle falsehood; little differing from that policy wherewith the Turk upholds his Alcoran, by the prohibition of printing. 'Tis not denied, but gladly confessed, we are to send our thanks and vows to Heaven louder than most of nations, for that great measure of truth which we enjoy, especially in those main points between us and the Pope, with his appurtenances the prelates: but he who thinks we are to pitch our tent here, and have attained the utmost prospect of reformation that the mortal glass wherein we contemplate can show us, till we come to beatific vision, that man by this very opinion declares that he is yet far short of truth.Truth indeed came once into the world with her divine Master, and was a perfect shape most glorious to look on: but when he ascended, and his Apostles after him were laid asleep, then straight arose a wicked race of deceivers, who, as that story goes of the Egyptian Typhon with his conspirators, how they dealt with the good Osiris, took the virgin Truth, hewed her lovely form into a thousand pieces, and scattered them to the four winds. From that time ever since, the sad friends of Truth, such as durst appear, imitating the careful search that Isis made for the mangled body of Osiris, went up and down gathering up limb by limb, still as they could find them. We have not yet found them all, Lords and Commons, nor ever shall do, till her Master's second coming; he shall bring together every joint and member, and shall mould them into an immortal feature of loveliness and perfection. Suffer not these licensing prohibitions to stand at every place of opportunity, forbidding and disturbing them that continue seeking, that continue to do our obsequies to the torn body of our martyred saint.We boast our light; but if we look not wisely on the sun itself, it smites us into darkness. Who can discern those planets that are oft combust, and those stars of brightest magnitude that rise and set with the sun, until the opposite motion of their orbs bring them to such a place in the firmament, where they may be seen evening or morning? The light which we have gained was given us, not to be ever staring on, but by it to discover onward things more remote from our knowledge. It is not the unfrocking of a priest, the unmitring of a bishop, and the removing him from off the presbyterian shoulders, that will make us a happy nation. No, if other things as great in the Church, and in the rule of life both economical and political, be not looked into and reformed, we have looked so long upon the blaze that Zuinglius and Calvin hath beaconed up to us, that we are stark blind. There be who perpetually complain of schisms and sects, and make it such a calamity that any man dissents from their maxims. 'Tis their own pride and ignorance which causes the disturbing, who neither will hear with meekness, nor can convince; yet all must be suppressed which is not found in their Syntagma. They are the troublers, they are the dividers of unity, who neglect and permit not others to unite those dissevered pieces which are yet wanting to the body of Truth. To be still searching what we know not by what we know, still closing up truth to truth as we find it (for all her body is homogeneal and proportional), this is the golden rule in theology as well as in arithmetic, and makes up the best harmony in a Church; not the forced and outward union of cold, and neutral, and inwardly divided minds.Lords and Commons of England! consider what nation it is whereof ye are, and whereof ye are the governors: a nation not slow and dull, but of a quick, ingenious and piercing spirit, acute to invent, subtle and sinewy to discourse, not beneath the reach of any point the highest that human capacity can soar to. Therefore the studies of learning in her deepest sciences have been so ancient and so eminent among us, that writers of good antiquity and ablest judgment have been persuaded that even the school of Pythagoras and the Persian wisdom took beginning from the old philosophy of this island. And that wise and civil Roman, Julius Agricola, who governed once here for Caesar, preferred the natural wits of Britain before the laboured studies of the French. Nor is it for nothing that the grave and frugal Transylvanian sends out yearly from as far as the mountainous borders of Russia, and beyond the Hercynian wilderness, not their youth, but their staid men, to learn our language and our theologic arts.Yet that which is above all this, the favour and the love of Heaven, we have great argument to think in a peculiar manner propitious and propending towards us. Why else was this nation chosen before any other, that out of her, as out of Sion, should be proclaimed and sounded forth the first tidings and trumpet of Reformation to all Europe? And had it not been the obstinate perverseness of our prelates against the divine and admirable spirit of Wickliff, to suppress him as a schismatic and innovator, perhaps neither the Bohemian Huns and Jerome, no nor the name of Luther or of Calvin, had been ever known: the glory of reforming all our neighbours had been completely ours. But now, as our obdurate clergy have with violence demeaned the matter, we are become hitherto the latest and the backwardest scholars, of whom God offered to have made us the teachers. Now once again by all concurrence of signs, and by the general instinct of holy and devout men, as they daily and solemnly express their thoughts, God is decreeing to begin some new and great period in his Church, even to the reforming of Reformation itself: what does he then but reveal himself to his servants, and as his manner is, first to his Englishmen? I say, as his manner is, first to us, though we mark not the method of his counsels, and are unworthy.Behold now this vast city: a city of refuge, the mansion house of liberty, encompassed and surrounded with his protection; the shop of war hath not there more anvils and hammers waking, to fashion out the plates and instruments of armed justice in defence of beleaguered truth, than there be pens and heads there, sitting by their studious lamps, musing, searching, revolving new notions and ideas wherewith to present, as with their homage and their fealty, the approaching Reformation: others as fast reading, trying all things, assenting to the force of reason and convincement. What could a man require more from a nation so pliant and so prone to seek after knowledge? What wants there to such a towardly and pregnant soil, but wise and faithful labourers, to make a knowing people, a nation of prophets, of sages, and of worthies? We reckon more than five months yet to harvest; there need not be five weeks; had we but eyes to lift up, the fields are white already.Where there is much desire to learn, there of necessity will be much arguing, much writing, many opinions; for opinion in good men is but knowledge in the making. Under these fantastic terrors of sect and schism, we wrong the earnest and zealous thirst after knowledge and understanding which God hath stirred up in this city. What some lament of, we rather should rejoice at, should rather praise this pious forwardness among men, to reassume the ill-deputed care of their religion into their own hands again. A little generous prudence, a little forbearance of one another, and some grain of charity might win all these diligences to join, and unite in one general and brotherly search after truth; could we but forgo this prelatical tradition of crowding free consciences and Christian liberties into canons and precepts of men. I doubt not, if some great and worthy stranger should come among us, wise to discern the mould and temper of a people, and how to govern it, observing the high hopes and aims, the diligent alacrity of our extended thoughts and reasonings in the pursuance of truth and freedom, but that he would cry out as Pyrrhus did, admiring the Roman docility and courage: If such were my Epirots, I would not despair the greatest design that could be attempted, to make a Church or kingdom happy.Yet these are the men cried out against for schismatics and sectaries; as if, while the temple of the Lord was building, some cutting, some squaring the marble, others hewing the cedars, there should be a sort of irrational men who could not consider there must be many schisms and many dissections made in the quarry and in the timber, ere the house of God can be built. And when every stone is laid artfully together, it cannot be united into a continuity, it can but be contiguous in this world; neither can every piece of the building be of one form; nay rather the perfection consists in this, that, out of many moderate varieties and brotherly dissimilitudes that are not vastly disproportional, arises the goodly and the graceful symmetry that commends the whole pile and structure.Let us therefore be more considerate builders, more wise in spiritual architecture, when great reformation is expected. For now the time seems come, wherein Moses the great prophet may sit in heaven rejoicing to see that memorable and glorious wish of his fulfilled, when not only our seventy elders, but all the Lord's people, are become prophets. No marvel then though some men, and some good men too perhaps, but young in goodness, as Joshua then was, envy them. They fret, and out of their own weakness are in agony, lest these divisions and subdivisions will undo us. The adversary again applauds, and waits the hour: when they have branched themselves out, saith he, small enough into parties and partitions, then will be our time. Fool! he sees not the firm root, out of which we all grow, though into branches: nor will beware until he see our small divided maniples cutting through at every angle of his ill-united and unwieldy brigade. And that we are to hope better of all these supposed sects and schisms, and that we shall not need that solicitude, honest perhaps, though over-timorous, of them that vex in this behalf, but shall laugh in the end at those malicious applauders of our differences, I have these reasons to persuade me.First, when a city shall be as it were besieged and blocked about, her navigable river infested, inroads and incursions round, defiance and battle oft rumoured to be marching up even to her walls and suburb trenches, that then the people, or the greater part, more than at other times, wholly taken up with the study of highest and most important matters to be reformed, should be disputing, reasoning, reading, inventing, discoursing, even to a rarity and admiration, things not before discoursed or written of, argues first a singular goodwill, contentedness and confidence in your prudent foresight and safe government, Lords and Commons; and from thence derives itself to a gallant bravery and well-grounded contempt of their enemies, as if there were no small number of as great spirits among us, as his was, who when Rome was nigh besieged by Hannibal, being in the city, bought that piece of ground at no cheap rate, whereon Hannibal himself encamped his own regiment.Next, it is a lively and cheerful presage of our happy success and victory. For as in a body, when the blood is fresh, the spirits pure and vigorous, not only to vital but to rational faculties, and those in the acutest and the pertest operations of wit and subtlety, it argues in what good plight and constitution the body is; so when the cheerfulness of the people is so sprightly up, as that it has not only wherewith to guard well its own freedom and safety, but to spare, and to bestow upon the solidest and sublimest points of controversy and new invention, it betokens us not degenerated, nor drooping to a fatal decay, but casting off the old and wrinkled skin of corruption to outlive these pangs and wax young again, entering the glorious ways of truth and prosperous virtue, destined to become great and honourable in these latter ages. Methinks I see in my mind a noble and puissant nation rousing herself like a strong man after sleep, and shaking her invincible locks: methinks I see her as an eagle mewing her mighty youth, and kindling her undazzled eyes at the full midday beam; purging and unscaling her long-abused sight at the fountain itself of heavenly radiance; while the whole noise of timorous and flocking birds, with those also that love the twilight, flutter about, amazed at what she means, and in their envious gabble would prognosticate a year of sects and schisms.What would ye do then? should ye suppress all this flowery crop of knowledge and new light sprung up and yet springing daily in this city? Should ye set an oligarchy of twenty engrossers over it, to bring a famine upon our minds again, when we shall know nothing but what is measured to us by their bushel? Believe it, Lords and Commons, they who counsel ye to such a suppressing do as good as bid ye suppress yourselves; and I will soon show how. If it be desired to know the immediate cause of all this free writing and free speaking, there cannot be assigned a truer than your own mild and free and humane government. It is the liberty, Lords and Commons, which your own valorous and happy counsels have purchased us, liberty which is the nurse of all great wits; this is that which hath rarefied and enlightened our spirits like the influence of heaven; this is that which hath enfranchised, enlarged and lifted up our apprehensions, degrees above themselves.Ye cannot make us now less capable, less knowing, less eagerly pursuing of the truth, unless ye first make yourselves, that made us so, less the lovers, less the founders of our true liberty. We can grow ignorant again, brutish, formal and slavish, as ye found us; but you then must first become that which ye cannot be, oppressive, arbitrary and tyrannous, as they were from whom ye have freed us. That our hearts are now more capacious, our thoughts more erected to the search and expectation of greatest and exactest things, is the issue of your own virtue propagated in us; ye cannot suppress that, unless ye reinforce an abrogated and merciless law, that fathers may dispatch at will their own children. And who shall then stick closest to ye, and excite others? not he who takes up arms for coat and conduct, and his four nobles of Danegelt. Although I dispraise not the defence of just immunities, yet love my peace better, if that were all. Give me the liberty to know, to utter, and to argue freely according to conscience, above all liberties.What would be best advised, then, if it be found so hurtful and so unequal to suppress opinions for the newness or the unsuitableness to a customary acceptance, will not be my task to say. I only shall repeat what I have learned from one of your own honourable number, a right noble and pious lord, who, had he not sacrificed his life and fortunes to the Church and Commonwealth, we had not now missed and bewailed a worthy and undoubted patron of this argument. Ye know him, I am sure; yet I for honour's sake, and may it be eternal to him, shall name him, the Lord Brook. He writing of episcopacy, and by the way treating of sects and schisms, left ye his vote, or rather now the last words of his dying charge, which I know will ever be of dear and honoured regard with ye, so full of meekness and breathing charity, that next to his last testament, who bequeathed love and peace to his disciples, I cannot call to mind where I have read or heard words more mild and peaceful. He there exhorts us to hear with patience and humility those, however they be miscalled, that desire to live purely, in such a use of God's ordinances, as the best guidance of their conscience gives them, and to tolerate them, though in some disconformity to ourselves. The book itself will tell us more at large, being published to the world, and dedicated to the Parliament by him who, both for his life and for his death, deserves that what advice he left be not laid by without perusal.And now the time in special is, by privilege to write and speak what may help to the further discussing of matters in agitation. The temple of Janus with his two controversial faces might now not unsignificantly be set open. And though all the winds of doctrine were let loose to play upon the earth, so Truth be in the field, we do injuriously, by licensing and prohibiting, to misdoubt her strength. Let her and Falsehood grapple; who ever knew Truth put to the worse, in a free and open encounter? Her confuting is the best and surest suppressing. He who hears what praying there is for light and clearer knowledge to be sent down among us, would think of other matters to be constituted beyond the discipline of Geneva, framed and fabricked already to our hands. Yet when the new light which we beg for shines in upon us, there be who envy and oppose, if it come not first in at their casements. What a collusion is this, whenas we are exhorted by the wise man to use diligence, to seek for wisdom as for hidden treasures early and late, that another order shall enjoin us to know nothing but by statute? When a man hath been labouring the hardest labour in the deep mines of knowledge, hath furnished out his findings in all their equipage: drawn forth his reasons as it were a battle ranged: scattered and defeated all objections in his way; calls out his adversary into the plain, offers him the advantage of wind and sun, if he please, only that he may try the matter by dint of argument: for his opponents then to skulk, to lay ambushments, to keep a narrow bridge of licensing where the challenger should pass, though it be valour enough in soldiership, is but weakness and cowardice in the wars of Truth.For who knows not that Truth is strong, next to the Almighty? She needs no policies, nor stratagems, nor licensings to make her victorious; those are the shifts and the defences that error uses against her power. Give her but room, and do not bind her when she sleeps, for then she speaks not true, as the old Proteus did, who spake oracles only when he was caught and bound, but then rather she turns herself into all shapes, except her own, and perhaps tunes her voice according to the time, as Micaiah did before Ahab, until she be adjured into her own likeness. Yet is it not impossible that she may have more shapes than one. What else is all that rank of things indifferent, wherein Truth may be on this side or on the other, without being unlike herself? What but a vain shadow else is the abolition of those ordinances, that hand-writing nailed to the cross? What great purchase is this Christian liberty which Paul so often boasts of? His doctrine is, that he who eats or eats not, regards a day or regards it not, may do either to the Lord. How many other things might be tolerated in peace, and left to conscience, had we but charity, and were it not the chief stronghold of our hypocrisy to be ever judging one another?I fear yet this iron yoke of outward conformity hath left a slavish print upon our necks; the ghost of a linen decency yet haunts us. We stumble and are impatient at the least dividing of one visible congregation from another, though it be not in fundamentals; and through our forwardness to suppress, and our backwardness to recover any enthralled piece of truth out of the gripe of custom, we care not to keep truth separated from truth, which is the fiercest rent and disunion of all. We do not see that, while we still affect by all means a rigid external formality, we may as soon fall again into a gross conforming stupidity, a stark and dead congealment of wood and hay and stubble, forced and frozen together, which is more to the sudden degenerating of a Church than many subdichotomies of petty schisms.Not that I can think well of every light separation, or that all in a Church is to be expected gold and silver and precious stones: it is not possible for man to sever the wheat from the tares, the good fish from the other fry; that must be the Angels' ministry at the end of mortal things. Yet if all cannot be of one mind--as who looks they should be?--this doubtless is more wholesome, more prudent, and more Christian, that many be tolerated, rather than all compelled. I mean not tolerated popery, and open superstition, which, as it extirpates all religions and civil supremacies, so itself should be extirpate, provided first that all charitable and compassionate means be used to win and regain the weak and the misled: that also which is impious or evil absolutely either against faith or manners no law can possibly permit, that intends not to unlaw itself: but those neighbouring differences, or rather indifferences, are what I speak of, whether in some point of doctrine or of discipline, which, though they may be many, yet need not interrupt THE UNITY OF SPIRIT, if we could but find among us THE BOND OF PEACE.In the meanwhile if any one would write, and bring his helpful hand to the slow-moving Reformation which we labour under, if Truth have spoken to him before others, or but seemed at least to speak, who hath so bejesuited us that we should trouble that man with asking license to do so worthy a deed? and not consider this, that if it come to prohibiting, there is not aught more likely to be prohibited than truth itself; whose first appearance to our eyes, bleared and dimmed with prejudice and custom, is more unsightly and unplausible than many errors, even as the person is of many a great man slight and contemptuous to see to. And what do they tell us vainly of new opinions, when this very opinion of theirs, that none must be heard but whom they like, is the worst and newest opinion of all others; and is the chief cause why sects and schisms do so much abound, and true knowledge is kept at distance from us; besides yet a greater danger which is in it.For when God shakes a kingdom with strong and healthful commotions to a general reforming, 'tis not untrue that many sectaries and false teachers are then busiest in seducing; but yet more true it is, that God then raises to his own work men of rare abilities, and more than common industry, not only to look back and revise what hath been taught heretofore, but to gain further and go on some new enlightened steps in the discovery of truth. For such is the order of God's enlightening his Church, to dispense and deal out by degrees his beam, so as our earthly eyes may best sustain it.Neither is God appointed and confined, where and out of what place these his chosen shall be first heard to speak; for he sees not as man sees, chooses not as man chooses, lest we should devote ourselves again to set places, and assemblies, and outward callings of men; planting our faith one while in the old Convocation house, and another while in the Chapel at Westminster; when all the faith and religion that shall be there canonized is not sufficient without plain convincement, and the charity of patient instruction to supple the least bruise of conscience, to edify the meanest Christian, who desires to walk in the Spirit, and not in the letter of human trust, for all the number of voices that can be there made; no, though Harry VII himself there, with all his liege tombs about him, should lend them voices from the dead, to swell their number.And if the men be erroneous who appear to be the leading schismatics, what withholds us but our sloth, our self-will, and distrust in the right cause, that we do not give them gentle meetings and gentle dismissions, that we debate not and examine the matter thoroughly with liberal and frequent audience; if not for their sakes, yet for our own? seeing no man who hath tasted learning, but will confess the many ways of profiting by those who, not contented with stale receipts, are able to manage and set forth new positions to the world. And were they but as the dust and cinders of our feet, so long as in that notion they may yet serve to polish and brighten the armoury of Truth, even for that respect they were not utterly to be cast away. But if they be of those whom God hath fitted for the special use of these times with eminent and ample gifts, and those perhaps neither among the priests nor among the Pharisees, and we in the haste of a precipitant zeal shall make no distinction, but resolve to stop their mouths, because we fear they come with new and dangerous opinions, as we commonly forejudge them ere we understand them; no less than woe to us, while, thinking thus to defend the Gospel, we are found the persecutors.There have been not a few since the beginning of this Parliament, both of the presbytery and others, who by their unlicensed books, to the contempt of an Imprimatur, first broke that triple ice clung about our hearts, and taught the people to see day: I hope that none of those were the persuaders to renew upon us this bondage which they themselves have wrought so much good by contemning. But if neither the check that Moses gave to young Joshua, nor the countermand which our Saviour gave to young John, who was so ready to prohibit those whom he thought unlicensed, be not enough to admonish our elders how unacceptable to God their testy mood of prohibiting is; if neither their own remembrance what evil hath abounded in the Church by this set of licensing, and what good they themselves have begun by transgressing it, be not enough, but that they will persuade and execute the most Dominican part of the Inquisition over us, and are already with one foot in the stirrup so active at suppressing, it would be no unequal distribution in the first place to suppress the suppressors themselves: whom the change of their condition hath puffed up, more than their late experience of harder times hath made wise.And as for regulating the press, let no man think to have the honour of advising ye better than yourselves have done in that Order published next before this, \"that no book be printed, unless the printer's and the author's name, or at least the printer's, be registered.\" Those which otherwise come forth, if they be found mischievous and libellous, the fire and the executioner will be the timeliest and the most effectual remedy that man's prevention can use. For this authentic Spanish policy of licensing books, if I have said aught, will prove the most unlicensed book itself within a short while; and was the immediate image of a Star Chamber decree to that purpose made in those very times when that Court did the rest of those her pious works, for which she is now fallen from the stars with Lucifer. Whereby ye may guess what kind of state prudence, what love of the people, what care of religion or good manners there was at the contriving, although with singular hypocrisy it pretended to bind books to their good behaviour. And how it got the upper hand of your precedent Order so well constituted before, if we may believe those men whose profession gives them cause to inquire most, it may be doubted there was in it the fraud of some old patentees and monopolizers in the trade of bookselling; who under pretence of the poor in their Company not to be defrauded, and the just retaining of each man his several copy, which God forbid should be gainsaid, brought divers glossing colours to the House, which were indeed but colours, and serving to no end except it be to exercise a superiority over their neighbours; men who do not therefore labour in an honest profession to which learning is indebted, that they should be made other men's vassals. Another end is thought was aimed at by some of them in procuring by petition this Order, that, having power in their hands, malignant books might the easier scape abroad, as the event shows.But of these sophisms and elenchs of merchandise I skill not. This I know, that errors in a good government and in a bad are equally almost incident; for what magistrate may not be misinformed, and much the sooner, if liberty of printing be reduced into the power of a few? But to redress willingly and speedily what hath been erred, and in highest authority to esteem a plain advertisement more than others have done a sumptuous bride, is a virtue (honoured Lords and Commons) answerable to your highest actions, and whereof none can participate but greatest and wisest men.Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. See original source at Wikisource."}
{"prompt": "The libbitcoin Manifesto", "completion": "\u201cTools for The People\u201dAs humans, we share little in common. But that little we do share is the deep core of our being. We search for purpose. We are curious. And we thrive on new information. Our self-awareness, rationality and sapience are the high level features that make up a person. They are our capacity for good or evil.As people, we need to ask ourselves whether we act with purpose, intent and ambition, ask how are we defining ourselves, and what are the values that our lives are promoting.Are you taking concrete steps now to achieve your objective?It's important we ask ourselves these questions, and decide which end of the spectrum between liberty and security we fixate on. A safe life of luxury, and comfort closed in by 4 walls. Or a life of freedom. Freedom to make love, play loud music, create art, wrestle naked, and raise confident kids that think.In criticising the world we're born into, it's easy to point the finger at this or that politician or resign problems to circumstance. And with the perceived lack of power to concede the situation is unfixable and utterly broken. But if we want to know who to blame, we need only to look into a mirror. We support the situation. It is people, not rulers, who create the world of today.Some of us conclude that the situation is just a normal state of affairs, and simply human nature. As if there were one human nature! And disregarding that we all evolve and grow as people in different directions during our lives.Think of the values we are taught as children. How we are taught to behave as civic citizens. The phrases we are told by our parents, teachers and friends. The system is not just the state and corporations, it is a machine encompassing all spheres of life.You might hear for example:I was told all of these sentences in my life. That learning to accept authority is an inevitable part of growing up. That my character is defined by how I look, not how I act. That my single purpose is to be a work-slave. To avoid interaction with random unknowns outside my circle. And that responsibility starts and stops with myself.All of them are bad values.We are not born with these values. They are hard-wired into us from a young age. Luckily knowledge feeds the unlearning process and the internet is an unlearning tool.Have you ever questioned the 15 years of our precious childhood from kindergarten to highschool. We attend a prison with fixed schedules and dinner at an allocated time. We're forced to wear uniforms. If you want to speak, you need to raise your hand. If you need the toilet, you must ask permission. And the lessons amount to little more than drilling information with the given promise of honours and qualifications.The reward for faithfully jumping through all these hoops for 15 years is a worthless piece of paper that isn't even required for a job at McDonalds. And the workers still need training. Our children aren't taught how to cook a healthy meal, grow a garden or even a rudimentary concept of how to organise or lead groups of people without even a glimmer of understanding on how to resolve conflicts without violence. Or the principles of logic, and how to question an ideology. Kids are taught to sit at a desk and listen obediently as the world is packaged into neat boxes.School is little more than a training camp for salaried drones designed to format young minds for a life of subservience, too stupid to question the system itself or the authority of those running it. We are not born with bad values. They are wired into us from a young age.Lets talk about good values.Responsibility is about fulfilling your needs to have a dignified existence, and then expanding that circle to the people around you. To help bring up and out the potential of other free people so that together we thrive. Community and collective action is absolutely essential if we want to rise up. The system thrives by separating people into isolated pockets who get their information from TV and their culture from corporations. United together, we are stronger.\u201cVires in numeris\u201dIndependence and autonomy is the ability to act. If we always need third parties and central organisations to resolve disputes, solve our problems and coordinate us then we are doomed as a species. Central authorities are always a magnet for corruption and that will never change. Learn to be self reliant and make things happen.Understanding is not an easy skill to develop, but it is very powerful. Being able to get into people's minds, to listen and be able to meet their needs is leadership. A leader serves and inspires people into action, whereas a ruler uses coercion. For all their grandeur and force, rulers cannot harness the real potential of people. Nobody thinks under duress.We need assertive individuals who stand unyielding for what they believe in. If you know something is right, then fight for your vision. It will happen. The system feeds off passivity, and giving consent to its exclusive hold of force feeds the machine.Lastly lets approach the world as artists, and bring creativity to our work. The world is diverse, colourful and vibrant. Humans are not meant to live in little boxes and grey concrete jungles. Live art and be creative. Your work is art. Good art makes people think and feel.The role of good people is the vanguard of tomorrow.The penalty good men pay for indifference to public affairs is to be ruled by evil men.It's an old story. David vs Goliath. Starfleet rebels vs galactic deathstar. Anarchist revolutionaries vs the fascist empire. Both sides have existed for centuries and the struggle continues. However in recent decades with the unique political situation, the internet and a dawning awareness among people, the balance of power is shifting in our favour this time around.Humans can look to a future less dominated by the command hierarchies of the past, and more by thriving marketplaces of knowledge and merit.I remember an amateur blue webpage in the summer of 2010 describing a p2p currency that \u201ccannot be controlled by governments or central banks\u201d. Extremely skeptical, I dived into the code and discovered an idea which burnt itself in my memory. My mind latched onto Bitcoin. I realised this unknown project is the future of money.Bitcoin is a tool of resistance gifted to us by Satoshi. The idea has escaped and the idea of cryptocurrency will not be stopped. Bitcoin or some other cryptocurrency will succeed.Bitcoin is about direct trade from peer to peer. The purest value transfer possible between 2 or more people. A direct and personal interaction over digital infrastructure. Welcome to the future of the black market. Real values, real people and uncorrupted markets.The internet is a tool of freedom and self-determination. Meddling in its mechanics is destructive. Whenever a website is blocked, a protocol is corrupted at some low level or undesirable traffic shaping occurs then seismic ripples of censorship and destruction lead to degradation of the network. The internet is fundamental to humanity, and must be protected at all costs.Bitcoin is no different, and must be kept pure. There are real risks to Bitcoin.The protocol is not an axiomatic system fixed by Satoshi. It's been constantly changing, rapidly evolving and the pace is accelerating. The risks are more subtle and probable than a government demanding changes to the fundamentals of Bitcoin's protocol. The chilling effect of self censorship.We don't even need to touch the protocol.As Bitcoin grows, the inevitable specialisation is kicking in. The blockchain is moving towards specialised services, and the future of full Bitcoin nodes is on the server, not personal computers. We have to wake up, adapt and work with the reality rather than persisting in self denial.If development is too centralised, with a small core infrastructure, then businesses will put real pressure to have features that destroy the integrity of the Bitcoin network. The excuse will be to protect themselves from liability. Self-censorship.And what they demand does not have to be protocol changes. They will demand features in the software they use. Software which remains compatible with the network, but works against the interests of individuals, small businesses and the black market.The possible malicious scenarios are endless. Stuff like p2p blacklists to create a 'legitimate' walled garden, or tracking technologies like large databases of IP addresses to triangulate where transactions came from. At the other end of the spectrum, is putting development effort into diversifying the ecosystem to protect against censorship and proxy relay nodes, anonymising mixers, small privacy tweaks and other technologies. That's where developers who believe in Bitcoin should devote time to. Corporations are powerful enough. To developers: serve your community.A diversified Bitcoin of many wallets and implementations is a strong and pure Bitcoin. To protect the integrity of the network, we need to eliminate single points of failure. An inbred Bitcoin with the same software code everywhere shares the same weaknesses, and is susceptible to the same attacks. A single pathogen can wipe out a genetically homogenous population. And centralised software is vulnerable to the dictates of whoever controls development of that software code, and any dictates pressured onto them.The implications of a diversified Bitcoin is a Bitcoin difficult to control. It also sets the protocol in stone, as nobody has sole power over the standard. Consensus from many parties is the way forwards.The proper way to develop a standard is by having many different competing parties that require mutual interest and agreement to pass through changes. History is rife with abuse like when Internet Explorer dominated the browser market, and constantly broke the web standard by introducing proprietary extensions. Their motive was to swallow the market and lock users into Internet Explorer. The result was a broken web. A monopoly likes to dominate the market, shut out competitors and erect high barriers to entry.A diversified ecosystem protects against feature-creep or bloat of the standard. Extra features go beyond the basic function of Bitcoin and so can result in over-complication rather than simple design. Viewed over a longer time period, extra or unnecessary features seem to creep into the system beyond the initial goals and the small code of 15,000 lines set by Satoshi. The result will be a Bitcoin that becomes increasingly difficult to understand or implement without a huge initial investment of resources, time and people. No single person will fully understand Bitcoin anymore, and development monopolies will be further enforced.Linux is the most secure operating system because of its diversity. There is no single exploit that is universal across all versions of Linux. Bitcoin must evolve in the same way to become a resilient and tough system able to serve a global audience.A massive standard is difficult to reimplement. Satoshi Nakamoto gifted us a small, focused and pure Bitcoin.There is no need for compromise. Lets push for our complete vision. Bitcoin is here. We have the initiative and we make our stand now. We have the power and now is the time. Not later. Now.Within a century of the printing press being invented, wars, social strife and revolutions erupted across Europe. Old kings, revered religious leaders and tyrannical rulers were removed from power. People could now read what was being written in their bibles. Mass printing of the bible was subversive. And what was written in their bibles, is not what they were being fed. In the face of hard evidence, people dispelled old notions of what their religion was saying.Our economy will change. Bitcoin will rise as a fundamental technology. Seeking approval from the halls of Washington, and consent from the status quo is mere pandering as lapdogs at the feet of the system. Why would you willingly give your power away? Are you stupid?Some people make the argument that throwing Bitcoin under the bus and corrupting the core of this technology is needed to help businesses which specialise in the exchange of failing government fiat paper-money with Bitcoins. Are we willing to sacrifice the purity of this tool for a few short term gains that primarily benefit US corporations? Do they serve the need of Bitcoin?Others even go further, arguing we need the masses. That being a majority protects people from assaults. Typical herd mentality.And that regulation (and the measures to implement them) are a typical process of acceptance. I have news for you: majorities have been slaughtered like pigs all throughout history. Being \u201cpragmatic\u201d is code speak for obedience and cowardice.Bitcoin is the future. Act like you believe it. Act to prevent corruption of the system. Act to prevent Bitcoin becoming coopted in any way. We must preserve the principles of Satoshi Nakamoto.We have the initiative and the power. You know the truth of the world. Stop supporting your own enemies. We don't need them. They need us. You are the one empowering them. Withdraw your consent. Withdraw your support. Don't accept their terms or try to win a game where they set the rules. Don't try to win your ruler's favour. Don't bother to beg for welfare or good treatment. Worst of all, don't help them hunt down your neighbour.Time we stick our flag in the ground, and make our stand.Our task force will offer balanced, effective solutions for policy makers, law enforcement, regulators and the public.[...]The Task Force, which launched in August, is not solely focussed on child exploitation.[...]The report detailed how criminal and terrorist organisations have turned to digital currency to reap profits from drug trafficking, prostitution and the dissemination of child abuse images.One day master told slave: \u201cDo this small thing and everything is fine. Keep up the good work.\u201d. The slave was happy because not much was asked so he started to create something cool. The master walked in a week later, and said \u201cdo this as well\u201d. The slave was shocked. \u201cBut master, we had an agreement, you said I only needed to do this?\u201d. Master responded \u201cI changed my mind. You need to do this as well.\u201d. The slave reluctantly agreed. At least it wasn't that bad.Over time, the master more and more increased his demands on the slave. By now the slave had created something totally wonderful and was dependant on it, but the master controlled his work and owned him.The task of an activist is not to negotiate systems of power with as much personal integrity as possible- it's to dismantle those systems.The road is long, and real work is needed. Less talk, more action. There are too few people in this world working on worthwhile things for the people. But eventhough the work-load is immense and daunting, there are concrete steps to achieve the global objective.Truth happens. We will succeed. Don't wait around for others to take action. We must dive head first without regard for consequences, and break the inertia of passivity. When enough people do this, the real change will occur.Fight for what you believe in. If you believe, and uphold a truth, then all your energy should be devoted to your objectives. Anytime you are accepting compromise, you are acting against your objective. None of us are pure. We are flawed and imperfect. But as good people we must strive for uncomplicated directness in our actions. Our actions must be transparent in motive and pure in reasoning.The power is within us. It always has been."}
{"prompt": "Bit Gold", "completion": "A long time ago I hit upon the idea of bit gold. The problem, in a nutshell, is that our money currently depends on trust in a third party for its value. As many inflationary and hyperinflationary episodes during the 20th century demonstrated, this is not an ideal state of affairs. Similarly, private bank note issue, while it had various advantages as well as disadvantages, similarly depended on a trusted third party.Precious metals and collectibles have an unforgeable scarcity due to the costliness of their creation. This once provided money the value of which was largely independent of any trusted third party. Precious metals have problems, however. It's too costly to assay metals repeatedly for common transactions. Thus a trusted third party (usually associated with a tax collector who accepted the coins as payment) was invoked to stamp a standard amount of the metal into a coin. Transporting large values of metal can be a rather insecure affair, as the British found when transporting gold across a U-boat infested Atlantic to Canada during World War I to support their gold standard. What's worse, you can't pay online with metal.Thus, it would be very nice if there were a protocol whereby unforgeably costly bits could be created online with minimal dependence on trusted third parties, and then securely stored, transferred, and assayed with similar minimal trust. Bit gold.My proposal for bit gold is based on computing a string of bits from a string of challenge bits, using functions called variously \"client puzzle function,\" \"proof of work function,\" or \"secure benchmark function.\" The resulting string of bits is the proof of work. Where a one-way function is prohibitively difficult to compute backwards, a secure benchmark function ideally comes with a specific cost, measured in compute cycles, to compute backwards.Here are the main steps of the bit gold system that I envision:Note that Alice's control over her bit gold does not depend on her sole possession of the bits, but rather on her lead position in the unforgeable chain of title (chain of digital signatures) in the title registry.All of this can be automated by software. The main limits to the security of the scheme are how well trust can be distributed in steps (3) and (4), and the problem of machine architecture which will be discussed below.Hal Finney has implemented a variant of bit gold called RPOW (Reusable Proofs of Work). This relies on publishing the computer code for the \"mint,\" which runs on a remote tamper-evident computer. The purchaser of of bit gold can then use remote attestation, which Finney calls the transparent server technique, to verify that a particular number of cycles were actually performed.The main problem with all these schemes is that proof of work schemes depend on computer architecture, not just an abstract mathematics based on an abstract \"compute cycle.\" (I wrote about this obscurely several years ago.) Thus, it might be possible to be a very low cost producer (by several orders of magnitude) and swamp the market with bit gold. However, since bit gold is timestamped, the time created as well as the mathematical difficulty of the work can be automatically proven. From this, it can usually be inferred what the cost of producing during that time period was.Unlike fungible atoms of gold, but as with collector's items, a large supply during a given time period will drive down the value of those particular items. In this respect \"bit gold\" acts more like collector's items than like gold. However, the match between this ex post market and the auction determining the initial value might create a very substantial profit for the \"bit gold miner\" who invents and deploys an optimized computer architecture.Thus, bit gold will not be fungible based on a simple function of, for example, the length of the string. Instead, to create fungible units dealers will have to combine different-valued pieces of bit gold into larger units of approximately equal value. This is analogous to what many commodity dealers do today to make commodity markets possible. Trust is still distributed because the estimated values of such bundles can be independently verified by many other parties in a largely or entirely automated fashion.In summary, all money mankind has ever used has been insecure in one way or another. This insecurity has been manifested in a wide variety of ways, from counterfeiting to theft, but the most pernicious of which has probably been inflation. Bit gold may provide us with a money of unprecedented security from these dangers. The potential for initially hidden supply gluts due to hidden innovations in machine architecture is a potential flaw in bit gold, or at least an imperfection which the initial auctions and ex post exchanges of bit gold will have to address."}
{"prompt": "Libertaria in Cyberspace", "completion": "Here are a few points about why \"cyberspace,\" or a computer-mediated network, is more hospitable than physical locations for the kind of \"crypto anarchy\" libertarian system I've been describing.Several folks have commented recently about ocean-going libertarian havens, supertankers used as data havens, and so forth. In the 1970s, especially, there were several unsuccessful attempts to acquire islands in the Pacific for the site of what some called \"Libertaria.\" (Some keywords: Vanuatu, Minerva, Mike Oliver, Tonga)Obtaining an entire island is problematic. Getting the consent of the residents is one issue (familiar to those on the this list who weathered the Hurrican Andrew diversion debate). Being allowed to operate by the leading world powers is another....the U.S. has enforced trade embargoes and blockades against many nations in the past several decades, including Cuba, North Korea, Libya, Iran, Iraq, andothers. Further, the U.S. has invaded some countries---Panama is a good example---whose government it disliked. How long would a supertanker \"data haven\" or libertarian regime last in such an environment? (Stephenson's fascinating Snow Crash didn't address tthe issue of why the \"Raft\" wasn't simply sunk by the remaining military forces.)I should note that the recent splintering of countries may provide opportunities for libertarian (or PPL, if your prefer to think of it in this way) regions. Some have speculated that Russia itself is a candidate, given that it has little vested in the previous system and may be willing to abandon statism. If several dozen new countries are formed, some opportunities exist.The basic problem is that physical space is too small, too exposed to the view of others. \"Libertaria\" in the form of, say, an island, is too exposed to the retaliatation of world powers. (I won't go into the \"private nukes\" strategy, which I need to think about further.)A floating private nation (or whatever it's called) is too vulnerable to a single well-placed torpedo. Even if it serves as a kind of Swiss bank, and thus gets some of the same protection Switzerland got (to wit, many leaders kept their loot there), it is too vulnerable to a single attacker or invader. Piracy will be just one of the problems.Finally, how many of us want to move to a South Pacific island? Or a North Sea oil rig? Or even to Russia?Cyberspace looks more promising. There is more \"space\" in cyberspace, thus allowing more security and more colonizable space. And this space is coterminous with our physical space, accessible with proper terminals from any place in the world (though there may be attempts in physical space to block access, to restrict access to necessay cryptographic methods, etc.).I won't go into the various cryptographic methods here (see my earlier posting on the \"Dining Cryptographers\" protocol and various other postings on public key systems, digital mixes, electronic cash, etc.). Interested readers have many sources. (I have just read a superb survey of these new techniques, the 1992 Ph.D. thesis of Jurgen Bos, \"Practical Privacy,\" which deals with these various protocols in a nice little book.)Alice and Bob, our favorite cryptographic stand-ins, can communicate and transact business without ever meeting or even knowing who the other is. This can be extended to create virtual communities subject only to rules they themselves reach agreement on, much like this very Extropians list. Private law is the only law, as there is no appeal to some higher authority like the Pope or police. (This is why I said in several of my postings on the Hurricane Andrew debate that I am sympathetic to the PPL view.)And this is the most compelling advantage of \"Crypto Libertaria\": an arbitrarily large number of separate \"nations\" can simultaneously exist. This allows for rapid experimentation, self-selection, and evolution. If folks get tired of some virtual community, they can leave. The cryptographic aspects mean their membership in some community is unknown to others (vis-a-vis the physical or outside world, i.e., their \"true names\") and physical coercion is reduced.Communalists are free to create a communal environment, Creative Anachronists are free to create their own idea of a space, and so on. I'm not even getting into the virtual reality-photorealistic images-Jaron Lanier sort of thing, as even current text-based systems are demonstrably enough to allow the kind of virtual communities I'm describing here (and described in Vinge's \"True Names,\" in Gibson's Neuromancer, in Sterling's Islands in the Net, and in Stephenson's Snow Crash...though all of them missed out on some of the most exciting aspects...perhaps my novel will hit the mark?).But will the government allow these sorts of things? Won't they just torpedo it, just as they'd torpedo an offshore ooirig data haven?The key is that distributed systems have no nexus which can be knocked out. Neither Usenet norFidoNet can be disabled by any single government, as they are worldwide. Shutting them down would mean banning computer-to-computer communication. And despite the talk of mandatory \"trap doors\" in encryption systems, encryption is fundamentally easy to do and hard to detect. (For those who doubt this, let me describe a simple system I posted to sci.crypt several years ago. An ordinary digital audio tape (DAT) carries more than a gigabyte of data. This means that thhe least significant bit (LSB) of an audio DAT recordingng carries about 8megabytes of data! So Alice is stopped by the Data Police. They ask if she's carrying illegal data. She smiles inocently and say \"No. I know you'll search me.\" They find her Sony DATman and ask about her collection of tapes and live recordings. Alice is carrying 80 MB of data---about 3 entire days worth of Usenet feeds!---on each and every tape. The data are stored in the LSBs, completely indistinguishable from microphone and quantization noise...unless you know the key. Similar methods allow data to be undetectably packed into LSBs of the PICT and GIF pictures now flooding the Net, into sampled sounds, and even into messages like this...the \"whitespace\" on the right margin of this message carries a hidden message readable only to a few chosen Extropians.)I've already described using religions and role-playing games as a kind of legal cover for the development and deployment of these techniques. If a church decides to offer \"digital confessionals\" for its far-flung members, by what argument will the U.S. government justify insisting that encryption not be used? (I should note that psychiatrists and similar professionals have a responsibility to their clients and to their licensing agencies to ensure the privacy of patient records. Friends of mine are using encryption to protect patient records. This is just one little example of how encryption is getting woven into the fabric of our electronic society. There are many other examples.)In future discussions, I hope we can hit on some of the many approaches to deploying these methods. I've spent several years thinking about this, but I've surely missed some good ideas. The \"crypto anarchy game\" being planned is an attempt to get some of the best hackers in the Bay Area thinking along these lines and thinking of new wrinkles. Several have already offered to help further.Some have commented that this list is not an appropriate place to discuss these ideas. I think it is. We are not discussing anything that is actually illegal, even under the broad powers of RICO (Racketeer-Influenced and Corrupt Organizations Act, used to go after \"conspiracies\" of porn dealers and gun dealers, amongst others). What we are discussing are long-range implications of these ideas.In conclusion, it will be easier to form certain types of libertarian societies in cyberspace than in the real world of nations and physical locations. The electronic world is by no means complete, as we will still live much of our lives in the physical world. But economic activity is sharply increasing in the Net domain and these \"crypto anarchy\" ideas will further erode the power of physical states to tax and coerce residents.-- Tim May"}
{"prompt": "Crypto Glossary", "completion": "From: tcmay@netcom.com (Timothy C. May)\nSubject: Crypto Glossary\nDate: Sun, 22 Nov 92 11:50:55 PSTHere's the glossary of crypto terms we passed out in printed form at the first Cypherpunks meeting in September 1992. Some compromises had to be made in going from the printed form to the ASCII of this transmission, so I hope you'll bear with me.I'm sending it to the entire list because nearly everyone who hears about it says \"Is it online?\" and wants a copy. If you don't want it, discard it.I'm not going to be maintaining the \"Cypherpunks FAQ,\" so don't send me corrections or additions.EnjoyTim May(these sections will introduce the terms in context, though complete definitions will not be given)privacy of messages\nusing ciphers and codes to protect the secrecy of messages\nDES is the most common symmetric cipher (same key for encryption and decryption)\nRSA is the most common asymmetric cipher (different keys for encryption and decryption)proving who you are\nproving you signed a document (and not someone else)untraceable sending and receiving of mail and messages\nfocus: defeating eavesdroppers and traffic analysis\nDC protocol (dining cryptographers)focus: ballot box anonymity\ncredentials for voting\nissues of double voting, security, robustness, efficiencyfocus: privacy in transactions, purchases\nunlinkable credentials\nblinded notes\n\"digital coins\" may not be possibleusing the above to evade government, to bypass tax collection, etc.\na technological solution to the problem of too much governmentopen, free market systems in which voluntary transactions are central.cryptographic protocols are often made clearer by considering parties A and B, or Alice and Bob, performing some protocol. Eve the eavesdropper, Paul the prover, and Vic the verifier are other common stand-in names.all or nothing disclosure of secrets.a credential which asserts some right or privilege or fact without revealing the identity of the holder. This is unlike CA driver's licenses.same as public key cryptosystem.the process of verifying an identity or credential, to ensure you are who you said you were.a type of authentication using fingerprints, retinal scans, palm prints, or other physical/biological signatures of an individual.e.g., tossing a coin and then committing to the value without being able to change the outcome. The blob is a cryptographic primitive for this.A signature that the signer does not remember having made. A blind signature is always a cooperative protocol and the receiver of the signature provides the signer with the blinding information.the crypto equivalent of a locked box. A cryptographic primitive for bit commitment, with the properties that a blobs can represent a 0 or a 1, that others cannot tell be looking whether itUs a 0 or a 1, that the creator of the blob can \"open\" the blob to reveal the contents, and that no blob can be both a 1 and a 0. An example of this is a flipped coin covered by a hand.the path over which messages are transmitted. Channels may be secure or insecure, and may have eavesdroppers (or enemies, or disrupters, etc.) who alter messages, insert and delete messages, etc. Cryptography is the means by which communications over insecure channels are protected.an attack where the cryptanalyst gets to choose the plaintext to be enciphered, e.g., when possession of an enciphering machine or algorithm is in the possession of the cryptanalyst.a secret form of writing, using substitution or transposition of characters or symbols.the plaintext after it has been encrypted.a restricted cryptosystem where words or letters of a message are replaced by other words chosen from a codebook. Not part of modern cryptology, but still useful.an important crypto primitive, or protocol, in which the equivalent of flipping a fair coin is possible. Implemented with blobs.wherein several participants cooperate to deduce the identity of a sender or receiver, or to break a cipher. Most cryptosystems are sensitive to some forms of collusion. Much of the work on implementing DC Nets, for example, involves ensuring that colluders cannot isolate message senders and thereby trace origins and destinations of mail.where a cipher cannot be broken with available computer resources, but in theory can be broken with enough computer resources. Contrast with unconditionally secure.something you do to thwart an attacker.facts or assertions about some entity. For example, credit ratings, passports, reputations, tax status, insurance records, etc. Under the current system, these credentials are increasingly being cross-linked. Blind signatures may be used to create anonymous credentials.banks, credit agencies, insurance companies, police departments, etc., that correlate records and decide the status of records.methods for attacking and breaking ciphers and related cryptographic systems. Ciphers may be broken, traffic may be analyzed, and passwords may be cracked. Computers are of course essential.the economic and political system after the deployment of encryption, untraceable e-mail, digital pseudonyms, cryptographic voting, and digital cash. A pun on \"crypto,\" meaning \"hipen,\" and as when Gore Vidal called William F. Buckley a \"crypto fascist.\"another name for cryptology.the science and study of writing, sending, receiving, and deciphering secret messages. Includes authentication, digital signatures, the hiding of messages (steganography), cryptanalysis, and several other fields.the electronic domain, the Nets, and computer-generated spaces. Some say it is the \"consensual reality\" described in \"Neuromancer.\" Others say it is the phone system. Others have work to do.the dining cryptographers protocol. DC-Nets use multiple participants communicating with the DC protocol.the Data Encryption Standard, proposed in 1977 by the National Bureau of Standards (now NIST), with assistance from the National Security Agency. Based on the \"Lucifer\" cipher developed by Horst Feistel at IBM, DES is a secret key cryptosystem that cycles 64-bit blocks of data through multiple permutations with a 56-bit key controlling the routing. \"Diffusion\" and \"confusion\" are combined to form a cipher that has not yet been cryptanalyzed (see \"DES, Security of\"). DES is in use for interbank transfers, as a cipher inside of several RSA-based systems, and is available for PCs.many have speculated that the NSA placed a trapdoor (or back door) in DES to allow it to read DES-encrypted messages. This has not been proved. It is known that the original Lucifer algorithm used a 128-bit key and that this key length was shortened to 64 bits (56 bits plus 8 parity bits), thus making exhaustive search much easier (so far as is known, brute-force search has not been done, though it should be feasible today). Shamir and Bihan have used a technique called \"differential cryptanalysis\" to reduce the exhaustive search needed for chosen plaintext attacks (but with no import for ordinary DES).technique for cryptanalyzing DES. With a chosen plaintext attack, they've reduced the number of DES keys that must be tried from about 2^56 to about 2^47 or less. Note, however, that rarely can an attacker mount a chosen plaintext attack on DES systems.Protocols for transferring value, monetary or otherwise, electronically. Digital cash usually refers to systems that are anonymous. Digital money systems can be used to implement any quantity that is conserved, such as points, mass, dollars, etc. There are many variations of digital money systems, ranging from VISA numbers to blinded signed digital coins. A topic too large for a single glossary entry.basically, a \"crypto identity.\" A way for individuals to set up accounts with various organizations without revealing more information than they wish. Users may have several digital pseudonyms, some used only once, some used over the course of many years. Ideally, the pseudonyms can be linked only at the will of the holder. In the simplest form, a public key can serve as a digital pseudonym and need not be linked to a physical identity.Analogous to a written signature on a document. A modification to a message that only the signer can make but that everyone can recognize. Can be used legally to contract at a distance.one function of a digital notary public, in which some message (a song, screenplay, lab notebook, contract, etc.) is stamped with a time that cannot (easily) be forged.the untraceable message sending system invented by David Chaum. Named after the \"dining philosophers\" problem in computer science, participants form circuits and pass messages in such a way that the origin cannot be deduced, barring collusion. At the simplest level, two participants share a key between them. One of them sends some actual message by bitwise exclusive-ORing the message with the key, while the other one just sends the key itself. The actual message from this pair of participants is obtained by XORing the two outputs. However, since nobody but the pair knows the original key, the actual message cannot be traced to either one of the participants.given integers a, n, and x, find some integer m such that a^m mod n = x, if m exists. Modular exponentiation, the a^m mod n part, is straightforward (and special purpose chips are available), but the inverse problem is believed to be very hard, in general. Thus it is conjectured that modular exponentiation is a one-way function.the latest NIST (National Institute of Standards and Technology, successor to NBS) standard for digital signatures. Based on the El Gamal cipher, some consider it weak and poor substitute for RSA-based signature schemes.intercepting messages without detection. Radio waves may be intercepted, phone lines may be tapped, and computers may have RF emissions detected. Even fiber optic lines can be tapped.Some large numbers are difficult to factor. It is conjectured that there are no feasible--i.e.\"easy,\" less than exponential in size of number-- factoring methods. It is also an open problem whether RSA may be broken more easily than by factoring the modulus (e.g., the public key might reveal information which simplifies the problem). Interestingly, though factoring is believed to be \"hard\", it is not known to be in the class of NP-hard problems. Professor Janek invented a factoring device, but he is believed to be fictional.security, in which no amount of cryptanalysis can break a cipher or system. One time pads are an example (providing the pads are not lost nor stolen nor used more than once, of course). Same as unconditionally secure.a piece of information needed to encipher or decipher a message. Keys may be stolen, bought, lost, etc., just as with physical keys.the process of sharing a key with some other party, in the case of symmetric ciphers, or of distributing a public key in an asymmetric cipher. A major issue is that the keys be exchanged reliably and without compromise. Diffie and Hellman devised one such scheme, based on the discrete logarithm problem.a cryptanalysis of a cipher where plaintext-ciphertext pairs are known. This attack searches for an unknown key. Contrast with the chosen plaintext attack, where the cryptanalyst can also choose the plaintext to be enciphered.a system for sending and receiving mail without traceability or observability. Receiving mail anonymously can be done with broadcast of the mail in encrypted form. Only the intended recipient (whose identity, or true name, may be unknown to the sender) may able to decipher the message. Sending mail anonymously apparently requires mixes or use of the dining cryptographers (DC) protocol.another name for zero knowledge proofs, favored by Chaum.David Chaum's term for a box which performs the function of mixing, or decorrelating, incoming and outgoing electronic mail messages. The box also strips off the outer envelope (i.e., decrypts with its private key) and remails the message to the apress on the inner envelope. Tamper-resistant modules may be used to prevent cheating and forced disclosure of the mapping between incoming and outgoing mail. A sequence of many remailings effectively makes tracing sending and receiving impossible. Contrast this with the software version, the DC protocol.raising an integer to the power of another integer, modulo some integer. For integers a, n, and m, a^m mod n. For example, 5^3 mod 100 = 25. Modular exponentiation can be done fairly quickly with a sequence of bit shifts and aps, and special purpose chips have been designed. See also discrete logarithm.the largest intelligence agency, responsible for making and breaking ciphers, for intercepting communications, and for ensuring the security of U.S. computers. Headquartered in Fort Meade, Maryland, with many listening posts around the world. The NSA funds cryptographic research and advises other agencies about cryptographic matters. The NSA once obviously had the world's leading cryptologists, but this may no longer be the case.a credential that you possess that you don't want any one else to know, for example, a bankruptcy filing. A formal version of a negative reputation.a large class of difficult problems. \"NP\" stands for nondeterministic polynomial time, a class of problems thought in general not to have feasible algorithms for their solution. A problem is \"complete\" if any other NP problem may be reduced to that problem. Many important combinatorial and algebraic problems are NP-complete: the traveling salesman problem, the Hamiltonian cycle problem, the word problem, and on and on.a cryptographic primitive that involves the probabilistic transmission of bits. The sender does not know if the bits were received.a string of randomly-selected bits or symbols which is combined with a plaintext message to produce the ciphertext. This combination may be shifting letters some amount, bitwise exclusive-ORed, etc.). The recipient, who also has a copy of the one time pad, can easily recover the plaintext. Provided the pad is only used once and then destroyed, and is not available to an eavesdropper, the system is perfectly secure, i.e., it is information-theoretically secure. Key distribution (the pad) is obviously a practical concern, but consider CD-ROM's.a function which is easy to compute in one direction but hard to find any inverse for, e.g. modular exponentiation, where the inverse problem is known as the discrete logarithm problem. Compare the special case of trap door one-way functions. An example of a one-way operation is multiplication: it is easy to multiply two prime numbers of 100 digits to produce a 200-digit number, but hard to factor that 200-digit number.Certainly the most important unsolved problem in complexity theory. If P = NP, then cryptography as we know it today does not exist. If P = NP, all NP problems are \"easy.\"sending extra messages to confuse eavesdroppers and to defeat traffic analysis. Also aping random bits to a message to be enciphered.also called cleartext, the text that is to be enciphered.Phillip Zimmerman's implementation of RSA, recently upgraded to version 2.0, with more robust components and several new features. RSA Data Security has threatened PZ so he no longer works on it. Version 2.0 was written by a consortium of non-U.S. hackers.integers with no factors other than themselves and 1. The number of primes is unbounded. About 1% of the 100 decimal digit numbers are prime. Since there are about 10^70 particles in the universe, there are about 10^23 100 digit primes for each and every particle in the universe!a scheme by Goldwasser, Micali, and Blum that allows multiple ciphertexts for the same plaintext, i.e., any given plaintext may have many ciphertexts if the ciphering is repeated. This protects against certain types of known ciphertext attacks on RSA.proving who you are, either your true name, or your digital identity. Generally, possession of the right key is sufficient proof (guard your key!). Some work has been done on \"is-a-person\" credentialling agencies, using the so-called Fiat-Shamir protocol...think of this as a way to issue unforgeable digital passports. Physical proof of identity may be done with biometric security methods. Zero knowledge proofs of identity reveal nothing beyond the fact that the identity is as claimed. This has obvious uses for computer access, passwords, etc.a formal procedure for solving some problem. Modern cryptology is mostly about the study of protocols for many problems, such as coin-flipping, bit commitment (blobs), zero knowledge proofs, dining cryptographers, and so on.the key distributed publicly to potential message-senders. It may be published in a phonebook-like directory or otherwise sent. A major concern is the validity of this public key to guard against spoofing or impersonation.the modern breakthrough in cryptology, designed by Diffie and Hellman, with contributions from several others. Uses trap door one-way functions so that encryption may be done by anyone with access to the \"public key\" but decryption may be done only by the holder of the \"private key.\" Encompasses public key encryption, digital signatures, digital cash, and many other protocols and applications.the use of modern cryptologic methods to provided message security and authentication. The RSA algorithm is the most widely used form of public key encryption, although other systems exist. A public key may be freely published, e.g., in phonebook-like directories, while the corresponding private key is closely guarded.M.I.T. and Stanford, due to the work of Rivest, Shamir, Adleman, Diffie, Hellman, and Merkle, formed Public Key Partners to license the various public key, digital signature, and RSA patents. These patents, granted in the early 1980s, expire in the between 1998 and 2002. PKP has licensed RSA Data Security Inc., of Redwood City, CA, which handles the sales, etc.a system based on quantum-mechanical principles. Eavesdroppers alter the quantum state of the system and so are detected. Developed by Brassard and Bennett, only small laboratory demonstrations have been made.the trail of positive and negative associations and judgments that some entity accrues. Credit ratings, academic credentials, and trustworthiness are all examples. A digital pseudonym will accrue these reputation credentials based on actions, opinions of others, etc. In crypto anarchy, reputations and agoric systems will be of paramount importance. There are many fascinating issues of how reputation-based systems work, how credentials can be bought and sold, and so forth.the main public key encryption algorithm, developed by Ron Rivest, Adi Shamir, and Kenneth Adleman. It exploits the difficulty of factoring large numbers to create a private key and public key. First invented in 1978, it remains the core of modern public key systems. It is usually much slower than DES, but special-purpose modular exponentiation chips will likely speed it up. A popular scheme for speed is to use RSA to transmit session keys and then a high-speed cipher like DES for the actual message text.Let p and q be large primes, typically with more than 100 digits. Let n = pq and find some e such that e is relatively prime to (p - 1)(q - 1). The set of numbers p, q, and e is the private key for RSA. The set of numbers n and e forms the public key (recall that knowing n is not sufficient to easily find p and q...the factoring problem). A message M is encrypted by computing M^e mod n. The owner of the private key can decrypt the encrypted message by exploiting number theory results, as follows. An integer d is computed such that ed =1 (mod (p - 1)(q - 1)). Euler proved a theorem that M^(ed) = M mod n and so M^(ed) mod n = M. This means that in some sense the integers e and d are \"inverses\" of each other. [If this is unclear, please see one of the many texts and articles on public key encryption.]A system which uses the same key to encrypt and decrypt traffic at each end of a communication link. Also called a symmetric or one-key system. Contrast with public key cryptosystem.a computer chip embeped in credit card. They can hold cash, credentials, cryptographic keys, etc. Usually these are built with some degree of tamper-resistance. Smart cards may perform part of a crypto transaction, or all of it. Performing part of it may mean checking the computations of a more powerful computer, e.g., one in an ATM.posing as another user. Used for stealing passwords, modifying files, and stealing cash. Digital signatures and other authentication methods are useful to prevent this. Public keys must be validated and protected to ensure that others don't substitute their own public keys which users may then unwittingly use.a part of cryptology dealing with hiding messages and obscuring who is sending and receiving messages. Message traffic is often paped to reduce the signals that would otherwise come from a supen beginning of messages.same as private key cryptosystem.sealed boxes or modules which are hard to open, requiring extensive probing and usually leaving ample evidence that the tampering has occurred. Various protective techniques are used, such as special metal or oxide layers on chips, armored coatings, embeped optical fibers, and other measures to thwart analysis. Popularly called \"tamper-proof boxes.\" Uses include: smart cards, nuclear weapon initiators, cryptographic key holders, ATMs, etc.interfering with messages and possibly modifying them. This may compromise data security, help to break ciphers, etc. See also spoofing.some representation, such as ID cards, subway tokens, money, etc., that indicates possession of some property or value.determining who is sending or receiving messages by analyzing packets, frequency of packets, etc. A part of steganography. Usually handled with traffic paping.the protocols for determining who can send messages in a DC protocol, and when. These rules are needed to prevent collision and deliberate jamming of the channels.dummy messages in DC Nets which are used to catch jammers and disrupters. The messages contain no private information and are published in a blob beforehand so that the trap message can later be opened to reveal the disrupter. (There are many strategies to explore here.)In cryptography, a piece of secret information that allows the holder of a private key to invert a normally hard to invert function.functions which are easy to compute in both the forward and reverse direction but for which the disclosure of an algorithm to compute the function in the forward direction does not provide information on how to compute the function in the reverse direction. More simply put, trap-door one way functions are one way for all but the holder of the secret information. The RSA algorithm is the best-known example of such a function.same as information-theoretic security, that is, unbreakable except by loss or theft of the key.where no amount of intercepted ciphertext is enough to allow the cipher to be broken, as with the use of a one-time pad cipher. Contrast with computationally secure.Various schemes have been devised for anonymous, untraceable voting. Voting schemes should have several properties: privacy of the vote, security of the vote (no multiple votes), robustness against disruption by jammers or disrupters, verifiability (voter has confidence in the results), and efficiency.proofs in which no knowledge of the actual proof is conveyed. Peggy the Prover demonstrates to Sid the Skeptic that she is indeed in possession of some piece of knowledge without actually revealing any of that knowledge. This is useful for access to computers, because eavesdroppers or dishonest sysops cannot steal the knowledge given. Also called minimum disclosure proofs. Useful for proving possession of some property, or credential, such as age or voting status, without revealing personal information."}
{"prompt": "Detecting Double Spending", "completion": "Here is an attempt to describe Chaum's digital cash from his paper, Untraceable Electronic Cash, by Chaum, Fiat, and Naor, from the Crypto 88 proceedings. This cash has the property that the user of the cash can remain anonymous so long as she does not spend it more than once, but if she does double-spend then her identity is revealed.This is how it works in general terms: Alice opens an account with a bank non-anonymously. She shows ID so that the bank knows who she is; both she and the bank know her account number. When she withdraws cash, she goes to the bank or contacts them electronically and presents some proof of who she is and what her account number is, and the bank gives her some digital cash. The digital cash is an information pattern, perhaps stored in a computer file on a smart card or magnetic disk. Later, she spends the digital cash by sending or giving it to Bob, a merchant. Bob can check and verify that the cash must have come from the bank. He accepts the cash if it is valid, giving Alice the merchandise. Later, he sends the cash to the bank to be added to his own account.Note that this much could basically be done with a simple RSA signature. The bank could give Alice a statement saying, \"this is worth $1\", signed by the bank's secret key. Bob could verify that the statement was in fact signed by the bank, and know therefore that no one else than the bank could have created that statement. He accepts it and sends it to the bank, which honors it since it recognizes its own signature.One problem with this trivial money is that double-spending can not be detected or prevented since all the cash looks alike. This can be remedied by having the cash include a unique serial number. Now when Bob goes to accept the cash from Alice, he can call the bank and say, has anyone else deposited serial number 123456? If not, he accepts the cash and deposits it. This is called on-line electronic money; the merchant must check with the bank for each transaction.This improved simple system does not deserve to be called cash, though, because it lacks the distinguishing characteristic of digital cash: it is not anonymous. When the bank sees money with serial number 123456 being deposited, the bank recognizes that this was the same bill that Alice withdrew. The bank can therefore deduce that Alice spent the money at Bob's, and from this kind of information a dossier could be built up with all kinds of privacy-destroying information about her.To allow anonymity, we have to get into the mathematics. What we want is for Alice and the bank collectively to create an RSA signature from the bank that could not be forged, but one which the bank will not recognize as coming from Alice. This is the first thing Chaum's paper discusses.The money in this system is of the form (x, f(x)^(1/3)) mod n, where n is the bank's public modulus. f() (and, below, g()) is a one-way function, one which can be calculated easily but for which it is infeasible to calculate the inverse. It should also be infeasible to come up with two different y,z such that f(y) = f(z). Today there are several suitable choices for one-way functions, the most common being the MD5 algorithm from RSA, and the US government's Secure Hash Algorithm (SHA).The reason the expression above would be accepted as cash is two-fold. First, only the bank can calculate anything ^ (1/3) mod n. This is basically the RSA signing operation for the exponent of 3. Nobody else can find cube roots. The reason f(x) is used is this. Suppose we proposed that (x, x^(1/3)) should be the cash, for some random x, reasoning that only the bank could find the cube root of x. Can you see how to forge cash like this? (Take a few moments and try to see how you could construct a pair like this even if you can't take cube roots.)The answer is that it is easy to forge this by first choosing a random y, and exhibiting the pair (y^3, y). Now we have a number and then its cube root. Yet we didn't have to take any cube roots to find it. That's why this kind of money would be no good.Chaum's system avoids this by taking the cube root of a one-way function of x. To forge it without taking a cube root you'd have to produce (finv(y^3), y), which would match the above pattern, but you can't invert the one-way function like that. So only the bank can create money of the proper form. This can be thought of as the formal, mathematical form of my informal \"money\" above which was a digitally signed note with a serial number. Here, x is the serial number, and it's digitally signed in this special way. Nothing more is needed.The nice thing about this money is that it allows for blinding, a method of having the bank sign the value without knowing what value it is signing. It works like this. Alice chooses x, which will be the x in the cash. She calculates f(x), but instead of sending it to the bank to be signed (raised to the 1/3 power) she first chooses a random number r, and sends f(x)*r^3 to the bank. The bank takes this number to the 1/3 power, getting r * f(x)^(1/3). Remember, though, that the bank doesn't see r or f(x) separately, but just their product. It doesn't know what r or f(x) is. They could each be anything, actually.The bank sends this r * f(x)^(1/3) back to Alice, and she divides it by r, which she knows. This gives her f(x)^(1/3), and she puts that together with x to get her digital cash: (x, f(x)^(1/3)). She has a piece of money which could only have been signed by the bank, yet the bank won't recognize it when it is deposited.Other, non-mathematical, things take place as this withdrawal goes on. Alice must prove her identity to the bank, as mentioned above. And the bank will debit her account by the value of the cash. In this system, we are assuming for simplicity that all cash has the same value. In a real system, different values might be encoded by different exponents than 3.When Alice deposits the money, Bob must call the bank to make sure that it hasn't been deposited before, this being an \"on-line\" system. Although the bank won't recognize x (it's never heard of it) it will remember all the x's which have been deposited and so can alert Bob if the money has been spent before. Both Bob and the bank can verify the digital signature on the money and so will honor it.All the material above takes up less than one page of Chaum's nine-page paper. For Chaum, this much is trivial. Now we get to the interesting part. Now we will see the scheme that allows double-spenders to lose their anonymity. This will allow for \"off-line\" electronic cash; Bob will no longer have to check with the bank to see if the money has already been spent. He accepts it from Alice knowing that if she does cheat, the bank will honor the cash and sue Alice to make up the loss.(To make this explanation easier to follow, I will describe a slightly simplified version of Chaum's off-line cash. The version I describe requires the use of a non-invertable one-way function as in the f() used above. Chaum's version does not require as strong an assumption and provides \"unconditional\" untraceability even if the one-way function is broken.)Let's start with the form of the cash itself. It is the product of k/2 numbers, where k is a \"security parameter\" that affects the chance of a cheater succeeding. Each number is of the form g(xi,yi)^(1/3), where g is a two-argument one-way function similar to the f above. (The \"xi\", \"yi\", \"ai\", etc. here are separate values for each i from 0 to k/2.)xi and yi are like this: xi = f(ai), where ai is a random number, and f is another one-way function. yi is kind of complicated. It is f(ai xor <info>), where <info>, the key to this whole operation, is identifying information about Alice's account! It is her account number concatenated with a serial number for the cash.Now, why go through all this? Here's why. If you could find out both ai and (ai xor <info>), for some i, you would know Alice's identity. (Xor'ing them would produce <info>.) When Alice double-spends, both ai and ai xor <info>will be revealed.What happens when Alice spends the coin is this. For each i from 0 to k/2 Bob chooses 0 or 1 at random. If he chooses 1 he gets told ai and yi. If he chooses 0 he gets told (ai xor <info>) and xi. This will let him check the signature on the money, as described in more detail below.Notice that when Bob gets this information, he'll know a bunch of ai's, and he'll know a bunch of (ai xor <info>)'s, but they are for different i's. He doesn't know both ai and (ai xor <info>) for any one i. So he can't break Alice's anonymity.When Bob deposits the money at the bank, he passes along the information he got from Alice regarding the ai's and such.Now, suppose Alice cheats. She spends the money again somewhere else, at Charlie's. Charlie goes through the same procedure as Bob, choosing 0 or 1 at random for each value of i. Here is the catch. Since he is choosing at random, it would be very unlikely that he will choose exactly the same 0's and 1's that Bob chose. (Here is where the size of k matters \u2013 making it bigger makes it less likely that Charlie and Bob will choose the same pattern of 0's and 1's. But it makes the calculations take longer.) That means for one or more values of i, Charlie will probably choose a 0 where Bob chose a 1, or vice versa.Because of this, if Bob got ai for that i, Charlie will get ai xor <info>. Or if Bob got ai xor <info>, Charlie will get ai. Either way, when Charlie sends his record of this information to the bank, the bank will put Bob's and Charlie's information together and get both ai and ai xor <info>. Xor'ing these together reveals <info>, and Alice is caught! This is the main idea.(Chaum suggests not just relying on random chance to make sure Bob and Charlie use different sets of 1's and 0's. At least some of the bits might be assigned to Bob and Charlie by the bank in such a way that everybody gets a different number. This way it would be guaranteed that Bob and Charlie would choose opposite values for some i.)The reason for the money to have the form it does is so that Bob can check that it is signed by the bank. For each value of i Alice has to give him enough information to calculate xi and yi. If Bob choses a 1, she gives him ai and yi. Given ai Bob can calculate xi (=f(ai)), and with this and yi he can calculate g(xi,yi). If Bob chooses a 0, she gives him (ai xor <info>), as described before, and also xi. Given (ai xor <info>), Bob calculates yi (=f(ai xor <info>)), and with this and xi he can calculate g(xi,yi).So for each i, whether Bob gives a 0 or a 1 he gets enough information to calculate g(xi,yi). He multiplies these all together and confirms that they are equal to Alice's original \"money\" value when it is taken to the 3rd power (recall the money was product of g(xi,yi)^(1/3) for all i). Only the bank could have produced a signature on this one-way function f whose arguments take this special form.One more complication exists. (Well, actually, an almost infinite number of complications exist if you look hard enough. But we'll just focus on one more.) Alice needs to get this special form of money from the bank in such a way that the bank won't recognize it. That means she has to blind it. But in this case the bank wants to be sure that the money is of the proper form when it signs it; in particular, it wants to make darned sure that Alice's <info> which is buried deep in all of those f's of g's is actually the right one for her. But since the bank can't see what it is signing, this is hard to do.Chaum uses cut-and-choose for this. He has Alice prepare all these f's and g's according to the form above, carefully embedding her own incriminating <info> in each one. Then she multiplies each g(xi,yi) by a blinding factor ri^3 just like in the first cash. These are what she sends to the bank to be signed.The trick, though, is that she sends twice as many as will be used. She sends k of them, but only k/2 will be used. (That's why the loop above used k/2 as the limit.) The bank chooses k/2 at random out of the k she sent as the ones which will actually be used. Alice then has to send the blinding ri values for the ones which the bank didn't pick.The idea is that if Alice tries to cheat, embedding \"Bozo\" instead of \"Alice\" in that <info> field, she's taking a chance. First, to be useful, she's going to have to embed it in a lot of <info> fields for different values of i. When Bob and Charlie compare notes after she double-spends, every value of i for which they chose different 0's and 1's, which will be on the average half of them, will reveal an <info> field. If she only fakes a few, chances are her real identity will still be revealed.But if she falsifies a great many of them, then when the bank chooses half, chances are at least some of the fake ones will be in the set the bank didn't choose. Then when Alice has to reveal her blinding r's, the jig will be up. The bank will un-blind all those g(xi,yi)'s which aren't being used, and see the fake <info> fields.This cut-and-choose methodology has the disadvantage that Alice has to do twice as much work in preparing the money, half of which will just be thrown away. But it is a simple, \"brute force\" way to make sure that blinding signatures are actually being done on properly-formed data.So, there you have it. Anonymity as long as you don't cheat, and double-spenders get caught. It's a little complicated but that's what computers are for; Bob and Alice wouldn't do all this stuff by hand. Alice would push the \"generate a money candidate\" button and get something to be sent to the bank (lots of the new PDA's have infrared wireless communications that would be perfect for face-to-face transactions). Bob would push the \"check money\" button when Alice spent it and it would flash red or green. As long as the calculations don't actually take too much time, which they really wouldn't in this case despite this long-winded explanation, the people involved can ignore the details.Hal Finney\nhal@rain.orgHal Finney Home Page"}
{"prompt": "The Cathedral and the Bazaar", "completion": "I anatomize a successful open-source project, fetchmail, that was run as a deliberate test of the surprising theories about software engineering suggested by the history of Linux. I discuss these theories in terms of two fundamentally different development styles, the \"cathedral\" model of most of the commercial world versus the \"bazaar\" model of the Linux world. I show that these models derive from opposing assumptions about the nature of the software-debugging task. I then make a sustained argument from the Linux experience for the proposition that \"Given enough eyeballs, all bugs are shallow\", suggest productive analogies with other self-correcting systems of selfish agents, and conclude with some exploration of the implications of this insight for the future of software.Linux is subversive. Who would have thought even five years ago (1991) that a world-class operating system could coalesce as if by magic out of part-time hacking by several thousand developers scattered all over the planet, connected only by the tenuous strands of the Internet?Certainly not I. By the time Linux swam onto my radar screen in early 1993, I had already been involved in Unix and open-source development for ten years. I was one of the first GNU contributors in the mid-1980s. I had released a good deal of open-source software onto the net, developing or co-developing several programs (nethack, Emacs's VC and GUD modes, xlife, and others) that are still in wide use today. I thought I knew how it was done.Linux overturned much of what I thought I knew. I had been preaching the Unix gospel of small tools, rapid prototyping and evolutionary programming for years. But I also believed there was a certain critical complexity above which a more centralized, a priori approach was required. I believed that the most important software (operating systems and really large tools like the Emacs programming editor) needed to be built like cathedrals, carefully crafted by individual wizards or small bands of mages working in splendid isolation, with no beta to be released before its time.Linus Torvalds's style of development\u2014release early and often, delegate everything you can, be open to the point of promiscuity\u2014came as a surprise. No quiet, reverent cathedral-building here\u2014rather, the Linux community seemed to resemble a great babbling bazaar of differing agendas and approaches (aptly symbolized by the Linux archive sites, who'd take submissions from anyone) out of which a coherent and stable system could seemingly emerge only by a succession of miracles.The fact that this bazaar style seemed to work, and work well, came as a distinct shock. As I learned my way around, I worked hard not just at individual projects, but also at trying to understand why the Linux world not only didn't fly apart in confusion but seemed to go from strength to strength at a speed barely imaginable to cathedral-builders.By mid-1996 I thought I was beginning to understand. Chance handed me a perfect way to test my theory, in the form of an open-source project that I could consciously try to run in the bazaar style. So I did\u2014and it was a significant success.This is the story of that project. I'll use it to propose some aphorisms about effective open-source development. Not all of these are things I first learned in the Linux world, but we'll see how the Linux world gives them particular point. If I'm correct, they'll help you understand exactly what it is that makes the Linux community such a fountain of good software\u2014and, perhaps, they will help you become more productive yourself.Since 1993 I'd been running the technical side of a small free-access Internet service provider called Chester County InterLink (CCIL) in West Chester, Pennsylvania. I co-founded CCIL and wrote our unique multiuser bulletin-board software\u2014you can check it out by telnetting to locke.ccil.org. Today it supports almost three thousand users on thirty lines. The job allowed me 24-hour-a-day access to the net through CCIL's 56K line\u2014in fact, the job practically demanded it!I had gotten quite used to instant Internet email. I found having to periodically telnet over to locke to check my mail annoying. What I wanted was for my mail to be delivered on snark (my home system) so that I would be notified when it arrived and could handle it using all my local tools.The Internet's native mail forwarding protocol, SMTP (Simple Mail Transfer Protocol), wouldn't suit, because it works best when machines are connected full-time, while my personal machine isn't always on the Internet, and doesn't have a static IP address. What I needed was a program that would reach out over my intermittent dialup connection and pull across my mail to be delivered locally. I knew such things existed, and that most of them used a simple application protocol called POP (Post Office Protocol). POP is now widely supported by most common mail clients, but at the time, it wasn't built in to the mail reader I was using.I needed a POP3 client. So I went out on the Internet and found one. Actually, I found three or four. I used one of them for a while, but it was missing what seemed an obvious feature, the ability to hack the addresses on fetched mail so replies would work properly.The problem was this: suppose someone named 'joe' on locke sent me mail. If I fetched the mail to snark and then tried to reply to it, my mailer would cheerfully try to ship it to a nonexistent 'joe' on snark. Hand-editing reply addresses to tack on <@ccil.org> quickly got to be a serious pain.This was clearly something the computer ought to be doing for me. But none of the existing POP clients knew how! And this brings us to the first lesson:Perhaps this should have been obvious (it's long been proverbial that \"Necessity is the mother of invention\") but too often software developers spend their days grinding away for pay at programs they neither need nor love. But not in the Linux world\u2014which may explain why the average quality of software originated in the Linux community is so high.So, did I immediately launch into a furious whirl of coding up a brand-new POP3 client to compete with the existing ones? Not on your life! I looked carefully at the POP utilities I had in hand, asking myself \"Which one is closest to what I want?\" Because:While I don't claim to be a great programmer, I try to imitate one. An important trait of the great ones is constructive laziness. They know that you get an A not for effort but for results, and that it's almost always easier to start from a good partial solution than from nothing at all.Linus Torvalds, for example, didn't actually try to write Linux from scratch. Instead, he started by reusing code and ideas from Minix, a tiny Unix-like operating system for PC clones. Eventually all the Minix code went away or was completely rewritten\u2014but while it was there, it provided scaffolding for the infant that would eventually become Linux.In the same spirit, I went looking for an existing POP utility that was reasonably well coded, to use as a development base.The source-sharing tradition of the Unix world has always been friendly to code reuse (this is why the GNU project chose Unix as a base OS, in spite of serious reservations about the OS itself). The Linux world has taken this tradition nearly to its technological limit; it has terabytes of open sources generally available. So spending time looking for some else's almost-good-enough is more likely to give you good results in the Linux world than anywhere else.And it did for me. With those I'd found earlier, my second search made up a total of nine candidates\u2014fetchpop, PopTart, get-mail, gwpop, pimp, pop-perl, popc, popmail and upop. The one I first settled on was 'fetchpop' by Seung-Hong Oh. I put my header-rewrite feature in it, and made various other improvements which the author accepted into his 1.9 release.A few weeks later, though, I stumbled across the code for popclient by Carl Harris, and found I had a problem. Though fetchpop had some good original ideas in it (such as its background-daemon mode), it could only handle POP3 and was rather amateurishly coded (Seung-Hong was at that time a bright but inexperienced programmer, and both traits showed). Carl's code was better, quite professional and solid, but his program lacked several important and rather tricky-to-implement fetchpop features (including those I'd coded myself).Stay or switch? If I switched, I'd be throwing away the coding I'd already done in exchange for a better development base.A practical motive to switch was the presence of multiple-protocol support. POP3 is the most commonly used of the post-office server protocols, but not the only one. Fetchpop and the other competition didn't do POP2, RPOP, or APOP, and I was already having vague thoughts of perhaps adding IMAP (Internet Message Access Protocol, the most recently designed and most powerful post-office protocol) just for fun.But I had a more theoretical reason to think switching might be as good an idea as well, something I learned long before Linux.Or, to put it another way, you often don't really understand the problem until after the first time you implement a solution. The second time, maybe you know enough to do it right. So if you want to get it right, be ready to start over at least once[JB].Well (I told myself) the changes to fetchpop had been my first try. So I switched.After I sent my first set of popclient patches to Carl Harris on 25 June 1996, I found out that he had basically lost interest in popclient some time before. The code was a bit dusty, with minor bugs hanging out. I had many changes to make, and we quickly agreed that the logical thing for me to do was take over the program.Without my actually noticing, the project had escalated. No longer was I just contemplating minor patches to an existing POP client. I took on maintaining an entire one, and there were ideas bubbling in my head that I knew would probably lead to major changes.In a software culture that encourages code-sharing, this is a natural way for a project to evolve. I was acting out this principle:But Carl Harris's attitude was even more important. He understood thatWithout ever having to discuss it, Carl and I knew we had a common goal of having the best solution out there. The only question for either of us was whether I could establish that I was a safe pair of hands. Once I did that, he acted with grace and dispatch. I hope I will do as well when it comes my turn.And so I inherited popclient. Just as importantly, I inherited popclient's user base. Users are wonderful things to have, and not just because they demonstrate that you're serving a need, that you've done something right. Properly cultivated, they can become co-developers.Another strength of the Unix tradition, one that Linux pushes to a happy extreme, is that a lot of users are hackers too. Because source code is available, they can be effective hackers. This can be tremendously useful for shortening debugging time. Given a bit of encouragement, your users will diagnose problems, suggest fixes, and help improve the code far more quickly than you could unaided.The power of this effect is easy to underestimate. In fact, pretty well all of us in the open-source world drastically underestimated how well it would scale up with number of users and against system complexity, until Linus Torvalds showed us differently.In fact, I think Linus's cleverest and most consequential hack was not the construction of the Linux kernel itself, but rather his invention of the Linux development model. When I expressed this opinion in his presence once, he smiled and quietly repeated something he has often said: \"I'm basically a very lazy person who likes to get credit for things other people actually do.\" Lazy like a fox. Or, as Robert Heinlein famously wrote of one of his characters, too lazy to fail.In retrospect, one precedent for the methods and success of Linux can be seen in the development of the GNU Emacs Lisp library and Lisp code archives. In contrast to the cathedral-building style of the Emacs C core and most other GNU tools, the evolution of the Lisp code pool was fluid and very user-driven. Ideas and prototype modes were often rewritten three or four times before reaching a stable final form. And loosely-coupled collaborations enabled by the Internet, a la Linux, were frequent.Indeed, my own most successful single hack previous to fetchmail was probably Emacs VC (version control) mode, a Linux-like collaboration by email with three other people, only one of whom (Richard Stallman, the author of Emacs and founder of the Free Software Foundation) I have met to this day. It was a front-end for SCCS, RCS and later CVS from within Emacs that offered \"one-touch\" version control operations. It evolved from a tiny, crude sccs.el mode somebody else had written. And the development of VC succeeded because, unlike Emacs itself, Emacs Lisp code could go through release/test/improve generations very quickly.The Emacs story is not unique. There have been other software products with a two-level architecture and a two-tier user community that combined a cathedral-mode core and a bazaar-mode toolbox. One such is MATLAB, a commercial data-analysis and visualization tool. Users of MATLAB and other products with a similar structure invariably report that the action, the ferment, the innovation mostly takes place in the open part of the tool where a large and varied community can tinker with it.Early and frequent releases are a critical part of the Linux development model. Most developers (including me) used to believe this was bad policy for larger than trivial projects, because early versions are almost by definition buggy versions and you don't want to wear out the patience of your users.This belief reinforced the general commitment to a cathedral-building style of development. If the overriding objective was for users to see as few bugs as possible, why then you'd only release a version every six months (or less often), and work like a dog on debugging between releases. The Emacs C core was developed this way. The Lisp library, in effect, was not\u2014because there were active Lisp archives outside the FSF's control, where you could go to find new and development code versions independently of Emacs's release cycle[QR].The most important of these, the Ohio State Emacs Lisp archive, anticipated the spirit and many of the features of today's big Linux archives. But few of us really thought very hard about what we were doing, or about what the very existence of that archive suggested about problems in the FSF's cathedral-building development model. I made one serious attempt around 1992 to get a lot of the Ohio code formally merged into the official Emacs Lisp library. I ran into political trouble and was largely unsuccessful.But by a year later, as Linux became widely visible, it was clear that something different and much healthier was going on there. Linus's open development policy was the very opposite of cathedral-building. Linux's Internet archives were burgeoning, multiple distributions were being floated. And all of this was driven by an unheard-of frequency of core system releases.Linus was treating his users as co-developers in the most effective possible way:Linus's innovation wasn't so much in doing quick-turnaround releases incorporating lots of user feedback (something like this had been Unix-world tradition for a long time), but in scaling it up to a level of intensity that matched the complexity of what he was developing. In those early times (around 1991) it wasn't unknown for him to release a new kernel more than once a day! Because he cultivated his base of co-developers and leveraged the Internet for collaboration harder than anyone else, this worked.But how did it work? And was it something I could duplicate, or did it rely on some unique genius of Linus Torvalds?I didn't think so. Granted, Linus is a damn fine hacker. How many of us could engineer an entire production-quality operating system kernel from scratch? But Linux didn't represent any awesome conceptual leap forward. Linus is not (or at least, not yet) an innovative genius of design in the way that, say, Richard Stallman or James Gosling (of NeWS and Java) are. Rather, Linus seems to me to be a genius of engineering and implementation, with a sixth sense for avoiding bugs and development dead-ends and a true knack for finding the minimum-effort path from point A to point B. Indeed, the whole design of Linux breathes this quality and mirrors Linus's essentially conservative and simplifying design approach.So, if rapid releases and leveraging the Internet medium to the hilt were not accidents but integral parts of Linus's engineering-genius insight into the minimum-effort path, what was he maximizing? What was he cranking out of the machinery?Put that way, the question answers itself. Linus was keeping his hacker/users constantly stimulated and rewarded\u2014stimulated by the prospect of having an ego-satisfying piece of the action, rewarded by the sight of constant (even daily) improvement in their work.Linus was directly aiming to maximize the number of person-hours thrown at debugging and development, even at the possible cost of instability in the code and user-base burnout if any serious bug proved intractable. Linus was behaving as though he believed something like this:Or, less formally, \"Given enough eyeballs, all bugs are shallow.\" I dub this: \"Linus's Law\".My original formulation was that every problem \"will be transparent to somebody\". Linus demurred that the person who understands and fixes the problem is not necessarily or even usually the person who first characterizes it. \"Somebody finds the problem,\" he says, \"and somebody else understands it. And I'll go on record as saying that finding it is the bigger challenge.\" That correction is important; we'll see how in the next section, when we examine the practice of debugging in more detail. But the key point is that both parts of the process (finding and fixing) tend to happen rapidly.In Linus's Law, I think, lies the core difference underlying the cathedral-builder and bazaar styles. In the cathedral-builder view of programming, bugs and development problems are tricky, insidious, deep phenomena. It takes months of scrutiny by a dedicated few to develop confidence that you've winkled them all out. Thus the long release intervals, and the inevitable disappointment when long-awaited releases are not perfect.In the bazaar view, on the other hand, you assume that bugs are generally shallow phenomena\u2014or, at least, that they turn shallow pretty quickly when exposed to a thousand eager co-developers pounding on every single new release. Accordingly you release often in order to get more corrections, and as a beneficial side effect you have less to lose if an occasional botch gets out the door.And that's it. That's enough. If \"Linus's Law\" is false, then any system as complex as the Linux kernel, being hacked over by as many hands as the that kernel was, should at some point have collapsed under the weight of unforseen bad interactions and undiscovered \"deep\" bugs. If it's true, on the other hand, it is sufficient to explain Linux's relative lack of bugginess and its continuous uptimes spanning months or even years.Maybe it shouldn't have been such a surprise, at that. Sociologists years ago discovered that the averaged opinion of a mass of equally expert (or equally ignorant) observers is quite a bit more reliable a predictor than the opinion of a single randomly-chosen one of the observers. They called this the Delphi effect. It appears that what Linus has shown is that this applies even to debugging an operating system\u2014that the Delphi effect can tame development complexity even at the complexity level of an OS kernel.[CV]One special feature of the Linux situation that clearly helps along the Delphi effect is the fact that the contributors for any given project are self-selected. An early respondent pointed out that contributions are received not from a random sample, but from people who are interested enough to use the software, learn about how it works, attempt to find solutions to problems they encounter, and actually produce an apparently reasonable fix. Anyone who passes all these filters is highly likely to have something useful to contribute.Linus's Law can be rephrased as \"Debugging is parallelizable\". Although debugging requires debuggers to communicate with some coordinating developer, it doesn't require significant coordination between debuggers. Thus it doesn't fall prey to the same quadratic complexity and management costs that make adding developers problematic.In practice, the theoretical loss of efficiency due to duplication of work by debuggers almost never seems to be an issue in the Linux world. One effect of a \"release early and often\" policy is to minimize such duplication by propagating fed-back fixes quickly[JH].Brooks (the author of The Mythical Man-Month) even made an off-hand observation related to this: \"The total cost of maintaining a widely used program is typically 40 percent or more of the cost of developing it. Surprisingly this cost is strongly affected by the number of users. More users find more bugs.\" [emphasis added].More users find more bugs because adding more users adds more different ways of stressing the program. This effect is amplified when the users are co-developers. Each one approaches the task of bug characterization with a slightly different perceptual set and analytical toolkit, a different angle on the problem. The \"Delphi effect\" seems to work precisely because of this variation. In the specific context of debugging, the variation also tends to reduce duplication of effort.So adding more beta-testers may not reduce the complexity of the current \"deepest\" bug from the developer's point of view, but it increases the probability that someone's toolkit will be matched to the problem in such a way that the bug is shallow to that person.Linus coppers his bets, too. In case there are serious bugs, Linux kernel version are numbered in such a way that potential users can make a choice either to run the last version designated \"stable\" or to ride the cutting edge and risk bugs in order to get new features. This tactic is not yet systematically imitated by most Linux hackers, but perhaps it should be; the fact that either choice is available makes both more attractive.[HBS]It's one thing to observe in the large that the bazaar style greatly accelerates debugging and code evolution. It's another to understand exactly how and why it does so at the micro-level of day-to-day developer and tester behavior. In this section (written three years after the original paper, using insights by developers who read it and re-examined their own behavior) we'll take a hard look at the actual mechanisms. Non-technically inclined readers can safely skip to the next section.One key to understanding is to realize exactly why it is that the kind of bug report non\u2013source-aware users normally turn in tends not to be very useful. Non\u2013source-aware users tend to report only surface symptoms; they take their environment for granted, so they (a) omit critical background data, and (b) seldom include a reliable recipe for reproducing the bug.The underlying problem here is a mismatch between the tester's and the developer's mental models of the program; the tester, on the outside looking in, and the developer on the inside looking out. In closed-source development they're both stuck in these roles, and tend to talk past each other and find each other deeply frustrating.Open-source development breaks this bind, making it far easier for tester and developer to develop a shared representation grounded in the actual source code and to communicate effectively about it. Practically, there is a huge difference in leverage for the developer between the kind of bug report that just reports externally-visible symptoms and the kind that hooks directly to the developer's source-code\u2013based mental representation of the program.Most bugs, most of the time, are easily nailed given even an incomplete but suggestive characterization of their error conditions at source-code level. When someone among your beta-testers can point out, \"there's a boundary problem in line nnn\", or even just \"under conditions X, Y, and Z, this variable rolls over\", a quick look at the offending code often suffices to pin down the exact mode of failure and generate a fix.Thus, source-code awareness by both parties greatly enhances both good communication and the synergy between what a beta-tester reports and what the core developer(s) know. In turn, this means that the core developers' time tends to be well conserved, even with many collaborators.Another characteristic of the open-source method that conserves developer time is the communication structure of typical open-source projects. Above I used the term \"core developer\"; this reflects a distinction between the project core (typically quite small; a single core developer is common, and one to three is typical) and the project halo of beta-testers and available contributors (which often numbers in the hundreds).The fundamental problem that traditional software-development organization addresses is Brook's Law: \"Adding more programmers to a late project makes it later.\" More generally, Brooks's Law predicts that the complexity and communication costs of a project rise with the square of the number of developers, while work done only rises linearly.Brooks's Law is founded on experience that bugs tend strongly to cluster at the interfaces between code written by different people, and that communications/coordination overhead on a project tends to rise with the number of interfaces between human beings. Thus, problems scale with the number of communications paths between developers, which scales as the square of the humber of developers (more precisely, according to the formula N*(N - 1)/2 where N is the number of developers).The Brooks's Law analysis (and the resulting fear of large numbers in development groups) rests on a hidden assummption: that the communications structure of the project is necessarily a complete graph, that everybody talks to everybody else. But on open-source projects, the halo developers work on what are in effect separable parallel subtasks and interact with each other very little; code changes and bug reports stream through the core group, and only within that small core group do we pay the full Brooksian overhead.[SU]There are are still more reasons that source-code\u2013level bug reporting tends to be very efficient. They center around the fact that a single error can often have multiple possible symptoms, manifesting differently depending on details of the user's usage pattern and environment. Such errors tend to be exactly the sort of complex and subtle bugs (such as dynamic-memory-management errors or nondeterministic interrupt-window artifacts) that are hardest to reproduce at will or to pin down by static analysis, and which do the most to create long-term problems in software.A tester who sends in a tentative source-code\u2013level characterization of such a multi-symptom bug (e.g. \"It looks to me like there's a window in the signal handling near line 1250\" or \"Where are you zeroing that buffer?\") may give a developer, otherwise too close to the code to see it, the critical clue to a half-dozen disparate symptoms. In cases like this, it may be hard or even impossible to know which externally-visible misbehaviour was caused by precisely which bug\u2014but with frequent releases, it's unnecessary to know. Other collaborators will be likely to find out quickly whether their bug has been fixed or not. In many cases, source-level bug reports will cause misbehaviours to drop out without ever having been attributed to any specific fix.Complex multi-symptom errors also tend to have multiple trace paths from surface symptoms back to the actual bug. Which of the trace paths a given developer or tester can chase may depend on subtleties of that person's environment, and may well change in a not obviously deterministic way over time. In effect, each developer and tester samples a semi-random set of the program's state space when looking for the etiology of a symptom. The more subtle and complex the bug, the less likely that skill will be able to guarantee the relevance of that sample.For simple and easily reproducible bugs, then, the accent will be on the \"semi\" rather than the \"random\"; debugging skill and intimacy with the code and its architecture will matter a lot. But for complex bugs, the accent will be on the \"random\". Under these circumstances many people running traces will be much more effective than a few people running traces sequentially\u2014even if the few have a much higher average skill level.This effect will be greatly amplified if the difficulty of following trace paths from different surface symptoms back to a bug varies significantly in a way that can't be predicted by looking at the symptoms. A single developer sampling those paths sequentially will be as likely to pick a difficult trace path on the first try as an easy one. On the other hand, suppose many people are trying trace paths in parallel while doing rapid releases. Then it is likely one of them will find the easiest path immediately, and nail the bug in a much shorter time. The project maintainer will see that, ship a new release, and the other people running traces on the same bug will be able to stop before having spent too much time on their more difficult traces[RJ].Having studied Linus's behavior and formed a theory about why it was successful, I made a conscious decision to test this theory on my new (admittedly much less complex and ambitious) project.But the first thing I did was reorganize and simplify popclient a lot. Carl Harris's implementation was very sound, but exhibited a kind of unnecessary complexity common to many C programmers. He treated the code as central and the data structures as support for the code. As a result, the code was beautiful but the data structure design ad-hoc and rather ugly (at least by the high standards of this veteran LISP hacker).I had another purpose for rewriting besides improving the code and the data structure design, however. That was to evolve it into something I understood completely. It's no fun to be responsible for fixing bugs in a program you don't understand.For the first month or so, then, I was simply following out the implications of Carl's basic design. The first serious change I made was to add IMAP support. I did this by reorganizing the protocol machines into a generic driver and three method tables (for POP2, POP3, and IMAP). This and the previous changes illustrate a general principle that's good for programmers to keep in mind, especially in languages like C that don't naturally do dynamic typing:Brooks, Chapter 9: \"Show me your flowchart and conceal your tables, and I shall continue to be mystified. Show me your tables, and I won't usually need your flowchart; it'll be obvious.\"\" Allowing for thirty years of terminological/cultural shift, it's the same point.At this point (early September 1996, about six weeks from zero) I started thinking that a name change might be in order\u2014after all, it wasn't just a POP client any more. But I hesitated, because there was as yet nothing genuinely new in the design. My version of popclient had yet to develop an identity of its own.That changed, radically, when popclient learned how to forward fetched mail to the SMTP port. I'll get to that in a moment. But first: I said earlier that I'd decided to use this project to test my theory about what Linus Torvalds had done right. How (you may well ask) did I do that? In these ways:The payoff from these simple measures was immediate. From the beginning of the project, I got bug reports of a quality most developers would kill for, often with good fixes attached. I got thoughtful criticism, I got fan mail, I got intelligent feature suggestions. Which leads to:One interesting measure of fetchmail's success is the sheer size of the project beta list, fetchmail-friends. At the time of latest revision of this paper (November 2000) it has 287 members and is adding two or three a week.Actually, when I revised in late May 1997 I found the list was beginning to lose members from its high of close to 300 for an interesting reason. Several people have asked me to unsubscribe them because fetchmail is working so well for them that they no longer need to see the list traffic! Perhaps this is part of the normal life-cycle of a mature bazaar-style project.The real turning point in the project was when Harry Hochheiser sent me his scratch code for forwarding mail to the client machine's SMTP port. I realized almost immediately that a reliable implementation of this feature would make all the other mail delivery modes next to obsolete.For many weeks I had been tweaking fetchmail rather incrementally while feeling like the interface design was serviceable but grubby\u2014inelegant and with too many exiguous options hanging out all over. The options to dump fetched mail to a mailbox file or standard output particularly bothered me, but I couldn't figure out why.(If you don't care about the technicalia of Internet mail, the next two paragraphs can be safely skipped.)What I saw when I thought about SMTP forwarding was that popclient had been trying to do too many things. It had been designed to be both a mail transport agent (MTA) and a local delivery agent (MDA). With SMTP forwarding, it could get out of the MDA business and be a pure MTA, handing off mail to other programs for local delivery just as sendmail does.Why mess with all the complexity of configuring a mail delivery agent or setting up lock-and-append on a mailbox when port 25 is almost guaranteed to be there on any platform with TCP/IP support in the first place? Especially when this means retrieved mail is guaranteed to look like normal sender-initiated SMTP mail, which is really what we want anyway.(Back to a higher level....)Even if you didn't follow the preceding technical jargon, there are several important lessons here. First, this SMTP-forwarding concept was the biggest single payoff I got from consciously trying to emulate Linus's methods. A user gave me this terrific idea\u2014all I had to do was understand the implications.Interestingly enough, you will quickly find that if you are completely and self-deprecatingly truthful about how much you owe other people, the world at large will treat you as though you did every bit of the invention yourself and are just being becomingly modest about your innate genius. We can all see how well this worked for Linus!(When I gave my talk at the first Perl Conference in August 1997, hacker extraordinaire Larry Wall was in the front row. As I got to the last line above he called out, religious-revival style, \"Tell it, tell it, brother!\". The whole audience laughed, because they knew this had worked for the inventor of Perl, too.)After a very few weeks of running the project in the same spirit, I began to get similar praise not just from my users but from other people to whom the word leaked out. I stashed away some of that email; I'll look at it again sometime if I ever start wondering whether my life has been worthwhile :-).But there are two more fundamental, non-political lessons here that are general to all kinds of design.I had been trying to solve the wrong problem by continuing to develop popclient as a combined MTA/MDA with all kinds of funky local delivery modes. Fetchmail's design needed to be rethought from the ground up as a pure MTA, a part of the normal SMTP-speaking Internet mail path.When you hit a wall in development\u2014when you find yourself hard put to think past the next patch\u2014it's often time to ask not whether you've got the right answer, but whether you're asking the right question. Perhaps the problem needs to be reframed.Well, I had reframed my problem. Clearly, the right thing to do was (1) hack SMTP forwarding support into the generic driver, (2) make it the default mode, and (3) eventually throw out all the other delivery modes, especially the deliver-to-file and deliver-to-standard-output options.I hesitated over step 3 for some time, fearing to upset long-time popclient users dependent on the alternate delivery mechanisms. In theory, they could immediately switch to .forward files or their non-sendmail equivalents to get the same effects. In practice the transition might have been messy.But when I did it, the benefits proved huge. The cruftiest parts of the driver code vanished. Configuration got radically simpler\u2014no more grovelling around for the system MDA and user's mailbox, no more worries about whether the underlying OS supports file locking.Also, the only way to lose mail vanished. If you specified delivery to a file and the disk got full, your mail got lost. This can't happen with SMTP forwarding because your SMTP listener won't return OK unless the message can be delivered or at least spooled for later delivery.Also, performance improved (though not so you'd notice it in a single run). Another not insignificant benefit of this change was that the manual page got a lot simpler.Later, I had to bring delivery via a user-specified local MDA back in order to allow handling of some obscure situations involving dynamic SLIP. But I found a much simpler way to do it.The moral? Don't hesitate to throw away superannuated features when you can do it without loss of effectiveness. Antoine de Saint-Exup\u00e9ry (who was an aviator and aircraft designer when he wasn't authoring classic children's books) said:When your code is getting both better and simpler, that is when you know it's right. And in the process, the fetchmail design acquired an identity of its own, different from the ancestral popclient.It was time for the name change. The new design looked much more like a dual of sendmail than the old popclient had; both are MTAs, but where sendmail pushes then delivers, the new popclient pulls then delivers. So, two months off the blocks, I renamed it fetchmail.There is a more general lesson in this story about how SMTP delivery came to fetchmail. It is not only debugging that is parallelizable; development and (to a perhaps surprising extent) exploration of design space is, too. When your development mode is rapidly iterative, development and enhancement may become special cases of debugging\u2014fixing 'bugs of omission' in the original capabilities or concept of the software.Even at a higher level of design, it can be very valuable to have lots of co-developers random-walking through the design space near your product. Consider the way a puddle of water finds a drain, or better yet how ants find food: exploration essentially by diffusion, followed by exploitation mediated by a scalable communication mechanism. This works very well; as with Harry Hochheiser and me, one of your outriders may well find a huge win nearby that you were just a little too close-focused to see.There I was with a neat and innovative design, code that I knew worked well because I used it every day, and a burgeoning beta list. It gradually dawned on me that I was no longer engaged in a trivial personal hack that might happen to be useful to few other people. I had my hands on a program that every hacker with a Unix box and a SLIP/PPP mail connection really needs.With the SMTP forwarding feature, it pulled far enough in front of the competition to potentially become a \"category killer\", one of those classic programs that fills its niche so competently that the alternatives are not just discarded but almost forgotten.I think you can't really aim or plan for a result like this. You have to get pulled into it by design ideas so powerful that afterward the results just seem inevitable, natural, even foreordained. The only way to try for ideas like that is by having lots of ideas\u2014or by having the engineering judgment to take other peoples' good ideas beyond where the originators thought they could go.Andy Tanenbaum had the original idea to build a simple native Unix for IBM PCs, for use as a teaching tool (he called it Minix). Linus Torvalds pushed the Minix concept further than Andrew probably thought it could go\u2014and it grew into something wonderful. In the same way (though on a smaller scale), I took some ideas by Carl Harris and Harry Hochheiser and pushed them hard. Neither of us was 'original' in the romantic way people think is genius. But then, most science and engineering and software development isn't done by original genius, hacker mythology to the contrary.The results were pretty heady stuff all the same\u2014in fact, just the kind of success every hacker lives for! And they meant I would have to set my standards even higher. To make fetchmail as good as I now saw it could be, I'd have to write not just for my own needs, but also include and support features necessary to others but outside my orbit. And do that while keeping the program simple and robust.The first and overwhelmingly most important feature I wrote after realizing this was multidrop support\u2014the ability to fetch mail from mailboxes that had accumulated all mail for a group of users, and then route each piece of mail to its individual recipients.I decided to add the multidrop support partly because some users were clamoring for it, but mostly because I thought it would shake bugs out of the single-drop code by forcing me to deal with addressing in full generality. And so it proved. Getting RFC 822 address parsing right took me a remarkably long time, not because any individual piece of it is hard but because it involved a pile of interdependent and fussy details.But multidrop addressing turned out to be an excellent design decision as well. Here's how I knew:The unexpected use for multidrop fetchmail is to run mailing lists with the list kept, and alias expansion done, on the client side of the Internet connection. This means someone running a personal machine through an ISP account can manage a mailing list without continuing access to the ISP's alias files.Another important change demanded by my beta-testers was support for 8-bit MIME (Multipurpose Internet Mail Extensions) operation. This was pretty easy to do, because I had been careful to keep the code 8-bit clean (that is, to not press the 8th bit, unused in the ASCII character set, into service to carry information within the program). Not because I anticipated the demand for this feature, but rather in obedience to another rule:Had I not obeyed this rule, 8-bit MIME support would have been difficult and buggy. As it was, all I had to do is read the MIME standard (RFC 1652) and add a trivial bit of header-generation logic.Some European users bugged me into adding an option to limit the number of messages retrieved per session (so they can control costs from their expensive phone networks). I resisted this for a long time, and I'm still not entirely happy about it. But if you're writing for the world, you have to listen to your customers\u2014this doesn't change just because they're not paying you in money.Before we go back to general software-engineering issues, there are a couple more specific lessons from the fetchmail experience to ponder. Nontechnical readers can safely skip this section.The rc (control) file syntax includes optional 'noise' keywords that are entirely ignored by the parser. The English-like syntax they allow is considerably more readable than the traditional terse keyword-value pairs you get when you strip them all out.These started out as a late-night experiment when I noticed how much the rc file declarations were beginning to resemble an imperative minilanguage. (This is also why I changed the original popclient \"server\" keyword to \"poll\").It seemed to me that trying to make that imperative minilanguage more like English might make it easier to use. Now, although I'm a convinced partisan of the \"make it a language\" school of design as exemplified by Emacs and HTML and many database engines, I am not normally a big fan of \"English-like\" syntaxes.Traditionally programmers have tended to favor control syntaxes that are very precise and compact and have no redundancy at all. This is a cultural legacy from when computing resources were expensive, so parsing stages had to be as cheap and simple as possible. English, with about 50% redundancy, looked like a very inappropriate model then.This is not my reason for normally avoiding English-like syntaxes; I mention it here only to demolish it. With cheap cycles and core, terseness should not be an end in itself. Nowadays it's more important for a language to be convenient for humans than to be cheap for the computer.There remain, however, good reasons to be wary. One is the complexity cost of the parsing stage\u2014you don't want to raise that to the point where it's a significant source of bugs and user confusion in itself. Another is that trying to make a language syntax English-like often demands that the \"English\" it speaks be bent seriously out of shape, so much so that the superficial resemblance to natural language is as confusing as a traditional syntax would have been. (You see this bad effect in a lot of so-called \"fourth generation\" and commercial database-query languages.)The fetchmail control syntax seems to avoid these problems because the language domain is extremely restricted. It's nowhere near a general-purpose language; the things it says simply are not very complicated, so there's little potential for confusion in moving mentally between a tiny subset of English and the actual control language. I think there may be a broader lesson here:Another lesson is about security by obscurity. Some fetchmail users asked me to change the software to store passwords encrypted in the rc file, so snoopers wouldn't be able to casually see them.I didn't do it, because this doesn't actually add protection. Anyone who's acquired permissions to read your rc file will be able to run fetchmail as you anyway\u2014and if it's your password they're after, they'd be able to rip the necessary decoder out of the fetchmail code itself to get it.All .fetchmailrc password encryption would have done is give a false sense of security to people who don't think very hard. The general rule here is:Early reviewers and test audiences for this essay consistently raised questions about the preconditions for successful bazaar-style development, including both the qualifications of the project leader and the state of code at the time one goes public and starts to try to build a co-developer community.It's fairly clear that one cannot code from the ground up in bazaar style[IN]. One can test, debug and improve in bazaar style, but it would be very hard to originate a project in bazaar mode. Linus didn't try it. I didn't either. Your nascent developer community needs to have something runnable and testable to play with.When you start community-building, what you need to be able to present is a plausible promise. Your program doesn't have to work particularly well. It can be crude, buggy, incomplete, and poorly documented. What it must not fail to do is (a) run, and (b) convince potential co-developers that it can be evolved into something really neat in the foreseeable future.Linux and fetchmail both went public with strong, attractive basic designs. Many people thinking about the bazaar model as I have presented it have correctly considered this critical, then jumped from that to the conclusion that a high degree of design intuition and cleverness in the project leader is indispensable.But Linus got his design from Unix. I got mine initially from the ancestral popclient (though it would later change a great deal, much more proportionately speaking than has Linux). So does the leader/coordinator for a bazaar-style effort really have to have exceptional design talent, or can he get by through leveraging the design talent of others?I think it is not critical that the coordinator be able to originate designs of exceptional brilliance, but it is absolutely critical that the coordinator be able to recognize good design ideas from others.Both the Linux and fetchmail projects show evidence of this. Linus, while not (as previously discussed) a spectacularly original designer, has displayed a powerful knack for recognizing good design and integrating it into the Linux kernel. And I have already described how the single most powerful design idea in fetchmail (SMTP forwarding) came from somebody else.Early audiences of this essay complimented me by suggesting that I am prone to undervalue design originality in bazaar projects because I have a lot of it myself, and therefore take it for granted. There may be some truth to this; design (as opposed to coding or debugging) is certainly my strongest skill.But the problem with being clever and original in software design is that it gets to be a habit\u2014you start reflexively making things cute and complicated when you should be keeping them robust and simple. I have had projects crash on me because I made this mistake, but I managed to avoid this with fetchmail.So I believe the fetchmail project succeeded partly because I restrained my tendency to be clever; this argues (at least) against design originality being essential for successful bazaar projects. And consider Linux. Suppose Linus Torvalds had been trying to pull off fundamental innovations in operating system design during the development; does it seem at all likely that the resulting kernel would be as stable and successful as what we have?A certain base level of design and coding skill is required, of course, but I expect almost anybody seriously thinking of launching a bazaar effort will already be above that minimum. The open-source community's internal market in reputation exerts subtle pressure on people not to launch development efforts they're not competent to follow through on. So far this seems to have worked pretty well.There is another kind of skill not normally associated with software development which I think is as important as design cleverness to bazaar projects\u2014and it may be more important. A bazaar project coordinator or leader must have good people and communications skills.This should be obvious. In order to build a development community, you need to attract people, interest them in what you're doing, and keep them happy about the amount of work they're doing. Technical sizzle will go a long way towards accomplishing this, but it's far from the whole story. The personality you project matters, too.It is not a coincidence that Linus is a nice guy who makes people like him and want to help him. It's not a coincidence that I'm an energetic extrovert who enjoys working a crowd and has some of the delivery and instincts of a stand-up comic. To make the bazaar model work, it helps enormously if you have at least a little skill at charming people.It is truly written: the best hacks start out as personal solutions to the author's everyday problems, and spread because the problem turns out to be typical for a large class of users. This takes us back to the matter of rule 1, restated in a perhaps more useful way:So it was with Carl Harris and the ancestral popclient, and so with me and fetchmail. But this has been understood for a long time. The interesting point, the point that the histories of Linux and fetchmail seem to demand we focus on, is the next stage\u2014the evolution of software in the presence of a large and active community of users and co-developers.In The Mythical Man-Month, Fred Brooks observed that programmer time is not fungible; adding developers to a late software project makes it later. As we've seen previously, he argued that the complexity and communication costs of a project rise with the square of the number of developers, while work done only rises linearly. Brooks's Law has been widely regarded as a truism. But we've examined in this essay an number of ways in which the process of open-source development falsifies the assumptionms behind it\u2014and, empirically, if Brooks's Law were the whole picture Linux would be impossible.Gerald Weinberg's classic The Psychology of Computer Programming supplied what, in hindsight, we can see as a vital correction to Brooks. In his discussion of \"egoless programming\", Weinberg observed that in shops where developers are not territorial about their code, and encourage other people to look for bugs and potential improvements in it, improvement happens dramatically faster than elsewhere. (Recently, Kent Beck's 'extreme programming' technique of deploying coders in pairs looking over one anothers' shoulders might be seen as an attempt to force this effect.)Weinberg's choice of terminology has perhaps prevented his analysis from gaining the acceptance it deserved\u2014one has to smile at the thought of describing Internet hackers as \"egoless\". But I think his argument looks more compelling today than ever.The bazaar method, by harnessing the full power of the \"egoless programming\" effect, strongly mitigates the effect of Brooks's Law. The principle behind Brooks's Law is not repealed, but given a large developer population and cheap communications its effects can be swamped by competing nonlinearities that are not otherwise visible. This resembles the relationship between Newtonian and Einsteinian physics\u2014the older system is still valid at low energies, but if you push mass and velocity high enough you get surprises like nuclear explosions or Linux.The history of Unix should have prepared us for what we're learning from Linux (and what I've verified experimentally on a smaller scale by deliberately copying Linus's methods[EGCS]). That is, while coding remains an essentially solitary activity, the really great hacks come from harnessing the attention and brainpower of entire communities. The developer who uses only his or her own brain in a closed project is going to fall behind the developer who knows how to create an open, evolutionary context in which feedback exploring the design space, code contributions, bug-spotting, and other improvements come from from hundreds (perhaps thousands) of people.But the traditional Unix world was prevented from pushing this approach to the ultimate by several factors. One was the legal contraints of various licenses, trade secrets, and commercial interests. Another (in hindsight) was that the Internet wasn't yet good enough.Before cheap Internet, there were some geographically compact communities where the culture encouraged Weinberg's \"egoless\" programming, and a developer could easily attract a lot of skilled kibitzers and co-developers. Bell Labs, the MIT AI and LCS labs, UC Berkeley\u2014these became the home of innovations that are legendary and still potent.Linux was the first project for which a conscious and successful effort to use the entire world as its talent pool was made. I don't think it's a coincidence that the gestation period of Linux coincided with the birth of the World Wide Web, and that Linux left its infancy during the same period in 1993\u20141994 that saw the takeoff of the ISP industry and the explosion of mainstream interest in the Internet. Linus was the first person who learned how to play by the new rules that pervasive Internet access made possible.While cheap Internet was a necessary condition for the Linux model to evolve, I think it was not by itself a sufficient condition. Another vital factor was the development of a leadership style and set of cooperative customs that could allow developers to attract co-developers and get maximum leverage out of the medium.But what is this leadership style and what are these customs? They cannot be based on power relationships\u2014and even if they could be, leadership by coercion would not produce the results we see. Weinberg quotes the autobiography of the 19th-century Russian anarchist Pyotr Alexeyvich Kropotkin's Memoirs of a Revolutionist to good effect on this subject:Having been brought up in a serf-owner's family, I entered active life, like all young men of my time, with a great deal of confidence in the necessity of commanding, ordering, scolding, punishing and the like. But when, at an early stage, I had to manage serious enterprises and to deal with [free] men, and when each mistake would lead at once to heavy consequences, I began to appreciate the difference between acting on the principle of command and discipline and acting on the principle of common understanding. The former works admirably in a military parade, but it is worth nothing where real life is concerned, and the aim can be achieved only through the severe effort of many converging wills.The \"severe effort of many converging wills\" is precisely what a project like Linux requires\u2014and the \"principle of command\" is effectively impossible to apply among volunteers in the anarchist's paradise we call the Internet. To operate and compete effectively, hackers who want to lead collaborative projects have to learn how to recruit and energize effective communities of interest in the mode vaguely suggested by Kropotkin's \"principle of understanding\". They must learn to use Linus's Law.[SP]Earlier I referred to the \"Delphi effect\" as a possible explanation for Linus's Law. But more powerful analogies to adaptive systems in biology and economics also irresistably suggest themselves. The Linux world behaves in many respects like a free market or an ecology, a collection of selfish agents attempting to maximize utility which in the process produces a self-correcting spontaneous order more elaborate and efficient than any amount of central planning could have achieved. Here, then, is the place to seek the \"principle of understanding\".The \"utility function\" Linux hackers are maximizing is not classically economic, but is the intangible of their own ego satisfaction and reputation among other hackers. (One may call their motivation \"altruistic\", but this ignores the fact that altruism is itself a form of ego satisfaction for the altruist). Voluntary cultures that work this way are not actually uncommon; one other in which I have long participated is science fiction fandom, which unlike hackerdom has long explicitly recognized \"egoboo\" (ego-boosting, or the enhancement of one's reputation among other fans) as the basic drive behind volunteer activity.Linus, by successfully positioning himself as the gatekeeper of a project in which the development is mostly done by others, and nurturing interest in the project until it became self-sustaining, has shown an acute grasp of Kropotkin's \"principle of shared understanding\". This quasi-economic view of the Linux world enables us to see how that understanding is applied.We may view Linus's method as a way to create an efficient market in \"egoboo\"\u2014to connect the selfishness of individual hackers as firmly as possible to difficult ends that can only be achieved by sustained cooperation. With the fetchmail project I have shown (albeit on a smaller scale) that his methods can be duplicated with good results. Perhaps I have even done it a bit more consciously and systematically than he.Many people (especially those who politically distrust free markets) would expect a culture of self-directed egoists to be fragmented, territorial, wasteful, secretive, and hostile. But this expectation is clearly falsified by (to give just one example) the stunning variety, quality, and depth of Linux documentation. It is a hallowed given that programmers hate documenting; how is it, then, that Linux hackers generate so much documentation? Evidently Linux's free market in egoboo works better to produce virtuous, other-directed behavior than the massively-funded documentation shops of commercial software producers.Both the fetchmail and Linux kernel projects show that by properly rewarding the egos of many other hackers, a strong developer/coordinator can use the Internet to capture the benefits of having lots of co-developers without having a project collapse into a chaotic mess. So to Brooks's Law I counter-propose the following:I think the future of open-source software will increasingly belong to people who know how to play Linus's game, people who leave behind the cathedral and embrace the bazaar. This is not to say that individual vision and brilliance will no longer matter; rather, I think that the cutting edge of open-source software will belong to people who start from individual vision and brilliance, then amplify it through the effective construction of voluntary communities of interest.Perhaps this is not only the future of open-source software. No closed-source developer can match the pool of talent the Linux community can bring to bear on a problem. Very few could afford even to hire the more than 200 (1999: 600, 2000: 800) people who have contributed to fetchmail!Perhaps in the end the open-source culture will triumph not because cooperation is morally right or software \"hoarding\" is morally wrong (assuming you believe the latter, which neither Linus nor I do), but simply because the closed-source world cannot win an evolutionary arms race with open-source communities that can put orders of magnitude more skilled time into a problem.The original Cathedral and Bazaar paper of 1997 ended with the vision above\u2014that of happy networked hordes of programmer/anarchists outcompeting and overwhelming the hierarchical world of conventional closed software.A good many skeptics weren't convinced, however; and the questions they raise deserve a fair engagement. Most of the objections to the bazaar argument come down to the claim that its proponents have underestimated the productivity-multiplying effect of conventional management.Traditionally-minded software-development managers often object that the casualness with which project groups form and change and dissolve in the open-source world negates a significant part of the apparent advantage of numbers that the open-source community has over any single closed-source developer. They would observe that in software development it is really sustained effort over time and the degree to which customers can expect continuing investment in the product that matters, not just how many people have thrown a bone in the pot and left it to simmer.There is something to this argument, to be sure; in fact, I have developed the idea that expected future service value is the key to the economics of software production in the essay The Magic Cauldron.But this argument also has a major hidden problem; its implicit assumption that open-source development cannot deliver such sustained effort. In fact, there have been open-source projects that maintained a coherent direction and an effective maintainer community over quite long periods of time without the kinds of incentive structures or institutional controls that conventional management finds essential. The development of the GNU Emacs editor is an extreme and instructive example; it has absorbed the efforts of hundreds of contributors over 15 years into a unified architectural vision, despite high turnover and the fact that only one person (its author) has been continuously active during all that time. No closed-source editor has ever matched this longevity record.This suggests a reason for questioning the advantages of conventionally-managed software development that is independent of the rest of the arguments over cathedral vs. bazaar mode. If it's possible for GNU Emacs to express a consistent architectural vision over 15 years, or for an operating system like Linux to do the same over 8 years of rapidly changing hardware and platform technology; and if (as is indeed the case) there have been many well-architected open-source projects of more than 5 years duration\u2014then we are entitled to wonder what, if anything, the tremendous overhead of conventionally-managed development is actually buying us.Whatever it is certainly doesn't include reliable execution by deadline, or on budget, or to all features of the specification; it's a rare 'managed' project that meets even one of these goals, let alone all three. It also does not appear to be ability to adapt to changes in technology and economic context during the project lifetime, either; the open-source community has proven far more effective on that score (as one can readily verify, for example, by comparing the 30-year history of the Internet with the short half-lives of proprietary networking technologies\u2014or the cost of the 16-bit to 32-bit transition in Microsoft Windows with the nearly effortless upward migration of Linux during the same period, not only along the Intel line of development but to more than a dozen other hardware platforms, including the 64-bit Alpha as well).One thing many people think the traditional mode buys you is somebody to hold legally liable and potentially recover compensation from if the project goes wrong. But this is an illusion; most software licenses are written to disclaim even warranty of merchantability, let alone performance\u2014and cases of successful recovery for software nonperformance are vanishingly rare. Even if they were common, feeling comforted by having somebody to sue would be missing the point. You didn't want to be in a lawsuit; you wanted working software.So what is all that management overhead buying?In order to understand that, we need to understand what software development managers believe they do. A woman I know who seems to be very good at this job says software project management has five functions:Apparently worthy goals, all of these; but under the open-source model, and in its surrounding social context, they can begin to seem strangely irrelevant. We'll take them in reverse order.My friend reports that a lot of resource marshalling is basically defensive; once you have your people and machines and office space, you have to defend them from peer managers competing for the same resources, and from higher-ups trying to allocate the most efficient use of a limited pool.But open-source developers are volunteers, self-selected for both interest and ability to contribute to the projects they work on (and this remains generally true even when they are being paid a salary to hack open source.) The volunteer ethos tends to take care of the 'attack' side of resource-marshalling automatically; people bring their own resources to the table. And there is little or no need for a manager to 'play defense' in the conventional sense.Anyway, in a world of cheap PCs and fast Internet links, we find pretty consistently that the only really limiting resource is skilled attention. Open-source projects, when they founder, essentially never do so for want of machines or links or office space; they die only when the developers themselves lose interest.That being the case, it's doubly important that open-source hackers organize themselves for maximum productivity by self-selection\u2014and the social milieu selects ruthlessly for competence. My friend, familiar with both the open-source world and large closed projects, believes that open source has been successful partly because its culture only accepts the most talented 5% or so of the programming population. She spends most of her time organizing the deployment of the other 95%, and has thus observed first-hand the well-known variance of a factor of one hundred in productivity between the most able programmers and the merely competent.The size of that variance has always raised an awkward question: would individual projects, and the field as a whole, be better off without more than 50% of the least able in it? Thoughtful managers have understood for a long time that if conventional software management's only function were to convert the least able from a net loss to a marginal win, the game might not be worth the candle.The success of the open-source community sharpens this question considerably, by providing hard evidence that it is often cheaper and more effective to recruit self-selected volunteers from the Internet than it is to manage buildings full of people who would rather be doing something else.Which brings us neatly to the question of motivation. An equivalent and often-heard way to state my friend's point is that traditional development management is a necessary compensation for poorly motivated programmers who would not otherwise turn out good work.This answer usually travels with a claim that the open-source community can only be relied on only to do work that is `sexy' or technically sweet; anything else will be left undone (or done only poorly) unless it's churned out by money-motivated cubicle peons with managers cracking whips over them. I address the psychological and social reasons for being skeptical of this claim in Homesteading the Noosphere. For present purposes, however, I think it's more interesting to point out the implications of accepting it as true.If the conventional, closed-source, heavily-managed style of software development is really defended only by a sort of Maginot Line of problems conducive to boredom, then it's going to remain viable in each individual application area for only so long as nobody finds those problems really interesting and nobody else finds any way to route around them. Because the moment there is open-source competition for a 'boring' piece of software, customers are going to know that it was finally tackled by someone who chose that problem to solve because of a fascination with the problem itself\u2014which, in software as in other kinds of creative work, is a far more effective motivator than money alone.Having a conventional management structure solely in order to motivate, then, is probably good tactics but bad strategy; a short-term win, but in the longer term a surer loss.So far, conventional development management looks like a bad bet now against open source on two points (resource marshalling, organization), and like it's living on borrowed time with respect to a third (motivation). And the poor beleaguered conventional manager is not going to get any succour from the monitoring issue; the strongest argument the open-source community has is that decentralized peer review trumps all the conventional methods for trying to ensure that details don't get slipped.Can we save defining goals as a justification for the overhead of conventional software project management? Perhaps; but to do so, we'll need good reason to believe that management committees and corporate roadmaps are more successful at defining worthy and widely shared goals than the project leaders and tribal elders who fill the analogous role in the open-source world.That is on the face of it a pretty hard case to make. And it's not so much the open-source side of the balance (the longevity of Emacs, or Linus Torvalds's ability to mobilize hordes of developers with talk of \"world domination\") that makes it tough. Rather, it's the demonstrated awfulness of conventional mechanisms for defining the goals of software projects.One of the best-known folk theorems of software engineering is that 60% to 75% of conventional software projects either are never completed or are rejected by their intended users. If that range is anywhere near true (and I've never met a manager of any experience who disputes it) then more projects than not are being aimed at goals that are either (a) not realistically attainable, or (b) just plain wrong.This, more than any other problem, is the reason that in today's software engineering world the very phrase \"management committee\" is likely to send chills down the hearer's spine\u2014even (or perhaps especially) if the hearer is a manager. The days when only programmers griped about this pattern are long past; Dilbert cartoons hang over executives' desks now.Our reply, then, to the traditional software development manager, is simple\u2014if the open-source community has really underestimated the value of conventional management, why do so many of you display contempt for your own process?Once again the example of the open-source community sharpens this question considerably\u2014because we have fun doing what we do. Our creative play has been racking up technical, market-share, and mind-share successes at an astounding rate. We're proving not only that we can do better software, but that joy is an asset.Two and a half years after the first version of this essay, the most radical thought I can offer to close with is no longer a vision of an open-source\u2013dominated software world; that, after all, looks plausible to a lot of sober people in suits these days.Rather, I want to suggest what may be a wider lesson about software, (and probably about every kind of creative or professional work). Human beings generally take pleasure in a task when it falls in a sort of optimal-challenge zone; not so easy as to be boring, not too hard to achieve. A happy programmer is one who is neither underutilized nor weighed down with ill-formulated goals and stressful process friction. Enjoyment predicts efficiency.Relating to your own work process with fear and loathing (even in the displaced, ironic way suggested by hanging up Dilbert cartoons) should therefore be regarded in itself as a sign that the process has failed. Joy, humor, and playfulness are indeed assets; it was not mainly for the alliteration that I wrote of \"happy hordes\" above, and it is no mere joke that the Linux mascot is a cuddly, neotenous penguin.It may well turn out that one of the most important effects of open source's success will be to teach us that play is the most economically efficient mode of creative work.It's a strange feeling to realize you're helping make history....On January 22 1998, approximately seven months after I first published The Cathedral and the Bazaar, Netscape Communications, Inc. announced plans to give away the source for Netscape Communicator. I had had no clue this was going to happen before the day of the announcement.Eric Hahn, executive vice president and chief technology officer at Netscape, emailed me shortly afterwards as follows: \"On behalf of everyone at Netscape, I want to thank you for helping us get to this point in the first place. Your thinking and writings were fundamental inspirations to our decision.\"\"The following week I flew out to Silicon Valley at Netscape's invitation for a day-long strategy conference (on 4 Feb 1998) with some of their top executives and technical people. We designed Netscape's source-release strategy and license together.A few days later I wrote the following:Netscape is about to provide us with a large-scale, real-world test of the bazaar model in the commercial world. The open-source culture now faces a danger; if Netscape's execution doesn't work, the open-source concept may be so discredited that the commercial world won't touch it again for another decade.On the other hand, this is also a spectacular opportunity. Initial reaction to the move on Wall Street and elsewhere has been cautiously positive. We're being given a chance to prove ourselves, too. If Netscape regains substantial market share through this move, it just may set off a long-overdue revolution in the software industry.The next year should be a very instructive and interesting time.And indeed it was. As I write in mid-2000, the development of what was later named Mozilla has been only a qualified success. It achieved Netscape's original goal, which was to deny Microsoft a monopoly lock on the browser market. It has also achieved some dramatic successes (notably the release of the next-generation Gecko rendering engine).However, it has not yet garnered the massive development effort from outside Netscape that the Mozilla founders had originally hoped for. The problem here seems to be that for a long time the Mozilla distribution actually broke one of the basic rules of the bazaar model; it didn't ship with something potential contributors could easily run and see working. (Until more than a year after release, building Mozilla from source required a license for the proprietary Motif library.)Most negatively (from the point of view of the outside world) the Mozilla group didn't ship a production-quality browser for two and a half years after the project launch\u2014and in 1999 one of the project's principals caused a bit of a sensation by resigning, complaining of poor management and missed opportunities. \"Open source,\" he correctly observed, \"is not magic pixie dust.\"And indeed it is not. The long-term prognosis for Mozilla looks dramatically better now (in November 2000) than it did at the time of Jamie Zawinski's resignation letter\u2014in the last few weeks the nightly releases have finally passed the critical threshold to production usability. But Jamie was right to point out that going open will not necessarily save an existing project that suffers from ill-defined goals or spaghetti code or any of the software engineering's other chronic ills. Mozilla has managed to provide an example simultaneously of how open source can succeed and how it could fail.In the mean time, however, the open-source idea has scored successes and found backers elsewhere. Since the Netscape release we've seen a tremendous explosion of interest in the open-source development model, a trend both driven by and driving the continuing success of the Linux operating system. The trend Mozilla touched off is continuing at an accelerating rate.[JB] In Programing Pearls, the noted computer-science aphorist Jon Bentley comments on Brooks's observation with \"If you plan to throw one away, you will throw away two.\" He is almost certainly right. The point of Brooks's observation, and Bentley's, isn't merely that you should expect first attempt to be wrong, it's that starting over with the right idea is usually more effective than trying to salvage a mess. \u21a9[QR] Examples of successful open-source, bazaar development predating the Internet explosion and unrelated to the Unix and Internet traditions have existed. The development of the info-Zip compression utility during 1990\u2013x1992, primarily for DOS machines, was one such example. Another was the RBBS bulletin board system (again for DOS), which began in 1983 and developed a sufficiently strong community that there have been fairly regular releases up to the present (mid-1999) despite the huge technical advantages of Internet mail and file-sharing over local BBSs. While the info-Zip community relied to some extent on Internet mail, the RBBS developer culture was actually able to base a substantial on-line community on RBBS that was completely independent of the TCP/IP infrastructure. \u21a9[CV] That transparency and peer review are valuable for taming the complexity of OS development turns out, after all, not to be a new concept. In 1965, very early in the history of time-sharing operating systems, Corbat\u00f3 and Vyssotsky, co-designers of the Multics operating system, wroteIt is expected that the Multics system will be published when it is operating substantially... Such publication is desirable for two reasons: First, the system should withstand public scrutiny and criticism volunteered by interested readers; second, in an age of increasing complexity, it is an obligation to present and future system designers to make the inner operating system as lucid as possible so as to reveal the basic system issues. \u21a9[JH] John Hasler has suggested an interesting explanation for the fact that duplication of effort doesn't seem to be a net drag on open-source development. He proposes what I'll dub \"Hasler's Law\": the costs of duplicated work tend to scale sub-qadratically with team size\u2014that is, more slowly than the planning and management overhead that would be needed to eliminate them.This claim actually does not contradict Brooks's Law. It may be the case that total complexity overhead and vulnerability to bugs scales with the square of team size, but that the costs from duplicated work are nevertheless a special case that scales more slowly. It's not hard to develop plausible reasons for this, starting with the undoubted fact that it is much easier to agree on functional boundaries between different developers' code that will prevent duplication of effort than it is to prevent the kinds of unplanned bad interactions across the whole system that underly most bugs.The combination of Linus's Law and Hasler's Law suggests that there are actually three critical size regimes in software projects. On small projects (I would say one to at most three developers) no management structure more elaborate than picking a lead programmer is needed. And there is some intermediate range above that in which the cost of traditional management is relatively low, so its benefits from avoiding duplication of effort, bug-tracking, and pushing to see that details are not overlooked actually net out positive.Above that, however, the combination of Linus's Law and Hasler's Law suggests there is a large-project range in which the costs and problems of traditional management rise much faster than the expected cost from duplication of effort. Not the least of these costs is a structural inability to harness the many-eyeballs effect, which (as we've seen) seems to do a much better job than traditional management at making sure bugs and details are not overlooked. Thus, in the large-project case, the combination of these laws effectively drives the net payoff of traditional management to zero. \u21a9[HBS] The split between Linux's experimental and stable versions has another function related to, but distinct from, hedging risk. The split attacks another problem: the deadliness of deadlines. When programmers are held both to an immutable feature list and a fixed drop-dead date, quality goes out the window and there is likely a colossal mess in the making. I am indebted to Marco Iansiti and Alan MacCormack of the Harvard Business School for showing me me evidence that relaxing either one of these constraints can make scheduling workable.One way to do this is to fix the deadline but leave the feature list flexible, allowing features to drop off if not completed by deadline. This is essentially the strategy of the \"stable\" kernel branch; Alan Cox (the stable-kernel maintainer) puts out releases at fairly regular intervals, but makes no guarantees about when particular bugs will be fixed or what features will beback-ported from the experimental branch.The other way to do this is to set a desired feature list and deliver only when it is done. This is essentially the strategy of the \"experimental\" kernel branch. De Marco and Lister cited research showing that this scheduling policy (\"wake me up when it's done\") produces not only the highest quality but, on average, shorter delivery times than either \"realistic\" or \"aggressive\" scheduling.I have come to suspect (as of early 2000) that in earlier versions of this essay I severely underestimated the importance of the \"wake me up when it's done\" anti-deadline policy to the open-source community's productivity and quality. General experience with the rushed GNOME 1.0 release in 1999 suggests that pressure for a premature release can neutralize many of the quality benefits open source normally confers.It may well turn out to be that the process transparency of open source is one of three co-equal drivers of its quality, along with \"wake me up when it's done\" scheduling and developer self-selection. \u21a9[SU] It's tempting, and not entirely inaccurate, to see the core-plus-halo organization characteristic of open-source projects as an Internet-enabled spin on Brooks's own recommendation for solving the N-squared complexity problem, the \"surgical-team\" organization\u2014but the differences are significant. The constellation of specialist roles such as \"code librarian\" that Brooks envisioned around the team leader doesn't really exist; those roles are executed instead by generalists aided by toolsets quite a bit more powerful than those of Brooks's day. Also, the open-source culture leans heavily on strong Unix traditions of modularity, APIs, and information hiding\u2014none of which were elements of Brooks's prescription. \u21a9[RJ] The respondent who pointed out to me the effect of widely varying trace path lengths on the difficulty of characterizing a bug speculated that trace-path difficulty for multiple symptoms of the same bug varies \"exponentially\" (which I take to mean on a Gaussian or Poisson distribution, and agree seems very plausible). If it is experimentally possible to get a handle on the shape of this distribution, that would be extremely valuable data. Large departures from a flat equal-probability distribution of trace difficulty would suggest that even solo developers should emulate the bazaar strategy by bounding the time they spend on tracing a given symptom before they switch to another. Persistence may not always be a virtue... \u21a9[IN] An issue related to whether one can start projects from zero in the bazaar style is whether the bazaar style is capable of supporting truly innovative work. Some claim that, lacking strong leadership, the bazaar can only handle the cloning and improvement of ideas already present at the engineering state of the art, but is unable to push the state of the art. This argument was perhaps most infamously made by the Halloween Documents, two embarrassing internal Microsoft memoranda written about the open-source phenomenon. The authors compared Linux's development of a Unix-like operating system to \"chasing taillights\", and opined \"(once a project has achieved \"parity\" with the state-of-the-art), the level of management necessary to push towards new frontiers becomes massive.\"There are serious errors of fact implied in this argument. One is exposed when the Halloween authors themseselves later observe that \"often [...] new research ideas are first implemented and available on Linux before they are available / incorporated into other platforms.\"If we read \"open source\" for \"Linux\", we see that this is far from a new phenomenon. Historically, the open-source community did not invent Emacs or the World Wide Web or the Internet itself by chasing taillights or being massively managed\u2014and in the present, there is so much innovative work going on in open source that one is spoiled for choice. The GNOME project (to pick one of many) is pushing the state of the art in GUIs and object technology hard enough to have attracted considerable notice in the computer trade press well outside the Linux community. Other examples are legion, as a visit to Freshmeat on any given day will quickly prove.But there is a more fundamental error in the implicit assumption that the cathedral model (or the bazaar model, or any other kind of management structure) can somehow make innovation happen reliably. This is nonsense. Gangs don't have breakthrough insights\u2014even volunteer groups of bazaar anarchists are usually incapable of genuine originality, let alone corporate committees of people with a survival stake in some status quo ante. Insight comes from individuals. The most their surrounding social machinery can ever hope to do is to be responsive to breakthrough insights\u2014to nourish and reward and rigorously test them instead of squashing them.Some will characterize this as a romantic view, a reversion to outmoded lone-inventor stereotypes. Not so; I am not asserting that groups are incapable of developing breakthrough insights once they have been hatched; indeed, we learn from the peer-review process that such development groups are essential to producing a high-quality result. Rather I am pointing out that every such group development starts from\u2014is necessarily sparked by\u2014one good idea in one person's head. Cathedrals and bazaars and other social structures can catch that lightning and refine it, but they cannot make it on demand.Therefore the root problem of innovation (in software, or anywhere else) is indeed how not to squash it\u2014but, even more fundamentally, it is how to grow lots of people who can have insights in the first place.To suppose that cathedral-style development could manage this trick but the low entry barriers and process fluidity of the bazaar cannot would be absurd. If what it takes is one person with one good idea, then a social milieu in which one person can rapidly attract the cooperation of hundreds or thousands of others with that good idea is going inevitably to out-innovate any in which the person has to do a political sales job to a hierarchy before he can work on his idea without risk of getting fired.And, indeed, if we look at the history of software innovation by organizations using the cathedral model, we quickly find it is rather rare. Large corporations rely on university research for new ideas (thus the Halloween Documents authors' unease about Linux's facility at coopting that research more rapidly). Or they buy out small companies built around some innovator's brain. In neither case is the innovation native to the cathedral culture; indeed, many innovations so imported end up being quietly suffocated under the \"massive level of management\" the Halloween Documents' authors so extol.That, however, is a negative point. The reader would be better served by a positive one. I suggest, as an experiment, the following:Pick a criterion for originality that you believe you can apply consistently. If your definition is \"I know it when I see it\", that's not a problem for purposes of this test.Pick any closed-source operating system competing with Linux, and a best source for accounts of current development work on it.Watch that source and Freshmeat for one month. Every day, count the number of release announcements on Freshmeat that you consider 'original' work. Apply the same definition of 'original' to announcements for that other OS and count them.Thirty days later, total up both figures.The day I wrote this, Freshmeat carried twenty-two release announcements, of which three appear they might push state of the art in some respect, This was a slow day for Freshmeat, but I will be astonished if any reader reports as many as three likely innovations a month in any closed-source channel. \u21a9[EGCS] We now have history on a project that, in several ways, may provide a more indicative test of the bazaar premise than fetchmail; EGCS, the Experimental GNU Compiler System.This project was announced in mid-August of 1997 as a conscious attempt to apply the ideas in the early public versions of The Cathedral and the Bazaar. The project founders felt that the development of GCC, the Gnu C Compiler, had been stagnating. For about twenty months afterwards, GCC and EGCS continued as parallel products\u2014both drawing from the same Internet developer population, both starting from the same GCC source base, both using pretty much the same Unix toolsets and development environment. The projects differed only in that EGCS consciously tried to apply the bazaar tactics I have previously described, while GCC retained a more cathedral-like organization with a closed developer group and infrequent releases.This was about as close to a controlled experiment as one could ask for, and the results were dramatic. Within months, the EGCS versions had pulled substantially ahead in features; better optimization, better support for FORTRAN and C++. Many people found the EGCS development snapshots to be more reliable than the most recent stable version of GCC, and major Linux distributions began to switch to EGCS.In April of 1999, the Free Software Foundation (the official sponsors of GCC) dissolved the original GCC development group and officially handed control of the project to the the EGCS steering team. \u21a9[SP] Of course, Kropotkin's critique and Linus's Law raise some wider issues about the cybernetics of social organizations. Another folk theorem of software engineering suggests one of them; Conway's Law\u2014commonly stated as \"If you have four groups working on a compiler, you'll get a 4-pass compiler\". The original statement was more general: \"Organizations which design systems are constrained to produce designs which are copies of the communication structures of these organizations.\" We might put it more succinctly as \"The means determine the ends\", or even \"Process becomes product\".It is accordingly worth noting that in the open-source community organizational form and function match on many levels. The network is everything and everywhere: not just the Internet, but the people doing the work form a distributed, loosely coupled, peer-to-peer network that provides multiple redundancy and degrades very gracefully. In both networks, each node is important only to the extent that other nodes want to cooperate with it.The peer-to-peer part is essential to the community's astonishing productivity. The point Kropotkin was trying to make about power relationships is developed further by the 'SNAFU Principle': \"True communication is possible only between equals, because inferiors are more consistently rewarded for telling their superiors pleasant lies than for telling the truth.\" Creative teamwork utterly depends on true communication and is thus very seriously hindered by the presence of power relationships. The open-source community, effectively free of such power relationships, is teaching us by contrast how dreadfully much they cost in bugs, in lowered productivity, and in lost opportunities.Further, the SNAFU principle predicts in authoritarian organizations a progressive disconnect between decision-makers and reality, as more and more of the input to those who decide tends to become pleasant lies. The way this plays out in conventional software development is easy to see; there are strong incentives for the inferiors to hide, ignore, and minimize problems. When this process becomes product, software is a disaster. \u21a9I quoted several bits from Frederick P. Brooks's classic The Mythical Man-Month because, in many respects, his insights have yet to be improved upon. I heartily recommend the 25th Anniversary edition from Addison-Wesley (ISBN 0-201-83595-9), which adds his 1986 \"No Silver Bullet\" paper.The new edition is wrapped up by an invaluable 20-years-later retrospective in which Brooks forthrightly admits to the few judgements in the original text which have not stood the test of time. I first read the retrospective after the first public version of this essay was substantially complete, and was surprised to discover that Brooks attributed bazaar-like practices to Microsoft! (In fact, however, this attribution turned out to be mistaken. In 1998 we learned from the Halloween Documents that Microsoft's internal developer community is heavily balkanized, with the kind of general source access needed to support a bazaar not even truly possible.)Gerald M. Weinberg's The Psychology Of Computer Programming (New York, Van Nostrand Reinhold 1971) introduced the rather unfortunately-labeled concept of \"egoless programming\". While he was nowhere near the first person to realize the futility of the \"principle of command\", he was probably the first to recognize and argue the point in particular connection with software development.Richard P. Gabriel, contemplating the Unix culture of the pre-Linux era, reluctantly argued for the superiority of a primitive bazaar-like model in his 1989 paper \"LISP: Good News, Bad News, and How To Win Big\". Though dated in some respects, this essay is still rightly celebrated among LISP fans (including me). A correspondent reminded me that the section titled \"Worse Is Better\" reads almost as an anticipation of Linux. The paper is accessible on the World Wide Web at http://www.naggum.no/worse-is-better.html.De Marco and Lister's Peopleware: Productive Projects and Teams (New York; Dorset House, 1987; ISBN 0-932633-05-6) is an underappreciated gem which I was delighted to see Fred Brooks cite in his retrospective. While little of what the authors have to say is directly applicable to the Linux or open-source communities, the authors' insight into the conditions necessary for creative work is acute and worthwhile for anyone attempting to import some of the bazaar model's virtues into a commercial context.Finally, I must admit that I very nearly called this essay \"The Cathedral and the Agora\", the latter term being the Greek for an open market or public meeting place. The seminal \"agoric systems\" papers by Mark Miller and Eric Drexler, by describing the emergent properties of market-like computational ecologies, helped prepare me to think clearly about analogous phenomena in the open-source culture when Linux rubbed my nose in them five years later. These papers are available on the Web at http://www.agorics.com/agorpapers.html.This essay was improved by conversations with a large number of people who helped debug it. Particular thanks to Jeff Dutky <dutky@wam.umd.edu>, who suggested the \"debugging is parallelizable\" formulation, and helped develop the analysis that proceeds from it. Also to Nancy Lebovitz <nancyl@universe.digex.net> for her suggestion that I emulate Weinberg by quoting Kropotkin. Perceptive criticisms also came from Joan Eslinger <wombat@kilimanjaro.engr.sgi.com> and Marty Franz <marty@net-link.net> of the General Technics list. Glen Vandenburg <glv@vanderburg.org> pointeed out the importance of self-selection in contributor populations and suggested the fruitful idea that much development rectifies 'bugs of omission'; Daniel Upper <upper@peak.org> suggested the natural analogies for this. I'm grateful to the members of PLUG, the Philadelphia Linux User's group, for providing the first test audience for the first public version of this essay. Paula Matuszek <matusp00@mh.us.sbphrd.com> enlightened me about the practice of software management. Phil Hudson <phil.hudson@iname.com> reminded me that the social organization of the hacker culture mirrors the organization of its software, and vice-versa. John Buck <johnbuck@sea.ece.umassd.edu> pointed out that MATLAB makes an instructive parallel to Emacs. Russell Johnston <russjj@mail.com> brought me to consciousness about some of the mechanisms discussed in \"How Many Eyeballs Tame Complexity.\" Finally, Linus Torvalds's comments were helpful and his early endorsement very encouraging."}
{"prompt": "Advances in Distributed Security", "completion": "The last decade has witnessed a revolution in distributed security. Old, pessimistic proofs that security and fault tolerance were \"impossible\", based on assumptions that protocols had to be deterministic and security and fault tolerance properties had to be absolutely certain, have given way to new proofs and implementations of provable security based on the assumption of cryptography and other randomized protocols that achieving security with very high probability is sufficient. The old view \"proved\" that the integrity properties of a wide variety of services on which civilization depends, whether synchronized clocks, public directories, censorship-proof file sharing and publication, or issuing money or securities were \"impossible\" on asynchronous networks like the Internet unless we put unlimited faith in a third party to enforce many of the rules of the service. We now know how to provide such services with a high degree of integrity and availability, yet far more resilient to the possibility that any party might act in a malicious manner.As a result of these new possibilities, we are witnessing a shift in the way we view trust. The old view in computer and network security was that trust was all-or-nothing \u2013 either we must place an essentially blind faith in a third party (for example a certificate authority or an issuer of digital cash) or we must protect against a particular mode of attack completely (as, for example, encryption protects against wiretappers). The old view could not handle most real-life situations which don't fall into either of these extremes. Among knowledgeable distributed security designers, unconditionally trusted third parties are now viewed as a cheat \u2013 \"here we pray for heavenly benevolence\", analogous to the comic-strip mathematician whose proof contains the crucial step, \"here a miracle occurs\". A third party fully trusted with a security property means that property in fact remains fully insecure \u2013 it means the protocol designer has fobbed off security on somebody else rather than actually solved a security problem.The new view reiterates the desirability of complete protection against attack where it is available, but it adds protection against vast new classes of attacks, and protection of a wide variety of other desirable properties of distributed system, that are impossible to protect without at least some trust assumptions. The new trust assumptions are that participants in a critical public service are partially, usually, or more often than not trustworthy, and often only under certain conditions. The set of parties that make up a critical distributed service is never either completely trustworthy nor all malicious.Modern protocols for critical services such as public directories construct, out of all possible subsets of all participants, attack structures consisting of the worst combination of malicious parties that be tolerated, and their complement, access structures, the minimal set of parties that need to act correctly during this operation to perform the function. (Note that access structures have nothing to do with access control lists, a traditional security method that assumes a fully trusted third party and consists of a static list of persons or classes of persons and the resources or classes of resources they have access to).One particular simple example of such an attack and access structure is a threshold structure where the malicious behavior of up to t out of n participants can be tolerated. Although we will describe the protocols below in terms of threshold structures, it will usually be possible to substitute other partitions of the power set of participants into minimum access and maximum attack structures.A given property of a system has perfect security if its access structure is any participant and its attack structure is the empty set. An example of a property with perfect security is the use of a spinning neutron star called a pulsar as a clock. Its access structure is any party that can receive its natural broadcasts, and its attack structure is the empty set \u2013 given the reasonable presumption that there are no aliens out there who can and want to manipulate the very high energy outputs of pulsars in pursuit of some human ends they have learned about.Another perfect security property is that of encryption against third parties, assuming the encryption is unbreakable. However, if we take into account the receiver of a message as a possible attacker, the broader privacy property is not secure \u2013 the receiver is an attack structure of one who can compromise privacy of the entire message encrypted to him.A security property is almost perfect if its attack structure must contain T-1 out of N participants. For example, in the digital mix of Chaum[C81], for a single message, it would take collusion of N-1 out of N of the mix servers to trace a message. The untraceability property of this system has almost perfect security for a single message. On the other hand, the reliability property of the digital mix is almost perfectly insecure, since any one of the n mix servers can block a message from getting through. Often we must trade off two different properties like this. Since reliability is an error reversible by the end user and a privacy breach is not, the tradeoff made here by Chaum makes sense.Alas, for many desirable properties we cannot achieve either perfect or almost perfect security. For some properties of replicated services \u2013 for some kinds of rules they advertise as following \u2013 we can achieve almost perfect security through, for example, the use of cryptography.For any other properties, the maximum attack structure of malicious and colluding servers that can be tolerated is the set complement of the access structure. For the threshold case, this means that T, the maximum number of malicious and colluding servers that can be tolerated, is a certain fraction of the total number of servers, such as 1/3 or 1/2, of the total number of servers comprising the service, N. That is to say, if T+1 out of N of the servers jointly decide to violate the service's rules and thereby corrupt the system, they can do so. Those who wish to stick to the rules must back out of the corrupted transaction and restart the service out-of-band. For this large class of service properties where the access structure is the set complement of the attack structure, the security of a property is neither perfect or almost perfect at one extreme, nor fully depends on a single trusted party at the other extreme. We say that this class of service properties can be implemented with distributed security.Three of the properties we most often want to protect are privacy, liveness (a.k.a. availability) and integrity. For a replicated service, the main focus of this article, we focus on the security of the integrity and liveness of a single operation of a service. The goal is to create attack structures that are very highly unlikely to fail. If or when such failures of widespread collusion do occur, relying parties, i.e. parties who depend on the properties being secured, must go \"out-of-band\" and use supplementary systems to repair the system. These supplementary systems might include a wide variety of interparty integrity constraints, audits, blacklisting, and other schemes involving auditing, reputation, and/or cryptography by participants, relying parties, or third parties. These can further motivate servers to preserve the integrity and liveness of these services, and help users to recover after a (now much rarer) successful attack.Since a wide variety of trust assumptions can now be made by a security protocol and this variety can for the first time be described mathematically \u2013 as attack and access structures \u2013 these supplementary systems can focus on keeping the actual attack structures smaller than the maximally tolerated attack structure, rather than on vastly more difficult task of plugging wide-open security holes called \"trusted third parties\" with these more loosely defined or traditional supplementary institutions.A basic issue of security and fault tolerance that must be resolved is the secure determination of which order events occured in. If a contract specifies a deadline and it goes down to the wire, how can a relying party or third party adjudicator determine whether the deadline was met? The outcome itself, and its fairness, may rest on fairly deciding who came first. If Alice tries to double-spend a piece of digital cash[C82], only the recipient who checks with the bank first is entitled to its value. But if the bank servers are replicated, which of the two recipients Bob or Charles checked with the bank first? In the case of a replicated property title service[S98] we have a similar problem \u2013 if Alice transfers her title to two other owners, which new owner actually received the deed? If property is homesteaded on a first-come first-serve basis, which of two or more \"land rushers\" competing for a lucrative parcel is entitled to the land?Imagine a network where computers don't know how to keep time very well \u2013 they are always getting out of synchronization. (Alas, all you have to really think of here is the actual Internet with PCs). Such a network, called an asynchronous network, lacks an accurate and secure global clock time by which computers can determine the order in which events, which might be messages sent or instructions executed on a particular local machine, have happened. Lamport[L78] was among the first to tackle the problem of how to determine the order of events in such a network.A partial order means that we know in what order some of the elements are, but we aren't sure about some of the others, or some of the others may be equal. An example is the \"less than or equal to\" relationship among a group of integers, some of which can repeat. Some of the integers we know are less than some others, but an integer paired with itself is equal. A total order, on the other hand, is like the \"less than\" relationship among unique integers \u2013 we can always tell when one integer is less than another \u2013 there is no ambiguity left. In the case of events, a partial order means for some pairs of events we know whether one occured before another, and for some others we don't know. We use the same symbols as we would use for the analogous case of the integers, so that \"x <= y\" means \"x either occured before y or we don't know whether it occured before or after y\". In a total of events, we know for any two events which one happened first. We write \"x < y\" meaning \"x occured before y.\"Lamport's answer to the event ordering problem was to show that parties (or, we use the terms equivalently here, nodes on the network) can agree on a partial order of events based on causal relationships between these events \u2013 or at least the subset of events where we can determine that causation could occur. On a network, parties influence each other by talking to each other \u2013 in other words, by sending each other messages. Lamport used these messages as the basic building block for constructing his partial order, according to the following rules:The partial order leaves us with the need to agree on how to break ties \u2013 how to resolve the ambiguities where we can't agree which event took place first \u2013 and thus create a total order of events. We want to do so in a way that is fair, in other words, in a way that cannot be manipulated to the advantage of any particular party.An unfair way to create a total order would be to impose a certain predictable rule for breaking ties. For example, we could decide on a total order for the processes and break ties in the causal order by referring to this total order.However, such a procedure creates a bias that may, depending on the application, favor certain servers over others, and therefore allow those servers to favor certain clients over others.One way to break ties fairly is have the participants toss fair coins \u2013 in other words, generate random numbers in a way that cannot be manipulated and then assign those random numbers to events. There are several ways to toss fair coins over a network and we describe one such way below.Another way to break ties fairly is to have the participants agree to a global clock time that is more accurate than the message delays faced by those who would manipulate timing in favor of some party. This entails using a network with very predictable message lag for the clock synchronization protocol and a less predictable one for the other services. We will describe how to do this below.Certain cryptographic primitives play a crucial role in the recent breakthroughs in distributed security that we will discuss here.Oblivious transfer is an important building block of multiparty secure computations and related protocols. Rather than describing it here, we recommend this good introduction.Alice wants to prove that she can predict the stock market. But she doesn't want to actually reveal her choice to Bob or anybody else until she's actually had a chance to trade on her prediction. But after the fact, she could just read the closing price and pretend to Bob that she predicted it. How can Alice prove to Bob that she actually predicted the market? Using bit commitments.Bit commitments are ways to commit to a string of numbers or data, in such a way that if or when one later publishes the data, it cannot be forged \u2013 it must be the same as the data you earlier committed to.Alice can commit to her data using one-way functions \u2013 functions that are much harder to compute one way than another. (One-way functions are the most basic building block of cryptography). A common kind of a one-way function is a cryptographic hash function.To create a bit commitment, Alice first generates two random numbers. Then she computes the bit commitment by hashing the two random numbers and the data to be committed to. Append on of the random numbers to the end of the hash and sends it to Bob. The next day when Bob wants to examine the data, and prove that it matches the data Alice originally committed to, Alice provides the data along with the second random number. Bob can verify that it is astronomically unlikely that Alice was able to commit to one predication and then later tell Bob she predicted something else.This protocol is called \"bit commitment\" because one can commit to even an individual bit this way. If the data has enough entropy one can commit to that data simply by using a hash function and dispense with the random numbers. We will see below how with secure timestamping other parties can determine when the data was committed to.The ideal protocol would have most trustworthy third party imaginable \u2013 a diety who is on everybody's side. All the parties would send their inputs to God. God would reliably determine the results and return the outputs. God being the ultimate in confessional discretion, no party would learn anything more about the other parties' inputs than they could learn from their own inputs and the output.Network security theorists have recently solved this problem to an astonishing extent. They have developed protocols which create virtual machines between two or more parties. Multiparty secure computation allows any number of parties to share a computation, each learning only what can be inferred from their own inputs and the output of the computation. These virtual machines have the exciting property that each party's input is strongly confidential from the other parties. The program and the output are shared by the parties.For example, we could run a spreadsheet across the Internet on this virtual computer. We would agree on a set of formulas and set up the virtual computer with these formulas. Each participant would have their own input cells, which remain blank on the other participants' computers. The participants share output cell(s). Each input our own private data into our input cells. Alice could only learn only as much about the other participants' input cells as she could infer from her own inputs and the output cells.More information on this exciting breakthrough can be found in the accompanying article \"The God Protocols\". Often, as in the spreadsheet example above, the resulting protocol would be very slow. We will now discuss a special efficient kind of multiparty secure computation \u2013 threshold cryptography.Threshold cryptography has been used to help achieve Byzantine-resilient replication in Rampart, Fleet, SITRA, and several other distributed service or filesystem architectures. Threshold cryptography is an optimized special case of a more general technique called multiparty secure computationIn a threshold public-key cryptosystem there is a single key for encryption, but each party holds a key share for decryption. A threshold scheme implements the threshold case of distributed security as described above. Any T+1 key share holders are needed to jointly perform a decryption, and any N-T key share holders can collude to prevent a decryption from being performed. The parameter T can be set at any positive integer between 1 and N. Often a more general access structure, under the distributed security constraint that the access structure is the set complement of the attack structure, can be implemented as well.For some algorithms one must assume a trusted dealer to generate a private key and distribute shares; for some other algorithms a mutually confidential generation of key shares is possible. During the decryption protocol, each party processes a decryption request for a particular ciphertext and output a decryption share together with a proof of its validity. When a party obtains the ciphertext and at least T+1 valid encryption shares, it can recover the message. In the case of threshold signatures, when at least T+1 signature shares have been obtained, a valid signature can be constructed. [C01]Joe Killian introduces this problem as follows[K90]:Alice and Bob wanted to flip a fair coin, but had no physical coin to flip. Alice offered a simple way of flipping a fair coin mentally.First, you think up a random bit, then I'll think up a random bit. We'll then exclusive-or the two bits together,\" she suggested.\"But what if one of us doesn't flip a coin at random?\" Bob asked.\"It doesn't matter. As long as one of the bits is truly random, the exclusive-or of the bits should be truly random,\" Alice replied, and after a moment's reflection, Bob agreed.A short while later, Alice and Bob happened upon a book on artificial intelligence, lying abandoned by the roadside. A good citizen, Alice said, \"One of us must pick up this book and find a suitable waste receptacle.\" Bob agreed, and suggested they use their coin-flipping protocol to determine who would have to throw the book away.If the final bit is a 0, then you will pick the book up, and if it is a 1, then I will,\" said Alice. \"What is your bit?\"Bob replied, \"1.\"\"Why, so is mine,\" Alice said slyly. \"I guess this isn't your lucky day.\"Bruce Schneier[Sh96] goes on to describe what is wrong with this protocol:Needless to say, this coin-flipping protocol has a serious bug. While it is true that a truly random bit, x, exclusive-ORed with any independently distributed bit, y, will yield a truly random bit, Alice's protocol did not ensure that the two bits were distributed independently. In fact, it is not hard to verify that no mental protocol can allow can allow two infinitely powerful parties to flip a fair coin. Alice and Bob were in trouble until they received a letter from an obscure graduate student in cryptography. The information in the letter ws too theoretical to be of any earthly use to anyone, but the envelope the letter came in was extremely handy.The next time Alice and Bob wished to flip a coin, they played a modified version of the original protocol. First, Bob decided on a bit, but instead of announcing it immediately, he wrote it down on a piece of paper and placed the paper in the envelope. Next, Alice announced her bit. Finally, Alice and Bob took Bob's bit out of the envelope and computed the random bit. This bit was indeed truly random whenever at least one of them played honestly. Alice and Bob had a working protocol, the cryptographer's dream of social irrelevance was fulfilled, and they all lived happily ever after.On a computer, those \"envelopes\" are committed bits \u2013 see the protocol for bit commitment above. Also see Manuel Blum's landmark paper \"Coin Flipping By Telephone\"[B82] for more details. He subtitled the paper \"A Protocol for Solving Impossible Problems\", which was more prescient than he knew.Fair coin tosses can be used to create a fair total order of events out of a partial order of events, defined by sending and receiving times for messages, in an asynchronous distributed system. They can similarly be used to achieve atomic broadcast, and thus Byzantine agreement and replication[C01][CP02].The threshold coin-tossing system developed by Cachin, Kursawe, and Shoup [C01] solves the fair coin tossing problem by implmenting a cryptographic pseudorandom number generator (PRNG) is a distributed manner using threshold cryptography. They use their protocol to solve the Byzantine generals problem for asynchronous networks. We will describe the Byzantine generals problem and its solution on asynchronous networks further below.There are a wide variety of other cryptographic primitives and protocols, beyond the well-known symmetric and asymmetric cryptosystems, that give us security properties not otherwise in distributed systems, including and mixing and channel padding[C81] and blind signatures[C82] to combat traffice analysis.In our time, the tallest and most expensive buildings belong to some of our most important economic institutions \u2013 multinational corporations. The size and expense of our skyscrapers will provide future archaeologists an important clue that these institutions played a big role in our economy. In the high and late Middle Ages, the tallest structures in Europe were bell towers \u2013 larger and more numerous in that region than on any other continent. Chartres in the year 1169 boasted a 437 foot tower, the world\u2019s tallest. These towers, besides the churches they were built upon, were also the most expensive structures in town.Some historians claim that the size and expense of Europe\u2019s steeples and public clocks, like the size and expense of the churches they were built upon, reflected the predominant role of religion in medieval life, as opposed to business in ours. Given that the churches and cathedrals themselves were expensive, this is a plausible claim. However, the Church also played a leading role in the economy, both by its own economic activities and by its role in commercial law. The church bells and their clocks also played a major economic role.Telling time was not the only, and perhaps not even initially the main, function of church towers and their bells. An important early function of the bell tower was as an alarm, to inform the town of emergencies such as a fire or attacking army. The towers also sometimes made a good vantage point to detect such events. They tolled for events such as baptisms and funerals. Timekeeping became its primary function, first in order to call people to mass, but soon as a general service the Church provided to the surrounding Catholic community that supported it. Long before the mechanical clock, residents within a few miles of a church started working their schedules around the canonical hours \u2013 sundial-based unequal hours \u2013 tolled on its bells. Thus in many European cities, long before the invention of the mechanical clock, the local church was trusted to ring the hours. Churches, funded mainly by the nearby parishioners, but often also by the city or directly by a guild of merchants, lavished enormous resources to build, operate, and maintain the towers as well as the bells, and later for the clocks that were installed in those towers. The productive synchronization of human relationships funded the bell towers; the bell towers would provide a ready market for public clocks. Thus did in Europe emerge a \"virtuous circle\" that would advance both its timekeeping technologies and time-dependent institutions beyond those of the other continents.The time rung on the bells was mainly read from a sundial. By the 11th century these were often supplemented by water clocks. By the end of the 14th century most were using the new mechanical clock, backed up by another new technology of that century, the more reliable and personally secure sandglass.In the larger and more important belfries were present at least two bell-ringers. They lived up there full-time[D96]. This arrangement is an example of the pattern of dual control \u2013 each ringer served as a check for the other; neither could spoof the time or other bell signals without the collusion of both.The heaviest and most expensive elements of the towers were the bells. Bells smiths competed to produce the most distantly hearable ringing. The \"Maria Angola\" bell, cast in 1659 and installed in a cathedral in Cusco, Peru could be heard up to 25 miles away[G95]. In Cordova in the 16th century, a cathedral boasted a one-ton bell that could be heard 8 miles away. At the cathedral at Rouen, in 1321, a carillon was installed that played on an array of bells a hymn audible 5 miles away[D96]. The typical range of a parish church\u2019s bells was 3-5 miles. These bells would primarily be heard and in the surrounding town; larger bells could also be heard by peasants working in the fields miles away.The most valuable property of the bell tower time was not its accuracy, but its fairness. Even if it broadcast the wrong time, it broadcast the same wrong time to everybody. An employer, even if he was colluding with the Church to bias the sometimes subjective ringing of the canonical hours, couldn\u2019t tell his favorite employees that it was time to go home, while making other employees work extra, and pretend that it was the same time. (In contrast, on our computer networks such \"Byzantine\" attacks are possible, without advanced safeguards, when \"broadcasting\" time or other information).While nearby churches or monasteries provided the public, standard time, workers and employers both often employed their own timekeeping devices as a check. Peasants could tell the time by observing their own shadow against some standard sized object. In Germany and Flanders, even the smallest peasant villages had \"quadrants to indicate the hours without the sun\". Miners, working underground, followed work bells, operated by the employers, and passed their signal on through the tunnels by workers banging on tools. As a check, the miners had their own marked tallow candles[D96]. Despite the public broadcast of authoritative time, few dispensed with the option to check their own independent sources.See the accompanying article \"On Time\" for more of the fascinating history of Europe's development of clocks and accompanying economic institutions.Broadcasts using sound or radiation, from sources such as bell towers, radio towers, satellites, and pulsars, must send out the same value to every receiver. A remote beacon such as a pulsar has perfect security: the access structure is any party, and its complement, the attack structure, is the empty set. For human controlled broadcasts, the attack structure consists only of the broadcaster and the access structure is any receiver.Natural broadcasts are thus immune to the problem, described in the discussion of the Byzantine Generals problem below, of a transmitter sending different values to different receivers. Indeed, as we will see below, distributed researchers have gone to great lengths just to recreate this simple property on the Internet with logical broadcast protocols.Nature provides clocks that are oblivious to the malicious intentions of any outside parties. In the case of a remote high-energy system such as a pulsar, this means anybody. and many orders of magnitude more accurate than random delays that face attackers on the Internet. If critical Internet servers were synchronized to natural clocks in a secure and timely fashion, they would be immune to attacks that relied on uncertainties in timing. Here are some comparisons of the stability (error creep) in good natural clocks:Pulsars overtake atomic clocks in accuracy after about 4 months.The Internet with its wide and unpredictable variances in message delays makes for an extremely poor method of distributing time. Some clock synchronization protocols for an asynchronous network are described in [C??][CF94]. Unfortunately, their accuracy is limited to the same order of magnitude of uncertainty as that would face an attacker. So they don't clearly eliminate the possibility that an attacker could take advantage of the different servers hosting a critical service disagreeing on the time.Far more accurate are the distribution methods, especially radio broadcast, described in this excellent survey of timekeeping techniques.This article also contains an excellent discussion of the highly distributed system used for reaching agreement on the global standard UTC time. Over 200 centers use their own atomic clocks to update UTC time. This recalibration uses a sophisticated averaging formula that throws out extreme values. There are also 50 centers in 30 different countries that can be queried at any time during the month for the current recalibration according to their own atomic clocks. In addition, there are a variety of services that broadcast UTC time, with varying levels of delay uncertainty and cost that the article describes in detail. The security and tolerance to extreme faults of the entire system from atomic clock to delivery of time updates to relying parties is not clear but probably high. The jurisdictional diversity of the atomic clock sources is far higher than that of common delivery systems such as GPS, but the results of the latter can after the fact be easily checked against the former, keeping the latter honest, so that the resulting end-to-end system is almost universally trusted (taking into account certain well-known adjustments such as selective availability in GPS).Secure time-stamping is a way for a party with a confidential document, or two or more parties sending private messages, to commit to each other and third parties an unforgeable, non-repudiable time-stamp. This time-stamp consists of a place in a total order consisting of this message, other parties' messages, and clock ticks. This commitment is accomplished without the parties having to reveal the actual contents of those messages, unless or until challenged for proof, to any third parties. (Even then, there exist zero-knowledge proofs that allow the party to prove he has a document corresponding to the time-stamp without revealing the document).These protocols work by users sending a cryptographic hash (a.k.a. message digest) of their document to the time-tstamping servers. The servers chain messages and click ticks together by order of arrival. Replicated servers can break ambiguities in order of arrival with a protocol such as fair coin tossing to achieve a fair total order.Lamport created a theoretical structure for security and fault tolerance in a distributed service with the Byzantine generals problem. These generals might be loyal, following orders and passing them on faithfully, or they may be traitors. The worst-case behavior of traitorous generals is modelled by the nasty trick of sending out contradictory orders \u2013 for example, telling one general that the order is to march and another general that the order is to retreat.(Lamport just meant the Byzantine generals story as an interesting, cartoonish illustration of the theory of fault tolerance against corruption by malicious adverseries, but this kind of problem has actually sometimes occurred among generals. The actual generals of the Byzantine Empire were no more prone to such treachery than any of their enemies, such as the Persians or Turks. If one is partial towards the Byzantines, one can think instead of the Iraqi generals in the current war there \u2013 the Coalition generals hope that some of the Iraqi generals will defect and are trying to insert forged messages into their communications network. They hope some generals will be duped into following these specious orders).There are N generals; one of them is the commanding general or field marshall. They can send and receive messages between each other. The Byzantine generals problem is to develop a protocol for the commanding general to send messages to his N-1 subordinates so thatThe protocol should be able to resist up to T traitorous generals. In the case of a fully deterministic protocol (no random choices or cryptography allowed) the best we can do is tolerate T = floor(N/3) - 1 generals for a synchronous network. For an asynchronous and deterministic network no traitors at all can be tolerated.[FLP85]However, the Byzantine general's problem is easily solved by unjammable physical broadcast. Not coincidentally, solving the logical broadcast problem on network where physical broadcast is absent is very similar to, and as hard as, solving the Byzantine generals problem.The above pessimistic results regarding T on deterministic networks \u2013 and the inefficiency of protocols that could provide these weak solutions to the Byzantine generals problem \u2013 until recently has discouraged researchers and engineers from finding practical solutions to securing distributed services. However, under only slightly weaker assumptions \u2013 those of cryptography, that we need only achieve security with a very high probability \u2013 agreement between the Byzantine generals has not only been achieved [Ben-Or] but achieved efficiently [Cachin]. The basic insight in these solutions is that we can break ties in a Lamport partial order in a an unbiased way with random numbers.Point-to-point communications is sufficient for many applications. For many others, nodes need to send a message to many other nodes, or multicast. We call the simple case where a node sends messages to all other nodes participating in a system broadcast.As we've seen, broadcast can be implemented directly in physical media such as sound and radio. We will discuss the problem of implementing logical broadcast over an asynchronous network that directly supports only point-to-point communications. Such broadcasting protocols are subject to node and communications failures, including malicious attacks.Four important design criteria of such a logical network are reliability, consistent ordering, causality preservation, and fairness. Reliability means that a message once broadcast be received by all the functional nodes. Consistent ordering means that different messages sent by different nodes are delivered to all the nodes in the same order. Causality is preserved if this order is consistent with with the causal order in which messages were sent and received. Fairness means that no node can breach the rules or properties of the system we want to protect, particular to some parties advantage or disadvantage, by manipulating this order.Note that physical broadcasts, if they cannot be jammed, easily have these properties. Since the broadcast medium has a finite velocity, messages might not all be received in the same order as sent. However, the receiving nodes can deduce from the physical properties of the medium the expected time lag at their distance and thereby deduce sending times. We say in this case that messages are received in a certain order, queued, and then delivered in a possibly different order.The basic issue here is message delays \u2013 some servers receive messages in different order from others. Clock synchronization can reduce the scope of this problem \u2013 even eliminate it if done over a network where unpredictability in message lag times are much less than in the network over which we run the other services we wish to secure. In such cases clocks can be synchronized with sufficient accuracy that global clock time cannot be spoofed to reorder messages with significant probability. Where we choose not to implement such a global clock (because, for example, the price of retrofitting services with a radio time synchronization service as described above), we have another option for creating a fair total order \u2013 the fair coin flipping methods described above. The result is a logical broadcast with the same basic security properties as an unjammable physical broadcast.The theory of the Byzantine generals has a practical equivalent \u2013 the problem of replicating a serivce \u2013 or, equivalently, a distributed object \u2013 in such as way as to provide distributed security, or fault tolerance against arbitrary behavior of up to T malicious and colluding servers.These services or distributed objects are sometimes called \"intrusion tolerant\", because the replicated service can resist attack and corruption of up to T servers. However, in the real world more perpetrated by insiders rather than intruders. Byzantine-resilient replication of a service across administrative domains or jurisdictions solves both problems.Several Byzantine-resilient replicated service infrastructures have been implemented . They use techniques such as threshold cryptography and fair coin tossing to achieve logical broadcast on asynchronous networks like the Internet, protected against attack structures of colluding and malicious servers, such that the attack structure is the set complement of the access structure. See Appendix A below for sources of more information. A wide variety of Byzantine-resilient services can be built on top of logical broadcast. A high bandwidth, many-to-many unjammable physical broadcast network might provide similar but more efficient solutions in the future. A Byzantine-resilient replicated object library, for implementing online services with distributed trust in the CORBA distributed object system is described in this presentation and this paper.The basic system has the ability to replicate stateful objects resilient to up to 1/3 Byzantine (arbitrarily malicious) failures.In other words, object replication is used to distribute trust in the integrity of data and computations. Instead of obtaining a critical service from a single trusted server \u2013 which may be innately malicious or may get cracked by an outsider \u2013 one obtains the service from N different servers, and the service maintains its integrity as long as less than N/3 of the Vats are malicious.Note that the \"voting\" implicit in Byzantine resilient protocols like that used here protects the integrity of a particular remote method call. Between such invocations, clients can update their own blacklists of servers they have found to be unreliable. With such a blacklist the attacker must manifest their faulty behavior in over N/3 servers during the same call in order to corrupt the call. Once this is discovered the client can blacklist them, removing them from the list of trusted Vats for subsequent calls.Integrity techniques such as cryptographic hashes, digital signatures, secret sharing, and threshold cryptography can be layered on top of this basic Byzantine-resilient replication system to further increase the integrity of certain properties of the replicated state. Which of these techniques are used, and how, depends on what the critical functionality is that one is protecting.Replication of course does not distribute trust in the privacy of the data \u2013 quite the opposite, it magnifies the exposure. However, where this problem is relevant it can easily be overcome with encryption and/or multiparty secure computation, described above.A necessary part of any good distributed security toolkit is a diverse cryptographic library, implementing not only symmetric and assymetric primitives but also those described or referred to in this article.A wide variety of other applications once thought \"impossible\" to secure can now be implemented securely.On a public network a wide variety of values must be agreed upon across trust boundaries, such as mappings of names or addresses to keys (as in a public key infrastructure) or of names to addresses (as in the Domain Name System). Such agreements across trust boundaries can best be thought of as simple kinds of private property to be controlled by their owner, within constrains enforced by the rules followed by the replicated service, a public property titles system.Whether thought of as property rights or not, a wide variety of such currently centralized services can be re-implemented with much greater ensurable integrity and availability by distributing their trust with techniques such as Byzantine-resilient replication.Another large class of potential services that can be distributed are issuers of digital bearer instruments, such as digital cash.This author's design for a secure property title service uses cryptographic hash functions and digital signatures (without the need for a PKI) on top of a Byzantine-resilient replicated object service to maintain the integrity of chains of property titles. It's also suitable for property-like directories such as the Internet's Domain Name System (DNS).The old pessimism has been overturned. Old proofs of \"impossibility\", based on strict insistence in perfect certainty, have given way to new proofs demonstrating how to do the \"impossible\" by being satisfied with extremely high probability against a sophisticated but computationally bounded opponent \u2013 the assumption of cryptography \u2013 rather than of absolute certainty. This overturning of the old view has led to a raft of new possibilities for securing distributed applications. The simple protocol of the bell tower, which broadcast to every resident of a medieval town the same time, can now be implemented on a network \u2013 either through logical broadcast on the Internet or physical broadcast with radio. For the first time we can implement on the Internet the integrity properties on which civilization depends \u2013 including synchronized clocks, unforgeable transactions, and censorship-proof publishing. Where today's Internet, lacking this technology, fails to provide many of these properties, we now know how to provide them with a greater degree of integrity and availability than either the Internet or any previous media was capable of.[A01] Agilent Application Note AN 1289, \"The Science of Timekeeping\"[AMPR00] L. Alvisi, D. Malkhi, L. Pierce, and M. Reiter, \"Fault detection for Byzantine quorum systems.\"[AMPW00] L. Alvisi, D. Malkhi, L. Pierce, M. Reiter, and R. Wright, \"Dynamic Byzantine Quorum Systems\"[B83] M. Ben-Or, \"Another advantage of free choice: Completely asynchronous agreement protocols\", in Proc. 2nd ACM Symposium on Principles of Distributed Computing (PODC), 1983[B82] M. Blum, \"Coin Flipping by Telephone: A Protocol for Solving Impossible Problems\", Proceedings of the 24th IEEE Computer Conference (CompCon), 1982, pp. 133-137. \u21a9[BT85] G. Bracha and S. Toueg, \"Asynchronous consensus and broadcast protocols\", Journal of the ACM, vol. 32, pp. 824-840, Oct. 1985[CP02] C. Cachin, J. Poritz, \"Secure Intrusion-tolerant Replication on the Internet\" \u21a9[C01] C. Cachin, \"Distributing Trust on the Internet\" Conference on dependable systems and networks (DSN-2001). This is an excellent survey of the state of the art in Byzantine-resililient replication as well as presenting his own Byzantine-resilient replication system that uses fair toin cossing. \u21a9[C98] C. Cachin , \"On the foundations of oblivious transfer\", Advances in Cryptology: EUROCRYPT '98, Lecture Notes in Computer Science v. 1403, Kaisa Nyberg, ed., pp. 361-374. Springer-Verlag, 1998.[CT96] T.D. Chandra and S. Toueg, \"Unreliable failure detectors for reliable distributed systems\", Journal of the ACM, vol. 43, no. 2, pp. 225-267, 1996.[C81] \"Untraceable Electronic Mail, Return Addresses, and Digital Pseudonyms,\" D. Chaum, Communications of the ACM, vol. 24 no. 2, February, 1981. \u21a9 \u21a9[C82] \"Blind Signatures for Untraceable Payments,\" D. Chaum, Advances in Cryptology Proceedings of Crypto 82, D. Chaum, R.L. Rivest, & A.T. Sherman (Eds.), Plenum, pp. 199-203. \u21a9 \u21a9[C85] \"Online Cash Checks\", D. Chaum[CE86] \"A Secure and Privacy-Protecting Protocol for Transmitting Personal Information Between Organizations,\" D. Chaum & J.-H. Evertse, Advances in Cryptology CRYPTO '86, A.M. Odlyzko (Ed.), Springer-Verlag, pp. 118-167.[C89] \"Showing Credentials Without Identification: Signatures Transferred Between Unconditionally Unlinkable Pseudonyms,\" D. Chaum, Accepted but not Presented Auscrypt '89.[C89b] \"Privacy Protected Payments: Unconditional Payer and/or Payee Untraceability,\" D. Chaum, Smart Card 2000, D. Chaum & I. Schaumuller-Bichl (Eds.), North Holland, 1989, pp. 69-93.[CV] \"Group Signatures,\" D. Chaum & E van Heyst, Advances in Cryptology EUROCRYPT '91, D.W. Davies (Ed.), Springer-Verlag, pp. 257-265.[C97] C. Cocks. \"Split knowledge generation of RSA paremeters.\" Presented at the 6th IMA Conference on Coding and Cryptography, Cirencester, England, to appear in the proceedings, December 17\u201319, 1997.[CGT95] C. Cr\u00e9peau , J. van de Graaf , and A. Tapp , \"Committed Oblivious Transfer and Private Multi-Party Computations\"; Advances in Cryptology: Proceedings of Crypto '95, Springer-Verlag, pages 110-123, 1995.[C??] F. Cristian [et. al?] on external clock synchronization \u21a9[CF94] F. Cristian and C. Fetzer, \"Probabilistic Internal Clock Synchronization\", 13th Symposium on Reliable Distributed Systems\", 1994 \u21a9[D96] Dohrn-van Rossum, History of the Hour \u2013 Clocks and Modern Temporal Orders, University of Chicago Press, 1996. \u21a9 \u21a9 \u21a9[DA01] W. Du, M. Atallah, \"Secure Multi-Party Computation Problems and Their Applications: A Review And Open Problems\" (2001), New Security Paradigms Workshop \u21a9[FLP85] M.J. Fischer, N.A. Lynch,, and M.S. Peterson, \"Impossibility of distributed consensus with one faulty process\", Journal of the ACM, vol 32, pp. 374-382, April 1985. \u21a9[G95] Vicente Goyzueta, \"Cathedral of Qosco City\" \u21a9[HM97] M. Hirt and U. Maurer, \"Complete characterization of adversaries tolerable in secure multi-party computation\", 16th ACM PODC J. Kilian, Uses of Randomness in Algorithms and Protocols, MIT Press 1990.[ISN93] M. Ito, A. Saito and T. Nishizeki. Secret Sharing Scheme Realizing General Access Structure. J. Cryptology, 6 (1993) 15--20.[K90] J. Kilian, The Use of Randomness in Algorithms and Protocols, MIT Press 1990 \u21a9[L78] L. Lamport, \"Time, Clocks, and the Ordering of Events in a Distributed System\", Communications of the ACM 21(7):558-565, July 1978 \u21a9[L95] Susan K. Langford. \"Threshold DSS signatures without a trusted party.\" In D. Coppersmith, editor, Advances in Cryptology Crypto '95 proceedings, number 963 in LNCS, pages 397 409. Springer-Verlag, 1995. (some context online at http://citeseer.nj.nec.com/context/478327/0)[MR97] D. Maklhi & M. Reiter, \"Byzantine Quorum Systems\", also in 21st ACM STOC, 1979[MM95] L. E. Moser and P. M. Melliar-Smith, \"Total ordering algorithms for asynchronous Byzantine systems.\" In Proceedings of the 9th International Workshop on Distributed Algorithms, Springer-Verlag, September 1995.[MMA99] L. Moser, P.M. Melliar-Smith, V. Agrawala, \"Total ordering algorithms\", Proceedings of the 19th annual conference on Computer Science 1991 , San Antonio, Texas, United States, Pages: 375 - 380 Series-Proceeding-Article Year of Publication: 1999 ISBN:0-89791-382-5 ACM Press New York, NY, USA[MM99] L.E. Moser and P.M. Mellar-Smith, \"Byzantine-resistant total ordering algorithms\", Information and Computation, vol. 150, pp. 75-111, 1999.[NW96] M. Naor and A. Wool, \"Access control and signatures via quorum secret sharing\", 3rd ACM Conf. on Computer and Communications Security[MB94] M. Reiter and K. P. Birman. \"How to securely replicate services.\"\" ACM Transactions on Programming Languages and Systems, 16(3):986\u20131009, May 1994.[P91] T.P. Pedersen. \"A Threshold Cryptosystem without a Trusted Party.\"\" In Eurocrypt'91, LNCS 547, pages 522--526. Springer-Verlag, 1991.[PSL80] M. Pease, R. Shostak, and L. Lamport, \"Reaching Agreement in the Presence of Faults\", Journal of the ACM 27(2):228-234, April 1980[Rab83] M. Rabin, \"Randomized Byzantine Generals,\" Proceedings of the IEEE Symposium on the Foundations of Computer Science, pp. 403-409, IEEE, 1983[SMNTWB02] David Sames, Brian Matt, Brian Niebuhr, Gregg Tally, Brent Whitmore, and David Bakken, \"Developing a Heterogeneous Intrusion Tolerant CORBA System\", Proceedings of the 2002 International Conference on Dependable Systems & Networks, Washington, D.C., June 23-26, 2002.[Sh79] A. Shamir. \"How to share a secret.\"\" In Com. of the ACM, 22(11):612613, 1979. (online at secret.html)[Sh96] B. Schneier, Applied Cryptography, 2nd edition, John Wiley & Sons 1996 \u21a9[SG98] V. Shoup and R. Gennaro. \"Securing Threshold Cryptosystems against Chosen Ciphertext Attack\", in Eurocrypt '98, LNCS 1403, pages 1\u201316. SpringerVerlag, 1998. cf. the extended version for the Journal of Cryptology, available at http://www.shoup.net/papers/[Sh00] V. Shoup, \"Practical threshold signatures\", in Advances in Cryptology: EUROCRYPT 2000 (B. Preneel, ed.) vol. 1087 of Lecture Notes in Computer Science, pp. 207-220, Springer, 2000[S97] N. Szabo, \"Contracts With Bearer\"[S97b] N. Szabo, \"The God Protocols\"[S98] N. Szabo, \"Secure Property Titles with Owner Authority\" \u21a9[S00] N. Szabo, \"Trusted Third Parties are Security Holes\"Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 2003 by Nick Szabo\nrough draft \u2013 quoting or redistribution without permission of the author prohibitedEditor's note: Some links may be broken."}
{"prompt": "Online Cash Checks", "completion": "Savings of roughly an order of magnitude in space, storage, and bandwidth over previously published online electronic cash protocols are achieved by the techniques introduced here. In addition, these techniques can increase convenience, make more efficient use of funds, and improve privacy.\"Offline\" electronic money[CFN88] is suitable for low value transactions where \"accountability after the fact\" is sufficient to deter abuse; online payment[C89], however, remains necessary for transactions that require \"prior restraint\" against persons spending beyond their available funds.Three online schemes are presented here. Each relies on the same techniques for encoding denominations in signatures and for \"devaluing\" signatures to the exact amount chosen at the time of payment. They differ in how the unspent value is returned to the payer. In the first, all change is accumulated by the payer in a single \"cookie jar,\" which might be deposited at the bank during the next withdrawal transaction. The second and third schemes allow change to be distributed among unspent notes, which can themselves later be spent. The second scheme reveals to the shop and bank the maximum amount for which a note can be spent; the third does not disclose this information.For simplicity and concreteness, but without loss of generality, a particular denomination scheme will be used here. It assigns the value of 1 cent to public exponent 3 in an RSA system, the value of 2 cents to exponent 5, 4 cents to exponent 7, and so on; each successive power-of-two value is represented by the corresponding odd prime public exponent, all with the same modulus. Much as in [C89], a third root of an image under the one-way function f (together with the pre-image modulo the bank's RSA composite) is worth 1 cent, a 7th root is worth 4 cents, and a 21st root 5 cents. In other words, a distinct public prime exponent is associated with each digit of the binary integer representation of an amount of payment; for a particular amount of payment, the product of all those prime exponents corresponding to 1 's in the binary representation of the amount is the public exponent of the signature.A signature on an image under f is \"devalued\" by raising it to the public powers corresponding to the coin values that should be removed. For instance, a note having a 21st root could be devalued from its 5 cent value, to 1 cent, simply by raising it to the 7th power.In earlier online payment systems[C89], the number of separate signatures needed for a payment was in general the Hamming weight of the binary representation of the amount. Since online systems would be used for higher-value payments (as mentioned above), and extra resolution may be desired to provide interest for unspent funds[C89], an average of roughly an order of magnitude is saved here.In this first scheme the payer periodically withdraws a supply of notes from the bank, each with the system-wide maximum value. Consider an example, shown in Figure 1.1, in which two notes are withdrawn. The n and ri are random. The ri \"blind\" (from the bank) the images under the public, one-way function f. The bank's signature corresponds to taking the h-th root, where h = 3*5*7*11. As in all the figures, the payer sends messages from the left and the bank sends from the right.In preparing the first payment, the payer divides r1 out. The signature is then raised to the 55th power to devalue it from 15 cents to 5 cents. Figure 1.2 shows this first payment. Of course the shop is an intermediary between the payer (left) and the bank (right) in every online payment, but this is not indicated explicitly. Also not shown in the figures are messages used to agree on the amounts of payment.The first two residues sent in paying, n1 and its signed image under f, are easily verified by the bank to be worth 5 cents. The third residue is a blinded \"cookie jar,\" a blinded image under f of a randomly chosen value j. This cookie jar is modulo a second RSA composite that is only used for cookie jars. Once the bank verifies the funds received, and that n1 has not been spent previously, it signs and returns the blinded cookie jar (under the cookie jar modulus) with public exponents corresponding to the change due.The second payment, shown in figure 1.3, is essentially the same as the first, except that the amount is 3 cents and the cookie jar now has some roots already on it. If more payments were to be made using the same cookie jar, all resulting signatures for change would accumulate.The cookie jar might conveniently be deposited, as shown in figure 1.4, during the withdrawal of the next batch of notes. It is verified by the bank much as a payment note would be: the roots must be present in the claimed multiplicity and the pre-image under f must not have been deposited before.The cookie jar approach gives the effect of an online form of \"offline checks\"[C89], in that notes of a fixed value are withdrawn and the unspent parts later credited to the payer during a refund transaction.Figure 2 depicts a somewhat different scheme, which allows change to be spent without an intervening withdrawal transaction. Withdrawals can be just as in the cookie-jar scheme, but here a single modulus is used for everything in the system. The products of public exponents representing the various amounts are as follows: d is the amount paid, g is the note value, the \"change\" c is g/d, and h is again the maximal amount, where d | g | h. A payment (still to the bank through a shop) includes first and second components that are the same as in the cookie-jar scheme. The third component is the amount of change c the payer claims should be returned. The fourth is a (blinded) number m, which could be an image under f used in a later payment just as n is used in this one.The signature returned contains a \"protection\" factor (shown inside the padlock). This factor ensures that the payer actually has the c-th root of f(n), by requiring that the payer apply f to it before dividing the result out of the signature. Without such protection, a payer could get the systemwide maximum change, regardless of how much change is actually due; with it, the change claimed can only be recovered if the corresponding roots on n are in fact known to the payer.The change returned in a payment can be divided into parts that fill in missing denominations in notes not yet spent. Suppose, for example, that the last payment is spent with d = 5*11, c = 3*7, and that m is formed by the payer as shown in the first line of Figure 3.1. Then unblinding after the payment yields the a shown in the second line.(Use === for \"is equivalent to\")From a, the two roots shown in the last two lines of Figure 3.2 are readily computed. (This technique is easily extended to include any number of separate roots.) Thus the values unused in the last payment fill in roots missing in notes n1 and n2.Because overpayment allows change to be returned in any chosen denominations (not shown), the payer has extra flexibility and is able to use all funds held. This also increases convenience by reducing the need for withdrawals.Although the combination of the previous two subsections is quite workable, it may be desirable for the payer not to have to reveal c to the shop or the bank. Figure 4 shows a system allowing this. The payment message is just as in the declared note value protocol above, except that c is not sent. The protection factor (shown again in a lock) is also placed under the signature, but it is missing the extra f and is raised to a random power z chosen by the bankIf z were known to the payer before payment, then the payer could cheat by including f(n) in the third component; this would yield the payer the system-wide maximum change, even if none were due. Consider a single change exponent q. If z mod q is guessed correctly by a cheating payer, then the payer improperly gets the corresponding coin value. Thus the chance of successful cheating is 1/q. If, however, the divisors of h are chosen sufficiently large, quite practical security can be achieved. When the possibilities of distributing change and refunding are included, this scheme's privacy surpasses that of a coin system.Combining online coins improves efficiency, use of funds, convenience, and privacy.Chaum, D., \"Privacy Protected Payments: Unconditional Payer and/or Payee Anonymity,\" in Smart Card 2000, North-Holland, 1989, pp. 69-92. \u21a9 \u21a9 \u21a9 \u21a9Chaum, D., A. Fiat, & M. Naor, \"Offline Electronic Cash,\" Proceedings of Crypto '88. \u21a9"}
{"prompt": "Why I Wrote PGP", "completion": "Whatever you do will be insignificant, but it is very important that you do it.It's personal. It's private. And it's no one's business but yours. You may be planning a political campaign, discussing your taxes, or having a secret romance. Or you may be communicating with a political dissident in a repressive country. Whatever it is, you don't want your private electronic mail (email) or confidential documents read by anyone else. There's nothing wrong with asserting your privacy. Privacy is as apple-pie as the Constitution.The right to privacy is spread implicitly throughout the Bill of Rights. But when the United States Constitution was framed, the Founding Fathers saw no need to explicitly spell out the right to a private conversation. That would have been silly. Two hundred years ago, all conversations were private. If someone else was within earshot, you could just go out behind the barn and have your conversation there. No one could listen in without your knowledge. The right to a private conversation was a natural right, not just in a philosophical sense, but in a law-of-physics sense, given the technology of the time.But with the coming of the information age, starting with the invention of the telephone, all that has changed. Now most of our conversations are conducted electronically. This allows our most intimate conversations to be exposed without our knowledge. Cellular phone calls may be monitored by anyone with a radio. Electronic mail, sent across the Internet, is no more secure than cellular phone calls. Email is rapidly replacing postal mail, becoming the norm for everyone, not the novelty it was in the past.Until recently, if the government wanted to violate the privacy of ordinary citizens, they had to expend a certain amount of expense and labor to intercept and steam open and read paper mail. Or they had to listen to and possibly transcribe spoken telephone conversation, at least before automatic voice recognition technology became available. This kind of labor-intensive monitoring was not practical on a large scale. It was only done in important cases when it seemed worthwhile. This is like catching one fish at a time, with a hook and line. Today, email can be routinely and automatically scanned for interesting keywords, on a vast scale, without detection. This is like driftnet fishing. And exponential growth in computer power is making the same thing possible with voice traffic.Perhaps you think your email is legitimate enough that encryption is unwarranted. If you really are a law-abiding citizen with nothing to hide, then why don't you always send your paper mail on postcards? Why not submit to drug testing on demand? Why require a warrant for police searches of your house? Are you trying to hide something? If you hide your mail inside envelopes, does that mean you must be a subversive or a drug dealer, or maybe a paranoid nut? Do law-abiding citizens have any need to encrypt their email?What if everyone believed that law-abiding citizens should use postcards for their mail? If a nonconformist tried to assert his privacy by using an envelope for his mail, it would draw suspicion. Perhaps the authorities would open his mail to see what he's hiding. Fortunately, we don't live in that kind of world, because everyone protects most of their mail with envelopes. So no one draws suspicion by asserting their privacy with an envelope. There's safety in numbers. Analogously, it would be nice if everyone routinely used encryption for all their email, innocent or not, so that no one drew suspicion by asserting their email privacy with encryption. Think of it as a form of solidarity.Senate Bill 266, a 1991 omnibus anticrime bill, had an unsettling measure buried in it. If this non-binding resolution had become real law, it would have forced manufacturers of secure communications equipment to insert special \"trap doors\" in their products, so that the government could read anyone's encrypted messages. It reads, \"It is the sense of Congress that providers of electronic communications services and manufacturers of electronic communications service equipment shall ensure that communications systems permit the government to obtain the plain text contents of voice, data, and other communications when appropriately authorized by law.\" It was this bill that led me to publish PGP electronically for free that year, shortly before the measure was defeated after vigorous protest by civil libertarians and industry groups.The 1994 Communications Assistance for Law Enforcement Act (CALEA) mandated that phone companies install remote wiretapping ports into their central office digital switches, creating a new technology infrastructure for \"point-and-click\" wiretapping, so that federal agents no longer have to go out and attach alligator clips to phone lines. Now they will be able to sit in their headquarters in Washington and listen in on your phone calls. Of course, the law still requires a court order for a wiretap. But while technology infrastructures can persist for generations, laws and policies can change overnight. Once a communications infrastructure optimized for surveillance becomes entrenched, a shift in political conditions may lead to abuse of this new-found power. Political conditions may shift with the election of a new government, or perhaps more abruptly from the bombing of a federal building.A year after the CALEA passed, the FBI disclosed plans to require the phone companies to build into their infrastructure the capacity to simultaneously wiretap 1 percent of all phone calls in all major U.S. cities. This would represent more than a thousandfold increase over previous levels in the number of phones that could be wiretapped. In previous years, there were only about a thousand court-ordered wiretaps in the United States per year, at the federal, state, and local levels combined. It's hard to see how the government could even employ enough judges to sign enough wiretap orders to wiretap 1 percent of all our phone calls, much less hire enough federal agents to sit and listen to all that traffic in real time. The only plausible way of processing that amount of traffic is a massive Orwellian application of automated voice recognition technology to sift through it all, searching for interesting keywords or searching for a particular speaker's voice. If the government doesn't find the target in the first 1 percent sample, the wiretaps can be shifted over to a different 1 percent until the target is found, or until everyone's phone line has been checked for subversive traffic. The FBI said they need this capacity to plan for the future. This plan sparked such outrage that it was defeated in Congress. But the mere fact that the FBI even asked for these broad powers is revealing of their agenda.Advances in technology will not permit the maintenance of the status quo, as far as privacy is concerned. The status quo is unstable. If we do nothing, new technologies will give the government new automatic surveillance capabilities that Stalin could never have dreamed of. The only way to hold the line on privacy in the information age is strong cryptography.You don't have to distrust the government to want to use cryptography. Your business can be wiretapped by business rivals, organized crime, or foreign governments. Several foreign governments, for example, admit to using their signals intelligence against companies from other countries to give their own corporations a competitive edge. Ironically, the United States government's restrictions on cryptography in the 1990's have weakened U.S. corporate defenses against foreign intelligence and organized crime.The government knows what a pivotal role cryptography is destined to play in the power relationship with its people. In April 1993, the Clinton administration unveiled a bold new encryption policy initiative, which had been under development at the National Security Agency (NSA) since the start of the Bush administration. The centerpiece of this initiative was a government-built encryption device, called the Clipper chip, containing a new classified NSA encryption algorithm. The government tried to encourage private industry to design it into all their secure communication products, such as secure phones, secure faxes, and so on. AT&T put Clipper into its secure voice products. The catch: At the time of manufacture, each Clipper chip is loaded with its own unique key, and the government gets to keep a copy, placed in escrow. Not to worry, though\u2014the government promises that they will use these keys to read your traffic only \"when duly authorized by law.\" Of course, to make Clipper completely effective, the next logical step would be to outlaw other forms of cryptography.The government initially claimed that using Clipper would be voluntary, that no one would be forced to use it instead of other types of cryptography. But the public reaction against the Clipper chip was strong, stronger than the government anticipated. The computer industry monolithically proclaimed its opposition to using Clipper. FBI director Louis Freeh responded to a question in a press conference in 1994 by saying that if Clipper failed to gain public support, and FBI wiretaps were shut out by non-government-controlled cryptography, his office would have no choice but to seek legislative relief. Later, in the aftermath of the Oklahoma City tragedy, Mr. Freeh testified before the Senate Judiciary Committee that public availability of strong cryptography must be curtailed by the government (although no one had suggested that cryptography was used by the bombers).The government has a track record that does not inspire confidence that they will never abuse our civil liberties. The FBI's COINTELPRO program targeted groups that opposed government policies. They spied on the antiwar movement and the civil rights movement. They wiretapped the phone of Martin Luther King. Nixon had his enemies list. Then there was the Watergate mess. More recently, Congress has either attempted to or succeeded in passing laws curtailing our civil liberties on the Internet. Some elements of the Clinton White House collected confidential FBI files on Republican civil servants, conceivably for political exploitation. And some overzealous prosecutors have shown a willingness to go to the ends of the Earth in pursuit of exposing sexual indiscretions of political enemies. At no time in the past century has public distrust of the government been so broadly distributed across the political spectrum, as it is today.Throughout the 1990s, I figured that if we want to resist this unsettling trend in the government to outlaw cryptography, one measure we can apply is to use cryptography as much as we can now while it's still legal. When use of strong cryptography becomes popular, it's harder for the government to criminalize it. Therefore, using PGP is good for preserving democracy. If privacy is outlawed, only outlaws will have privacy.It appears that the deployment of PGP must have worked, along with years of steady public outcry and industry pressure to relax the export controls. In the closing months of 1999, the Clinton administration announced a radical shift in export policy for crypto technology. They essentially threw out the whole export control regime. Now, we are finally able to export strong cryptography, with no upper limits on strength. It has been a long struggle, but we have finally won, at least on the export control front in the US. Now we must continue our efforts to deploy strong crypto, to blunt the effects increasing surveillance efforts on the Internet by various governments. And we still need to entrench our right to use it domestically over the objections of the FBI.PGP empowers people to take their privacy into their own hands. There has been a growing social need for it. That's why I wrote it.Philip R. Zimmermann\nBoulder, Colorado\nJune 1991 (updated 1999)"}
{"prompt": "Measuring Value", "completion": "A crucial issue in transaction costs economicsAn acquaintance does you a favor. How can you pay her back and deepen the relationship? An investor examines the balance sheet of a company. What do the numbers mean? Are they even trustworthy? A judge must decide on an award for damages done to a plaintiff. What amount of money, if any, fairly compensates for the plaintiff's suffering?A wide variety of human relationships and institutions, from the most friendly to the most antagonistic, must tackle the thorny problem of value: how can we securely distinguish, using the inputs of our fallible senses, that which we value from that which we do not? How can we figure out what another person values? Money, wage labor, markets, and many other economic institutions take the forms they do primarily because they solve problems of measuring value. Such questions also lie at the heart of the current crisis in accounting.Questions of value are inherently subjective and personal. Value is very different from the objective phenomena of physics, chemistry, and the like. Societies have evolved institutions such as firms and competitive markets to set prices, legal precedents and judicial proceedings to make judgments, and so forth. These institutions in turn often rely on answering the second question, the topic of our essay \u2013 how can we securely determine value from what we observe? We will examine tax collection as an antagonistic instance of the measurement problem. The last section of this essay will focus on a particular institution developed to measure value \u2013 accounting \u2013 and suggest how it might rise to challenge the radical changes underway in our services and information economies.In the nineteenth century economists developed a theory of perfectly competitive commodity markets (often now called the \"neoclassical model\"). This is the source of supply and demand curves, for example. In the ideal market, supply balances demand resulting in a price that incorporates all the relevant skills and preferences of the market's participants. In such a market, this balance between skills needed to create a commodity and the preferences for that commodity constitute the value of that commodity \u2013 we can measure value by the equilibrium market price. Some modern markets, especially well known ones such as the commodity futures markets, approach this ideal in practice. However, many other institutions, such as the hierarchical firm, operate in very different ways. And modern markets are mostly quite recent in origin. Even today most human economic relationships, such as those that occur within a firm, are far from this ideal.In the competitive market, one commodity is traded for another. (Money is just a particularly interesting kind of commodity). In order for this market to work \u2013 in order for prices to accurately communicate value \u2013 first the participants must be able to measure the value of the two commodities traded. Indeed, that's the main property that distinguishes a commodity from a less economically tractable good or service \u2013 the ability of parties to measure its value \u2013 the ability of parties to observe properties of a good or service, matching what they observe against their private preferences, and making sure this process isn't spoofed by wily traders.The competitive market model was so successful that modern economists are now approaching other economic institutions that we take for granted \u2013 such as the firm \u2013 and asking why they exist at all! They are working backwards from a very clear theory of competitive markets to explain the wide variety of other kinds of economic relationships, usually formalized by property rights and contracts, that we enter into. This school is most widely known as the \"transaction cost\" school of economics. Often it is referred to as \"new institutional\", or \"property rights school.\" The idea of transaction costs was developed by Nobel prize winning economist Ronald Coase. His brilliant heirs include Oliver Hart and Oliver Williamson, along with Steve Cheung, Yoram Barzel, Armen Alchian, Harold Demsetz, Janet Landa, Robert Ellickson, and many others.By comparing a wide variety of contractual forms to the ideal commodity market, and by re-using many of the same assumptions used by neoclassical economists \u2013 individuals with rational self-interest, unique preferences, and unique skills \u2013 we are better understanding these other economic institutions. Modern economies contain a wide variety of commercial institutions, from hierarchically commanded firms on the one hand to freely competitive commodity markets on the other. In between are a wide variety of institutions and the contracts that formalize them.When somebody starts a new company rather than hiring on as an employee at a current one, we can think of this decision as a \"vote\" that the economy needs more market relationships and less employee-employer relationships. Contrariwise, when one firm buys out another, they are implicitly betting that the economy needs less market and more firm. Socialists, seeing the trends of integration and economies of scale in industrial capitalism, thought the world would end up as one big firm, and decided this firm should be run by the government. That worked out horribly. Others have idealized a world in which there are no firms \u2013 everybody is a private contractor, selling their services to other individuals. In many industries that's a non-starter as well. Oliver Williamson and other economists have studied many of these forms and come up with some criteria that make competitive commodity markets less than perfect, causing other contractual forms to be used. (Here \"contractual form\" is shorthand for a certain kind business relationship \u2013 employment, franchising, commodity exchange, etc. The contract used by the parties is usually the most formal and complete description of their relationship, as well as the \"security protocol\" that defines the basic rules of the relationship).These economists have identified a number of limitations of ideal commodity exchange that often cause other contractual forms to be used instead. These include:Security costs. Other kinds of transaction costs are incurred from parties that are opportunistic \u2013 they are self-interested, but they follow the letter if not necessarily the spirit of the rules of a relationship (whether these rules are legal, contractual, or informal). Security costs are incurred from, or to protect a relationship against, parties that are outright malicious \u2013 they might break any of the rules, use threats of force, or actually carry out acts of trespass, theft, or violence, in order to satisfy their (alas, not so rare) coercive kinds of preferences.Rule incompleteness \u2013 the difficulty for parties to anticipate all contingencies that might occur in a relationship, and thus the inability to plan for them with rules (for example, by terms in a contract). Most disputes that go to court, and most interesting new legal precedents, occur over situations that the parties entering into a relationship didn't foresee well enough to deal with up front.Exit costs and/or investments that are specific to a particular relationship. For example, when you take a class to learn how to use Windows or Word, you are investing in a relationship with Microsoft. Another example is when a railroad is built to a coal mine \u2013 the railroad now depends on the mine for business, and the mine operator depends on the railroad to ship his coal. A third example is the layout on a factory floor, where the results of one machine's operation feed into another specific machine. The most common examples are employees developing relationships and learning skills that are specific to a particular job. In these kinds relationships with high investments or exit costs, without good contractual safeguards you can end up stuck in a bad relationship \u2013 even if it goes sour, the other guy cheats on you, it may be too expensive to exit the relationship, or you may lose your investment.When there is both lack of ability to specify rules and relationship specific investments, the result is often vertical integration into a single firm. The coal mine might buy the railroad, the machine operations occur on a factory floor owned by a single company, and so on. On the other hand, a firm has diseconomies of scale due to the increasing inability to match preferences to skills in larger firms. As Friedrich Hayek pointed out, diseconomies of scale in the distribution of knowledge about skills and preferences are a big reason why socialism works so much more poorly than market economies. More generally, these diseconomies limit firm size. Certain innovations (such as in accounting at the beginning of the industrial revolution, or in supply chain management in the last two decades) have improved the reliable distribution of knowledge within a firm and thereby allowed firms to grow larger.Innovations that better cover contingencies or reduce the need for relationship specific investments and exit costs can disadvantage larger firms and advantage a larger number of smaller firms. Rather than an commodity market often a contractual form intermediate between a market and a firm, such as a franchise, is used. A franchise is a long term contract that, roughly speaking, specifies many basic rules for operating a business but leaves temporary or unique problems to the discretion of the local operator.We will shortly turn to perhaps the most important kind of transaction cost, the measurement of value, the main subject of our essay.Before we do that, however, let us note that these kinds of transaction costs, while first studied in the context of markets, are not confined to markets or even market-embedded institutions. They occur any time a good is transferred or a service rendered according to a set of rules or customs, however simple or complicated. Not only do these transaction costs provide a basis for comparing non-market or extra-market institutions such as the firm to the market; they also apply to a wide variety of other institutions, including many we may not typically think of as economic institutions. So, for example, the ancient institutions of inheritance, marriage, tribute, tax collection, and tort law all involved an important component of wealth transfer. All are subject to the main kinds of transaction costs outlined here \u2013 including that of our main topic.The measurement problem is very broad. It comes into play in any system of exchange \u2013 reciprocation of favors, barter, money, credit, employment, or purchase in a market. It is important in extortion, taxation, tribute, and the setting of judicial penalties. It is even important in reciprocal altruism in animals. Consider monkeys exchanging favors \u2013 say pieces of fruit for back scratches. Mutual grooming can remove ticks and fleas that an individual can't see or reach. But just how much grooming versus how many pieces of fruit constitutes a reciprocation that both sides will consider to be \"fair\", or in other words not a defection? Is twenty minutes of back-scratching worth one piece of fruit or two? And how big a piece? And just how long is twenty minutes anyway? In some cases this is relatively easy to solve, as with the delayed barter of blood for blood in vampire bats. These bats can come home from a hunting mission either overstuffed or starving. Overstuffed bats can regurgitate blood to feed hungry ones. The grateful recipient can remember the favor an return it in a future hunting trip when the tables might be turned. And indeed, some degree of reciprocal trade takes place between vampire bats, even among non-kin.Even this simple case of trading blood for blood, is, however, far more complicated then it seems. Just how do the bats estimate the value of blood they have received? Do they estimate the value of a favor by weight, by bulk, by taste, by its ability to satiate hunger, or other variables? Just the same, measurement complications arise even in the simple monkey exchange of \"you scratch my back and I'll scratch yours\".For the vast majority of potential exchanges, the measurement problem is intractable for animals. Even more than the easier problem of remembering faces and matching them to favors, the ability of both parties to agree with sufficient accuracy on an estimate of the value of a favor in the first place is probably the main barrier to reciprocal altruism among animals.It is also likely the most important barrier to exchange among humans. Many kinds of exchange, probably many more than most economists perceive, are rendered infeasible by the inability of one or both parties to the exchange to estimate its value. For most of human history, most kinds of markets that are possible today were not then feasible, in large part due to the inability of potential market participants to measure value: to estimate the value of the transaction to themselves and then use these estimates to discover and agree on a common objective measurement. Measurement of value was and is also important to the development of many economic institutions related to markets. Accounting, which we will examine below, was crucial to the development of large companies and modern systems of taxation.The process of determining the value of a product from observations is necessarily incomplete and costly. For example, a shopper can see that an apple is shiny red. This has some correlation to its tastiness (the quality a typical shopper actually wants from an apple), but it's hardly perfect. The apple's appearance is not a complete indicator \u2013 an apple sometimes has a rotten spot down inside even if the surface is perfectly shiny and red. We call an indirect measure of value \u2013 for example the shininess, redness, or weight of the apple \u2013 a proxy measure. In fact, all measures of value, besides prices in an ideal market, are proxy measures \u2013 real value is subjective and largely tacit.Such observations also come at a cost. It may take some time to sort through apples to find the shiniest and reddest ones, and meanwhile the shopper bruises the other apples. It costs the vendor to put on a fake shiny gloss of wax, and it costs the shopper because he may be fooled by the wax, and because he has to eat wax with his apple. Sometimes these measurement costs comes about just from the imperfection of honest communication. In other cases, such as waxing the apple, the cost occurs because rationally self-interested parties play games with the observable.Measures are critical components of institutions \u2013 such as auctions, contracts, accounting systems, legal damage rules, tax rules, etc. \u2013 that align incentives between parties who, prior to participating in the institution, have incompatible incentives. We can divide the measurement problem into two components \u2013 the first, choosing the phenomena and units that will be measured, and second, measuring those attributes in a way that minimizes spoofing of the measure between parties whose incentives with respect to the value are misaligned.Cost can usually be measured far more objectively than value. As a result, the most common proxy measures are various kinds of costs. Examples include:We now look at a particularly challenging set of measurement problems \u2013 those faced by a tax collector. Taxation being the least cooperative kind of economic relationship \u2013 the incentives between the parties being the most misaligned \u2013 the measurement game played between the parties takes its most serious form.Tax collection is the most efficient department of government. Its efficiency rivals that of many private sector institutions.From the point of view of many taxpayers this is an incredible claim, given that tax collectors take money we ourselves know how to spend quite well, thank you, and often spend it on amazingly wasteful activities. And the rules by which they take it often seem quite arbitrary. Tax rules are usually complex but nevertheless fail to let us account for many events important to the earning of our incomes that differentiate us from other taxpayers.How the money gets spent is outside the scope of the claim that tax collectors are uncommonly efficient. It is the collection process itself that is the subject of that claim, and the tax collection rules. This essay will demonstrate the efficiency of tax collector's rules by two arguments:The tax collector's incentives are aligned with the other branches of their government in a task that benefits all associated with the government, namely the collection of their revenue. No organization of any type collects more revenue with fewer expenditures than tax collection agencies. Of course, they have the advantage of coercion, but they must overcome measurement problems that are often the same as other users of accounting systems, such as owners of large companies. It is not surprising, then, that tax collectors have sometimes pioneered value measurement techniques, and often have been the first to bring them into large scale use.Like other kinds of auditors, the tax collector's measurement problem is tougher than it looks. Investment manager Terry Coxon has described it well[6]. Bad measures or inaccurate measurements allow some industries to understate their income, while forcing others to pay taxes on income they haven't really earned. Coxon describes the result: the industries that are hurt tend to shrink. The industries that benefit pay fewer taxes than could be extracted. In both cases, less revenue is generated for the tax man than he might be able to get with better rules.This is an application of the Laffer curve to the fortunes of specific industries. On this curve, developed by the brilliant economist Arthur Laffer, as the tax rate increases, the amount of revenue increases, but at an increasingly slower rate than the tax rate, due to increased avoidance, evasion, and most of all disincentive to engage in the taxed activity. At a certain rate due to these reasons tax revenues are optimized. Hiking the tax rate beyond the Laffer optimum results in lower rather than higher revenues for the government. Ironically, the Laffer curve was used by advocates for lower taxes, even though it is a theory of tax collection optimum to government revenue, not a theory of tax collection optimal to social welfare or individual preference satisfaction.On a larger scale, the Laffer curve may be the most important economic law of political history. Adams[1] uses it to explain the rise and fall of empires. The most successful governments have been implicitly guided by their own incentives \u2013 both their short-term desire for revenue and their long-term success against other governments \u2013 to optimize their revenues according to the Laffer Curve. Governments that overburdened their taxpayers, such as the Soviet Union and later Roman Empire, ended up on the dust-heap of history, while governments that collected below the optimum were often conquered by their better-funded neighbors. Democratic governments may maintain high tax revenues over historical time by more peaceful means than conquering underfunded states. They are the first states in history with tax revenues so high relative to external threats that they have the luxury of spending most of the money in non-military areas. Their tax regimes have operated closer to the Laffer optimum than those of most previous kinds of governments. (Alternatively, this luxury may be made possible by the efficiency of nuclear weapons in deterring attack rather than the increased incentives of democracies to optimize to tax collection).When we apply the Laffer curve to examining the relative impact of tax rules on various industries, we conclude that the desire to optimize tax revenues causes tax collectors to want to accurately measure the income or wealth being taxed. Measuring value is crucial to determining the taxpayer's incentives to avoid or evade the tax or opt out of the taxed activity. For their part, taxpayers can and do spoof these measurements in various ways. Most tax shelter schemes, for example, are based on the taxpayer minimizing reported value while optimizing actual, private value. Tax collection involves a measurement game with unaligned incentives, similar to but even more severe than measurement games between owner and employee, investor and management, store and shopper, and plaintiff-defendant (or judge-guilty party).As with accounting rules, legal damage rules, or contractual terms, the choice of tax rules involves trading off complexity (or, more generally, the costs of measurement) for more accurate measures of value. And worst of all, as with the other rule-making problems, rule choices ultimately ground out on subjective measures of value. Thus a vast number of cases are left where the tax code is unfair or can be avoided. Since tax collectors are not mind readers, tax rules and judgments must substitute for actual subjective values its judgments of what the \u201creasonable\u201d or \u201caverage\u201d person's preferences would be in the situation. Coxon provides the following example. Imagine that we wanted to optimize the personal income tax rules to measure income as accurately as possible. We might start reasoning along these lines:... look a little closer and you find that an individual incurs costs and expenses in earning a salary. He has to pay for transportation to and from work. He may spend money on clothes he wouldn't otherwise buy and on lunches that would cost less at home. And he may have spent thousands of dollars acquiring the skills and knowledge he uses in this work.Ideal, precise rules for measuring his income would, somehow, take all these and other costs into account. The rules would deduct the cost of commuting (unless he enjoys traveling about town early in the morning and later in the afternoon). They would deduct the cost of the clothes he wouldn't otherwise pay (to the extent it exceeds the cost of the clothes he would buy anyway). They would deduct the difference between the cost of eating lunch at work and the cost of lunch at home (unless he would eat lunch out anyway). And each year these ideal rules would deduct a portion of the cost of his education (unless he didn't learn anything useful in school or had enough fun to offset the cost).Because there are limits to complexity, andbecause tax agents can't read minds, the government gives them arbitrary rules to follow: no deductions are allowed for commuting expenses, for clothing that is suitable for wearing outside of work, for lunches that aren't part of the \u201cbusiness entertainment\u201d or for the cost of acquiring the skills a job requires (although you can deduct the cost of improving your skills).The resulting rules often seem arbitrary, but they are not. They are trade-offs, often non-obvious but brilliant, between the costs of measuring more value with greater accuracy and extra revenue extracted thereby. However, the value measurement problem is hardly unique to tax collection. It is endemic when assessing damages in contract and tort law, and when devising fines punishments in administrative and criminal law. Many private sector rules found in contracts, accounting, and other institutions also have the quality that they use highly non-obvious measures of value that turn out, upon close examination, to be brilliant solutions to seemingly intractable problems of mind-reading and the unacceptable complexity of covering all cases or contingencies. Such measurement problems occur in every kind of economic system or relationship. The best solutions civilization has developed to solve them are in most institutions brilliant but highly imperfect. There is vast room for improvement, but failed large-scale experiments in attempts to improve these measures can be devastating.The Laffer curve and measurement costs can also be used to analyze the relative benefits of various tax collection schemes to government. Prior to the industrial revolution, for example, the income tax was infeasible. Most taxes were on the prices of commodities sold, or on various ad-hoc measures of wealth such as the frontage of one's house. (This measurement game resulted in the very tall and deep but narrow houses that can still be found in some European cities such as Amsterdam. The stairs are so narrow that even normal furniture has to be hauled up to the upper story and then through a window with a small crane, itself a common feature on these houses).Taxes distorted the economy of the Netherlands \u2013 quite literally. Here are some houses in Amsterdam built in the 17th and 18th centuries, and a typical narrow staircase. Furniture and other large objects must be hauled up by the small cranes seen above the top-story windows.Prior to the industrial revolution, incomes were often a very private matter. However, starting in England in the early nineteenth century, large firms grew to an increasing proportion of the economy. Broadly speaking, large firms and joint-stock companies were made possible by two phases of accounting advances. The first phase, double-entry bookkeeping, was developed for the trading banks and \"super companies\" of early fourteenth century Italy. The second phase were accounting and reporting techniques developed for the larger joint stock companies of the Netherlands and England, starting with the India companies in the seventeenth century. Accounting allowed manager-owners to keep track of employees and (in the second phase) for non-management owners to keep track of managers. These accounting techniques, along with the rise of literacy and numeracy among the workers, provided a new way for tax collectors to measure value. Once these larger companies came to handle a sufficient fraction of an jurisdiction's value of transactions, it was rational for governments to take advantage of their measurement techniques, and they did so \u2013 the result being the most lucrative tax scheme ever, the income tax.While the incentives between investors and managers of public companies are not as badly misaligned as that between tax collector and taxpayer, the incentives to play games with measurements are still quite substantial. Let's now look at the challenges that investors, playing an accounting game with management, face as we move beyond the industrial era.Intangible assets \u2013 in the form of trade secrets, intellectual property, brands, human resources, and so on \u2013 have become more valuable than tangible assets to many of today's businesses. In business in general, and accounting in particular, it is common to use cost as a proxy measure for value. Indeed, while the actual economic value of an asset is the discounted value of expected future cash flows, most assets are assigned a value based on their costs rather than their expected future cash flow stream.This usually works because (a) costs are usually based on verifiable events which can be signed off on and audited, whereas predictions of cash flow are mere speculations about the future, (b) under most conditions we expect that managers have acted rationally, expending money only where they expect, on average, an eventual greater return, and (c) skilled readers of financial statements have learned from experience what games can be played by managers (because their incentives differ from other stakeholders), and to detect signs that managers have acted irrationally (e.g. over or under investment in particular assets).Thus, accounting numbers for tangible assets have never been take too literally or in isolation by skilled readers of financial statements. Indeed, the seeming concreteness of tangibles can be quite misleading. A skilled reader knows that most accounting numbers represent costs not value, and apply their knowledge of the industry to determine for themselves how well value may actually be estimated by these costs. For example, a naive reader will take current assets at face value, whereas a skilled reader will look for conditions such as abnormal growth of inventory or receivables. The actual function of a financial statement is to provide clues for analysts based on well-verified facts, not to provide pat final answers for those seeking to evaluate a company.Some objections to including intangibles on the balance sheet are invalid. For example, it is argued that internally generated intangibles cannot be valued because they have not been purchased on the market. However, this is also often the case for unique industrial investments and inventories. We have developed methods such as specific identification to value internally generated assets, and these could be applied to internally generated intangibles as well. Allocation of costs common to several intangible assets (e.g. a software library used in two different software products) can be based on long experience allocating costs common to multiple tangible assets.Another more valid objection is that the actual value, in expected cash flow, of intangibles is far more uncertain than for most physical assets. Thus, the mapping from cost to value is far more uncertain. This mapping can be done with greater certainty only over an aggregate of diverse investments. However, there are certain kinds of physical assets whose value is also highly uncertain, yet are assigned a value based on costs. Rational managers discounted their original investments to take into account such risks. The same is true for intangible assets. Skilled readers of financial statements know when to expect high uncertainty. Often they will demand further details from management about the specific investments. Providing greater detail where intangibles are involved is highly advisable, a point I return to below.On the other hand, many proposed measures of intangible value are non-starters for the purposes of accounting or financial statements. For example, various measures have been put forth allegedly related to expected cash flows (e.g. measuring web site hits, customer retention rates, etc. to try to estimate the value of a brand). The only time expected value rather than cost is used on a balance sheet for tangibles is when the asset can be currently priced on an efficient, competitive, and public market. (For example, inventories of publically traded commodities can be valued in this manner). Otherwise, it is far better to use cost, the actual event of expenditure, and let the skilled readers of the financial statement interpret these numbers properly.Here are some specific comments and proposals for specific kinds of intangible assets:A company owns these legal rights in all developed and most undeveloped economies. Copyrights are very well defined but in some cases very difficult for the company or the state to actually control. Patents can be very ill defined, so that the occurrence of a loss of rights over the actual technology is unclear. However, presumably managers discount their original investments to take into account such risks. Thus, if costs can be allocated to particular patents and copyrights, they constitute a proxy measure for the value of patented and copyrighted assets. This is quite similar to using the cost of a physical asset, whose eventual cash flow value is highly uncertain, to value that asset, and allowing the skilled reader to interpret the resulting number properly.A company owns legal rights to its trademark in all developed and most undeveloped economies. Companies further have some control over perception in people's minds, insofar as their observable actions influence this perception. Some major brands names have shown a very persistent value, while lesser ones are more likely to be forgotten. One can map current accounting treatments for investment in, maintenance of, and depreciation of physical assets to investment in and maintance of a brand, as well as the tendency of customers to forget over time a brand that is not maintained.Employees are not owned, but the labor market is not perfectly fungible. There is some stickiness to it. Indeed, this stickiness can be measured by the turnover rate for the company. The turnover rate, a quite auditable number, may provide an excellent way to depreciate an asset defined by the costs of hiring and training.Until long experience is gained by stakeholders with particular kinds of intangible investments, the ability to judge whether costs are rational, and satisfy the interests of stakeholders besides management, will be poor. A wide variety of reporting experiments, most of which will fail, are nevertheless essential to achieving more accurate reporting of asset values to stakeholders. Interpretation of intangible-heavy financial statements is a job for skilled analysts, not casual readers. For the expert more information is better \u2013 the detailed records of expenditures and their allocation to intangible assets are more important to the skilled stakeholder than the summary totals. Such detailed records should be released to stakeholders despite objections about confidentiality. Only long experience with these details will teach stakeholders whether and how to judge summary totals involving intangibles.The measurement of value is one of the most intractable problems of civilization. Brilliant and highly non-obvious solutions to this problem \u2013 from markets to money to the time-wage to cost accounting \u2013 have constituted some of the most important steps from animal to civilization. Historically, the solutions to one value measurement problem (e.g., accounting for value in a large firm) made possible other institutions as well (e.g. income tax, which must first solve the same kind of problem in order to be Laffer competitive with other kinds of taxation). Intangible asset accounting may now be the most important value measurement problem we face as we move beyond the era where tangible industrial commodities dominated the economy.(under construction)Adams, Charles, For Good and Evil: The Impact of Taxes on Civilization \u21a9Barzel, Yoram, 1982. \"Measurement Cost and the Organization of Markets\", Journal of Law and Economics 25, no 1:27-48Cheung, Steven N.S., 1969. A Theory of Share Tenancy. University of Chicago Press.Cheung, Steven N.S., 1983. \"The Contractual Nature of the Firm\", Journal of Law and Economics 2, no 1:1-22Coase, R.H., 1937, \"The Nature of the Firm\", Economica 4, no. 3:386-405Coase, R.H., 1988 The Firm, the Market and the Law, University of Chicago Press 1988 \u21a9Coxon, T., 1996 Keep What You Earn, Times Business/Random HouseHayek, F., \"The Use of Knowledge in Society\"Williamson, Oliver, The Economic Institutions of Capitalism, Free Press 1985"}
{"prompt": "Financial Cryptography in 7 Layers", "completion": "Abstract: Financial Cryptography is substantially complex, requiring skills drawn from diverse and incompatible, or at least, unfriendly, disciplines. Caught between Central Banking and Cryptography, or between accountants and programmers, there is a grave danger that efforts to construct Financial Cryptography systems will simplify or omit critical disciplines.This paper presents a model that seeks to encompass the breadth of Financial Cryptography (at the clear expense of the depth of each area). By placing each discipline into a seven layer model of introductory nature, where the relationship between each adjacent layer is clear, this model should assist project, managerial and requirements people.Whilst this model is presented as efficacious, there are limits to any model. This one does not propose a methodology for design, nor a checklist for protocols. Further, given the young heritage of the model, and of the field itself, it should be taken as a hint of complexity rather than a defining guide.Financial Cryptography is substantially complex[3]. For a field that is nominally only half a decade old, by some viewpoints, it is apparent from the implementation work that has been done that many more aspects were involved than envisaged by early pioneers.Financial Cryptography appears to be a science, or perhaps an art, that sits at the intersection of many previously unrelated disciplines:At such a busy juncture of so many distinctive bases of knowledge, problems are bound to arise. Not only the inevitable confusion and wasted resources, but the difficulty in acquiring technical, management and marketing talent that can comfortably work in the field is an issue.As a preliminary step to the better understanding of Financial Cryptography projects, it is often of some interest to structure these disciplines into models that aid dialogue, comparisons and decision making.This paper presents one such model that attempts to describe the field in an introductory manner, as a preamble to greater learning. In this model, the terms Finance and Cryptography are stretched out in order to reveal the disciplines that might have been hidden within the name.Of course, no one model can plausibly cover the depth and breadth of a complex subject. The intent of this present model is to allow the reader to conceptualise the entire field, identifying the relationships of the disciplines, without spending too much time on the detailed nature of each component. Depth is sacrificed for breadth.This paper introduces a 7 layer model, akin to the Open Systems Interconnect Reference Model of networking fame, as shown in Figure 1[5][6]. In this model, Finance and Cryptography are stretched out, revealing five more areas of interest.An advantage of this model is traversal from the technical to the application, giving major stakeholders easy points of entry.We can start at the top, the Finance layer, and work top-down; this is a process of mapping requirements and following them down into lower layers. This might be the place to start if engaged in high-level application discussions.Or, we can start at the bottom, the Cryptography layer, and describe tool kits to offer the higher layers. From ever more sophisticated lower layers, we can build our way up to offering a smorgasboard of options to the all-encompassing financial applications layer.Here, we choose a descriptive presentation that traverses bottom-to-top. Later, an example is presented in the reverse order, top-to-bottom.At the bottom is Cryptography[7]. To some extent, the pure science domain of cryptography solves problems in a mathematical sense only, but it delivers useful properties, including:Cryptography also can solve special problems, when correctly formulated[8]. For example, how can Alice sign a statement of Bob's without being aware of the contents of the statement[9]?It takes Software Engineering, layer 2, to usefully benefit from the properties of cryptography. We draw from database theory (atomicity, transactional integrity and recovery) and networking theory (feedback and idempotency) in order to add such properties as reliability and robustness in the face of network and nodal unreliability, or, designed unavailability such as smart cards and handhelds[10][11].Software engineering provides us with a practical network. We can talk about sending a message across an open network and know that a message will eventually get to the addressee. With the integrity techniques of the previous layer, we can know that the information received by the addressee is as intended by the addressor. By using the specialised sequences of database theory, we can preserve the integrity of the messages over time, in the face of software and hardware failure.With both cryptography and software engineering providing a network upon which we can rely, we can think about distributing messages that are designed to Financial Cryptographic purposes[12]. In the Rights layer, we are looking for a protocol that provides a user with control over assets, in an unequivocable, determinable fashion[13]. Techniques aimed at achieving this include:although this is not an exclusive list[19][20].The previous layers provide methods reliable enough to be used for passing something of value, which we call rights, over an otherwise unsuitable network. Now, we need the techniques of Accounting in order to store and manage rights over time, To financial cryptographers, accounting is a mundane field, and it has perhaps been attractive to ignore it, but experience shows that systems without conventional accounting features tend to lose the value entrusted to them.The techniques of the accounting discipline include double-entry bookkeeping, balance sheets, and the accounting equation[21]. Accounting concepts permit builders of Financial Cryptography systems to build complex systems that guarantee not to lose value as long as everyone follows the rules; and to efficiently identify where the rules are not followed.The above layer, Rights, defines what needs to be accounted for. As an example, the most basic method would be token money. An accounting model based on tokens or coins would need a simple store of coins for the client. The server would be more complex, requiring an account for unissued value, a float account, and a double spend database that matches the float amount[22].Once there is a guarantee that the digital amounts \u2013 the accounting numbers \u2013 under management can be securely passed over the net, and stored on nodes safely, we need to cast our view wider to threats outside the technical domain[23].In any working technology, whether it be trading or cash purchasing, the threat of theft or abuse exists from parties who are trusted to manage the system. This problem, known as the agency problem, can be overcome with a wide variety of techniques that here I will label governance[24].Governance includes these techniques:As technologists, we strive to make the protocols that we build as secure and self-sustaining as possible; our art is expressed in pushing problem resolution into the lower layers. This is an ideal, however, to which we can only aspire; there will always be some value somewhere that must be protected by non-protocol means.Our task is made easier if we recognise the existance of this gap in the technological armoury, and seek to fill it with the tools of Governance. The design of a system is often ultimately expressed in a compromise between Governance and the lower layers: what we can do in the lower layers, we do; and what we cannot is cleaned up in Governance[31].With a system that provides internal and external stability and security, we are now in a position to assign value to the structure. By value, we mean the unit of account, the meaning of that unit, and the range of numbers that are applicable.For example, a Value layer might ascribe any one of the following to the virginal numbers of lower layers:As the software is somewhat unconcerned about this decision, we could just as easily used the software for any other value \u2013 but the business needs to harmonise the security and cost implications.We might also call this the Contract layer, as any value in electronic form is an agreement between the holder and the owner[35]. It is here that we design the contract that formalises the agreement between an Issuer and a user.Finally, on top of the value layer, which provides a structure for financial transactions, we can build our application. As we are concerned with Financial Cryptography, it is convenient to call this last layer the Finance layer. Here, we build an application that adds financial meaning to our designs.In the Finance layer, we construct any and all applications that might readily be useful to users. For example,And many more.In order to see the model in its descriptive role, I present an example, starting from the Finance layer and working down, by following the roadmap of requirements.In practice, the model is not a design methodology for setting and mapping requirements, but can be used to reverse-engineer an existing design, for the purposes of presentation and discussion of the mutually agreed contract between the builders and the stakeholders. The following description reflects such a process.Systemics, a company specialising in Financial Cryptography, built a system to trade financial securities[41]. The Ricardo system, as an application, required clients and servers to maintain securities, and they communicated using a value system suitable to manage securities and cash[42].As trials evolved into experience, and strategic analysis of the securities industry evolved into appreciation, if not wisdom, the following primary requirements were built up.These led to many subsidiary requirements:The following discussion concentrates on the value architecture of the Ricardo system built by Systemics, rather than the trading aspects. However, experience shows that trading becomes a tractable problem if the value architecture is solid.The requirements of the Finance layer result in a derivative requirement for a Value architecture, amongst other things. This Value architecture follows directly after the Finance layer, as the former defines the scope of the security requirements for the remaining layers.We developed a notion of instruments as follows:To meet many of these requirements, the notion of a contract for value was developed[43]. This document, which we call a Ricardian contract, documents an agreement between the holder of a security and the issuer of that security, and provides for the flexibility requirement by allowing many and arbitrary clauses to be included.It is both program- and user- readable, and is signed by the Issuer of the instrument as a binding agreement for any holder of units of that issue. By having a strong basis to determine the nature of the contract, in both human and program terms, we support the auditability requirement, and we can clearly identify the regime for resolution of disputes.Once set in stone with a digital signature, an identifier can be allocated, leading to efficient description in packets. Thus, this invention requires two things of lower layers \u2013 a signature form and a unique document identifier \u2013 which are addressed below.Once the Value context is defined, indicating the size and nature of instruments, we can address the Governance issues of payment systems and trading.These are substantially complex[44]. In order to preserve systems intact in the presence of active fraud in the non-technical domain, many disclosure and informational duties abound. In the Ricardo system, we address the governance layer in three main ways:Each of these is discussed below[45].In static governance, we ensure that the user has the contract, and that all concerned know that the user has the contract[46].In order to ensure that the Ricardian contract is always present and available to the user, and is continuously binding to the Issuer, we take the message digest of the document and use that message digest as the identifier of the instrument[47].Consider a message digest, for example, 9c7c9e7bb564224977aea8674623a37407b8f6ee being a large number of bits encoded in hexadecimal. The user cannot meaningfully interpret this string of apparently random information, so the software (and thus, the software engineer) is more or less forced to maintain a database that describes what the message digest represents. As the contract is readable by software, it makes a superior source of data than any other (such as an intermediate database that holds the contents) and thus we can reasonably assume, to the extent that the software can, that the user has the full contract available[48].The system will thus ensure that, to all practical intent, the user has the contract. This provides two cost savings, limiting both on-going support and the likelihood of litigation[49].Within structural governance, we consider the question of insider fraud, the theft of both digital value within the Financial Cryptography system and of any physical value that underlies the virtual value managed by the system.With any payment system, there is an ability to create new assets, or misdirect existing assets, all with no more work than a few button pushes. To address this, we use the approach of separation of concerns to address the agency problem of holding owners' assets, but protecting them from internal attack. This problem is normally handled by separating out management of day-to-day assets with the creation of assets in the system, and increasing the work required for any fraudulent transactions.The general schema that is advised to Issuers is as follows[50]. In order to limit the creation of value, for each issuance, a special account is designated as the mint, or the creator of value. This account is placed in the hands of a reliable professional source such as an accountant or lawyer, who will hopefully only have an interest in using the account under the probity of the governance regime.Then, a manager account is designated that receives any new float from the mint, and also returns any redemptions.It thus becomes the Issuer's responsibility to ensure that the mint account is rarely used, and then with full authorisation and wide scrutiny. Meanwhile, the manager's account is regularly used, but holds only limited amounts of value for day to day requirements.The above are general techniques that are supported within the Ricardo system, but are as applicable elsewhere. Certain features get specific support, such as value caps on accounts and target account limitatons.Note how these protection techniques that we use are partly outside the domain of the technical system. Rather than being outside scope, their discussion here is simply a reflection of the claims that the total security of the system is a holistic issue, and governance is the layer where we solve the security challenges that remain after we have attempted to solve as many as possible in the lower layers.Finally, in dynamic governance, we provide for monitoring of key values by the user community, and thus share the auditing burden. These values can be audited in an issued currency within the Ricardo system:It is also worth noting that when a currency is reserved by an underlying asset (for example, if a gold-denominated currency had physical metal escrowed to reserve it) then the above governance features should be mirrored for the reserves.That is, to continue the example of gold, there should be separate parties responsible for the ingress and egress of metal into storage, and there should be independent verification of the number of bars currently placed in escrow.In order to meet the conflicting objectives of privacy and flexibility, Ricardo uses a conventional accounting model with some additional features:Because of the top level requirement for cheapness, the accounting model was designed for complete reliability, right up to the support desk level. It does this by employing a group of non-obvious techniques:Using these techniques, the accounting model supports the Finance level requirement of being cheap to operate. If the client software is missing something, then it is a bug, and it properly belongs with the software developer, rather than being covered up as an Issuer help desk problem.In order to ensure that owners maintain rights to assets that are managed on the servers, the SOX protocol provides these three major features[56]:Each user creates key(s) which are registered with the server. These keys are as determined by Cryptography layer, below, and are required to provide a unique identifier.Value transfer is via three components:A key can be used to sign a payment order. This payment order can be directed to a target account, or be open (bearer), and it has a fixed amount of some determined type of value[57].In this sense, the payment is analogous to a cheque. It differs from chequing systems in that the SOX payment has no value until settled, whereas a cheque is expected to have value on signing[58].A payment order can be deposited to a sub-account. Settlement depends on a number of checks, such as funds in the source sub-account, and a valid payment order signature from the source key.The Issuer server returns the receipt, mentioned in the above Accounting layer.Finally, in order to cope with network failure, the SOX protocol includes a mail feature, that allows the server to communicate reliably with the client. Packets that must be delivered to the client are placed in the mailbox, and returned on every mail request. Each piece of mail must be signed for, and if not signed for, is simply returned again.In the context of the value transfer above, there is only one piece of mail, being the receipt.SOX is a flexible protocol. By replacing the deposit request, above, with trading requests, it can be used for market trades as well as settlements[59].In the trading context, requests that are implemented emulate standard market functions such as looking at the order book for an instrument, placing an order (buy or sell), monitoring the progress of an order and cancelling an order. The SOX mailbox is used for the return of orders (assets and results).SOX as a protocol spans both the Rights layer and the Software Engineering layer.In networking, every transmission must be considered as a contender for failure. As a corollary to this, relying on a connection-oriented protocol such as TCP will not guarantee reliability, as its promise is only that that the data that gets there is the correct data as sent[60].To cope with these problems, SOX asumes a datagram network only, and handles reliability itself[61].Secondly, it bases communications on a request model, with each request being independent of the next, and each request only being complete when positive feedback is received.Thirdly, SOX requests are idempotent, so they can simply be repeated until some confirmation comes back that one attempt has succeeded. Unique request identifiers are included and used to filter out retries.Fourthly, in order to implement SOX, a client must treat each request as unreliable. For example, when a payment is written by the current client, that payment is recorded as pending, which is eventually matched up with a receipt arriving from the Issuer.Or, the client gives the user the opportunity to cancel the payment simply by re-using the unique identifer, and thus stopping the lost payment ever settling. In this way, where it is impossible to guarantee a result, Ricardo extends reliability management out to include the user.Finally, SOX includes a comms layer that provides for key exchange for confidentiality and authentication purposes.The cryptography demanded by the upper layers includes:All of these algorithms are implemented as part of Cryptix, an open source project that was spun off by Systemics in 1996. Cryptography and the cryptographic techniques used in Ricardo are well discussed in the literature[62].The model works well in tackling and reducing the inherent complexities of Financial Cryptography. It does this by dividing the field into 7 areas, and providing an interconnection method (layering).Once a project is so layered, professionals within different disciplines can clearly deliniate those areas within their expertise, and those which call for other specialisations. Thus, lawyers can recognise the Governance layer as their bailiwick, and pay due attention to it. Other layers can be treated, more or less, as black boxes, interconnecting with requirements down and features up. Likewise, programmers can concentrate on Software Engineering and Rights, with more interest in Accounting than Governance.A project manager, with responsibility for delivery of a Financial Cryptography system, finds this even more powerful, as the model offers a natural checklist and vocabulary for coordinating the activity.As an analogue of the 7 layer ISO Reference Model, it also wins on easy familiarity with what we are trying to achieve.The designation of 7 layers does not, in and of itself, encourage the design or implementation of system components that fall neatly into one layer or another. The notion of a layer 3 protocol providing services to a layer 4 protocol simply does not work in practice[63].Likewise, this model is not a design methodology. The description of a top-down requirements process is illusory, and in practice, the requirements analysis is more modelled by continuing and volatile negotiations between the layers. Whilst it is descriptive to state that a requirement is bouncing up and down between layers one and five, inclusive, this does not give much assistance to a team leader in assisting a design process.It is easy to criticise any model, as by definition, a model falls short of reality. Here are some points:Does the set of layers describe Financial Cryptography accurately? Hettinga suggests, perhaps only partly in jest, the name cryptographic finance, implying that layers one to three may have greater claim to the original term[64].The 7 layer model is static rather than dynamic. Once described, it works, but how did we manage to construct it in the first place?Are there really 7 layers? Are the layers as described? About each of the different layers we can ask many questions, including some troublesome ones:My answer, today, is 'yes' to each, but only time will provide the real answer.The top-down requirements example of Ricardo seems to indicate a natural design flow or methodology, but in practice the design process does not follow that path.Experience has shown that concentration on Finance, and then Value is worthwhile. Then, the vertical flow breaks down; in particular, a lot of time is spent bouncing around the lower 4 layers in a negotiation for the best compromise, with occasional forays upwards in order to tune the requirements. Governance always seems to come last in the design process, as its contents are an admission of what the rest of the architecture has failed to cover.Layers one to four, up to Accounting, are fairly solid in terms of their disciplines, practices and methodologies. Layers five and up (Governance, Value, and Application) are less well-defined.This might represent a flaw, or it might indicate an intrinsically messy area. Perhaps coincidentally, the ISO Reference Model exhibits the same pattern.I believe that these criticisms are valuable in indicating that the model is promising, as they help to refine ideas, rather than destroy them.Ian Grigg can be reached at iang at systemics dot com. He is a founder of Systemics, Inc, a developer of Internet Financial Systems software. \u21a9This paper was presented at FC00 and is originally published in the Proceedings of Financial Cryptography Fourth International Conference, Anguilla, British West Indies, 21st - 24th February 2000. A web copy is located at http://www.iang.org/papers/.The model was initially inspired by discussions on the DBS mailing list, and was progressively refined in discussions with Twan Van Der Schoot. This paper has also benefitted from review remarks by Ian Brown, Zooko Journeyman and Rachel Willmer. \u21a9The term Financial Cryptography was invented by Robert Hettinga as a name for a conference held annually in Anguilla. \u21a9Ian Grigg, Virtual Finance Report, Digital Trading, November 1997. \u21a9Search on Google for ISO OSI Reference Model Seven Layer \u21a9It is mostly coincidence that there are 7 layers, and it may change if we find compelling reasons to add or subtract layers. \u21a9The Cryptix Resources Page lists popular cryptography books, including links for purchasing. \u21a9A large area of such problems, including the blinding property, is described in Rethinking public key infrastructures and digital certificates --- building in privacy Stefan Brands, ISBN 90-901-3059-4, 1999. \u21a9The blinding concept is most easily accessible in Achieving Electronic Privacy Scientific American David Chaum, August 1992. \u21a9An Introduction to Database Systems, Volume 2, by C.J Date, 6th Edition, Addison Wesley, 1995 \u21a9I studied with this text book nigh on 20 years ago, and it still appears to be the main text in the field of protocols and networking: Computer Networks, by Andrew S. Tannenbaum, 3rd ed., Prentice Hall, 1996 \u21a9A fullsome page of links to electronic purses \u2013 implementations of Rights protocols \u2013 is included in Leo Van Hove's bibliography. \u21a9I am indebted to Mark Miller for providing me with the name of this layer. \u21a9At the time of writing, the canonical example would be www.e-gold.com which provides identity-based access to currencies reserved in precious metals. \u21a9For example, the eCash (tm) tokens as implemented by eCash Technologies, Inc. \u21a9Originally presented in the Gary Howland, Development of an Open and Flexible Payment System. \u21a9Mark S. Miller, Chip Morningstar, Bill Frantz, Capability-based Financial Instruments, accepted by Financial Cryptography 2000, Anguilla, February 2000. \u21a9Systems such as Chipper and Mondex. Note that there is no need for a new hardware layer \u2013 the distinction here is that the hardware is supplied, rather than assumed. \u21a9For many more examples of theoretical approaches, see Financial Cryptography First through Fourth International Conferences, Anguilla, British West Indies, February 1997-2000. \u21a9For examples of approaches that have reached practical implementation stage, if not to market, see Edinburgh Financial Cryptography Engineering a new workshop that includes presentations of running code only. \u21a9Check any basic accounting text book for these terms. Google may provide some assistance on these terms. \u21a9As a wider comment, it is possible to model any electronic value scheme as a method of accounting. See Alan Tyree, The legal nature of electronic money.Whilst a valuable modelling exercise, caution is advised, as most conclusions drawn from such exercises are too broad. Specifically, institutional observers tend towards a line of logic: \"it can be modelled as a series of accounts, therefore it should be regulated like banking;\" such an approach is fraught with difficulties and unlikely to be satisfactory. \u21a9For general articles on the Governance aspects of Financial Cryptography, check John Muller's ABA site Electronic Financial Services Resources. \u21a9The Agency Problem:Also sometimes referred to as the principal-agent problem. The difficult but extremely important and recurrent organizational design problem of how organizations can structure incentives so that people (\"agents\") who are placed in control over resources that are not their own with a contractual obligation to use these resources in the interests of some other person or group of people actually will perform this obligation as promised \u2013 instead of using their delegated authority over other people's resources to feather their own nests at the expense of those whose interests they are supposed to be serving (their \"principals\"). Enforcing such contracts will involve transaction costs (often referred to as agency costs), and these costs may sometimes be very high indeed.A Glossary of Political Economy Terms Paul M. Johnson. See also Google. \u21a9Michael Froomkin's writings on Separation of Powers. \u21a9Robert Hettinga suggests some models in The Players \u21a9In Ricardo documentation, and also further below in the section on Structural Governance I suggest breaking up the system into 5 parties, Owner, Mint, Manager, Users, Operator. \u21a9See Jane Kaufman Winn's writings on the validity of current contracts in governance: Jane Kaufman Winn, Couriers without Luggage: Negotiable Instruments and Digital Signatures, South Carolina Law Review, 1998. \u21a9See the DigiGold Page for an example of a real time report on the currency balance sheet. \u21a9See the e-gold Examiner for an example of a real time report on reserves. \u21a9See Jane Kaufman Winn, op cit, for a classic description of the Certificate Authority industry's attempts to clean up a poor security model with an implausible contract. \u21a925 cents is a fair minimum for credit cards, due to the cost of these transactions. $500 is a popular upper limit imposed on smart cards by the threat model (actually, it is 500 of the local unit, for some obscure reason). \u21a9For a description of Individual Transferable Quotas \u2013 ITQs \u2013 describing instruments for quantities of fish stocks, see Policy, Fencing the Oceans A Rights-based Approach to Privatising Fisheries, Professor Birgir Runolfsson, Autumn 1998. \u21a9Ian Brown (ianb at acm dot com) points out that pollution is in fact a public bad. \u21a9Ian Grigg, Universal Value, work in progress. This is introduced later in the example. \u21a9For example, this was the target application of Cybercash Inc, First Virtual Inc, and DigiCash BV (now eCash Technologies Inc). \u21a9Digital Trading, op cit. \u21a9For example, see the so-called second wavers: Beenz, Flooz, Cybergold. \u21a9See Fencing the Oceans, op cit. Whilst not discussed in the article, there are a small number of marketmakers in Iceland that work the thin market in ITQs. For more background on fishing property rights, see The Ecological Implications of Establishing Property Rights in Atlantic Fisheries, Elizabeth Brubaker, April 1996. \u21a9Ian Grigg and C. Petros, Proceedings of Financial Cryptography, Using Electronic Markets to Achieve Efficient Task Distribution, February 1996. \u21a9Ian Grigg and Gary Howland designed the Ricardo system in 1996-1997. \u21a9The Ricardo system is currently in use for a series of metal based currencies managed by DigiGold. \u21a9Ian Grigg, work in progress, Universal Value. \u21a9Many designs of Financial Cryptography systems have limited Issuers to being banks, which allows the designer to assume away many complications. \u21a9This section is based upon Ian Grigg, Talk on DigiGold Governance, Financial Cryptography 1999, commercial sessions. \u21a9The same logic would also imply that the user must have access to dynamic trading information such as prices, but we pass over that here. \u21a9Having abstracted the contents from the identity of the document by taking a message digest of it, we can discuss value, from payment systems perspective, as being fully and uniquely defined by the message digest. This ensures that the Issuer of the security cannot change the terms of the contract in any way without offering to the user terms for exchange. \u21a9This also has a secondary effect of shortening the distance between the contract and the software that manages it, thus simplifying the design. However, the prime objective was, and remains, a system where we know that the user has strong access to contract information. \u21a9Such a scheme might not prevent the software engineer from providing a client application that misrepresents the contract. However, this would be an issue between the user and the software supplier, rather than the system itself, especially, the operators of the system and issuers of securities would clearly not be at fault. \u21a9This is described more fully in a FAQ question on Structural Governance \u21a9In order to force the client to maintain the data, the SOX mail facility, introduced in layer 3, requires signatures for all important documents such as receipts. \u21a9Or, more correctly, to treat such a support call as a bug, in that the client is not making the information available. \u21a9A signed request from the user has more meaning to the user \u2013 the client software must keep track of these as promises to pay, and in this sense, the system is analogous to a cheque system. \u21a9The receipt includes the authentication request supplied by the client in order to provide the chain of authentication back to the user. \u21a9In programming terms, stored balances are banned. The balances that are displayed by the software client are calculated on the fly, including every time the client redraws. Getting this right has proven to be a sizeable cost in development time, but it is believed that the requirements are valid and the costs are covered in the long run. \u21a9SOX is variously Systemics Open Transactions or Secure Open Transactions. It is discussed by its original author in Development of an Open and Flexible Payment System, Gary Howland, 1996, and also in an Executive Summary. An implementation exists in open form as a part of the WebFunds Project. \u21a9SOX provides a string or byte array that determines the type of value, which is open as an implementation detail. But, practically, this is the unique identifier for the Ricardian Contract as discussed in the Value layer. \u21a9Note the way in which SOX melds with the Internet, as implication of layer 2. When passing a payment to someone on the other side of the planet, that payment only has value if it is settled and cleared by the Issuer. Otherwise, the payment is an uninteresting series of bits, with similar value to any other random nonsense.In contrast, the passing of rubber cheques is illegal in some countries, and traumatic in most others. SOX payments are not cheques in that sense. \u21a9The value Issuers are distinct servers to market servers, it is just the protocol that is common. The protocol can also be used for other purposes, wherever a primary requirement is made for a reliable delivery. \u21a9The specific problem with a connection protocol arises when the connection dies. Did the last few bytes make it to the other end or not? With such protocols, there is generally no way to recover from this uncertainty without building an additional reliable protocol over the top of the first. Which of course raises interesting design questions that may lead to alternate paths such as connectionless protocols. \u21a9SOX packets can, and are, sent over TCP connections, but mostly so that firewalls may be easily navigated. \u21a9The Cryptix Resources Page. \u21a9Indeed, in my opinion, neither is it useful for networking. For critiques of the OSI 7 layer models, see M.A. Padlipsky, Elements of Networking Style, and RFC 874. \u21a9Robert Hettinga, email on dbs at philodox dot com. \u21a9Copyright \u00a9 1998 Systemics Ltd. All rights reservedEditor's note: Some links may be broken."}
{"prompt": "The Playdough Protocols", "completion": "Commercial security at the birth of writing, arithmetic, and religion in ancient Sumer (modern Iraq).It is five thousand years ago, and you pace fretfully in your office. Located in the temple of the great goddess Inanna in ancient Nippur (now in Iraq) you are buried, not in a blizzard of paper, but an avalanche of clay. You fret. You have entrusted a valuable cargo of sheep, barley, and beer to a crusty group of sailors from the Baba Temple in the nearby Lagash[1]. These navy types are far from pious devotees of the goddess Inanna and the great god Enlil with whom you are familiar.The sailors\u2018 job, and your payoff \u2013 take the goods down the Persian Gulf and across the sea to Mohenjo-Daro, in the valley of the Indus River (in modern Pakistan). There they will be delivered to your old friend, a trusted agent of Inanna, and sold to the locals for a very substantial amount of silver.Will the sailors get hungry and eat the sheep and barley? Party and drink the beer? Get nasty and poison the lot, throwing disrepute on the great goddess Inanna? Perhaps they will get clever and water down the beer \u2013 or get still more clever and resell your high-quality goods under the name of their crude god.You needn\u2018t worry so much. Long-distance commerce may be a novelty, but you have the clay.Nor, thanks to five thousand years of experience with the technologies of tamper evidence, need we worry so much in our modern era. The occasional embezzlement and rare but quite nasty poisoning occur far less often due to our technological and institutional descendants of the ancients\u2018 clay. And using the digital equivalent of seals, we can bring data integrity and unforgeable identities to online commerce.Terra cotta sealing (bottom) and rectangular stamp seals, Mohenjo-Daro, Indus Valley, c. 2,000 B.C. The central sign on the top seal may represent a house or temple and is a symbol that is often repeated on Indus seals with horned deities seated in yogic position. Courtesy harappa.com.Let\u2018s follow the professional archaeologists and distinguish between seals, the often cleverly carved cylinders or stamps that make the impressions, and sealings, the resulting impressions rolled or stamped on wet clay, and the clay they were impressed upon. Sealings of clay were wrapped around rope knots to seal bales of goods, and around the rims of wicker baskets and pottery jars to seal in their contents. Since these ancients lacked good locks, clay sealings were wrapped around door latches to seal rooms. The security provided \u2013 evidence of tampering, due to damage of the container itself or the clay that sealed it.Seals were carved from hard materials \u2013 usually stone but sometimes faience, glass, metal, wood, or bone. Sometimes sun-dried or baked clay itself was used. The Greeks and Romans used signet rings, their action ends shaped from metal or carved from gems, to stamp wax.The seal design was usually recessed, resulting in a raised impression; occasionally this was reversed. To creating a sealing, first wet clay was shaped around the plug of a jar, the rim of a basket, the knot of a well wrapped rope on a bale, or the latch of a door. Then the surface of the clay was thoroughly covered by the impressions of the seal. The Sumerians commonly used cylinder seals, repeating the pattern across the entire clay surface. Sometimes stamp seals were used for smaller surfaces. Finally, the clay was left to dry, in the sun if possible.While sun-dried clay could usually be remoistened and rewritten, it would have been very difficult to hide from a trained eye. Rejoining the breached container lid, knot, or latch and replacing the broken seal with a new, identical seal would have been, short of stealing the original unique seal carving, impossible to hide from the inspector. Looking for a particular seal impression and examining the container, the inspector could reliably tell whether the contents had been tampered with. The difference between an accidental crack, from dropping or hitting the object, and a breach that allowed the thief or adulterator access to the goods, would also be apparent. Ancient inspectors undoubtedly became experts at looking for clues to distinguish accident from fraud. In any case, a broken seal then as now indicated suspect goods suitable perhaps for the discount bin, but more normally for the trash. It also indicated error for fraud \u2013 and potential punishment.Cylinder seal (left) and its sealing (right), King Darius the Great, Persia, 586\u2013522 B.C., with weapons of warThe earliest stamp seals found were used in Iran in 5,000 B.C. Later on archaeologists can use both the trade in seals themselves, as well as the distances between seals and the corresponding sealings, to trace long-distance trade networks. One such set of seals were manufactured around 1,900 B.C. on two important island trading cities in the Persian Gulf \u2013 Bahrein and Failaka. These seals were traded all over the Middle East, and have been found at diverse and distant locations such as Susa in Iran , Bactria in Afghanistan, Ur in Iraq, and Lothal on the west coast of India. By 1,750 B.C. Common Style seals are found in locations ranging from Spain, to Mycenaean Greece, to Marlik near the shores of the Caspian Sea. These seals were made from faience, a less expensive material, and used by smaller merchants.[2]The first cylinder seals belonged to the now long dead civilization of the Sumerians, the inhabitants of Nippur, Lagash, and other cities on the Euphrates and Tigris rivers in what is now Iraq. They spoke a strange language \u2013 neither Semitic nor Indo-European, the family of languages spoken by many later civilizations and the most current inhabitants of the Middle East. Sumerian was an agglunative tongue, bearing resemblance to such diverse agglutinative languages as Turkish, Finnish, Japanese, and Dravidian. Indeed, it was probably some version of the latter tongue that was spoken by their neighbors, the early inhabitants of the Indus river valley. These Indus valley people developed, soon after the Sumerians, their own civilization and unique style of seals. Modern speakers of Dravidian languages are scattered all over the Indian subcontinent, including remnants in Afghanistan and a large number of Tamils in southern India. Seal impressions have been found in the ancient city of Harrapan, in the Indus River valley (modern Pakistan), that had been made by seals found in Lagash in Sumeria (modern Iraq). From 3,600 B.C. in Sumer, and a little later in the Indus Valley, we can find seals made out of a rare high-quality stone, lapis lazuli. These stones could only have originated from rather distant and inaccessible mines in Afghanistan.For the Sumerians a business protocol was also a religious ritual, and the reverse was usually true as well. In the Middle East seal breaking became one of the most important of these rituals, with terrifying spiritual consequences if the seal were broken by the wrong person or at the wrong time. Three thousand years later these poetic images had reached apocalyptic proportions in the writings of the early Christian mystic John. The grave religious powers that could be unleashed by breaking a seal are well illustrated by his book of Revelations, in which the breaking of the first four seals of a holy book release the Four Horsemen of the Apocalypse:6:1 And I saw in the right hand of him that sat on the throne a book written within and on the backside, sealed with seven seals.6:2 And I saw a strong angel proclaiming with a loud voice, Who is worthy to open the book, and to loose the seals thereof? \u2026A worthy deity is found, who starts breaking the seals and thereby loosing the Horsemen \u20136:5 When he opened the third seal, I heard the third living creature saying, \u201cCome and see!\u201d And behold, a black horse, and he who sat on it had a balance in his hand.6:6 I heard a voice in the midst of the four living creatures saying, \u201cA choenix of wheat for a denarius, and three choenix of barley for a denarius! Don\u2018t damage the oil and the wine!\u201d[3]The Sumerians used thin wires and flat ingots of gold and silver, carefully weighed in balance scales, rather than coins like the Roman denarius. Except for paying the price in coins rather than coils, the commerce of the Third Horseman would have sounded quite familiar to our Sumerian merchant.Wire ring and coil money, Sumeria, c. 2,500 B.C.The first documents ever written, in the 4th millennium B.C., were also about wheat and barley, and also sealed. Far earlier still, at least as far back as 8,000 B.C., archeologists have found even more alient artifacts \u2013 vast numbers of little clay tokens. In the first half of the 20th century archaeologists, looking for important artifacts of civilization like statues of gods and Moses-style law tablets, dismissed these tokens as some kind of trivia, probably game tokens or cheap unstrung beads. Now we know that these tokens led directly to what are now the very basics of our civilization \u2013 reading, writing, and arithmetic.Recall our merchant, entrusting goods to sailors. Not all goods could be sealed in a jar or small room \u2013 a flock of sheep entrusted to shepherds, for instance. And in some cases it was expected that goods would be have to be opened en route \u2013 for example, to be audited by a customs inspector. For this reason, a separate record of the goods was needed. Without writing, how was such a record created?Pebbles, shells, and other counters have long been used to count things. Without even knowing how to verbally count in order \u2013 some cultures do not have words for numbers above three \u2013 one can \u201ccount\u201d objects by placing a pebble, on a pile or in a bag, one for each object. One nomadic tribe in Africa[4] counts cattle passing through a gate by drilling furrows. As each cattle paces, a pebble is placed in the rightmost furrow. When there are nine pebbles in this furrow, and the tenth cow goes through the gate, the pebbles are removed from the first furrow and a single is placed in the next furrow to the left. This is a \u201ccarry\u201d operation, used in abacuses around the world and even used in modern computers. These nomads have, along with many other cultures, invented a kind of abacus, with a ones place, a tens place. A zero is simply an empty furrow. Many other cultures (though not this one) have taken this to the next step and used this abacus, in the form of pebbles on a board or beads strung on rods, to add, subtract, multiply, and perform other computations. Indeed, until the advent of our modern Arabic numbers, everywhere calculations were done by the abacus or fingers, not on paper.Clay envelope and tokens, Sumer, c. 3,400 B.C.In the ancient Middle East, these pebbles took the form of dried clay tokens. The clay was formed into pebbles of various shapes and sizes. Some represented sheep, some standard sized pots of barley, and so on. The number of kinds grew as commerce grew. Some represented one, five, or a dozen of the kind.Soon after 4,000 B.C., the clay tokens were combined with the idea of sealing to create bills of lading and warehouse receipts. To create a bill of lading for a consignment of sheep, the owner put in a one-sheep token for every sheep. Every time he counted five sheep, a five-sheep token could be substituted for a one-sheep token. Once the owner and the consignee agreed on the count, the tokens were placed in a wet clay envelope. The owner and the consignee rolled their seals over the envelope, then let it dry. The procedure for a warehouse receipt was similar. An owner of wheat or barley could consign his fresh harvest to the protection of a warrior-priest in his walled fortress. The receipt was tokens sealed in an envelope \u2013 when the owner got hungry, or wanted to sell to the hungry, or wanted the seed to plant next spring \u2013 he would take the envelope to the warehouse. The claimant and the warehouse operator would inspect the seal, break it, inspect the tokens, and then deliver the goods.It would be nice if one could learn the contents of the envelope \u2013 the number and kind of tokens \u2013 without having take the ominous and irreversible step of breaking the seal. Around 3,400 B.C. in Sumer, marks started appearing on the outside of these envelopes. These marks were simply made by the tokens themselves. The different shapes and sizes of the tokens created correspondingly unique impressions, and thus the same symbols.[4][5]. Such external marks weren\u2018t as secure \u2013 they could be erased, albeit not without detection by a well trained eye.As warehouse receipts and bills of lading became common, commerce diversified. So many different kinds and numbers of goods were involved that the shapes and sizes of clay tokens were growing out of control. What computer scientists call a \u201clevel of indirection\u201d was needed. With different tokens for one sheep, five sheep, one pot of barley, five pots of barley, and so forth, we get m*n different tokens, where m are the numerical denominations of the tokens and n are the number of different kinds of commodities. By creating separate tokens for the numbers and the goods, the number of different kinds of tokens were reduced to m + n, at the cost of up to twice as many tokens per envelope.This development wasn\u2018t entirely new. Abstract counting tokens, reused for sheep and people and pots of barley, are probably far more ancient. Nor were separate words for \u201csheep\u201d, and \u201cbarley\u201d new. What was new were the separate tokens for \u201csheep\u201d, \u201cbarley\u201d, to be used, like the counting tokens, in the bills of lading and warehouse receipts. The were still thought of as corresponding to the objects they represented, not the words \u201csheep\u201d and \u201cbarley\u201d, but it was a big step towards written language. Naturally these symbols also became external marks[4][5].The first written tablets, dating around 3,300 B.C. and again in Sumer, were simply these external marks, inscribed on clay tablets. To maintain the security properties of tokens in clay envelopes, some the tablets were themselves are sealed in clay envelopes.The evolution of writing proceeded from there. A hundred years later reed styluses were being used to badly mimic the clay token marks. Over succeeding centuries, scribes supplemented or replaced token-derived symbols with pictographs for the objects. The pictographs attempted to bring to mind the object visually. Both kinds of symbols became stylized as wedges, or \u201ccuneiform\u201d, optimized for the reed stylus. Still later, words represented by neither pictographs nor token-derived symbols come to be represented by a rebus. An example of a rebus in English is representing the word \u201cI\u201d with a pictographic symbol for \u201ceye\u201d. This gave rise to a semi-phonetic alphabet. From this evolved the Phoenician or true phonetic alphabet, which was in turned borrowed by the Greeks and Romans. We use the Roman alphabet.Evolving beyond clay tokens, accounting was the first use of the external marks and started to take a familiar form. Along with the tamper evident clay, the Sumerians developed a kind of virtual tamper evidence. It took the form of two sets of numbers. On the front of the tablet, each group of commodities would be recorded separately \u2013 For example on the front woudl be recorded 120 pots of wheat, 90 pots of barley, and 55 goats. On the reverse would simply be recorded \u201c265\u201d \u2013 the same objects counted gain, probably in a different order, and without bothering to categorize them. The scribe, or an auditor, would then verify that the sum was correct. If not, an error or fraud had occured. Note the similarity to tamper evident seals \u2013 if a seal is broken, this meant that error or fraud had occured. The breaker of the seals, or the scribe who recorded the wrong numbers, or the debtor who paid the wrong amounts of commodities would be called on the carpet to answer for his or her discrepancy.Checksums still form the basis of modern accounting. Indeed, the principle of double entry bookeeping is based on two sets of independently derived numbers that must add up to the same number. Below, we will see that modern computers, using cryptographic methods, can now compute unspoofable checksums.Breaking a seal still, but fortunately only quite rarely, can have implications that are apocalyptic \u2013 at least for the individuals involved. Tylenol in 1982 and 1986, Excedrin and Lipton Cup-A-Soup in 1986, Sudafed in 1991, and Goody's Headache Powder in 1992 all were tampered with by sickos who added cyanide to the product and killed people. This spurred a new emphasis on tamper evident plastic packaging which can now be found protecting a wide variety of the products we use.Everybody is familiar with shrink-wrapped plastic, a less secure but commonly used technology \u2013 as common as the ubiquitous price tag. Another favorite tamper-evident device is the seal used to protect pill bottles.Evidence bag. Courtesy Custom Specialties Inc. [no relationship to author].Bank employees, our modern descendants of ancient temple accountant-priests, still sometimes work in edifices designed to look like Roman temples. They carry cash, checks, and other valuables in tamper-evident clear plastic envelopes. Evidence of tampering comes either as a tear in the plastic, or from opening the bag normally. In the latter case, a seal (the same place you'd find the zip seal on a Zip-Loc bag) chemically alters, and words such as \u201cVOID\u201d or \u201cOPENED\u201d appear in large letters. When these bags carry unique serial numbers, inspectors at both ends can record the serial number while examining the bag for tampering. The unique serial number prevents the tamperer from simply transferring the contents from one such bag to another. Modern plastic bags with the altering chemical seal, used in conjunction with the tracking of unique serial numbers, provide a very strong kind of tamper evidence, and are used by high security institutions ranging from banks to the military to cryptographic certificate authorities. The evidence bags used by many police departments work the same way.Tamper evident tape on a cabinet door. Note the sequential number, which when recorded and checked detects the replacement of the original tape with a new one. (The security of the serial number assumes that this label is not easy to duplicate using a laser printer). On the right, the broken seal has left a difficult to remove mark including the word \u201ctamper\u201d. Courtesy tamper.com [no relationship to author].Many other kinds of security, from ancient to modern, can be thought of as providing a kind of tamper evidence. Laser-break and glass-break sensors can make an entire building trespass evident. Similarly, guard dogs bark to protect their territories, alterting their masters to visitors.One of the most high-tech kinds of security, cryptography, is no longer just secret writing, but has spawned a whole new family of mathematical functions to protect the integrity of digital data. These functions are quite analogous to the function of ancient seals.One cryptographic function, the hash function, acts like the Sumerian checksum described above. The difference is that the \u201cnumbers\u201d it adds up are the binary digits that make up text, images, or other data. A second difference is that, by using a one way function and very large numbers, it can make the checksum practically unspoofable. The way accountants normally use checksums, the fraudster can sometimes with some ingenuity guess what the input numbers are. With cryptographic hash functions, this is practically impossible for a human, and for a computer it would almost always take millions of years of brute-force guessing to reverse-engineer the checksum.Another cryptographic protocol, the \u201cdigital signature\u201d, resembles one of these ancient seals much more than it does a modern autograph. The protocol operates in two steps. In the first step, a piece of data is sealed using a hash function as describe above. This is analogous to surrounding a basket lid with clay. Then a reverse public key cryptography operation (mathematically equivalent to decrypting a message) is performed. This second step is analogous to rolling the cylinder on the seal to identify the sealer.The digital signature can be made only by the possessor of a private key just as a seal could be made only by the possessor of the unique seal carving. If the digital signature is bad, this provides evidence that the data was tampered with or the signature forged.Rhee, 1981 \u21a9Colon, Dominique, Near Eeastern Seals \u21a9Book of Revelations, Ch. 6 \u21a9Ifrah, Georges, The Universal History of Numbers, John Wiley & Sons 1998, pg. 73 \u21a9 \u21a9 \u21a9Rhee, 1981 \u21a9 \u21a9Schmandt-Bessarat, Denise, Accounting with Tokens in the Ancient Near EastMy thanks to Andrew Odlyzko and K. Eric Drexler for their insightful comments.Originally published on Nick Szabo\u2019s Papers and Concise Tutorials.Please send your comments to nszabo (at) law (dot) gwu (dot) edu"}
{"prompt": "Digital Cash & Privacy", "completion": "I agree with Anonymous that there are problems with the actual use of digital cash in the near term. But it depends to some extent on what problem you are trying to solve.One concern I have is that the move to electronic payments will decrease personal privacy by making it easier to log and record transactions. Dossiers could be built up which would track the spending patterns of each of us.Already, when I order something over the phone or electronically using my Visa card, a record is kept of exactly how much I spent and where I spent it. As time goes on, more transactions may be done in this way, and the net result could be a great loss of privacy.Paying in cash is still possible through the mail, but it is insecure and inconvenient. I think that the convenience of credit and debit cards will overcome most people\u2019s privacy concerns and that we will find ourselves in a situation where great volumes of information exist about people\u2019s private lives.This is a place that I could see digital cash playing a role. Imagine a Visa-like system in which I am not anonymous to the bank. In this model, imagine that the bank is granting me credit similar to a credit card. But instead of giving me just an account number which I read over the phone or send in an email message, it gives me the right to request digital cash on demand.I keep some digital cash around and spend it for transactions as I described in my previous posts. When I get low I send some email to the bank and get some more dcash. Every month I send a check to the bank to cover my account just as I do with my credit cards. My relations with the bank are very similar to my current relationships with the credit card companies: frequent withdrawals and a single payment each month by check.This has several advantages over the system which we are heading towards. No records are kept of where I spend my money. All the bank knows is how much I have withdrawn each month; I may or may not have spent it at that time. For some transactions (e.g. software) I could be anonymous to the vendor; for others the vendor might know my real address, but still no central location is able to track everything I buy.(There is also a security advantage over the ridiculous current system in which knowing a 16 digit number and an expiration date allows anyone to order anything in my name!)Furthermore, I don\u2019t see why this system could not be as legal as current credit cards. All that really differs in this system is the inability to track where users spend their money, and as far as I know this ability was never an important legal aspect of credit cards. Certainly nobody will admit today that the government has a vested interest in moving towards an environment in which every financial transaction is tracked.Granted, this does not provide full anonymity. It is still possible to see roughly how much each person spends (although nothing stops a person from withdrawing much more cash than he will spend in a given month, except perhaps for interest expenses; but maybe he can lend the extra digicash itself and gain interest on that to compensate). And it is oriented around the same customer/vendor model that Anonymous criticized. But I maintain that this model represents the majority of electronic transactions, today and in the near future.It\u2019s worth noting that it is not trivial to become a merchant who can accept credit cards. I went through this with a business I had a couple of years ago. We were selling software through mail order, and this makes the credit card companies very nervous. There is so much phone fraud in which credit card numbers are accumulated over a few months, then large amounts of charges made against them. By the time the user receives his monthly statement and complains, the vendor has disappeared. In order to get our credit card terminal we went to a company which \u201chelps\u201d startups with this. They seemed like a pretty shady outfit, themselves. We had to fudge our application to say that we\u2019d be selling something like 50% of the units at trade shows, which apparently counted as over-the-counter sales. And we had to pay about $3,000 up front, as a bribe, it seemed. Even then we probably couldn\u2019t have done it if we hadn\u2019t had an office in the business district.Under the digital cash system, this might be less of a problem. The main problem with digital cash is double-spending, and if you are willing to go with online verification (reasonable for any business which is going to take anything over several hours to deliver the merchandise) this can be completely prevented. So there is no longer any possibility of merchants collecting credit card numbers for later fraud. (You still have problems with non-delivery of merchandise, though, so not all risks are eliminated.) This might eventually make the system more widely available than current credit cards.I don\u2019t know whether this system could be used to support illegal actions, tax evasion, gambling, or whatever. That is not the purpose of this proposal. It does offer the prospect of improving personal privacy and security, in a framework that might even be legal, and that\u2019s not bad.Hal Finney\nhal@rain.orgHal Finney Home Page"}
{"prompt": "Bitcoin and Me", "completion": "Originally posted on BitcointalkI thought I'd write about the last four years, an eventful time for Bitcoin and me.For those who don't know me, I'm Hal Finney. I got my start in crypto working on an early version of PGP, working closely with Phil Zimmermann. When Phil decided to start PGP Corporation, I was one of the first hires. I would work on PGP until my retirement. At the same time, I got involved with the Cypherpunks. I ran the first cryptographically based anonymous remailer, among other activities.Fast forward to late 2008 and the announcement of Bitcoin. I've noticed that cryptographic graybeards (I was in my mid 50's) tend to get cynical. I was more idealistic; I have always loved crypto, the mystery and the paradox of it.When Satoshi announced Bitcoin on the cryptography mailing list, he got a skeptical reception at best. Cryptographers have seen too many grand schemes by clueless noobs. They tend to have a knee jerk reaction.I was more positive. I had long been interested in cryptographic payment schemes. Plus I was lucky enough to meet and extensively correspond with both Wei Dai and Nick Szabo, generally acknowledged to have created ideas that would be realized with Bitcoin. I had made an attempt to create my own proof of work based currency, called RPOW. So I found Bitcoin facinating.When Satoshi announced the first release of the software, I grabbed it right away. I think I was the first person besides Satoshi to run bitcoin. I mined block 70-something, and I was the recipient of the first bitcoin transaction, when Satoshi sent ten coins to me as a test. I carried on an email conversation with Satoshi over the next few days, mostly me reporting bugs and him fixing them.Today, Satoshi's true identity has become a mystery. But at the time, I thought I was dealing with a young man of Japanese ancestry who was very smart and sincere. I've had the good fortune to know many brilliant people over the course of my life, so I recognize the signs.After a few days, bitcoin was running pretty stably, so I left it running. Those were the days when difficulty was 1, and you could find blocks with a CPU, not even a GPU. I mined several blocks over the next days. But I turned it off because it made my computer run hot, and the fan noise bothered me. In retrospect, I wish I had kept it up longer, but on the other hand I was extraordinarily lucky to be there at the beginning. It's one of those glass half full half empty things.The next I heard of Bitcoin was late 2010, when I was surprised to find that it was not only still going, bitcoins actually had monetary value. I dusted off my old wallet, and was relieved to discover that my bitcoins were still there. As the price climbed up to real money, I transferred the coins into an offline wallet, where hopefully they'll be worth something to my heirs.Speaking of heirs, I got a surprise in 2009, when I was suddenly diagnosed with a fatal disease. I was in the best shape of my life at the start of that year, I'd lost a lot of weight and taken up distance running. I'd run several half marathons, and I was starting to train for a full marathon. I worked my way up to 20+ mile runs, and I thought I was all set. That's when everything went wrong.My body began to fail. I slurred my speech, lost strength in my hands, and my legs were slow to recover. In August, 2009, I was given the diagnosis of ALS, also called Lou Gehrig's disease, after the famous baseball player who got it.ALS is a disease that kills moter neurons, which carry signals from the brain to the muscles. It causes first weakness, then gradually increasing paralysis. It is usually fatal in 2 to 5 years. My symptoms were mild at first and I continued to work, but fatigue and voice problems forced me to retire in early 2011. Since then the disease has continued its inexorable progression.Today, I am essentially paralyzed. I am fed through a tube, and my breathing is assisted through another tube. I operate the computer using a commercial eyetracker system. It also has a speech synthesizer, so this is my voice now. I spend all day in my power wheelchair. I worked up an interface using an arduino so that I can adjust my wheelchair's position using my eyes.It has been an adjustment, but my life is not too bad. I can still read, listen to music, and watch TV and movies. I recently discovered that I can even write code. It's very slow, probably 50 times slower than I was before. But I still love programming and it gives me goals. Currently I'm working on something Mike Hearn suggested, using the security features of modern processors, designed to support \"Trusted Computing\", to harden Bitcoin wallets. It's almost ready to release. I just have to do the documentation.And of course the price gyrations of bitcoins are entertaining to me. I have skin in the game. But I came by my bitcoins through luck, with little credit to me. I lived through the crash of 2011. So I've seen it before. Easy come, easy go.That's my story. I'm pretty lucky overall. Even with the ALS, my life is very satisfying. But my life expectancy is limited. Those discussions about inheriting your bitcoins are of more than academic interest. My bitcoins are stored in our safe deposit box, and my son and daughter are tech savvy. I think they're safe enough. I'm comfortable with my legacy.\n[edited slightly]"}
{"prompt": "Intrapolynomial Cryptography", "completion": "Researchers have proposed a variety of \u201cclient puzzle\u201d or \u201cbusy-work\u201d proposals like hashcash, MicroMint, bit gold, and compute-cost postage to create independent currencies or make spamming costly. The mathematical implication of these proposals is that there is such a thing as intrapolynomial cryptography. Four motivations for intrapolynomial cryptography theory are (a) novel constructions such the aforementioned applications, (b) more accurate estimation of the computational cost of cracking a cipher, (c) it might be easier to prove lower bounds, rather than just conjecture them as is the case with superpolynomial (standard) cryptography, and (d) if there do not exist one-way functions, standard cryptography is intrapolynomial rather than superpolynomial.I propose the following formalization:In other words, there is no algorithm running faster than q(n,k)p(n) which can invert f for more than a negligibly small number of values.One can similarly define average-case, best-case, and worst-case k-degree benchmark functions, analogously to one-way functions. Open question (analogous to the open question in superpolynomial cryptography of whether one-way functions exist): can one prove (3) as lower and upper bounds for some function and k>=1 on some realizable machine model such as RAM-log?Strong and average case are most apropos to cryptography related applications. Unfortunately for these purposes we'd also need:Since this is at least very tedious, one hopes we can in practice get away with a short list which covers all plausibly implemented machine architectures. This might work where for example the total exposure from cracking a protocol is less than the R&D costs of designing and building a novel machine architecture to defeat it. Cryptanalyis would include discovering the machine architectures optimal for breaking an intrapolynomial cipher.There are at least two practical implications of the above analysis. One is that there is very little room for error in the analysis and implementation of compute-cost postage, hashcash, bit gold, MicroMint, and other such intrapolynomial cryptography schemes. Another is that, unless the opponent has a very low budget and is thus limited to standard personal computers, it does not make sense to analyze the security or cost of these schemes without reference to machine architecture. For example, spammers may be able to defeat compute-cost postage by using custom chips optimized for computing the particular puzzle function."}
{"prompt": "RPOW - Reusable Proofs of Work", "completion": "Archived website\nGitHubI'd like to invite members of this list to try out my new hashcash-based server, rpow.net.This system receives hashcash as a Proof of Work (POW) token, and in exchange creates RSA-signed tokens which I call Reusable Proof of Work (RPOW) tokens. RPOWs can then be transferred from person to person and exchanged for new RPOWs at each step. Each RPOW or POW token can only be used once but since it gives birth to a new one, it is as though the same token can be handed from person to person.Because RPOWs are only created from equal-value POWs or RPOWs, they are as rare and \"valuable\" as the hashcash that was used to create them. But they are reusable, unlike hashcash.The new concept in the server is the security model. The RPOW server is running on a high-security processor card, the IBM 4758 Secure Cryptographic Coprocessor, validated to FIPS-140 level 4. This card has the capability to deliver a signed attestation of the software configuration on the board, which any (sufficiently motivated) user can verify against the published source code of the system. This lets everyone see that the system has no back doors and will only create RPOW tokens when supplied with POW/RPOW tokens of equal value.This is what creates trust in RPOWs as actually embodying their claimed values, the knowledge that they were in fact created based on an equal value POW (hashcash) token.I have a lot more information about the system at rpow.net, along with downloadable source code. There is also a crude web interface which lets you exchange POWs for RPOWs without downloading the client.This system is in early beta right now so I'd appreciate any feedback if anyone has a chance to try it out. Please keep in mind that if there are problems I may need to reload the server code, which will invalidate any RPOW tokens which people have previously created. So don't go too crazy hoarding up RPOWs quite yet.Thanks very much -Hal Finney"}
{"prompt": "Negative Reputation", "completion": "An important and general problem seems to be that of tagging a negative behavior source for future recognition. The tag might be used for negative information shared publically (eg, credit ratings) or kept private (eg, kill files). The behavior source might be non-human (eg, recognizing virus patterns for the purposes of virus scanning). Where the behavior source is adaptable and self-interested, it has an incentive to spoof the tagging: a debtor to change names to avoid paying his debt, a virus to scramble its pattern to avoid scanning, and so on. If the tag carries a greater positive reputation (where zero is the reputation of a newcomer) this incentive is lost and the negative side of the reputation \u2014 the disreputation \u2014 must be borne.Can digital credentialling systems facilitate such negative reputation handling?Service-specific, aka local, nym reputation may not be able to accomplish such tracking of negative reputation. If a local nym accumulates more negative than positive credentials, it can simply be replaced by a newcomer local nym for this service, without harming the positive reputation capital of the other behavior source local nyms. Hostile sources can continuously spoof innocent newcomers. Counterparties lose the ability to determine a history of previous hostile behavhior \u2014 kill files, virus scanning, credit ratings, etc. fail.Chaumian credentials also give the credential holder control over the transfer of credentials between his local nyms, creating an incentive to show positive credentials and hide negative ones. To remedy this, counterparties can demand \"non-negative credentials\" (in a form such as, \"Alice in many transactions recorded by me in area X has never done bad things x,y,z\"), Non-negative credentials are limited to areas that can be well-tracked. One such may be credit ratings, as long as one is doing the bulk of one's credit transactions through is-a-person linked local nyms.Where Chaumian credentials are inapplicable, we might raise the cost of entry to be greater than that of a newcomer. This gives us two clearly defined reputation points to compare on an otherwise rather subjective scale: participation threshold and newcomer reputation. Both are subjective in the eye of the party choosing whether or not to participate in an activity with the nym.A participation threshold greater than newcomer reputation clashes with the desirable goal, that one be able to make a fresh start. For that matter, unless previous nyms and their positive reputations are linked to their new nyms, the pioneers cannot make a start, so that the institution itself cannot be started. Ditto for for institutional growth.Tags that bundle the results of a wide variety of transactions \u2014 global nyms, aka universal IDs, aka \"True Names\" \u2014 seem to provide the most incentive for parties to carry their negative credentials. Most people have accumulated enough positive reputation is some areas that it is well-nigh impossible for them to start over their entire lives as newcomers.A big problem arises with negative credentials when they are used, not merely to avoid engaging in a particular activity with a party, but for retribution against that party. Retribution may take some nonviolent online form, such as slander, denial of service attack, and so on, but the most worrisome form of retribution is a violent physical attack. Could we have digital tags that, while tracking negative behavior sources through the digital world, remain strictly unlinked to any kind of physical location data? Alas, we have several important systems, such as cellular phones, shipping addresses, etc. that provide such linkage.A big problem arises with negative credentials when they are used, not merely to avoid engaging in a particular activity with a party, but for retribution against that party. Retribution may take some nonviolent online form, such as slander, denial of service attack, and so on, but the most worrisome form of retribution is a violent physical attack. Could we have digital tags that, while tracking negative behavior sources through the digital world, remain strictly unlinked to any kind of physical location data? Alas, we have several important systems, such as cellular phones, shipping addresses, etc. that provide such linkage.The question may become one of deciding what of these three dimensions are most important, and how they can be traded off:Keep in mind too, that in practice these are evaluated primarily by a market evolving from its current state, rather than by abstract ethical philosophies.Robin Hanson has noted that in a world of global nyms, the use of a local nym may signal the hiding of negative credentials, so that the use of global nyms is in equilibrium. A further problem with local nyms is that our relationships are often not neatly compartmentalizable into standard service types, and even where they are we might like to expand them into new areas. I suggest that, at minimum, we will want to reveal progressively more local nyms to our counterparties as our relationships with them become closer and more co-exposed.While the global nym equilibrium may hold for many of our relationships, there may be plenty of areas where the privity benefits of localizing nyms outweigh the costs of being less or unable to differentiate newcomers from hostiles. (By \"privity\" I refer the entire general task of protecting relationships from hostile third parties; confidentiality and protection of property from theft are two examples of privity). For example, the preference-tracking service at www.firefly.com increases participation via the use of pseudonyms, and suffers little exposure from hostiles. On the other hand, credit transactions typically demand identifying information, because the contractual exposure typically outweighs benefits of privity.Global nym public keys, which have many drawbacks in terms of privity, may be the best way to track negative reputation, but they are no panacea. There is an important conundrum in an ID-based key system: the conflict between the ability to get a new key when the old one is or could be abused by another (key revocation), and the ability of another to be sure they are dealing with the same person again. This may also provide an opportunity for parties to selectively reveal positive credentials and hide negative ones. For example, a person with a bad credit rating could revoke the key under which that rating is distributed and create a new one, while selectively updating their positive credentials to the new key (eg, have their alma mater create a new diploma). Key revocation authorities might combine forces with credit rating agencies to avoid such erasure of negative history, but this gives them even more centralized control \u2014 not merely over IDs but over important elements of reputation associated with those IDs. This further violates the principles of separation of powers and segregation of duties, providing added opportunity for fraudulent issue or revocation of IDs along with fraudulent communication of reputation information.The current universal (non-cryptographic) key in the U.S., the SSN, is very difficult to revoke. Much easier to change your name. This policy is probably no accident, since the biggest economic win of global nym identification is the tracking of negative reputations, which revocation can defeat. As long as the SSN is a shared database key, not used for the purpose of securely identifying a faceless transaction, there is little need for revocation beyond the undesired erasure of negative history. Combining a secret authentication key, which must be revocable, with a public universal ID is quite problematic.Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 1996 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "PGP Web of Trust Misconceptions", "completion": "One of the key concepts widely used to describe PGP is the \"web of trust\". This brings to mind a network of connections between people who know and communicate with each other. Two people who want to communicate can do so securely if there is a path of connections in the form of signed keys that joins them.But this is not quite right. The fundamental fact about PGP key signatures, which is often misunderstood, is this:You can only communicate securely with someone whose key is signed by a person you know, either personally or by reputation.In other words, if I want to communicate with joe@abc.com, I can only do so if one of the signators of his key is a person I know. If not, I have no way of judging the validity of his key.This belies simple interpretations of the \"web of trust\". I may have signed A's key, A has signed B's, B has signed C's, C has signed D's, and D has signed Joe's, but this is of no value unless I know D. Only then can I trust Joe's key.This means that, in the \"web\" picture, I can only communicate securely with people who are at most two hops away in the web of connections. I can communicate with the people I know, and I can communicate with the people they know, and that is it.This is unfortunate, because the simple web model ties into some famous research which suggests that any two people chosen at random are only about half a dozen steps apart in the web of who-knows-whom connections. (This result is where the title of the movie \"Six Degrees of Separation\" comes from.) If you had a system which actually supported communications via such a web model, it actually would have hope of letting two people communicate who did not have a very long chain between them. But PGP, with a maximum chain length of two, will not allow this.What would have to be added in order to allow a true web of trust model to be used in a program like PGP? Basically what is needed is some way to judge the trustworthyness of signatures by people you don't know. This would most plausibly be provided by the people who had signed their keys. For example, if there were another type of key signature which did not only vouch for the person's identity, but also for his trustworthyness and care in signing keys, then a chain of such signatures could serve as the basis for a true web of trust. Obviously such signatures could not be given out nearly as easily as the kind we have now, where a glance at some stranger's drivers' licence is often all we get, but they could be given to close friends and those we know and trust.More elaborate systems might include numerical ratings of trustworthiness which would help to estimate the strength of any given path. The main point is that some information of this kind would be needed in order to allow communication with people distant in the web of connections.Without this, I think we will continue to have problems with PGP being unable to validate keys of people we want to communicate with. People will collect huge laundry lists of signatures in the hopes that whoever wants to communicate with them will know one of those people. Centralized key validators will appear (as in the case of the SLED service being started now, which will sign a key based on a signed check with your name on it). The result may be a choice between using an unsigned key or using one signed by some faceless bureaucracy, which is no better than the original PEM conception.(People may be confused by this essay because they thought PGP worked this way already. PGP does have a follow-the-web model, but that is only for following signatures. In the example above, where I wanted to talk to Joe and there was a chain to him through A, B, C, and D, we have to first suppose that I know and trust all of A, B, C, and D. Given that, what PGP can do is to determine whether I have valid keys for all of those people. It will notice that A has signed B's key, so it is valid. I know B and told PGP he was trustworthy, and he signed C's key, so therefore that one is valid. Similarly, I know C and I know D so PGP can follow the chain through them. Finally we come to Joe, whom I don't know, but because I know D and PGP followed the web to determine that D's key is valid, PGP can determine that Joe's key is valid. But again, that was only because I knew D and everyone else in the chain. The bottom line is still that I can only communicate with people who know someone I know.)Hal Finney\nhal@rain.orgHal Finney Home Page"}
{"prompt": "Scarce Objects", "completion": "A more intuitive and secure approach to programming with objects distributed across trust boundaries is presented. The approach involves scarce objects and software to support markets in trading scarce objects \"rights.\"Scarce objects are computational objects that like physical objects are finite and excludable, and force the client to either conserve or consume (use up) their own rights to use the object. References to scarce objects are bearer certificates with two key properties: (1) they are use-once or use-N-times tokens, and (2) like digital cash they are transferred using online clearing using \"spent lists\" to conserve the number of these scarce object references.Scarce objects, a.k.a. conserved objects, provide a user and programmer friendly metaphor for distributed objects interacting across trust boundaries. (To simplify the language, I will use the present tense to describe architectures and hypothetical software). Scarce objects also give us the ability to translate user preferences into sophisticated contracts, via the market translator described below. These innovations will enable us for the first time to break through the mental transaction cost barrier to micropayments and a micromarket economy.A scarce object is a software object (or one of its methods) which uses a finite and excludable resource \u2013 be it disk space, network bandwidth, a costly information source such as a trade secret or a minimally delayed stock quotes, or a wide variety of other scarce resources used by online applications. Scarce objects constrain remote callers to invoke methods in ways that use only certain amounts of the resources and do not divulge the trade secrets. Furthermore, scarce object wrappers form the basis for an online economy of scarce objects that makes efficient use of the underlying scarce resources.Scarce objects are also a new security model. No security model to date has been widely used for distributing objects across trust boundaries. This is due to their obscure consequences, their origins in single-TCB computing, or both. The security of scarce objects is much more readily understood, since it is based on duplicating in computational objects the essential intuitive features of physical possessions. Our brains reason in much more sophisticated ways about physical objects than about computational objects. Scarce objects are thus readily understood by programmers and end users alike. Scarce objects lower mental transaction costs, which are the main barrier to sophisticated small-scale commerce on the Net. Finally, scarce objects will solve for the first time denial of service attacks, at all layers above the primitive scarce object implementation.The intuitive physical metaphor of scarce objects gives scarce objects the following basic properties:Closely related to these is a social property of objects critical to the success of economies:Property rights and contracts are highly evolved methodologies for dealing with economic objects and each other across trust boundaries. Scarce object architecture can reuse this working paradigm, because it reuses the mental model of the physical world in which this security paradigm was invented.With scarce objects, any computation across trust boundaries will have these properties of atomicity, conservation, composition, and the accompanying clear delineation of rights and responsibilities. This model is rather restrictive compared to what we are used to within trust boundaries. However, it will much more readily keep programmers from writing obscurely insecure code, which is easy to do with either ACLs, capabilities, or cryptography. Furthermore, conservation (scarcity) and lack of externalities are the two major assumptions of microeconomics, the study of commercial transactions across trust boundaries. So the scarce objects security model allows us to inherit a rich literature of formal reasoning about such systems.Scarce objects are, in other words, online commodities. These commodities may represent, typically, rights (or expectations) to services \u2013 the right to use an e-mail or news service (or a component of that bundle of rights, e.g. the right to use that service\u2019s e-mail server), the right to upload or cache content, the \"right\" (here more like an expectation) to have e-mail read (digital postage to prevent spam), etc. Such service rights will usually be limited against the client by time or resource usage or number of invocations. When represented properly, by scarce objects, these services are conserved. Such \"rights\" or codified expectations are enforced against the server by reputation, by the \"physics\" of scarce objects, or both, in substitute for or in addition to expensive traditional legal means.Scarce objects may also represent unique or finite relationships between people and bits \u2013 names that correspond to addresses, ownership of trademarks, authorship of content, ownership of certain rights to content (which probably does not, for security reasons, include the right to exclude others from copying the bits), etc.Scarce objects are not a complete model of computation across trust boundaries. Indeed, there are many smart contracts that can be implemented with cryptographic protocols and/or secure hardware but not with scarce objects. What scarce objects provide is a straightforward basis for implementing, in an intuitively secure way, the anonymous commodity exchange economies formalized in microeconomics in a P2P fashion on the Internet.Another area important to scarce objects is in reasoning about supply chains. In distributed objects, the call graph is the supply chain. To stretch call graphs across trust boundaries, we must replace rigid client-server relationships with dynamically adaptable customer-supplier relationships. The ideal here is to create a rich toolset of exception handling across trust boundaries. Note that credit risks are a proper subset of supply chain risks. Ka-Ping Yee recently put the supply chain problem succinctly: \"be wary of return values from objects you don't trust.\"The scarce object architecture suggested here shares some things in common with capabilities, but it secures more kinds of resources and is far more affordable for users and programmers. Capabilities (along with ACLs) are a means of implementing access control. Access control simply deals with the first-level of issue of whether an entity has access or not to a given resource. If an entity has such access, this access is, as modelled or implemented by basic capabilities or ACLs, effectively unlimited in scope. Scarce objects, on the other hand, limit resource usage in three ways \u2013 first, by limiting the amount of resources used per invocation, second, by limiting the number of resources used per right (per ticket), and third, by limiting the number of tickets issued.A raw distributed capability system (i.e. what Mark Miller refers to as \"caps-as-data\", to distinguish from capabilities local to the TCB (\"object caps\") which have strictly stronger security properties) give out capabilities of infinite duration and unlimited invocations, cannot be considered to be a true principle of least authority (POLA) system. For an object reference to implement POLA, it must be finite in every dimension. A true POLA system never gives out more authority than is necessary and proper to compute the needed function. It is never either necessary or proper to allocate infinite resources, and usually it is not necessary to allocate large resources. The scarce object architecture is the first design for object systems to achieve finite authority, and to allow small allocations for objects that need only small amounts of resources. Scarce objects are thus the first architecture to make true POLA possible.Scarce object architecture depends on a distributed object architecture that makes minimal security assumptions. A good implementation strategy may be therefore to implement this model on top of E. No sophisticated use of its distributecd capability architecture need be made to securely distribute scarce objects; rather the resource-conserving features of scarce objects can be relied on for securing resources.A bearer right to invoke a scarce object method takes the form of a bearer certificate, or ticket. It can be generic, meaning a right to an N invocations of one of a set of similar or identical objects, or specific, meaning a right to invoke a particular object method in a unique way. Generic rights are fungible and can be transferred unlinkably, using Chaumian blinding.The general steps to build a scarce object are (1) define a normal object, then (2) wrap it in a layer that protects its public methods using tickets. Our sketch of the architecture here describes how this wrapping layer can work.The wrapping layer involves three different servers: a transfer agent (TA), a Provider, and an Issuer. The Issuer and TA operate like an accountless digital cash mint. The Issuer signs tickets. The TA clears the transfer of tickets for generic rights. Both the Issuer and TA have copies of the private keys (\"plates\") corresponding to each issue of generic right. A particular kind of generic right (e.g., a particular denomination of digital coin) can have multiple issues, usually ordered sequentially. Digital cash is a special case: money is the most generic of rights. Here is another example of a generic right, or class of fungible objects: \"A queriable SQL database with up to 10 MB of storage, and certain standard response time guaruntees\".It is a design option whether to combine the Issuer and TA into a single server (thereby reduce exposure of the private key) or keep them separate (thereby enable certain personell controls based on separation of duties). Distributed servers, described below, are an even better way to increase the trustworthiness of Issuers and TAs.The Provider is responsible for actually holding the object, which can contain unique state. It publishes a signed description of its scarce object method, describing a particular kind of generic right (e.g. in the form of design-by-contract pre- and post-conditions). The issuer and transfer agent then create plate(s) and prepare to issue tickets for the method.Any or all of these component servers can be distributed, using the methods described here and here. A distributed signature is used to issue tickets (M out of N must sign using a distributed private key for a verifiable signature to be produced). Such distribution greatly reduces exposure to breach of trust and thus lowers the mental transaction costs of reputation tracking.To implement exclusive transfers, the TA keeps a list of cancelled ticket numbers. A ticket is cancelled whenever it is transferred or used. The Provider instructs the TA when a ticket has been used, or alternatively they both write to a shared list of cleared tickets.The TA and Issuer see only classes of fungible objects. The Provider and users see particular instances with unique state. In the above example of a database generic right, the Provider sees a database filled with unique information while the TA and Issuer see only the generic description of the database object invocation methods.In contrast to the servers, the remote user of a scarce object wraps his object invocation stub with calls that trade for needed tickets (again using a market translator), send the tickets as needed with method invocations to those methods\u2019 Provider(s). In some (hopefully many) cases sufficiently identical generic services will be provided by competitors. Where this occurs a \"ticket client\" may also \"shop around\" in the sense that if the pre- or post-conditions of the method invocation fail, or if the invocation is otherwise detected as faulty, the ticket client will retry by invoking the competitor's method.The Provider server is almost just another ticket client to the TA, which like other clients can transfer or receive tickets. It special role is in informing the TA when tickets have been used thus should be cancelled (or, altrneatively, writing the cancelled ticket number directly to a list of cancelled ticket numbers that it shares with the TA). Only the Issuer can create tickets, and only the Provider can consume them.At the core of the Provider is the raw object itself, the set of methods that provide the defined services for scarce object clients. The Provider is the wrapper around this object. Besides its gatekeeping, ticket verification, and ticket consumption functions, the Provider can keep track of and inform the Issuer regarding resource usage.The Issuer in turn is the interface to the micromarket functions, especially the market translator described below. The Issuer may, for example, via a market translator, which incorporates the preferences of the person who operates the Provider, negotiate barter deals in which certain tickets are issued and exchanged for certain other tickets giving rights to invoke the counterparty's or a third party's scarce object methods. The negotiations might also be multi-party, i.e. auctions, and secondary exchanges for generic rights may also be developed for scarce object tickets. In turn, the market translator, to enable automated (low mental transaction cost) bartering operations, depends on the existence of reasonably liquid online exchanges of generic scarce object rights.The TA generates ticket supply only at the behest of the Issuer, and destroys it only at the behest of the Provider. All its own transfers conserve the supply of a particular generic right. The Provider is also responsible for the delivery of service to the client that satisfies the service description (contract, e.g. pre and post conditions), at which time the Provider \"deposits\" the generic ticket(s), i.e. adds them to the cancelled list.The Provider issues along with the initial generic rights ticket a signed affadavit, machine or human readable, describing aspects of the object which may be non-exlusive and unique, along with that instance's ticket number and the public key(s) of the generic right(s) for which it is valid. For example, it might say \"a database containing quotes of these two dozen listed stocks as of 12:22 pm Monday\", without actually containing those quotes. Often such description is worth more when bundled with generic exclusive rights, such as the right to a fast response time. The specific rights can elaborate in unique ways upon the generic rights, as long as these elaborations are not taken to define exclusive rights. The generic rights let the TAs garuntee exclusivity to users and conservation of resources to Providers, while the specific rights describe the unique state to any desired degree of elaboration. The Provider must be prepared to service any specific promise it has issued, as long as it is accompanied by the proper conserved generic tickets.This method of composing specific and generic rights, transferred as a bundle but with exlusive generic atoms cleared by different TAs, allows arbitrarily sophisticated rights bundles, referring to objects with arbitrarily unique state, to be transferred unlinkably. A wide variety of derivatives and combinations are possible. The only restriction is that obtaining rights to specific exclusive resources must either be deferred to the consumption phase, or transferred with online clearing via expensive communications mix.If the Provider wished to garuntee exclusivity to a specific right, transfer seems to require an expensive communications mix between Provider and transferee, rather than a cheap blinded ticket. For example, \"Deep Space Station 60 from 0500-0900 Sunday\" or \"a lock on autoexec.bat now\" demands exclusivity to a specific right, and thus seems to require a communications mix to unlinkably transfer. On the other hand, \"A one hour block on DSS-60 in May\" and \"the right to lock autoexec.bat at some point\" are generic and can be transferred privately with the much less expensive blinding, given a sufficient population of other ticket for this class of generic right transfered between the issuance and consumption of a given ticket.Clients can deal with the TA without a communications mix. They deal with the Provider via a communications mix. If both the initial and final holders failed to do this, the Provider could link them. If just the final holder failed to do so, the Provider could identify him as the actual user of the resource. Thus for full privacy generic transfers are cheap, and nonexclusive transfers are cheap, while specific exsclusive transfers and actually using the object seem to require the expensive communications mix.Here's a review of our architecture:Scarce objects, by creating a simpler and far more intuitive model of computation across trust boundaries, can make the distribution of objects on the global Internet a reality, just as the simplification of hypertext into HTML made the Web a reality.Click for larger versionThe mental transaction cost problem is one that underlies all markets \u2013 the mental effort it takes to shop \u2013 to map private preferences to prices to decide whether a bundle of rights is worth the cost. In particular this problem presents a severe barrier to micropayments and market-based resource allocation for networks and computers.The market translator is aimed squarely at solving, for the first time, this problem for Internet commerce. A market translator both enables and depends on online micromarkets to automate resource allocation among scarce objects. It will do so by enabling the following:The problem of \"translating\" between bearer contracts (which represent and secure rights to scarce objects) can be cast as a problem of translating between monetary currencies. For our purposes, a \"currency\" in a scarce object economy is simply any kind of bearer contract used for holding and transferring wealth, rather than for consumption by the holder. It is thus a \"collectible\" (or \"intermediate commodity\", to use Carl Menger\u2019s term). The market translator, incidentally, makes the O(n^2) prices in a barter economy, versus O(n) in a monetary economy, a far less important distinction.So let\u2019s look at currencies. Let's say small businessman Alice is negotiating cyberspace contracts with Bob, Charlie, etc. Typical of international contracts, terms can be denominated in a variety of ways. These are potentially unreliable: Joe-Bob's remailer postage, U.S. Federal Reserve Notes in their 1970s mode (or in 2003), Seychelles gold cache warehouse receipts, \"Asian Tiger\" currencies in 1997, and so on.Unreliable currencies can play havoc with:Each problem interferes with potential solutions to the other. On the one hand, picking one single best currency for all contracts concentrates risk. In some cases there is nothing close to a reliable currency, and in any case diversification is preferable. Without hedging Alice remains exposed to risks that more sophisticated traders can easily hedge.Another way of looking at it: there are no issuers in the world who are 100% trustworthy and 100% reliable. Lacking a security protocol to ensure that a currency retains its value, Alice needs risk management.On the other hand Alice, to plan her (personal and/or small business) budget and properly express her preferences, needs a simple, consistent long-term unit of account. Budgeting with a single fluctuating currency is bad enough, but if Alice denominates different expenditures and revenues in different currencies, her budget becomes an inconsistent mess. It's also unreasonable to ask a non-financial professional to worry about the finer points of exchange rates, hedging, etc.What is Alice to do? Old answer: Alice either hires, at a cost of both money and privacy, an accountant or financial planner, and may gain a few crude improvements. Mostly, she's out of luck: small businessmen have left most international trade to big corporations, whose finance officers partake in sophisticated hedging strategies.Proposed new answer: use a market translator to help Alice draft her contracts. This market translator should be useful for both normal law-enforced contracts and untraceable self-enforcing contracts, where the latter are feasible. In the following post I will sketch how a market translator can work.Automatic currency conversion, as done today by some credit cards and ATM machines, is a useful primitive kind of market translation. The casual reader (and user) can think of the market translator (MT) as a fancy kind of automated currency convertor, and get the basic gist of it. The MT serves to convert, hedge, and in general restructure the payment terms contracts negotiated in any manner.Our main novelty is to account for personal budgets, not in terms of any external standard of value, but rather in terms of personal accounting units (PAUs). PAUs correspond to what Alice can express of her personal utility. The MT determines Alice's static and and temporal preferences from the budget Alice already maintains (for example, her small business budget in Quicken). Additional preference specification forms may be provided beyond those of a normal budgeting program. For example, Alice\u2019s software preference settings, her behavior with keyboard and mouse, and similar clues might be usefully interpreted as economic preferences, for example with regard to where to allocate scarce screen real estate and network bandwidth.For convenience Alice's PAU might correspond to the local currency most commonly used by Alice. If most of Alice's budget items deal with online contracts negotiated via MT, then using the local currency is by no means necessary, and is undesirable if that currency is unstable.Here is a diagram showing Alice and Bob negotiating a contract using their market translators:One mode in which the MT can be used is to have Bob offer a take-it-or-leave-it binary contract, corresponding to the current retail practice of take-it-or-leave-it prices. In the mode pictured above, Alice and Bob negotiate back and forth. The negotation of the source contract terms will usually be manual. The \"source language\" will typically be a human readable GUI, while the \"target\" will be a standard formal contract language. If Alice and Bob can input preferences leading to automated negotiations, then a \"shopping bot\" and \"catalog bot\" respectively may be used. This is a layer above and beyond the scope of the MT. The MT is only a \"shopping bot\" in the restricted but important area of contracts composed of atomic bearer contracts \u2013 rights to scarce objects \u2013 to the extent that the price relationships between these bearer contracts are available from quoted markets.The MT acts like a computer language compiler. But it translates both ways, and in real time as Alice and Bob negotiate payment terms. So, for example, Alice changes a term in her contract, proposing to pay fewer Alice-PAUs for Bob's services. Her MT translates this into a series of payments and hedges: a sophisticated synthetic contract as obscure to Alice and Bob as binary code is to many programmers these days. This synthetic is constructed out of liquid market securities (bearer contracts) and derivatives of low transaction cost. A synthetic contract is naturally represented as a composite object, a part-whole hierarchy composing primitive contractual \"atoms\", such as securities and derivatives.Bob's MT reverse-translates the actual market terms into Bob-PAUs. Although they each agree to different looking amounts of payment, the visible structure besides amounts and the complete underlying contract is the same. They can be confident that when their preferences have been satisfied, their minds have met and they can commit to the contract.As a result, both Alice and Bob see the contract in terms of their own consistent personal utility units. All consideration of exchange rates, inflation risks, and so on is handled by the MT.Alice and Bob's MTs can make side conversions, hedges, and restructurings to balance their portfolios. These side hedges are not revealed to each other. Any binary terms which can be side hedged can be made almost arbitrarily distant from what Alice and Bob prefer financially. Thus Alice and Bob need not reveal their financial preferences to each other.(Note: For contracts with delayed payment terms, Alice and Bob determining the credit risk caused by each others' credit exposures is an important problem, but beyond the scope of the MT as I have described it).The whole set of Alice's contracts with all her counterparties constitutes her complete portfolio \u2013 not merely a segregated investment portfolio, but a complete portfolio encompassing all her finances. This portfolio is is represented as a composite of composite contracts, and forms the basis for all of Alice's financial planning, and for the automated portfolio rebalancing activity of the MT.The main data structure representing the contracts for analytical purposes is the chance/choice decision tree. This tree has two kinds of nodes, \"chance\" nodes which iterate through all material possibilities, and \"choice\" nodes where the optimal choice is made. The result is the expected value of a set of contractual terms. The trees can represent a large number of contracts with low resolution (lots of pruning and heuristics), or a simple contract with high resolution (all possibilities considered). Desktop computers are or will soon be fast enough to search through thousands of contingencies, and synthetic contracts composed of hundreds of atomic contracts, with delays less than Internet latencies. So the binary contract can be a very sophisticated synthetic, as long as its analysis is fully automated, and still conserve mental transaction costs.The MT relies on online, automated exchanges hosting liquid markets for fixed income securities and derivatives. These markets reveal the information the MT needs to properly hedge currencies. Market makers and arbitrageurs maintain these markets, ensuring the most accurate information on risk premiums, yield curves, and so on is available to MTs. Some information not automatically derivable from market prices might be made available online by financial consultants, in a standard format, downloadable by MTs for a fee.The source contract is normally negotiated and closed manually, as per normal shopping. The MT is a a \"shopping bot\", but only in the very restricted but important realm of finance related to payment terms. Sincethere should be no need for manual intervention in the hedging translation process. If such manual intervention is required, the system very quickly loses its appeal for most users.If the preference or market information is not available, or the securities and derivatives exchanges are not available, the market translator can revert back to simple automated currency conversion.The market translator thus solves a vexing problem faced by multinational small business, the hedging of payment terms using potentially unreliable currencies. More generally, the market translator built on a scarce object architecture will lower the mental transaction cost barrier to micropayments and micromarkets. It will translate skills and preferences into microrights and microduties for use in fine-grained allocation of resources and services \u2013 whether online e-mail accounts, online game collectibles, screen real estate, network bandwidth and caching, or a variety of other network objects which, thanks to scarce object architecture, become economic objects."}
{"prompt": "The Geodesic Market", "completion": "\u201cThe path-breaking work of Robert Hettinga was published in a series of newsletters issued by FT Virtual Finance Report during 1998-1999. Bob is well-known for starting the famous e$ and e$pam mailing lists, to which I was an early subscriber, and as the founder of the Internet Bearer Underwriting Corporation (IBUC). Along with fellow privacy stewards, Vince Cate and Ray Hirschfeld, he launched the world's first conference on financial cryptography, FC97, on the island of Anguilla.\u201dSince the invention of the telegraph, financial transaction settlement has had a problem: how do you transact business at a distance when the simplest way to execute, clear and settle a transaction is with an exchange of bearer certificates?Our current system of so-called \u2018book-entry\u2019 transaction settlement was invented in order to handle the problems caused by remote transaction execution and the subsequent need to physically exchange bearer certificates for settlement. We now have the means to return to \u2018digitally encoded\u2019 bearer settlement with a three orders of magnitude cost saving.Soon enough, the era of book-entry settlement, our way of representing money as offsetting debits and credits exchanged between the two parties of a trade through a hierarchy of trusted intermediaries, will be over.I think that the social and economic impact of the new alternative to book-entry settlement, digital bearer settlement, will be quite large, because, at the root of the status quo\u2019s book-entry transaction protocols is the need to involve government and regulation at the most intimate levels. Essentially, \u2018\u2026and then you go to jail\u2019 is the penultimate error-handling step in a book entry transaction.In the old days, before telegraphy, most financial transactions were done by trading bearer certificates, or tokens, of one form or another. Exchanging cash for a bearer bond would be a good 19th century example. Even trading bearer forms of equity was trivial and instantaneous: the offer, the acceptance of the offer, and the settlement of the transaction occurred almost all in one operation.With the advent of telegraphy and eventually telephony, it was possible to make the offer and accept the offer at a distance, but settlement had to wait until bearer certificates were physically relocated, sometimes over long distances and then exchanged. After all, you couldn\u2019t very well send them over a wire.The solution was to move all the certificates to a central trusted location, called a clearinghouse, and for the trading parties to swap debits and credits between themselves and the clearinghouse. It\u2019s pretty apparent that having the certificates physically locked down in the clearinghouse\u2019s vault becomes superfluous in such a scheme, because what really matters is the impartial arbitration of the clearinghouse in the case of a transaction dispute. All except for one thing. If someone lies or reneges on a book entry transaction, there isn\u2019t much that the other two parties can do except bar them from trading, which, of course, works in bearer certificates, but not nearly as well in book-entry settlement.So, we need several things to cope with nonrepudiation in book-entry settlement. First, we need the ability to determine who physically made what book-entry so we can find them and send them to jail for fraud if necessary. That\u2019s because book entries are inherently unstable, insecure, digits sitting in a database somewhere. Many people in Asia are familiar with commodities and derivatives traders who were capable of hiding fraudulent book-entries for long enough periods of time to bring down their respective firms, for instance. In cryptography we call this an authentication problem.So, besides authentication of the book-entries themselves, we need to secure the links between various charts of database accounts, first by authenticating the users of those electronic links, originally with passwords, then with cryptographic keys and signatures, and now with some combination of biometrics (finger or retinal prints, say) and digital signatures. And, second, by actually encrypting the links themselves so that no one can see what they are even if they can\u2019t change the authenticated data without someone noticing.Sorry for the long-winded explanation, but it\u2019s long-winded stuff, as most people who clear trades on the net for a living will tell you. Anyway, for all intents and purposes, you now know everything there is to know about the guts of electronic commerce on the Internet. When you punch your credit card number into a secure web page, pretty much all of the above happens, plus or minus the retinal scan.However, all this stuff about moving book-entries down encrypted pipes on the internet, including the much-heralded SET protocol for credit cards, is so much financial \u2018shovelware\u2019.Fortunately, there is much more that can be done with financial cryptography. There\u2019s a whole string of cryptographic protocols out there, beginning with David Chaum\u2019s blind digital signature patent in the middle 1980\u2019s. You can actually create unique digital objects which can\u2019t be forged if you handle them right (if you only exchange them on-line, for instance). You can attach any arbitrary financial value you want to these cryptographically secure objects as long as everyone else agrees with you, and, most important, you honor your agreements concerning their exchangeability into some other financial instrument. So, I call these objects \u2018digital bearer certificates\u2019, after the paper bearer certificates of yore, which I claim these crypto-blobs behave like, more or less.The fun part comes when you actually start to trade these things. The first thing you notice is that they settle instantly. I give you digital cash certificates, you give me digital bearer bond certificates. Trade over. Elapsed time, thousandths of a second. I can turn right around and take that bearer bond and sell it again, if I want. More to the point, I don\u2019t have to wait for my broker work out how to move my money to your broker through the clearinghouse, for their banks to arrange to pay each other, all of which takes days and costs lots of money. The cost of your on-line Schwab or E-trade transaction could move from being measured in dollars to somewhere in the sub-penny range, and probably less over time.Actually, these aren\u2019t account based protocols at all. So there ain\u2019t no Schwab, or Merrill Lynch, or Morgan Stanley, required. Well, not completely true. You still need financial intermediaries, no matter how small, to \u2018rent\u2019 reputation to a given transaction.As far as non-repudiation goes, I know that what you gave me is real because I can test it with the issuer. You can do the same thing. It\u2019s so trivial that I equate the act with the physical inspection each of us does, unconsciously or not, when we\u2019re handed a piece of cash. If I don\u2019t like what I \u2018see\u2019 (determined by the calculation of the cyptographic protocol, of course), I don\u2019t trade with you. I\u2019d say it\u2019s much better than detecting fraud after the fact, finding who made the offending book-entry, and apprehending, trying, and jailing the miscreant. Frankly, I\u2019d go one further and say book-entry settlement is so complicated and unwieldy that the only reason we have book-entry settlement now is because we couldn\u2019t shove paper down a wire back when telegraphy was invented.Finally, there\u2019s no real recordkeeping of transaction logs with digital bearer settlement. Like a pile of cash, you count it up, and that\u2019s what you have. There is no need for seven years of audit trails at up to six different transacting parties because you don\u2019t have to hunt someone down and send them to jail for reneging on a trade before it settles, and more frequently, to prove you\u2019re innocent should you be suspected of something untoward. You don\u2019t need a lawyer or an accountant to keep you out of jail at tax time for making the wrong book entry somewhere.In fact, you don\u2019t care who gave you what money as long as they\u2019re happy with what you gave them in exchange for it. Reputation becomes the most important thing there is, because damaging someone\u2019s reputation is your only recourse in a world where your digital signature is your only identity. The threat of blackballing is in fact a very effective fraud deterrent, and once a digital reputation is trashed, it takes time and higher transaction risk premia to build a new one. To quote J. Pierpoint Morgan on the subject, \u2018I wouldn\u2019t buy anything from a man with no character if he offered me all the bonds in Christendom.\u2019Once we get to digital bearer bonds, stocks, and derivatives thereof, the world starts to change considerably. However, I still claim that reality is not optional. If you reduce the cost of settling a transaction to effectively zero (okay, past the last basis point but not zero), then the financial markets are going to figure out how to use the technology. Not only is it cheaper, but by being cheaper, it allows for smaller and smaller publically held entities. And automated financial intermediaries. The asset sizes of various trades could get much smaller, but, in addition, I claim, that because trading of financial instruments can happen so quickly, efficiently, and by so many self-interested actors, it\u2019ll probably be the way money is raised for very large security issues and for very large projects. Maybe Intel\u2019s inevitable $10 billion chip fab, for instance, will be floated into a market \u2018swarm\u2019 of financial intermediaries. Microintermediation, instead of disintermediation, in other words\u2026Okay. I\u2019ve now walked you up the edge of the abyss, and pushed you over the cliff, and, you\u2019ll notice, you didn\u2019t get hurt at all. That\u2019s important to think about, because sometimes being quantitatively cheaper has qualitative effects, but, for modern society at least, the future is no different from the past, except that we\u2019ve figured out how to live better. I expect if we can blow the doors of the cost of financial services with digital bearer settlement, the world will be a much better place to live in, indeed.Back to table of contentsWhen I\u2019m working on a problem, I never think about beauty. I think only how to solve the problem. But when I have finished, if the solution is not beautiful, I know it is wrong.This is the first of a series of articles Duncan Goldie-Scot has commissioned me to write on the future of financial technology in an age of ubiquitous internetworks, Moore\u2019s law, and strong financial cryptography.I\u2019m calling this series The Geodesic Market, in the spirit of a \u2018popular\u2019 book I\u2019ve in the works named, oddly enough, Beyond Civilization: Life in a Geodesic Society. Actually, the core technology we\u2019re going to talk about is a group of financial cryptographic protocols I have termed digital bearer transaction settlement, which is the title of another book I\u2019m working on.When I was a teenager in the 70\u2019s, my best friend Jeff Blanton and I zealously devoured all of Stewart Brands\u2019 Whole Earth \u2018Domebooks\u2019. Back in 1974, when capitalism was the farthest thing from our mildly drug-addled minds, who would have thought that \u2018Bucky\u2019, R Buckminster Fuller, the greatest designer since Leonardo, we thought, had discovered not just an easy way for freaks like us to build cheap housing and squat on someone else\u2019s land, but that he had actually discovered the way that society, mapped as always to our communication topologies, would look in the not too distant future.Buckminster Fuller, for all his latter-day attempts to solve global resource allocation by good old fashioned top-down hierarchical industrial centralism, might not have imagined that the economics of semiconductor switching on telephone networks would eventually create giant, decentralized, capital markets. Markets so powerful that they would make the most out-of-control, rapacious 19th century industrial trust look like the most bucolic feudal guild. On a feast day. With their feet up. Capital markets operating on a network topology almost identical to the geodesic structures my friend and I were all so enamored with back in the days of the Allman Brothers, Levi\u2019s Big Bells, and ubiquitous low-yield psychochemicals.Even more ironic, you and I are going to raucously cheer these new geodesic markets on, as they surfact large concentrations of financial information and capital into fractally smaller and smaller bits, microintermediating it all like so much grease in soapy dishwater, in an instantaneous transnational market for capital. We\u2019re going to cheer these new markets on because they\u2019re going to make us so damned much money.These market will operate, finally, under the control of economics, instead of the confiscatory \u2018policies\u2019 of aristocrats or nation-states. Nation-states will eventually be as ceremonial as modern-day constitutional monarchs. Like the way physics and philosophy got out from under theology at the end of the dark ages, economics will no longer be the handmaiden of politics in a geodesic market.The fun part is, it\u2019s inevitable. It will come from the collapse of microprocessor prices, the 50% decline every 18 months that is Moore\u2019s \u2018Law\u2019, more an observation of the human ability to learn than any physical law. The geodesic market will come from the ubiquitous geodesic internet those prices create, and, in a remarkable reversal of history, a reemergence of the kinds of transaction settlement methods thought to be killed by the telegraph, and, ironically, mainframe batch computing.A geodesic market will use digital bearer transaction settlement protocols, perfect pseudonymity, and reputation sanction on ubiquitous public networks, instead of book-entry settlement, audit trails, and la, on the closed, private networks that we now have.Stunning? Outrageous? Preposterous? Before you click away in disgust, remember we only have what we use now because it was cheaper than what we used to use. Hence you and I don\u2019t go down to a bunch of merchants in the City to trade paper cash for paper shares anymore. I am perfectly serious. With financial cryptography and digital bearer transaction settlement, we can do perfectly safe, rational business on the internet without lawyers. Or, for that matter, cops.In addition to transaction costs three orders of magnitude cheaper than book-entry settlement (yes, past the last basis point: it\u2019s time to pick a new measurement unit), you will have perfect financial privacy as a happy accident of the same technology which drastically reduces transaction prices. Just like requiring the privacy-invading physical force of a nation-state in our very transaction clearing processes was an unhappy accident of book-entry settlement.All of this will happen with more non-repudiation and more asset safety features, including seemingly impossible things like limited liability and shareholder voting.The reason we have database marketing, book-entry taxes, (like income, capital gains, value added, and sales taxes), and book-entry regulations, (like, well, practically all regulation, these days), is because the book-entries are there.We need those book-entries in order to prevent repudiation of transactions. And, to enforce rules against a transaction\u2019s proven repudiation, we need the police. So, if you don\u2019t need book-entries, you can\u2019t have that other stuff, including, as Doug Barnes of C2NET likes to say \u2018\u2026and then you go to jail\u2019 as the error handling step in your transactions protocol.Impossible? If we can do digital bearer transactions, safely and anonymously over the internet for, say, 1000 times cheaper than book-entry settlement, what do you think will happen?As a brief preview, let\u2019s take a look at the things you can do with digital bearer settlement. Not surprising, it\u2019s everything you can do with book-entry settlement, and more.Consumer Debt: Instead of using a credit card, imagine issuing personal bearer bonds. Whole bond issues, actually. Microintermediated, by, you guessed it, a syndicate of micro-underwriters, living in the ubiquitous internet, all of whom, like under- writers always do, intermediate the market\u2019s loan of money to you based upon your reputation for repayment.Digital Cash: Since most people pay off their credit card purchases within a month after purchase, you will be relieved to know that instead of having to hassle with a credit card bill just to cover your normal monthly purchases, and the lack of privacy which goes with it, you will be able to use digital bearer cash, which will be as safe to use as checks or a credit cards are now, all without interest, or at least annual fees.The main reason you\u2019ll use digital bearer cash is, however, that eventually there\u2019ll be no float on your checks or even your credit cards. Notice how debit cards are cheaper already to use than credit cards, and that merchants are starting to see the advantages of getting their money without chargebacks hanging over their head.This is so fundamental a process that it should be a law of finance or something: the closer an electronic book-entry transaction system gets to instantaneous, the more digital bearer settlement becomes financially necessary. As a friend at a large IT consultancy in Cambridge (Massachusetts) likes to say, \u2018Real-time gross settlement is digital bearer settlement.\u2019Capital Markets: Instead of purchasing a stock through a broker with limited, hierarchical, almost oligopolistic access to the capital markets, you\u2019ll be able buy your digital bearer bonds or shares in public, or at least privately, using public networks. The internet is the equivalent of the old buttonwood tree on Wall Street, as I once wrote in Wired. I show up on the net with cash, you show up with your bearer shares, we exchange the two, and the trade is over. Execution, clearing and settlement, all in one step. Anonymously, because it\u2019s cheaper. That\u2019s the beauty of digital bearer settlement. You can do this for any financial instrument, debt, equity, or derivative.Internet Resource Allocation: Also, there are the things you can do with digital bearer settlement that you just can\u2019t do any other way. It\u2019s easy to imagine very small packets of digital bearer cash \u2018buying\u2019 a message across the internet, with each router buying packet switching low, and selling it high. Look, Ma, no human hands: No \u2018peering\u2019 arrangements, probably no network \u2018engineering\u2019 either, in the long run, as the internet becomes, like any free market, a complex self-adaptive system. I joke about \u2018picomoney as processor food\u2019. \u2018Micromoney mitochondria\u2019. Auction markets for bandwidth, certainly. Maybe for the guts of the machine itself, memory and processing time. All you need is Moore\u2019s Law, fast enough processors, and, of course, digital bearer financial cryptography protocols.Utilities: But, wait, it gets worse. You can pay for electricity, in cash, as you use it, down, of course, the same wire you got the electricity from. You can pay for roads as you use them, perhaps every few hundred yards or at every intersection. Like you can on the internet, you can pick the cheapest or fastest route to your destination. So much for \u2018public\u2019 roads. Just about everything you think of as a \u2018public service\u2019, or a \u2018natural monopoly\u2019 may be reduced some day to a continuous cash-settled electronic auction between competing parties. Moore\u2019 s law creates diseconomies of scale and geodesy. Hierarchy and economies of scale are a function of expensive (human) information switching.Geodesic Warfare?: Even force can be auctioned off and sold, same as it ever was, only this time to the highest microbidder. Imagine your land covered with semiautonomous landmines, keyed to your digital signature, which only go off when you tell them to. No, don\u2019t imagine them taking bribes to change sides. It\u2019s real. Someone at the US Army War College wrote a paper on just such a scenario four years ago. Of course, whether we\u2019ll need state-funded armies in a world where force has been disintermediated to such an extent or where taxes might be \u2018optional\u2019 is an entertaining proposition.So, who knows what the future\u2019s really going to look like. I may almost have my videophone now, but I have yet to see a (useable!) flying car, for instance. However, there\u2019s one thing we can be certain of. Information and knowledge will be developed and sold in much cheaper and smaller bits than we do it now. The prices for industrial goods will fall in a geodesic economy just like agricultural goods and raw materials did in the industrial economy.Just how far it goes is limited by Moore\u2019s Law. Moore\u2019s Law also enables the ubiquitous use of cryptographic financial protocols, like Chaum\u2019s original blind signature algorithm for digital bearer certificates, or the one for Rivest\u2019s MicroMint micropayment protocol.This series of articles is about how those markets, well capital markets, will come to be, how they will operate, and what actors will probably succeed in those markets.Next month I\u2019ll discuss geodesic networks and why I think they create geodesic social institutions like geodesic markets, how trade and money, how human society itself looks when viewed historically through the lens of their communications architectures. Then, I\u2019m going to talk in laymen\u2019s terms about the financial cryptography underpinning digital bearer transaction settlement, and then survey some of the different kinds of digital bearer settlement protocols on the market and in the labs at the moment.After that, I\u2019m going to apply these different protocols to different pieces of the capital markets we now have, and show you what the world looks like in a geodesic market for capital.Back to table of contentsIn this second instalment of the Geodesic Market, I\u2019m going to show how to underwrite digital bearer securities, using cash as an example.The business model I\u2019m using should be familiar to anyone who\u2019s been in the securities business for more than 20 years, and especially to anyone who\u2019s studied financial history. There\u2019s no surprise in that. We have 5,000 years of experience with bearer transactions. There\u2019s nothing new, except the cryptographic protocol, to worry about, and we\u2019re not going to talk about cryptography here in any detail.Another nice thing about this model as applied to cash is that it will be possible for people to convert their money to digital cash in and out of their own bank accounts, just like they can for paper cash. The underwriter, as I call the issuer of digital cash, becomes the internet equivalent of a third-party ATM machine, something everyone\u2019s familiar with.Because of this modular plug-and-play approach, it\u2019s pretty simple to obey all the rules we currently have about handling cash, while dramatically reducing the cost of cash transactions in the process.So, let\u2019s get started with a look at the players in this market.A consumer is someone who buys a piece of digital cash from a financial intermediary, an underwriter, in exchange for some other kind of money, a change in a bank account balance in this case, in order to effect a transaction on the net.A merchant is someone who accepts a digital bearer certificate in payment for something else.Of course, I hate the use of the words consumer and merchant because they don\u2019t describe geodesic peer-to-peer transactions very well, but the banking world understands them perfectly, like they do underwriter or trustee or custodian, so I use them here.The underwriter issues digital bearer certificates, and is fiduciarily responsible for exchanging them into other forms of money, again a bank account balance change, held by a custodian in a reserve account. Someday, of course, the reserve assets collateralising an issue of digital cash could be some other digital bearer asset.The second most important thing an underwriter does is to verify, at every transaction, that a given digital bearer cash certificate hasn\u2019t been double spent, copied by someone and spent twice. After that, the underwriter issues a brand new signature- blinded certificate to the person accepting the cash in payment. If the exchange fails at any point, so does the transaction, and the person offering the cash is prevented from double spending it, thus preventing repudiation of the transaction at execution time. Cheques, credit cards, or any book-entry transaction can\u2019t offer that security. Even with on-line validation for fraud, the merchant is still at risk of stopped checks or chargebacks.Finally, the most important thing an underwriter does is to market its certificates to the world. Which, if you look at an underwriter in the capital markets, is exactly what they do for both primary and secondary transactions, and that\u2019s why I use the label here.The original DigiCash ecash mint at Mark Twain Bank was a used 486 machine, just to give you an example of the hardware cost of being an under- writer. Eventually underwriting may be automated to the point of processor husbandry in the same way that one tends a web or router farm today, but it should always be done by a separate financial entity other than the trustee.A trustee, or custodian, holds the money reserving an issue of digital cash, on behalf of the cash certificate holders, in a bank account, though someday the reserve assets could be held in bearer form under the trustee\u2019s control. Like bond trustees or mutual fund custodians, the trustee operates according to an agreement, like a bond debenture, between the underwriter and the certificate holders. This agreement could specify fees and, most important in the early adoption process, reserve ratios.So, while the underwriter is the direct financial intermediary, and keeps the interest which accrues on the reserve account, the trustee risks their reputation by holding the reserves, is compensated for it, and controls that risk by making sure that the reserve agreement is adhered to.Put simply, there is no way to to get exchangeability of digital bearer securities into book-entry assets without a genuine, fully regulated trustee/custodial bank, which, in my opinion, is why we don\u2019t have internet digital bearer settlement today.The holders of the blind signature patent, and other protocol inventors, have a hard time understanding this. DigiCash, as the canonical example, will only license their patent to a single bank in a single country, and not to any one else, forcing the trustee and underwriter to be the same entity, creating a very brittle and not very robust network of financial entities. The result has been market failure, for the most part. Having a competitive, many-to-many, underwriter/trustee market system fixes that problem completely, as we\u2019ll see in a bit.For all intents and purposes, the consumer, merchant, underwriter and trustee are really all the financial entities necessary in a market for a digital bearer instrument.There are other entities required to make this work, of course. There are developers of the software for that market and, most important, the inventors of the financial cryptography protocols, like David Chaum, Mark Manasse, Stephan Brands, Ron Rivest or Ian Goldberg.Developers can either sell their software directly to customers or merchants, or they can sell servers to the underwriters and the underwriters can give away clients to their users.Inventors can license their protocol to the market as a whole through the trustee. This way, trustees can take royalties out of a percentage of the underwriters\u2019 interest earnings on the reserve account, or from the fees charged when some other asset is converted into the bearer instrument in question, or some combination of both.With book-entry or bearer-collateralised trustees, this rewards innovation cheaply and easily. You don\u2019t even need patents to do it. Even with bearer-collateralised trustees, the inventor of the protocol still gets paid, no matter who or where he is. This, among other things, is part of the judge role I was talking about above. The trustee, who\u2019s in business to be fair and impartial, loses reputation capital otherwise.The consumer buys, from a software developer, or is given, by an underwriter, a wallet: a client application which allows the storage and disbursement of digital bearer certificates. Wallets will probably be specific to the cash-protocol used, and not to the underwriter using the protocol.With a wallet installed, maybe as a browser plug-in, the consumer goes to the underwriter\u2019s secure web page. The consumer enters, either by swiping a card or emitting stored information on her hard drive, the account and PIN number for her bank account just like she would at an ATM. The consumer\u2019s account information is probably blinded, so that not even the underwriter, or even the trustee, sees it as it goes through the trustee and onto the ATM network for authorisation.The consumer\u2019s bank sends an authorisation message back to the trustee, who notifies the underwriter of the reserve account change, who in turn disburses digital cash certificates to the customer in the amount of her request. With the exception of the issuance of digital bearer cash instead of paper cash, this is roughly what happens with a private ATM machine.This is all done for whatever fee the underwriter charges, in the same way traveller\u2019s checks are sold at a premium at the time of sale, or that a foreign ATM machine charges for non-customer transactions. In fact, redeeming it off the net at par like a traveller\u2019s cheque, and exchanging it free for other digital bearer cash online is probably fundamental for merchant acceptance.The consumer then uses the new cash to buy something from a merchant on the net. In theory, a merchant could do offline transactions, without involving a direct exchange and replacement of certificates from the underwriter, but they\u2019re ridiculously insecure from the standpoint of double spending.This exchange of certificates, this printing of new certificates at the time of each transaction, is still orders of magnitude cheaper than book-entry payment methods, and, since it\u2019s blinded by cryptographic protocol, the transaction retains its bearer quality. That is, the asset changes hands anonymously (on the net at least), it exists in only one place at one time, and the only proof required for non-repudiation is the certificate itself. Just like dollar bills, only three orders of magnitude cheaper than an internet debit or a credit card transaction.With the transaction over, the merchant can instantly spend his newly minted cash certificate somewhere else, this time for free, because the longer it stays on the net, the more interest it earns in the underwriter\u2019s reserve account, all at minimal cost to the underwriter.Or, the merchant can turn around and redeem the certificate at par through the underwriter, who in turn has the trustee clear the money through the ATM system to the merchant\u2019s bank in the exact reverse of the process which got the money onto the net in the first place.Notice, for the first time, it is technically possible to use the ATM system for a cash deposit from a foreign bank, in this case, from the trustee, on behalf of the underwriter, to the merchant\u2019s bank account. Finally, notice that, since the wallets will probably be free, anyone can get paid in cash over the internet. They only need a bank account to put money on the net or take it off, important in the early stages, but not nearly so as time goes on.It should be obvious by now that we\u2019re looking at a classic case of Metcalfe\u2019s Law. The more entities there are in this market\u2019s network the more robust and valuable it is.The model gives us a many-to-many universe of interdependent underwriters, trustees, software developers and protocols, all in competition with their peers to offer the best price, collateral, reputation, quality of execution, and so on. The idea is to create a ubiquitous geodesic capital market composed of efficient, instantaneously cash-settled auctions of fungible, non-branded, risk-graded, digital bearer financial instruments.The other thing the model creates is something I call microintermediation. Because of the information processing diseconomies of scale in Moore\u2019s law, we have lots of small, automated financial intermediaries, each one operating directly between a given buyer and seller. This, I believe, is the logical outcome of financial disintermediation, which, until now, has been about removing multiple intermediaries between a buyer and seller. As we\u2019re starting to see in the internet search engine market, we\u2019ll start to see a speciation of financial intermediaries, by financial instrument, risk, etcetera, all brought about by Moore\u2019s law. After all, no single processor in a geodesic network can handle all the traffic.Note also that everyone who puts money on to the net or takes it off is identified to the complete satisfaction of government regulators everywhere. Digital bearer cash is treated just like physical cash in the eyes of regulators, and is subject to the same regulations. There is no functional difference between a digital cash underwriter and an ATM machine. And, yet, on the net itself, transactions are perfectly anonymous.This is the ultimate paradox of digital bearer settlement. The transaction protocols are so strong cryptographically that you don\u2019t need identity to keep your trades from breaking. More to the point, you don\u2019t even need biometric identity to prevent fraud. A digital signature is persistent enough to actually attach a reputation to.We\u2019ll talk more about this, and about digital bearer bonds, next month.Back to table of contentsIf you read the last instalment of The Geodesic Market, you now know how to put digital bearer cash on to the net. Of course, you can put every type of financial instrument into digital bearer form, and this month we\u2019re going to look at debt, which is the simplest extension of the cash model I showed you last time.Of course, to issue debt, the borrower (or any other market actor, of course, except secondary buyers and sellers) needs a good reputation, and we\u2019re going to talk about that first.With much fanfare, I now trot out my favourite quote from J Pierpoint Morgan, the last major denizen of the bearer-settled financial universe.At the time he uttered this pearl of financial wisdom, Morgan was more or less on his deathbed, and was literally hauled in front of the US Congress to testify before he died.So, imagine yourself there, in a congressional committee-room in 1913, (one year after 1912, the year libertarian columnist Vin Suprynowicz says was the high water mark in American liberty) and there you are, looking at the only man in history to refill Fort Knox with the proceeds of a typically-oversubscribed European bond issue on the strength of his signature alone, after this very same Congress had spent that treasury empty in the first place.A man who single-handedly stopped several bank panics, one of them by while playing solitaire in one room of the Morgan Library, with a roomful of bank presidents arguing in the room across the hall, shuttling occasional proposals to him for his hoped-for approval over the course of a few days, all while Wall Street held its breath.A very old man, now. An old man, being commanded, upon contempt of the best Congress money could ever buy before or since, to tell them the ultimate secret of banking. The most important thing a banker had to have to succeed.Is it the right, um, \u2018family background?\u2019 they seem to ask this paradigm of New England WASPiness. The right school tie? Never mind that Morgan was tutored for the most part. The right secret society membership? Of course, Morgan wasn\u2019t much of a joiner, except that he ran the board of trustees of his church, and that of the Metropolitan Museum of Art, like he did the rest of his enterprises, with an iron fist.Morgan just scowls at them. His answer is very simple:\u2018Character.\u2019Our would-be congressional inquisitor was probably dumbstruck. He was surely some loutish turn-of-the-twentieth-century urban machine politician, or maybe a rural silver-shoes-on-yellow-goldbrick-road bimetal free-silver populist in extreme Dorothy-Gone-to-Oz Mode.Whatever he was, he was almost certainly hoping for a financial conspiracy story of Bilderburg proportions to put into the next day\u2019s muckraking headlines. And, I bet, this modern Torquemada couldn\u2019t believe his ears.\u2018Character?\u2019, he sputters. Like he\u2019d never heard the word before.Morgan puffs himself up to his full 5-foot-rotund-something, gives the man one of those famous withering glares over a rosacea-mangled nose.\u2018Sir, I wouldn\u2019t buy anything from a man with no character if he offered me all the bonds in Christendom.\u2019Parsing that language to account for, um, \u2018late nineteenth-century Episcopalian sexism\u2019, we get as clear a definition of the enforcement power of reputation as has ever been stated this side of \u2018Caveat Emptor\u2019.In other words, if you lie, I don\u2019t do business with you again. Ever.And, in the world Morgan found himself in, that kind of financial shunning was pretty much all anyone really could do.It was really ever thus, throughout the history of money, much less finance. Sure, you could go to your friendly local force monopoly, be they monarchical, tyrannical, empirical (in the manner of Napoleon, not Hume), or oligarchal (or, even, democratic, on extremely rare occasions), and you could try to get them to beat up someone who ripped you off. But, usually, that was way too much work. Said regional force monopoly had to actually find this person, and then apprehend, try and convict him, and, frankly, more likely than not, he\u2019s changed his name and venue and spent the cash you paid him for those bogus bearer bonds you\u2019re now holding, and, well, so sorry, sir, but them\u2019s the breaks.And so, to sanitise and paraphrase the immortal Bluto Blutarski of \u2018Animal House\u2019 fame, it was actually you who screwed up: you trusted this brigand to begin with. You believed he had character, a good reputation, in other words, and it turned out that he didn\u2019t, at all.This was true up to and including J Pierpoint Morgan\u2019s day, where, although you could use a telegraph to execute a trade on the New York Stock Exchange floor, you still had to bring in actual paper and swap it for some other actual paper to clear and settle the trade.Yet, oddly enough, reputation sanction, plain old fashioned shunning, worked just fine for over 5,000 years. Marvellously well, in fact.Though, we now know what happened to J Pierpoint Morgan\u2019s tidy little financial universe of men with good character. Tabulators and comptometers begat computers, and, next thing we know, we\u2019re all using wires and computers to move accounting entries around, my debits for your credits, and bang, financial transactions execute, clear and settle more or less electronically, modulo a tape swap and a batch job or two.And, now, all I need to buy something over the internet is to give you a credit card account to take the money out of, and, maybe, but not necessarily, a cryptographic authentication (obviously, I hate the current misuse of \u2018signature\u2019, much less \u2018certificate\u2019) to prove that it was I who told you where the account with the money in it was.Yet, there\u2019s a little problem with book entry settlement and clearing, and it involves that force monopoly I was talking about.When we have to make copies of our transactions and give them to a \u2018trusted\u2019 third party to keep us from lying to each other, that\u2019s pretty awful, and not only from the standpoint of simple privacy.More important, there\u2019 s something particularly insidious to freedom itself about just shoving around debits and credits, instead of physical objects, or, now, digital objects, when you pay for things or convert one asset into another.With book entry settlement, you have to keep a virtually perpetual audit trail, so that on a \u2018syntactic\u2019 level, you can prove the trade happened some indeterminant date in the future, and so you can prevent the other party from denying (that famous legal double-negative, \u2018non-repudiation\u2019) the trade ever took place. And, once you\u2019ve done that, it\u2019s real easy to use those records to call a cop and send that person to jail. Actually, you\u2019re forced to, for any of a number of reasons, not the least because the clearing/settlement lag is such that someone might have absconded before you knew what happened to your money, and giving the clearing house physical enforcement capabilities in meatspace would make cause undue competitive pressure on the sovereign\u2019s monopoly on force.Now you can see why book-entry transaction settlement requires very strict biometric identification for anyone who changes the book-entries themselves, or even those who order book-entries to be changed. Everyone else (us customers, in other words) must deposit in advance of any significant financial activity, as sort of hostage capital to whatever transactions we execute.Everyone under the jurisdiction of the SEC has their fingerprints on file, for a reason, not to mention their current name and address. Enough information to drive a totalitarian tyranny through, frankly.And, so, the real reason governments have grown to control such an increasingly huge part of our lives, through book-entry taxes (sales, VAT , capital gains, income) and regulation (think of a regulation which doesn\u2019t eventually rely on transaction audit trails), is because, we require government intervention in our economic processes, our very transactions themselves, or those selfsame transactions wouldn\u2019t occur at all. Book-entry settlement and the ad baculum argument at the core of the very idea of the modern industrial nation-state are intimately related. A tax on income is easy to enforce because you need force to make the income transactions execute to begin with. One hand washes the other. Pay packets with paper cash cost too much to handle when you can just issue cheques for people to deposit into mainframe-enabled chequing accounts.Seen from a network perspective, a book-entry transaction is about shoving a very insecure piece of data, a positive or negative integer, a debit or credit, down a very secure pipe. And, to get access to that pipe, you have to be physically, um, obtainable, to law enforcement at any point in time before, during, and after the fact, should you lie about it.With digital bearer settlement, we have turned that last paragraph completely on its head. With a blind signature cryptographic protocol, for instance, we can send a secure transaction, a strongly encrypted and cryptographically authenticated token (a digital bearer certificate, if you will), down an insecure pipe, the internet, in other words, and with the right software, that\u2019s the end of the transaction.We don\u2019t need biometrically authenticated access control to a proprietary secure network in order to shove an inherently insecure book entry back and forth out of someone\u2019s database of transactions and, by extension, their chart of accounts. We actually don\u2019t need to keep audit trails at all anymore, much less for years at at time, and, more dramatically, we don\u2019t even need cops to hunt down miscreants who \u2018break\u2019 our trades, either in execution, settlement, or clearing.Instead, with a simple exchange of digital bearer certificates, we can execute, clear, and settle the transaction all at once, and the cryptographic financial protocol, executed in software, simply won\u2019t operate unless all conditions are met for the transaction to occur.Which, oddly enough, is exactly the way a physical bearer certificate works: I show up with my cash, you show up with your paper bonds, we agree on a price, we inspect and swap our various pieces of paper, and we walk away. I know the bonds are good by inspecting them, you know the cash is good by inspecting that, and, frankly, we don\u2019t care who each other is. Ever.Now, with digital bearer certificates, we can do exactly the same thing on the net. That \u2018inspection\u2019 step now occurs when we test and redeem our cash or bond certificates with their issuers online, and, if the certificates can\u2019t be redeemed, the trade can\u2019t even execute.It stops before it starts. Nobody gets burned, frankly, except the criminals who want to double spend the certificates. The only people who even need a reputation in the transaction itself are the issuers of the respective digital bearer certificates involved, and not the buyers and sellers of those certificates in the secondary markets.And, of course, that \u2018reputation\u2019 we\u2019re talking about here is the past behaviour, on the net, of a public-private keypair used in the authentication and issuance of a given digital bearer certificate. Or in the sale of anything else, for that matter. Just by using the public key and the signature on the certificate, anyone in the market can validate that the certificate was issued by the entity issuing or underwriting it. And, in the course of a transaction, as we said, the issuer itself can validate the \u2018semantic\u2019 part of the transaction, that the certificate is in fact unique and exchangeable at no cost for another unique set of bits representing the same value.So, a digital bearer certificate is authenticated by the issuer of that certificate, in the same way that the intaglio printing, special paper, serial numbers and signatures on a given paper bearer bond make it unique and non-replicable.That makes not only for a more secure, and completely private, transaction, but it also makes for a radically cheaper transaction, which is really the whole point. As we all know by now, the reason we have book-entry settlement to begin with is because it\u2019s radically cheaper than the physical delivery of paper bearer certificates, not so the government, or anyone else, can surveil us in our very grocery purchases.On the net, we talk about accumulating and quantifying reputation in some imaginary future denomination and we call that stuff \u2018reputation capital\u2019. Which immediately leads to the cypherpunk inside-joke about permanent shunning being \u2018reputation capital punishment\u2019. And, actually, that\u2019s pretty understandable. Instead of going off to San Francisco in the 1850\u2019s to change your name and venue after screwing up, you just delete your private/public key pair, and start a new reputation over from scratch. In a bearer settled world, of course, it happened all the time.I expect, like corporations today, reputations will be sold, and the variance between the market value of the assets controlled by that reputation, and the market value of the reputation itself will be our imaginary reputation \u2018capital\u2019, something we call \u2018goodwill\u2019 today.Now, to quote Bill Cosby, \u2018I told you that story to tell you this one.\u2019With digital bearer settlement, and the sanction of reputation against public keys which have bad character, as Morgan called it (reputation, to you and me) it is now possible to create digital bearer bonds.Actually, last time, in my underwriting model for digital cash, I cheated. When you think about it, a bank note, cash in other words, is an instantly callable, perpetually issued bond which pays no interest. It represents a claim, in the old days, at least, on some principal amount of a given debt, and not its interest, redeemable upon demand in the asset the note is reserved against and denominated in.So, to issue a digital bearer bond with a simple coupon, you just issue a digital bearer certificate for the principal amount, redeemable at the end of the life of the bond, and you bundle a bunch of coupons with that certificate for the redemption of principal, one for each interest period, and redeemable at the end of that interest period, and sell them all together as a unit.To do a zero-coupon bond, simply issue a certificate payable at expiration and sell it for the net present value of that amount given some fixed interest rate.Strips are just that. Strip the coupon certificates from the principal one and sell them all as individual certificates with their own prices. Notice that we bump into the old fixed income analysis chestnut about a bond being a series of options on cash flow, which, of course, I\u2019ll muck around with a bit more, when we get to derivatives.Convertible bonds should be redeemable either in cash or stock. Bearer stock, of course, which we\u2019ll talk about next time.Money market instruments, for the most part, are just bonds with extremely short lifespans.It\u2019s even conceivable to have microbonds, issued by individuals. After all, the size of an individual underwriter, and the resulting syndicates of underwriters, to boot, is probably completely driven by Moore\u2019s law. I joked in Wired a few years ago about a syndicate of microbond \u2018bots\u2019 loaning me the money for lunch, payable at the end of the month.If you can have microbonds, macrobonds are also possible. I expect that digital bearer settlement will be a universal phenomenon, just like book-entry settlement is today.Secured bonds, like equipment mortgage bonds, can use various trusted entities to validate the worth of the assets securing the bond, just like a trustee/custodian does for a bond or cash issue.And, of course, you can add all kinds of call provisions, redemption exclusions, and anything else you can think of, to a digital bearer bond, only this time, you\u2019re writing software, and not law, as the old cypherpunk mantra goes.Finally, any of the above bonds will be rated, just like bonds are today, yielding the same market we have now, with fungible graded commodities, in perfect competition, only, now the velocity of those markets can be greatly accelerated. After all, you are executing, settling, and clearing, instantly, and for cash.Notice several things here. First, the language of bearer settlement completely underlays our very discussion of bonds even today. The word \u2018coupon\u2019, for interest, \u2018holding\u2019 a bond, all of that. Digital bearer settlement makes it that more relevant. Back to the future, and all that. It says to me that we\u2019re not going to have too much conceptual trouble thinking about a world of digital bearer settlement, which is one of the principal attractions, besides reducing transaction cost by three orders of magnitude, of course.Second, and probably more important, by creating actual digital financial objects, objects which make electrons behave in certain ways online, just like the mouseprint covering those huge paper bearer bonds of yore caused lawyers and judges to behave in certain ways in meatspace, you have freed finance from a huge chunk of legal cycle-time itself, and you get a genuine financial ecology on the net, on top of that geodesic economy I talk so much about. In fact, most of the time it seems to me that they\u2019re part of the same thing. The geodesic network being the substrate upon which this bestiary of financial entities and objects are born, live, and die. It gets worse when I talk about the idea of \u2018micromoney mitochondria\u2019 at the end of this series, but I\u2019ll soften you up a bit before we get that far out over the edge of the cliff, into cartoon physics, as it were.Anyway, in this new financial ecosystem, financial theory and practice become one and the same thing, the behaviour of financial software and digital bearer objects on a ubiquitous global internetwork. It may be that, after years of using mathematics and physical analogs to describe financial economics, the ultimate anathema to mathematical finance will occur, and finance will become an observational science again.Frankly, I think we\u2019re looking at some combination of the two, where mathematical finance will propose, and the genetic behaviour of the market will dispose. Which, when you think about it, is exactly what happens today.Next month, we\u2019ll talk about digital bearer stock, and, implicit in that, how to achieve limited liability in \u2018cypherspace\u2019.Back to table of contentsSince law attempts to be as logical as possible, and software is nothing but mathematics, I\u2019m about to show you how to turn common law, or some of it, anyway, into software. We\u2019re going to do it all, of course, by talking about digital bearer equity.One of my favourite people in philosophical history is Bertrand Russell. Most people familiar with the history of computational logic know that not only did Russell discover a paradox that eventually undermined the foundations of logic when Goedel solved it a few decades later, that consistent systems could never be complete and complete systems could never be consistent, but also that Russell and his partner Alfred North Whitehead quite literally broke their brains proving, logically, that 1+1 was 2 using symbolic logic alone, unifying maths and logic for the first time.The idea of joint control of an enterprise is as old as western civilisation. Before the time of the Greeks, hierarchy and property rights had gotten so evolved that everyone belonged to someone else. Ministers of the pharaohs used to routinely sign their correspondence to their superiors, \u2018Your Slave\u2019. Hydraulic monopoly has a weird effect on people that way. Certainly the Chinese, Brahmins, and, to a lesser degree, the Mesopotamians, refined hierarchical lifetime control of their subjects to a fine art.It\u2019s questionable whether the Greeks were the sole inventors of democracy, small hunter-gatherer bands like the Australian aborigines had a more egalitarian society than most larger agricultural societies, for instance. Nonetheless, the Greeks are certainly the people we like to remember as the originators of the practice of voting as a \u2018protocol\u2019 for group decision-making. Especially since they actually had agriculture and actually kept written records of the votes they took.The Roman republic, literally, \u2018re publica\u2019, the public thing, abstracted direct voting up one level by electing representatives who in turn did the actual voting, proxies, if you will. This allowed a much greater span of control than a simple city state, Delian League or not. First \u2018pecunia\u2019, then \u2018re publica\u2019. Those Romans got to invent all the fun words, didn\u2019t they?Notice that neither democracies or republics are necessarily stable or even representative. Greece and Rome, or any of their early modern replicas including the one I\u2019m fond of, excluded most of their populations from actual voting control, but, as communication technology and industrial requirements for education increased in prevalence, suffrage tended to become universal, and, ironically, slavery itself has been shown to be a peculiarly agricultural institution, all of Marx\u2019s protestations to the contrary.Another way to think about it comes from an old college logic professor of mine. We all have the same information and intelligence, and the future is uncertain, so we might as well vote about what to do next.Of course, joint ownership is not new either, and neither is proportional voting control of businesses, or anything else. The corporation, peculiar this time to industrialism and the modern nation-state, has direct antecedents in other common-law business forms not requiring the force of that nation-state for their very existence, something important to anyone trying to code up erst-corporate behaviour in software instead of law.You don\u2019t even need the legal sanction of a nation state to have limited liability. Common law created limited partnership long before corporations. Britain had fully functioning non-corporate limited liability entities at least until the end of the nineteenth century. Lloyds not withstanding, of course.So, the point is, can you make all this fun stuff happen in software?Let\u2019s look at the cryptography for a bit. For starters, you can store multiple \u2018hashes\u2019 of the same data in such a fashion that with any m of n pieces, you can reconstruct the whole dataset. That is useful for storing, say, your digital bearer bonds, in various blinded cryptographic storage areas all over the net, for a fee of course, but it also provides a pointer to controlling a business entity as well.Why? Remember that \u2018identity\u2019 directly maps to \u2018key-pair\u2019 in cypherspace. With an m-of-n reconstruction scheme, any m members of a board could vote to control the \u2018root\u2019 key of a virtual corporation, for instance, you could actually control that key. There\u2019s considerable doubt whether hierarchies make sense in this context at all. In fact, most global name-space schemes based on key-management hierarchies bump right into Russell\u2019s Paradox and Goedel\u2019s Result as if their designers never took logic at all.Anyway, this form of m-of-n key-control works best for simple partnerships, but you still have the problem of voting control of larger entities, particularly if you want lots of shareholders. Fortunately, there are cryptographic protocols for anonymous voting, as well. I\u2019ll spare you the gory cryptographic details, but there are ways to elect a board, and for boards to vote control of a key, which can then be used to authenticate the actions of as large a business entity that you want. The creation of voting proxies, in other words.So, we\u2019ve taken care of common stock, and, because we know about digital bearer bonds, we can get a hint about how to do dividends: just present some token at the time of the dividend and collect cash. But, what kind of token do we use when all we have is a stock certificate? Clearly we don\u2019t want to redeem that at dividend time, do we?No, we don\u2019t have to. There is yet another class of cryptographic protocol called, weirdly enough, zero-knowledge proofs of knowledge. Using these methods, it is possible to hash a given bit of information and use that hash to prove to someone that you have that information in its entirety. No, it\u2019s not magic, it\u2019s mathematics. Using zero knowledge proofs on a stock certificate, you can prove not only that you are entitled to vote, but that you are entitled to collect dividends as well. In fact, you can use it to prove that you are a preferred stockholder, or that you are a holder of Class B instead of A, or anything else. Finally, the issuer can use these proofs to show that you have already collected a dividend, voted a stock, whatever.Oh. One other thing. Want to authenticate the books of a corporation for a given price earnings ratio without seeing the entire set? Want to authenticate an actual cashflow or asset holding for a debtor? Use the same zero-knowledge proof cryptography. Eric Hughes even claims to have invented a way to publish completely \u2018open\u2019, publicly available files, cryptographically munged, of course, which, when, a business entity wanted to prove a certain figure or set of line-items was in that otherwise encrypted information, they could use their unique key pair and a zero knowledge proof to show that the expenditure was in fact there. This could even be audited by a trusted third party, whose signature would be on the encrypted data. It just keeps getting weirder.Frankly, the reason we don\u2019t use zero knowledge proofs for bond payments is because bonds have finite duration. They all, with one exception proving the financial rule called a \u2018perpetuity\u2019, expire sooner or later. It\u2019ll probably be cheaper to just issue all the digital bearer certificates, principal and interest, en masse. It\u2019ll certainly be more financially reasonable from the standpoint of calculating the value of those certificates, as any student of fixed income mathematics will tell you. Simply issue all the certificates at once, and let them each be priced, and traded, accordingly.But getting back to equity, what about limited liability? Well, think about this for a minute. If, for instance, you have anonymous control of information, then the only thing you can do to the holder of that information in any meaningful sense is to discount the value of that information in the market. Remember, when we talked about reputation, we talked about reputation \u2018capital punishment\u2019, where a given cryptographic key pair is shunned, its economic value effectively zero.These days we do it with laws which say that a shareholder of a corporation is only liable for whatever money he invested into it, and, when the market says a stock is worthless, there isn\u2019t anything such thing as negative value.But, again, in cypherspace, we try to replace law with strong cryptographic software, and, most of the time, we get the same result. Funny how symbolic logic works that way. Call it Russell\u2019s revenge.In other words, if a shareholder spends money on a digital bearer certificate signifying partial ownership in an enterprise, and that bearer certificate, for whatever reason, is worth nothing, that\u2019s all the shareholder has lost. Since he\u2019s holding a certificate normally, his key is completely blinded, and he is thus anonymous. Only if he double spends the certificate is he unmasked. So, on a \u2018semantic\u2019 level, there\u2019s no other \u2018recourse\u2019 the market has but to the value of the equity certificates he holds. And, as any person who\u2019s holding shares of a fraudulently accounted company can tell you, that penalty is a good enough proxy for limited liability.Issuing digital bearer equity, or debt and cash, of course, is different, in that the key issuing the certificate must be known to have a good reputation, and have proven asset value in the case of collateralised debt. The holders of the certificates, though, don\u2019t need to be known at all for the system to work.Pretty cool, huh? With digital bearer equity, you can have publicly held business entities whose size limits are only driven by transaction cost, just as Coase\u2019s theorem says it should be, and, the shareholders can be completely anonymous.And, of course, as we all know by now, I claim, at least three times before breakfast every day, that digital bearer settlement will drop transaction costs by at least three orders of magnitude, which is why you have anonymous shareholders, and not though any desire for privacy per se. The reason we have registered stock ownership, remember, is because we have book-entry settlement. If we could do digital bearer settled equity, there would be no need to register securities from an economic standpoint, and, as I\u2019m also fond of saying, physics begets economics, which begets common law, which begets legislation and \u2018policy\u2019. You cannot run the causation movie backwards and get any money.So, no, I don\u2019t think that absolute deregulation of equities markets will be the only component of that cost reduction, though it may one of the most interesting effects of that cost reduction, no matter what its magnitude.Next time, we\u2019ll talk about digital bearer derivatives, but, after that, we\u2019ll come back to equity, and Coase\u2019s Theorem, and talk about micromoney, and its impact on the size of the firm. Stay tuned.Back to table of contentsDigital bearer derivatives are possible and, at the margin, digital bearer settlement is probably the technology most suited for the execution, clearing and settlement of derivatives.With the free-falling price of microprocessing, we\u2019re going to get more, and more complicated, derivatives, whether we want them or not, and, with ubiquitous internetworks, they\u2019re going to be digital bearer derivatives, because that\u2019s going to be the cheapest way to do them.So, before we start, let\u2019s review my (and Russell\u2019s) mantra that reality starts with physics and economics and ends with law, \u2018policy\u2019, and philosophy. Trying to legislate economics and finance, for instance, is one of the sillier things any sovereign, much less any religion, can do.I say religion here because, at some point in Christian theology, probably in deference to the Temple money-changing episode, interest was declared immoral, and, from that now-curious beginning, we get modern derivative transactions.Christian monarchs, in trying to outlaw interest, found that, no matter how hard they tried, they just couldn\u2019t, really. Eventually, in the late middle ages, they let religious undesirables, like Jews, be the money lenders and charge interest, but only after a ridiculous amount of creative denial.Muslim countries still outlaw interest today, for instance, and they go through an amazing amount of gyrations to keep their banks in business as a result. But, as Joe McCarthy used to say about communism, no one in, say, Saudi Arabia, dare call it \u2018interest\u2019, even today.Nonetheless, buried, deep in the glosses, palimpsests and marginalia, among all the shucks and jives that mediaeval sovereigns did to avoid the \u2018i\u2019 word, were some very interesting residents of the then-hand-illuminated financial bestiary. These critters really did look an awful lot like bonds, and, even, derivatives. Of course, they couldn\u2019t possibly be those unholy chimera, because they would be, quite literally, an abomination, a sin unto God Himself.Yet, in England, for instance, there was the ever-ubiquitous tally-stick, which started out being a poor man\u2019s depository receipt for taxes, with big notches for big money, and small notches for small, and split between the two counterparties to keep everyone honest. These sticks ended up, in rather short order, representing \u2018fictitious\u2019 transactions, and, more important, contingent claims, on some other asset, usually, bullion. The king would, instead of paying creditors in gold, pay them with tally-sticks, which would then \u2018mature\u2019 sometime later at the time of the bullion\u2019s eventual arrival in the treasury. These discounts were, of course, representing the, um, opportunity cost, of the money involved. Certainly not interest. That would be evil, of course.In fact, the considerable fortunes of the Knights Templar, and Hospitalar, too, were built on bills of exchange, issued to crusading nobility, who could, magically, deposit money in one place in Europe, and take it out of somewhere else upon their arrival in the Holy Land. \u2018Of course, Sire. Interest would be a sin. We can, however, sell you this bill of exchange at a discount, if you would should desire it\u2026\u2019You can account for a multitude of risks, if not sins, in the discounted price of that bill of exchange, including the obvious one of said Sovereign getting lost, bill and all, at sea on occasion.Not to mention creating bills of exchange for assets which never leave a country at all, thus avoiding taxes, even for the sovereign, at least in countries like England where the sovereign was accountable, even marginally, to the law. Bills of exchange were even created representing assets which might never exist, except if some contingency occurred. Guess what those were?Of course, most reasonably clueful bond folks will gladly haul out a trusty Fabozzi book or two and show you that, yes, a bond is, in fact, an option on some future cashflow that the bond promises, or, more precisely, that a bond is a bundle of options (interest coupons, remember?) on that future cash-flow, the granularity of the option\u2019s settlement date being either every quarter, if you feel discrete, or infinite, if you feel continuous and remember that most bonds are quite liquid assets. And this tide of financial calculus floats all boats, even a crusader\u2019s fleet mired in the middle ages, modulo the occasional Mediterranean storm.So, just like quarks, it seems that options and other derivatives are the very conceptual building blocks of the financial universe, and to ignore or restrict them is to do so at one\u2019s own economic peril, if not one\u2019s mortal soul.Thought about in those terms, of course, derivatives become as old as civilisation itself. Thales of Meletes (who was the world\u2019s first philosopher if you\u2019re in a medieval mood, and believe in the infallibility of Aristotle), answered the world\u2019s oldest taunt, \u2018if you\u2019re so smart, how come you aren\u2019t rich\u2019, by cornering the local olive oil-pressing futures market, monopolising those presses at harvest time. It not only made him rich, but famous, too, especially to everyone who\u2019s taken the nickel tour at the Chicago Board of Trade and walked away dreaming of being latter-day Hunt Brothers. Doing that ill-fated silver corner right, of course...Even before Hellenic Asia Minor, the owners of various grain depositories in Egypt, and even Babylon, raked it in one haircut at a time, purchasing grain before it was even planted, and flipping that imaginary grain, over and over again, until the harvest actually came in.This kept people from dumping grain in the streets at harvest time, certainly, because the prices were too low then, which is exactly the apocryphal event precipitating modern futures exchanges in places like Chicago, sans hydraulic monopoly. Those who forget history, and so forth.At the root of every derivative is a polite, and frequently mathematical, fiction. A fiction, which, if it turns to real prophecy, makes money. And, if you\u2019ve ever listened to any entrepreneur in heat spouting his latest funding pitch, you\u2019ll notice that predictions are pretty cheap to make. Moreover, an awful lot of of those predictions exist about any one event at any one point in time. Putting a value on that vast quantity of fiction might have been worth a Nobel Prize to some people who should now know better than to hang out with the likes of Mr Merriwether, but, more important, the process is driven by supply and demand. The initial price of futures, options, and other contingent claims, relative to the assets they make claims on, are, like talk, cheap for the most part.In addition, if the underlying asset of a class of contingent claims is volatile, it\u2019s a very good idea to settle and clear the purchase and sale of those claims as soon as possible, so people won\u2019t forget their sometimes large obligations, or can collect on their occasionally formidable returns. Which, oddly enough, is exactly what happens at options exchanges all over the world. Chicago, for instance, now has next day settlement, if I remember, and the trend has been towards even shorter settlement times, wherever possible.And digital bearer transactions settle fastest and cheapest.We need to look at something else about a derivative. All those conditions under which the contingent claim will be executed make things very complicated. You simply cannot have a modern derivative without computers and online real-time information. You need even more computational horsepower to model the damn things to see if they do what you want them to.This complexity, and the corresponding computational modelling requirements, has always been seen to be a bug. It\u2019s really a feature, though. The more you automate the process the better it works, and now, it can be automated up to and including settlement, scaring the wits out even the hardiest of souls.Already I can hear quite a few disgusted \u2018harumphs\u2019 out there, particularly from those of you who have seen formerly boring equity exchanges go limit-down like some CBOT pork-belly pit. You\u2019ve seen \u2018portfolio insurance\u2019 contracts blow up like so many World War I barrage balloons under the tracer bullets of illiquidity, causing markets to crash around the world.More to the point, we\u2019ve seen countless portfolio managers who claimed to be using derivatives, but who were doing nothing but speculation with large amounts of other people\u2019s money as if it were just another game of liar\u2019s poker.So, what does digital bearer settlement bring to the party? For starters, increased automation, of course. You can build an actual object, which lives out there on the network all by itself, waiting for the proper market conditions to be met before it executes. Furthermore, because of those extremely reduced transaction costs, you can do transactions at extremely small sizes. Well, sizes considerably less than the hundred-million, or even billion, dollar transactions required to make institutional-scale money in derivatives today.Because of this small transaction cost, you could actually create a bunch of micro-derivatives, set them loose, and see if they work. Nothing like small-scale working models to see what really works, certainly. You could even create, abomination of abominations, auto-mutating derivatives, following genetic algorithms, spawning slightly altered copies of themselves at settlement time with some of the proceeds. Fast, cheap, and out of control, indeed. It\u2019s enough to send you scurrying back to the monastery, sandals flying every which way\u2026Dragging us back to the human universe, with this kind of granularity you could also create a whole array of derivatives, representing a whole spectrum of possible positions, in smaller transaction sizes, allowing you much more flexibility in your financial plans. That\u2019s why derivatives exist, after all, to hedge your purchase or sale of something else against the unforeseen. At the expense of Godless speculators, of course.But, the primary problem with modern derivatives is that nobody is there on the other side of a desired trade at crunch time. Nobody there in the specific volume desired, and so, most hedging transactions, like the limit orders they are, go unanswered until the price is much lower, defeating the purpose of the derivative in the first place. Being able to execute a score of smaller transactions, instead of one giant one, at some intermediate prices in an avalanche of continuously falling prices gives a portfolio manager at least some comfort of dollar-cost averaging on the way down. Frankly, I expect that it will tame volatility as a result. It is precisely these precipitous free-falls with no answering bid, which cause the volatility problem in the first place.Oh. Right. Before I forget, the transactions are all anonymous, of course.So, how do you do all this fun stuff? Well, if you couple some bit of autoexecutable code with a digital bearer instrument, or a bundle of digital bearer instruments, you can execute all the pricing, and other financial data, requirements you want. Certainly a bit of XML, or Java, done right and properly authenticated, could do the trick, but, like most problems in financial cryptography, that trick is usually harder than it looks.Fortunately, what looks like an initial solution to the problem was presented at the 1998 International Conference on Financial Cryptography, FC98 to its friends, held this past February in Anguilla.X-Cash, a new transaction protocol by Markus Jakobsson of Bell Labs and Ari Juels of RSA Labs, is a bundle of digital bearer instruments which look for the terms they want, and when those terms meet with an acceptable offer, they execute, clear, and settle the transaction, all at once. If you\u2019re interested in this paper, and a whole bunch of others on the cutting edge of Financial Cryptography, you might want to look at the conference\u2019s proceedings, which are now available from Springer-V erlag. See www.fc98.ai for details.Of course, figuring out how, and doing it, are two entirely different things, and, frankly, X-Cash is only the first of what will necessarily be many attempts at solving the problem of autoexecutable, digitable bearer, derivatives.It\u2019s the same problem financial cryptographers fight every day: the problem of turning law and legal agreement into something much better: running software. Turning law, and apparently, thrill-addiction, into economic, literally physical, objects.Objects beyond the control of gamblers and, apparently, experts at liar\u2019s poker.Back to table of contents\u201cWhen the going gets weird, the weird turn pro\u201d, as Hunter S. Thompson once said, and the going, for this article, is going to get pretty weird, and in hurry.I\u2019ve taken you from digital bearer cash, through bonds and equity, and, last month, we ended up with derivatives, showing you could get as weird as you wanted, financially, and still use digital bearer settlement technology to make transaction settlement cheaper to use than book-entry methods. Probably by several orders of magnitude, or a thousand times, cheaper.Now we\u2019re going back to cash, microcash, to be exact, and, in the weird spirit of Mr. Thompson, we\u2019re going to talk not about Yage, or Ibogaine, or various reptilian pineal extracts, but about different kinds of hash.Well, okay, not hashish, exactly. Hashes, actually. And not anything even vaguely psychochemical, though the consequences of hashes might get pseudobiological sooner than you might imagine, and simply mind-bending to contemplate when we get there.The technology I\u2019m talking about here is that venerated mathematical algorithm and staple of computer science, the hash function.A hash function is something they teach you in your first year of computer science. Properly defined, a hash is a usually smaller, mechanically derived, fixed-length sample, subset, or just plain correlated bunch of bits related to usually a larger, and variable-length, bunch of other bits. A hash is something that allows you to mechanically check the integrity of data without actually examining the data itself. I can send you a hash of some computer program I\u2019ve written, so that you can run a hash of your copy, compare the hash you have to the hash I gave you, and, if they\u2019re identical, it\u2019s highly unlikely that your copy is different than mine.It\u2019s that \u201chighly unlikely\u201d bit that\u2019s important, here. For instance, if I hash a given bit of information and the result is 2128 bits in size, and the hash method is a one-way function which gives me a more or less random output, I have a 1 in 2128 chance of getting the same hash from some other bunch of data. Nice large number, that. Longer than the number of seconds the universe has been alive, even. Longer the total age of the universe if Mr. Hawking, and, more recently, experimental data, were both wrong and the universe is in fact closed.However, like all large numbers, including infinity, you can control those, um, astronomical probabilities if you want, and that control is at the heart of micromoney.If you reduce the output size of a one-way random hash function which uses a key (a \u201ccryptographic\u201d hash, in other words) you can control how much computation (money, in other words) is spent in the generation of a hash \u201ccollision\u201d, which is the name for happens when two entirely different blobs of data generate exactly the same hash value. Finally, if you use the right kind of hash function this way, and you find a hash collision, you can use that information to generate as many collisions like it as you want, with very little extra computation at all. Each one of those hashes are as hard to forge as the first one is.What you get is exactly the economics of minting a penny, only with bits, which are much cheaper to mint with. To mint a penny you have to literally build a factory, because that\u2019s what a modern mint really is. But, the next penny after the first one is barely noticeable in terms of marginal cost, and, so, it behooves you to mint as many pennies as possible to earn back the investment in your mint. That is, if you were selling pennies for a living, which governments claim they really don\u2019t do, though they book it on their balance sheets as seignorage income, nonetheless\u2026 Using hash collisions, as found in various the various micromoney algorithms out there including MicroMint from Ron Rivest and it\u2019s several progeny, and in Millicent by Mark Manasse, and in HashCash, a simple anti-spam protocol by Adam Back, that\u2019s exactly what you can do. You can take in people\u2019s money in one form or another and quite literally print them a positively huge amount of extremely low-value cryptographic hash-collision tokens, all while still turning a tidy profit. Seignorage for the rest of us, to paraphrase Mr. Jobs.The disparity in cost between the cost of \u201cminting\u201d the first token and minting the second is enormous, much greater than that required to mint the second penny in our example above. Remember, again, how long it takes to \u201cbrute-force\u201d a hash-string the size of 16 bytes, the size of this one: \u201c1234567812345678\u201d. That is, 128 bits divided by 8 bits per byte.Those 16 bytes, if handled properly, are certainly small enough to stick onto the most mundane events in cyberspace and pay directly for some service at the time it\u2019s rendered. All without an invoice, or clearing a check, or authenticating a credit card. and, without, of course, the finance and accounting departments backing them up.You can use those 16 bytes to pay for sending a piece of email. Or downloading a web page. Or, even, with enough 18-month turns of Moore\u2019s law and a stiff tailwind, routing a group of packets from here to there across the net.Imagine every router on the net buying bandwidth low and selling it high in a continuous, digital-bearer, microcash-settled, cash-on-the-routerhead auction for internet switching. In such a world, you don\u2019t even need network engineering, at least as we\u2019ve defined it today, because the market, and not some grand top-down design, will determine where the next router will go, without any human intervention in the purchase at all.\u2026Good. I see you\u2019ve drunk the Electric Kool-Aid, and the visuals are just starting to kick in. Great stuff, huh? Remember, I did warn you this was going to get weird in a hurry, and now, I believe, it\u2019s time for the weird to turn pro. Hold on\u2026But, wait, as they say in the more manic infomercials, there\u2019s more. As the internet becomes more and more ubiquitous, and microprocessors become cheaper and cheaper to make, the internet, defined as the TCP/IP protocol (or it\u2019s progeny, whatever that will be), it interlinks the most amazing places into a unified geodesic network, reachable through the air from local antennas, or satellite antennas, or just physically, by connecting you to the network with a wire or fiber optic cable. With an increasingly ubiquitous internetwork, you can sell even more and more mundane things this way. In the ultimate throes of this anarchocapitalist madness, everything can be for sale.Let\u2019s start with the obvious one first. Electricity. Already, they have demonstrated IP over electric lines in Britain. It is mostly trivial to do, especially over higher voltage power lines. Now, if you squint, you can see, with your newly dilated pupils, the very electrical appliances in your house, your microwave oven, your toaster, your teakettle, paying for their very electricity as they use it. With microcash.It\u2019s not that hard to do. I just showed you how, right? All you need is a hash-handling chip in the toaster a little smarter than the chip in that expensive \u201cgourmet\u201d toaster sitting right there, right now, on the shelf in the gourmet kitchen store down the street. I call these imaginary chips micromoney mitochondria, and with them you get the quasibiological effect of picomoney as processor food.If you remember the history of this century, and the first article in this series, it wasn\u2019t until checking accounts and hierarchical industrial networks became prevalent that lots of working folks stopped paying for their flat\u2019s electricity with actual coins in a meter somewhere on the premises. As we\u2019ll find out in the next article, that kind of \u201cunwinding\u201d of history is a very quick and dirty way to figure out how a bearer settled geodesic economy looks, if not how to implement it from scratch.To continue the weirdness, think about a world where an internet router can save enough retained cash out of operations to buy a new line to a less busy router. Or copy of itself. Or to sell itself off into \u201cslavery\u201d(?) to another router (which is buying a copy of itself, remember?) after losing too much money to stay in business anymore. Transported. Mr. Macawber, thy name is \u201ccypherspace\u201d. More time, running backwards, on Moore\u2019s law.Great acid, yes?But wait, there\u2019s more. If you can really do this with roads, paying at every intersection to get through it (money\u2019s cheap and small, remember?), does a, um, hierarchically organized force monopoly, a nation-state or it\u2019s smaller hierarchical subdivisions, need to \u201cown\u201d that road anymore? Shades of a favella in Sao Paulo, where the \u201cproperty\u201d lines extend into the middle of the street. Actually, not so \u201cproperty\u201d anymore, as the favella dwellers, along with their private piece of concrete to the middle of the street, now have secured real property rights to that concrete and the now-legally recognized road under it. So, are they charge you to drive over their little piece of micro-road? Stop this trip. Now. Please, make it go away\u2026 What\u2019s next? Paying microcash for water as it comes out of the tap? No, let\u2019s not think about the inverse of that particular plumbing operation, as it\u2019s fraught with images of misers, Gordon Gekko (as someone likened me to, after I started thinking too hard about this in public on the net), and of course, Scrooge himself, speaking of unwinding the clock to a more Dickensian universe.Paying auction prices for force? Landmines which won\u2019t blow up if you have the right key? And keep paying them? Mama told me not to come\u2026Okay. Let\u2019s abstract our selves back a level or two, and think about actual micro-economics for a while, both to cool off our blazing neurons, and to honor a promise I made last time. Early in this decade, Ronald Coase, formerly of the LSE \u2013 and now, I believe, at the University of Chicago, where all good Nobel laureates go to die \u2013 won, you guessed it, a Nobel prize in economics. Coase won the Nobel by hypothecating (without actual mathematics, a boon and comfort to innumerates like me everywhere), that firm size is directly related to transaction costs.That is, the cheaper the transaction cost, the smaller the firm can be. This has been proven, with actual data, to as much certainty as a fact of physics itself in the decades since the 1920\u2019s when Coase made this prediction.Well? Notice something? Some digital bearer protocols are really cheap to use. Some get us to efficient transaction spreads in milli-to-microcent range. That makes for really small \u201cfirms\u201d. Market actors. Proprietors, in other words.More to the point, if Moore\u2019s law reduces the price of switching enough to bearer-settle even the smallest conceivable purchases, like bandwidth, or road passage, or electricity, you end up a very strange universe, populated with a swarm of extremely competitive, dumb, randomly-behaving business entities motivated only by, as Dickens\u2019 Mr. Macawber said, \u201ckeeping income over expenditures\u201d. Curiouser and curiouser, to mix my Victorian fiction a bit.You don\u2019t just have an invisible hand, anymore.To steal the name of the Cato Institute\u2019s football team, you have an invisible foot. Something which can kick the pants off any large, vertically-integrated, hierarchically-organized industrial-era business now trying to combat its transfer pricing problems in order to compete with a market which, these days, values that business in pieces much more than it does the entire business, because, of course, the transaction costs are now low enough for those pieces of the old firm to sell their services directly to the market instead of doing it behind the \u201cfirewall\u201d of a company\u2019s chart of accounts.Diseconomies of scale, in other words. The world turned upside down. \u201cCats and dogs\u201d, as Bill Murray (who played Mr. Thompson once), \u201cliving together.\u201dThe weird have indeed turned pro.Cheers,\nRobert HettingaBack to table of contentsIn the final part of his series on the use of digital bearer financial instruments, Robert Hettinga moves on from the theory to explain how we can actually deploy these instruments.You couldn\u2019t have gotten through the capital market upheavals of the 1980\u2019s, much less Oliver Stone\u2019s movie Wall Street, without bumping into Sun Tsu, the ancient Chinese military thinker who, for our purposes, is best summed up by the Stonewall Jackson maxim, \u2018Hit \u2018em where they ain\u2019t\u2019.Among other things, Sun said that a small army should look large, a large army small, that one should attack when the enemy retreated, and retreat when the enemy attacked. You can almost hear P.T. Barnum muttering, somewhere, \u2018Never give a sucker an even break.\u2019 Mao, accommodating his intended audience with many simple single-worded exhortations and lots of exclamation points, recapitulated Sun\u2019s logic and won his wars in much the same way.I propose, in less florid terms here, to think about the deployment of digital bearer transactions in that same spirit. That is, start where book-entry settlement ain\u2019t, and move on from there. With that fulcrum, we can lever complexity of digital bearer settlement against itself, and start \u2018surfacting\u2019 the existing glops of book-entry markets into smaller, more geodesic ones.If you think about it, we face almost the same task that Copernicus, Kepler, and Gallileo did when they removed the earth from the centre of the universe. Like Kepler, we\u2019re going to use the simple mathematical ellipses of financial cryptography to replace the financial and legal Ptolomaic epicycles industrial economies had to build on top of their electronic, but still human-switched, information networks. We want to move money across these new geodesic networks we\u2019ve built in cypherspace without the financial shovelware that currently passes for internet transaction settlement. If, of course, that\u2019s what you can call the out of band settlement of internet-executed transactions, which is what internet credit card and even check transactions really are.I\u2019ve already spent the last six months telling you, with a broad brush, how to apply digital bearer transaction technology to every security imaginable. This article is about specific applications of digital bearer transaction technology to problems people have told me about. It\u2019s an effort to jump-start your own thinking about digital bearer settlement in your own business.Last November I went to to London, where, when I wasn\u2019t speaking to the E-Finance Forum, or to someone in the City, and, ultimately, to the Adam Smith Institute\u2019s conference on internet trading, all thanks to Duncan Goldie-Scot, I spent two evenings in a Kensington Australian wine bar, thinking about a couple of capital market bearer-settlement ideas with a few of the conference\u2019s participants.After we\u2019re through with those two, I\u2019d like to talk about micromoney mitochondria some, and an effort underway at DARPA to make the internet \u2018smarter\u2019.The first example, and the easiest to think about, is an already existing bearer-held Swiss hedge fund. Of course, bearer in Switzerland (or the BVI\u2019s, or wherever else) is quite different from the bearer I\u2019ve been talking about the past few months. Bearer shares are typically registered with a trustee of some kind, but that registration is blinded from the portfolio manager. So, imagine, in the spirit of my previous \u2018Bill and Ted\u2019s excellent mutual fund\u2019 scenario, we created Bill and Ted\u2019s excellent bearer hedge fund.That is, this existing hedge fund puts up a blind-signature certificate mint, right in the same room with their existing web server. When people pay the server digital cash, they are issued a digital bearer certificate representing assets in the fund. Right. What\u2019s digital cash? Okay, so we don\u2019t have digital cash. So we use checks, or bank wires. Somebody goes to a web page, is issued a non-transferable provisional certificate right off the bat, and, when the wire or cheque clears, they can come back and get real bearer certificates in exchange for the provisional one.If done right, such an automated customer service scheme will probably be much cheaper the way it\u2019s done now, even with the added complication of transaction latency, which is there right now, anyway. Whenever digital bearer cash is available, handling shareholder exchanges will be even that much cheaper. Again, as a portfolio manager, you don\u2019t ever know who your customers are, anyway. The trustee administers your customer\u2019s money in the logical opposite of an American blind trust. Instead of the customers not knowing what the portfolio\u2019s invested in, though, the portfolio manager doesn\u2019t know, legally, who\u2019s invested in his fund. Which is the rub.Notice my use of the word legally. There\u2019s this whole industry of fund trustees in Switzerland, using lots of lawyers no doubt, all devoted to administering those blinded lists of shareholders in bearer funds. I would even venture to guess that my digital bearer version of Bill and Ted\u2019s excellent Swiss bearer hedge fund is illegal, in order to perpetuate this cottage industry, though it might be fun to push the legal envelope a bit, to see how strong it is. We\u2019re still figuring it out.However, I would bet that if using digital bearer certificate servers lowered the trustee\u2019s customer service by three orders of magnitude, they would have to adopt the technology, and that\u2019s exactly how to sell this idea in Switzerland. Portfolio managers would much rather just run their money, without having to think about such things for the time being. Save that box in Bill and Ted\u2019s machine room for some later regulatory regime and a few more iterations of Moore\u2019s law.Which brings me, again, to the most important point I\u2019ve been making throughout this series of articles. There\u2019s not a cryptoanarchist cypherpunk in the world who wouldn\u2019t jump at doing this particular contract. If the blind signature patent was clear, which we\u2019ll talk about in a bit. But, unfortunately, those people are jumping at this kind of work for entirely the wrong reasons. It\u2019s almost as if they think that just because they can put up a digital bearer-settled fund, that in and of itself will sell the fund to investors.Remember again, slipping the surly bounds of earth is all well and good, but it\u2019s coach fare from Kitty Hawk to Dayton which put people into the air. Nobody\u2019s going to invest in \u2018Bill and Ted\u2019 s\u2019 excellent Swiss bearer hedge fund at all unless they can make more money there than they can at home. Part of that present advantage, is, of course, taxes, and, probably, more than one case of investing ill-gotten gains, defined how you will in the jurisdiction of the money\u2019s origin.However, the market for financial privacy is infinitesimally, ludicrously, small when compared to the market for cheaper transactions in general. And, frankly, the Swiss trustee, much less Bill and Ted themselves, are profitable enough already with the legislated privacy they already have, or they wouldn\u2019t be in business as it were.No, what will sell this contract to some lucky financial cryptography systems integrator is lowered cost of customer service, pure and simple. Again, I claim, issuing bearer certificates to the net is the way to do this, even if those certificates are purchased the old fashioned way, with cheques, bank wires, or, given the location in question, suitcases full of cash. Again, we\u2019re eventually looking at a world where digital cash will be involved, and, when that\u2019s possible, the whole idea of safe jurisdictions like Switzerland may end up an interesting footnote in financial history. If they don\u2019t do it in Switzerland first, of course, and get a technological jump on the rest of the world\u2026Now, lets look at the second deployment idea. This one is one where you\u2019d least expect it, in the heart of the institutional clearing system, literally under EuroClear\u2019s nose. Big institutions in Europe decided they needed a place to function for the myriad European exchanges in the same way that the Depository Trust Company does for the New York Stock Exchange. They hired J.P. Morgan to play that role, and called the system EuroClear. The problem is that the costs of the system are such that smaller institutions can\u2019t really afford to clear their trades there. A bunch of us figured, over some nice Australian Cabernet (and, um, kangaroo), that if you applied the model of digital bearer underwriting we talked about in July, and used Morgan as the institutional custodian for a jointly-held aggregate account, you could underwrite a bunch of closed-system bearer certificates against those shares and money, which a \u2018club\u2019 of smaller institutions could use to instantaneously clear trades against each other. Since this \u2018club\u2019 of smaller institutions would all be known to each other in the aggregate, all of the \u2018know your customer\u2019 rules could be adhered to, and, yet, the system could still, paradoxically, settle trades anonymously between club members.The result would be extremely lowered transaction costs between the club\u2019s members, and, of course, instantaneous clearing and settlement. Something which might even be interesting to the much larger members of EuroClear to use someday, we figured. Maybe, someday, anonymity in settlement could translate to anonymity in execution itself\u2026 This rather insidious application of digital bearer technology, at the very place where one would expect the next generation of book-entry technology to be deployed, is exactly what Sun Tsu, Stonewall Jackson, and I mean by \u2018hit \u2018em where they ain\u2019t\u2019.In other words, deploy digital bearer settlement where book-entry settlement, well, ain\u2019t, yet, and don\u2019t fool around with attacking the Maginot Line of the existing book-entry-settled capital market infrastructure until the battle\u2019s already over. Dropping a few geodesic smart-mines on their escape routes, like we did in the two examples above, would work perfectly.For the final deployment example, I\u2019ve just learned about a project which which leads me to believe that the era of cash-settled switching-level auctions of internet bandwidth is not too far off after all. DARPA, the Defense Research Projects Agency, the very agency which funded the original internet, has hired firewall/security/spook-crypto company Trusted Information Systems (now part of McAffee\u2019s and PGP\u2019s parent, Network Associates, Inc.), to build a so-called Active Network, a technology where internet packets include code which tells the router where they want to go.This is instead of a router needing increasingly larger route-lookup tables, requiring, you guessed it, hierarchical networks with big fast routers at the top-level \u2018backbone\u2019. Moreover, these packets will be cryptographically signed, to prevent their execution instructions from being tampered with.All of this is so the network can be more, you guessed it again, geodesic in structure and thus cheaper to use. Will wonders ever cease? So, avoiding geek-vs-spy conspiracy theories and the odd technological ad hominae against TIS in the expectation that the market requirement for cryptographic open source code solves the cypher-paranoia problem, this executable-as-network-packet idea looks like exactly like a running-code proof of my assertion that attaching micromoney to the information at the packet level is completely within technological reason. Welcome, one final time, to the future.Which brings me to a final hobbyhorse. Most of the problems, I think, with the deployment of digital bearer transactions are legal ones. Oddly enough, it\u2019s not even laws and regulation against bearer transactions themselves, which, on the face of it, are quite considerable. Even these regulations are completely surmountable given enough cost-reductions and increased profit margins. Law follows economics, in other words.The primary problem, as I see it, is the effective control, by the nation-state, of intellectual property. I tend to be extremely Coasian when it comes to my definition of private property. I believe that once information is on my hard drive, decrypted, and in a form useful to me, that\u2019s about as private as property can possibly be. It\u2019s mine. I can do anything I want to with it including sell it. Furthermore, as the internet becomes more and more location independent, you can\u2019t keep me from selling it.I challenge anyone to enforce an intellectual property patent against me in an environment where anything, encrypted or not, watermarked or not, can be auctioned to the highest bidder, in usable digital form, for digital bearer cash. Cryptolopes, or electronic software distribution, or stenographic watermarks, even custom-compiled executable code and escrowed funds, do not add a whit of value in such a world. As an inventor, much less a seller, of digital goods, there is simply no reason to increase your transaction costs, and, correspondingly, reduce your profit, in order to control your digital product once it has been sold to someone. Just auction your product off to the highest bidder and be done with it.The economics of the geodesic auction market says that if you have the first information of a specific type, you will make more money on that information than anyone else. Yet, before we can get there from here, there is a rather juicy irony involved. Because you need to cash digital bearer certificates into book-entry money sooner or later, the patents for digital bearer certificate technology are completely enforceable at the point of conversion, the gateways between the cypherspace and meatspace.As I\u2019m fond of saying, bankers and corporation presidents, as very creatures of the law itself, don\u2019t like to get sued for patent infringement anymore than they like to go to jail for financial crime in general. In fact, I think that patents on digital bearer transaction technology are so enforceable that they are completely obstructing progress in digital bearer settlement right now.I would even go so far as to say that none of the current holders of digital bearer patents, (and, frankly, most of the current crop of people who want to control those patents in the future) know the least thing about financial markets and about how to market digital bearer transaction settlement to the financial community.Well, actually, there is one person who might be the exception to that rule, and that\u2019s Scott Loftesness, the recently appointed President of DigiCash, Inc. DigiCash, you will remember, was founded by David Chaum, the father of modern financial cryptography, and is the company which holds the blind signature patent, the original patent on anonymously-transferable digital bearer certificates.Unfortunately, after finally getting control of his company\u2019 s intellectual property, Mr Loftesness now has to pay down a mountain of debt, mostly in failed bridge loans to venture capitalists, all of which are secured by those patents.In my opinion, this debt may already exceed the estimated experimental licensing revenue remaining in the useful lifetime of the patents involved. And, given DigiCash\u2019s failure to find a market for their digital bearer certificates, licenses for experimental purposes is about the only alternative left.DigiCash is already in Chapter 11, and, unless someone can see a way to market for that technology that others haven\u2019t seen already, the firm may not re-emerge.And so, a group of us are looking at putting together a research-based syndicate to hold the DigiCash patents, or at least the most important internet-only pieces of that portfolio, in order to keep it from being tied up for the rest of its usable lifetime. The idea would be to license it for research purposes to all comers, and only when bearer certificates using the patented technology were exchanged into book-entry assets would a modest royalty accrue to the syndicate membership, payable at the gateway between the internet and the proprietary financial networks.Syndicate members would get unlimited use of the patent, or at least a reduced royalty rate, as further remuneration for their investment. As much as I hate the idea of path dependency, I think that there are only so many neurones which any one company can apply to the problem of digital bearer settlement. If one company controls a critical bit of technology, the chances are too great, in a still incredibly experimental marketplace, of a dog in the manger preventing anyone else from making something happen.Internet years are too short for the rules on patent duration as it is without financial cryptographers trying to be software developers, or banks, or anything else; something I\u2019ve railed about on the net many times in the past few years. Since invalidating the very idea of software patents anytime soon is not reasonable (to the contrary, even business processes seem patentable at the moment, one look at the Walker Digital patent farm tells you that much), it might be worth figuring out a way for cryptographic protocol inventors to get paid for their intellectual property without holding up research in the field for everyone else.While I think forming a syndicate to hold those patents, or a royalty association, something like what ASCAP does for songwriters, is the way to solve the problem, I\u2019m certainly open to other suggestions.So, there, after about six months, you have it. Not only have I discussed the enormous possibilities of the emerging world of digital bearer transaction settlement, but I\u2019ve shown you how to do every financial instrument you can ever imagine in digital bearer form, using ubiquitous geodesic internetworks as your marketplace. All of this, hopefully, for significantly less cost than it would be to drag all those book-entry audit trails behind you all over the internet. I certainly enjoyed this series of articles, and I hope you did, too.Back to table of contentsThe weeks running up to this year\u2019s Financial Cryptography Conference (FC99) were really amazing, especially if you\u2019re a fan of digital bearer transaction settlement.First, there was a lot of excitement about the forthcoming disposal, out of bankruptcy, of the DigiCash patent portfolio. This includes David Chaum\u2019s blind signatures, which are useful, as you remember, for macro-scale cash, bonds, and even equity.Mark Briceno, a former DigiCash employee now turned dealmeister, said at FC99 that he has put together a syndicate which includes all of DigiCash\u2019s former licensees, and that upon acquisition, the patents will be royalty-free for open source and experimental use. Unfortunately, two of his promised closing days since have come and gone, however.Yet, I recently talked to Nicholas Negroponte at the joint MIT Media Lab/USENIX Things that Think / Embedded Systems Workshops. Negroponte, the Media Lab\u2019s founder, is also, hopefully, the final Chairman of DigiCash, and has arrows in his back to prove it. He was talking to me quite nicely about Zero Knowlege Systems, the primary sponsor of Briceno\u2019s syndicate effort, so maybe something is in the offing. Finally.Another wierd thing happened to me the week before the conference, when I got a query from a local investment banker, representing a public corporation with $5 million in cash and $7 million in market value. He proposed creating a company by buying both DigiCash and DEC/Compaq\u2019 s Millicent technology. I went downtown to visit him, and said no, that wasn\u2019t a good idea, but that doing some kind of publicly-held financial cryptography patent royal trust, a cross between an oil-patch deal and Buffet\u2019s Berkshire Hathaway, might be a fun thing to try. His firm didn\u2019t like the idea, but I still think it\u2019s a good one, and, upon leaving, I felt like I was resigned to evangelizing this stuff to deaf ears forever.But, that very night, things changed enormously. I got an email message that night from Ron Rivest, sent to John Gilmore and Paul Kocher and cc\u2019d to me and Adi Shamir. Rare company, indeed.Ron Rivest and Adi Shamir are, of course, the R and S of RSA, the DC3 of the public key cryptography business. Rivest, himself of MIT, is responsible for RC4, the cipher behind the lock that appears on your browser when you encrypt your credit card number to Amazon and purchase a book.In addition to co-inventing RSA with Rivest, Adi Shamir, from the Weisman Institute in Israel, has blown up more ciphers, more smart-card hardware, more supposedly secure commercial cryptosystems than practically any other man alive.John Gilmore is one of the founders of Sun Microsystems, one of the founding board members of the Electronic Frontier Foundation, and a founding cypherpunk. For someone who\u2019s stirred up so much trouble, and with all the right people, he\u2019s one of the kindest folks I\u2019ve ever met.Gilmore\u2019s also the man who funded, for $250,000 of his own money, a special-purpose cryptographic supercomputer humorously called \u2018Deep Crack\u2019, which broke the US Government-mandated 56-bit Data Encryption Standard, or DES. In less than 3 days. At an amortized cost per key of about $360.Paul Kocher, a well-respected cryptographer with several famous cryptosystem attacks of his own to his credit, was the man who designed and built \u2018Deep Crack\u2019 for Gilmore, and who now runs it occasionally, on behalf of the EFF, under whose auspices the DES effort was undertaken to begin with.DES is ubiquitous in finance: $3 trillion a day in currency transactions are encrypted using DES, for instance. Breaking DES, in so short a time, and especially for so little money, was an act which sent shivers up the spine of bank security professionals everywhere.It\u2019s even worse than that. 56 bits, the largest keysize possible with DES, is also the largest key-size allowed for export by the US government. Not a good place for the financial community to be in, technology-delaying \u2018exemptions\u2019 for financial cryptography aside.So, into my email inbox arrives a message by and for the aforementioned cryptographic pantheon. The message says, quite simply, that just by designing and building a special-purpose machine to brute-force-search the DES keyspace, Kocher and Gilmore had inadvertently constructed a prototype MicroMint machine. They had, without knowing it, built a machine which would mint money in very, very, small denominations. A production machine would start at one thousandth of a dollar and go down from there.I just sat there, stunned. I thought it would be years before something like this was going to happen. Digital bearer microcash has always been my \u2018way out there in left field\u2019 scenario, something I used to scare old people, children and politician with. I joked about routers that would use micromoney to buy bandwidth low and sell it high, saving enough out of operations to buy a copy of themselves. Or about toasters which would buy their electricity out of the wall. Or cars which pay tolls to use neighborhood streets and roads. Privately owned streets and roads, much to the joy of libertarians everywhere.Rivest apparently cc\u2019d me on this amazing email message because I had talked to him over lunch, almost two years ago, about commercializing MicroMint someday.So, in my reply to this email message from cryptographic Olympus, I effused, at typical great length, about my underwriting model for digital bearer settlement, and how, since the prototype was already there in the form of \u2018Deep Crack\u2019, it was probably time to talk about building a production version of a MicroMint machine. Somehow. An actual financial cryptography supercomputer, probably costing several million dollars or more. Somehow.Since everyone but Gilmore was going to Anguilla the next week for FC99 anyway, something I\u2019m sure Rivest knew when he\u2019d sent the email, I proposed that all of us talk about it there.Immediately, I started emailing all the other people I thought I needed to make this work. Fortunately, they, too, were almost all going to Anguilla for FC99.The very first person I wanted sitting on my shoulder for a reality check, Jiminy to my Pinnochio, was Paul Guthrie, VP of Advanced Technology at VISA. Paul has been a long-time subscriber to my all digital commerce and financial cryptography lists, and has gone to every one of my Financial Cryptography conferences since the beginning.Paul and I have talked extensively in the past about what it takes to effect a withdrawal of digital bearer cash from the automated teller network on to the internet, instead of a mere purchase of digital bearer cash with a credit card. Even more important was solving the problem of deposits from the net, which, oddly enough, is not intractable at all. Since VISA has it\u2019s hand in practically all funds-transfer and payment-systems networks, especially, for my purposes, the PLUS ATM network (Cirrus is owned by MasterCard), Paul\u2019s a very good person to know, and we have a lot of fun talking about this stuff.It dawned on me, as we approached the conference, that the only two people I really needed to talk to to see if this was technologically possible, better, to have talk to each other, was Paul Kocher, the builder of \u2018Deep Crack\u2019, and Paul Guthrie, who could figure out in detail what integrating a MicroMint machine with the rest of book-entry financial system meant. Everyone else was just window dressing.Did I get some amazing window dressing. I ended up with a dinner, for 17 people, at a nice French resturaunt just down the beach from FC99\u2019s first-night cocktail reception. I just went around the room towards the end of the reception, grabbing everyone I thought I needed and hauling them down the beach to dinner.Besides Duncan Goldie-Scot, of this newsletter, this crypto-herding exercise included people like Nicko van Someren, the founder and CTO of nCipher, a British company which makes cryptographic accellerator hardware for internet commerce; Adam Shostack, cypherpunk turned CTO of Netect, a network security software company; Fearghas McKay, former British Internet Society chairman and now CTO of MIDS, an internet traffic-analysis company; Derek Atkins, of PGP 3.0 fame and now of Lucent; and Jason Cronk, owner of a large Florida web-hosting firm, and a big advocate of cash-settled geodesic recursive markets for intellectual property.I didn\u2019t grab Ron Rivest himself and shove him down the beach towards dinner like I did the rest, because as someone with lots of people wanting his attention I figured he would be busy. But, to my surprise, after we had all sat down to dinner, Rivest and his wife wandered in for dinner on their own, and they came and sat with the rest of us. I was very happy.So, after sitting all the right people together so they could talk to each other afterward, I banged on a glass for attention and got everyone caught up on Rivest\u2019s email message about the possibility of \u2018Deep Crack\u2019 being used to run MicroMint, kicking off an excellent dinner conversation on how to make an internet bearer microcash system happen.It turns out that while it may be a little complicated to make changes to the ATM system to allow deposits from a third-party machine in much the same way that you can make withdrawls now, you can use other systems like ACH to get the same result, and, in fact, most of the problems faced by a nacent MicroMint are regulatory. People like Paul Guthrie kept beating me over the head with Federal Reserve Regulation E, which, as currently written, prevents digital bearer cash from being treated the same way as paper bearer cash is.At this point I said something fateful. I said, \u2018If you guys can design a system which allows me to withdraw money, in microcash, from my bank account over the internet, and to deposit it later the same way, I\u2019ll get you guys, Ron (Rivest), Paul (Kocher), Paul (Guthrie), and Nicko (van Someren) in front of Alan Greenspan himself if I have to, demo it, and get Reg E changed.\u2019 Dead silence. Followed by skeptical laughter all around.Fortunately, I\u2019m still immune to this stuff. I\u2019d been there before, and I consoled myself with my favorite Schopenhauer quote, the one about how new ideas are first ridiculed, then fought violently, and then declared obvious.Yet, Greenspan, a not-so-closet libertarian, if not a closet \u2018Austrian\u2019 economist, loves the idea of private currencies like we would be doing with this MicroMint box, and, if talked to in the right way, he would probably become an advocate for a revision of Reg E to account for digital bearer cash.So, for the next day or so, I couldn\u2019t get this idea out of my mind. It was dawning on me that, because of developments with the DigiCash patents, and especially with this news about MicroMint, that there was simply no scientific or technological obstacle whatsoever to the underwriting of internet-based digital bearer instruments, not just microcash, not just \u2018macro\u2019cash, but, someday soon, debt, equity, and any derivative thereof.It\u2019s time to do some actual finance with all the financial cryptography. Later in the conference II came up with a company name for an internet bearer underwriting corporation. I called it, oddly enough, the Internet Bearer Underwriting Corporation. The fact that the corporation\u2019s initials sound like \u2018I-Buck\u2019 never entered into my mind.Two weeks ago, I went downtown to the lawyers who incorporated my last company and got the ball rolling. We registered the Internet Bearer Underwriting Corporation in Delaware a week later, and I\u2019m actively seeking officers, a board of directors, and, of course, shareholders. I have signed the incorporation papers, so I guess it\u2019s official.I\u2019m hoping to turn the key on all of this, to go live to the net, by the first week of July, 2000. That should allow whatever Y2K hysteria is left to transpire, certainly, but it\u2019s mostly because I don\u2019t think I can raise money and get anything built faster than that, anyway. And, frankly, it will probably be later, \u2018internet years\u2019 or no.I want IBUC to underwrite, after 5 years, $30 billion a year in internet microcash, in bearer form, at an average front-end load of 85 basis points. That\u2019s how the investment hockey-stick looks, anyway. $30 billion is a scary number in the technology business, but it\u2019s not too scary in finance remember that $3 trillion-a-day currency market.So, wish me luck, everyone.Back to table of contentsAt the end of last month I began building the revenue model for IBUC, the Internet Bearer Underwriting Corporation, which I founded here in Boston, and wrote about in the last issue. You can \u2018back\u2019 into some pretty interesting numbers without doing a market test at all, something which is, frankly, impossible anyway, given the mostly unknown, and not insignificant capital cost of building the MicroMint box, for instance. First, you need an adoption curve. Typically, people in marketing use the logistics equation\u2019s curve. In our case, however, we had some real data, the historical and estimated future dollar volume of internet retail transactions, which, of course, are mostly credit card transactions. We got some from a fairly reliable source. These adoption curves start in the small hundreds of millions in 1995 or so, and, from 1996, they grow at a compound annual growth rate of about 100% or so over the last four years, into the tens of billions for this year. Using this time series, we now have as good a guess for an adoption curve as any for a proposed digital bearer payment technology. If something proves useful, it\u2019ll probably be adopted this fast, and if done right, probably won\u2019t be complementary or competitive with existing transaction types, thus increasing the dollar volume of internet transactions over time. So, we can take this normalised curve and tweak it for all transactions executed by mulitiplying the credit card number by some factor, or, we can use it fractionally, like we did, to gin up some numbers for a specific product. Again, you can back into a fairly nice approximation with actual data. Every year, the Bank for International Settlement publishes a report showing the global transaction counts and dollar volumes by each payment method, cash, credit cards, checks, wire, ACH, and so forth. Since virtually all transactions on the internet are executed with credit cards, if an meatspace-equivalent-risk digital form existed in digital bearer form, it\u2019s safe to assume that we might apply the meatspace ratio of that method to credit cards to the cypherspace credit card number. Of course, that doesn\u2019t work so good for MicroMint-based microcash, which doesn\u2019t have a meatspace equivalent, but it\u2019s a good start. So, use that factor times whatever market penetration number you think you can justify, and you have, voila, a revenue curve. So, now, we need an upper bound to all this unbounded enthusiasm. My CFO and I were wondering how we were going to do this, when, we remembered that we were in the underwriting business. After rooting around a bit, it dawned on us that Goldman Sachs had just filed a shelf offering for their IPO, so we went to the Securities and Exchange Commission\u2019s EDGAR website to go look at it. Right up there, on a metaphorical movie screen, was about a megabyte of information on how to be an underwriter, including the size of the global capital markets, Goldman\u2019s underwriting revenue and profits, and a whole host of other goodies. When we got through reading this, we were swinging from the lamp posts.Cheers,\nRobert HettingaBack to table of contentsRegulators have not even started to get to grips with the challenges they will face in the wired world.In the summer of 1996, about a year after a bunch of us started the Digital Commerce Society of Boston, friend and fellow ex-cypherpunk Perry Metzger, formerly of Bellcore and Morgan Stanley and now owner of Piermont Systems (www.piermont.com), a well-regarded financial computer security integrator, came up from New York to talk to us about how financial cryptography would allow the issue, on to the net in digital bearer form, of any financial instrument we could conceive of. Perry discussed some whimsical \u2018gold-denominated Burmese opium futures\u2019, for which he named his talk that day.Implicit in that title, of course, was the point that government financial regulation, and, someday, governments themselves, were somehow \u2018optional\u2019 in a world of totally anonymous, but still non-repudiable transactions.Eric Hughes, one of the co-founders of the cypherpunk cryptography enthusiasts\u2019 list, went even further in his thinking. He liked to say that, in imagining a world with ubiquitous internetworks and strong cryptography, it helped to \u2018think like an illegal actor\u2019. Imagine, in other words, a world of ubiquitous recreational vices, murder-for-hire, and all the other staples of any good mob novel: all of it available, with impunity, everywhere, all the time, on the net, for a price. A frankly romantic vision, now, in hindsight.If anything, recent history seems to show otherwise: all law seems to be enforceable everywhere, all at once.For instance, several years ago a gentleman was extradited to Tennessee and convicted for the pornographic contents of his California computer bulletin board.Within the last few years, two members of the cypherpunks list themselves have been convicted, and sent to jail, for making public threats to specific federal judges and officials, both involving completely hypothetical digital-cash-settled assassination auctions. Hypothetical, of course, because there isn\u2019t a working digital cash system, among other things. One of those convictions seemed, to me at least, more for a form of tacky political performance art than any physical threat to a judge, though the judge apparently thought otherwise.And, of course, we should expect equivalent international incidents of these kinds, sans theatrics, sooner or later. After all, almost all countries have extradition treaties with each other for violent crime, and most at least for fraud, if not necessarily for other financial or tax crimes. If the aforementioned gold-denominated Burmese opium futures were illegal in one place at all, current legal opinion holds, cyberspace makes them extraditable, and thus illegal, everywhere, no matter the server\u2019s physical jurisdiction.Yet, cryptography itself, the thing which could so romantically change this state of affairs, is still being \u2018decriminalized\u2019, and, recently, it has been done so an astonishing rate. Within the last month alone, Canada, Germany, and Britain, even France, who virtually outlawed cryptography of any strength whatsoever, have all seen the writing on the digital commerce wall, and have announced, grudgingly, that they will explicitly \u2018decontrol\u2019 cryptography in some fashion or another.As people on the net have known for years, nation-states can now see that digital commerce means financial cryptography, and that financial cryptography must, of necessity, be the strongest possible cryptography available if it is to be of any use at all.In other words, nation-states understand one of Hettinga\u2019s many \u2018laws\u2019 of digital commerce: Financial cryptography is the only cryptography that matters.Even national security is taking a back seat to commercial \u2018signals intelligence\u2019. Last month, the US Congress found itself the scene of the most amazing spectacle, with the National Security Agency claiming, of all things, attorney-client privilege in order to keep from discussing Echelon, a 40-year-old \u2018I\u2019ll spy on your people if you spy on mine\u2019 co-operative eavesdropping arrangement between the intelligence services of most developed nations.Yet, the primary reason for such sunshine in dark places is not politics at all: it is business.In the ultimate swords-to-ploughshares exercise, Echelon data, obtained at enormous taxpayer cost, is now being used, evidently, to give US companies an economic advantage in their international business negotiations. Why? Because, of course, other countries do it for their citizens. France, with its ironically strict cryptography controls, has been repeatedly caught informing companies like Bull and Airbus about the results of its operations against companies like IBM and Boeing.Access to Echelon data seems to have even been offered by David Aaron, the Clinton administration\u2019s erstwhile roving cryptography ambassador, as an inducement for countries like Australia to sign on to the Wassanar \u2018 arrangement\u2019, an \u2018informal\u2019 agreement among a large number of industrial nations to promote so-called \u2018key-escrow\u2019 encryption, a form of cryptography where the government has a copy of everyone\u2019 s encryption keys. Key-escrow, or Government Access to Keys (GAK) to its foes, is, of course, mutually exclusive from digital commerce, and GAK\u2019s various US legislative incarnations have been steamrollered accordingly.My guess is that the Jospin government finally figured out that \u2018infowar\u2019, when it happens, will occur not between nation-states, but between businesses, and that the best way for France to protect her businesses, and thus her tax base, is to allow their use of the strongest possible financial cryptography available. Which, given the eventual use of financial cryptography on the internet to hide private financial assets from confiscation by nation-states, makes for a marvelous paradox indeed.So, what about that romantic vision of \u2018cryptoanarchy\u2019 , as Tim May, another founding cypherpunk, called it?Remember, most of the acts that we call criminal today, especially those involving violence and property, still happen in \u2018meatspace\u2019, the abode of humans, and not \u2018cypherspace\u2019, the abode of encrypted electrons.Meatspace, as anyone who has seen (or suspected) a surveillance camera knows, is becoming more and more supervised with every iteration of Moore\u2019 s Law. A digital CCD video camera, ready to be plugged into the internet as a web-cam, sells for less than $100 these days. Thus, it\u2019 s no surprise that an overwhelming majority of this surveillance is the completely private supervision of completely private property to prevent that property\u2019s theft or damage. Yet, people don\u2019t complain about this ubiquitous videography nearly as much as they would if a government did it. In fact, except for ostensibly personal spaces like restrooms or employee locker rooms, people don\u2019 t complain at all about private supervision of private property.As we encrypt our digital property to protect it in \u2018cypherspace\u2019, making it more invisible to nation- states, we increasingly supervise our physical property to protect it in meatspace, making it more visible if you will, all without requiring a nation-state to do it for us.More important, we increasingly enforce those property rights with private means: security guards, for example, armed or otherwise. That\u2019s because, like everything else we buy, it is increasingly cheaper to buy private goods and services than \u2018public\u2019 ones, even force.Put another way, direct payments, priced in auction markets, are increasingly cheaper than transfer payments, at a calculated price, between various accounts on a firm\u2019s, or a country\u2019s, books. Professor Von Mises and his calculation argument against socialism strikes one more time.Moore\u2019s law accelerates this by dramatically reducing transaction costs, both in obtaining and processing necessary market information, first with cheap telephony, personal computers and faxes, and now with email and the web, but also in reducing the execution cost of those transactions themselves, with SSL and digital signatures for credit cards and checks, and, eventually, the clearing and settlement cost of those transactions as well, with digital bearer financial cryptography.The result of lower transaction costs, as Coase tells us, is smaller, and more autonomous, \u2018firms\u2019: private, public, or otherwise. The fractal disintegra- tion of large hierarchical empires like the former Soviet Union, or Yugoslavia, is a case in point, but so too is the peaceful \u2018devolution\u2019 of centralized power to smaller governmental units in both the US and Britain. Or, even, when one thinks about it, the apparent commercialisation of the Chinese People\u2019s Liberation Army.Nation-states, like their aristo/theocratic predeces- sors did with industrialism, will have to stand back and let the geodesic train go by. And, like aristo- crats and theologians before them, politicians will increasingly become mere ceremonial appendages to a larger, more geodesic, economy and society. The nation-state as entertainment, if you will.So, we might actually have gold-denominated Burmese opium futures someday. Financial cryp- tography allows anything to be bought and sold, of course, as long as it can be represented on a wire with bits. Getting delivery of physical goods in some eventually private \u2018 jurisdictions\u2019 may be an- other thing altogether.We might even have, heaven forbid, auction mar- kets for private-sponsored assassination itself, just as Hughes and May predicted, so long ago, at least in net-years. Certainly the death penalty is a type of state-sponsored assassination, and lots of countries still have that. Commercial assassination, ala \u2018The Godfather\u2019 is a, um, horse, of a different colour en- tirely, though.War is, of course, murder on a grand scale, and something the more centrally-controlled nation- states have been particularly good at in this century.But, I think, on the whole, with enough private supervision of private property, physical crimes, especially violent ones, will decline over time, and maybe even dramatically.War and murder, are, after all, seriously bad for business \u2013 ask any Serbian shopkeeper these days \u2013 and the best way to prevent vandalism and the destruction of property, even on a large scale, is to identify the people doing it and then physically prevent them from doing so. This process would start from the ground up, it would seem to me, just by securely broadcasting criminal actions to a geodesic network, and warning others nearby to secure their property, and by force, if necessary.So, even if, over time, most financial assets will migrate to the net, and the ability for an individual to act remotely to effect a physical outcome \u2013 even a violent one \u2013 increases, this action-at-a-distance can only occur within the bounds of someone else\u2019s private surveillance and protection scheme.Your freedom to act ends where my nose begins, in other words.That is not an intolerable state of affairs at all.Back to table of contentsBob Hettinga continues his series about his start-up Internet Bearer Underwriting Corporation \u2013 IBUCI started IBUC, my new internet bearer underwriting venture, because bearer micropayments, a technology I had left for the distant future of internet commerce, had come out of nowhere to be the easiest technology to implement first?The same kind of unexpected, amazing thing happened on the demand side of the equation last month, when internet advertising revenue began to decline precipitously.It was only within the past year that advertising revenue was overtaken by commerce revenue as the mainstay of the internet economy. First with brochure sites for companies such as AT&T made by companies with names such as net. genesis and RazorFish, and then with internet gold-rush sites such as Pathfinder, HotWired, Yahoo, Lycos, and Excite, it seemed that the only way to make money on the net was to either construct a brochure site, which itself was nothing but an advertisement, or own a content site, which was itself supported by advertising. Even better, obviously, was selling equipment and services to those who did one or the other of the above. Gold pans and blue jeans to the miners.The realisation that inventory databases could be linked with financial cryptography on a web-server means that commerce for things normally stored in warehouses and sold by salesmen has exploded on the net. Companies such as Dell and Cisco get a majority of their multi-billion-dollar revenues straight from the web, for instance. The total amount of internet commerce is expected by several sources to top a trillion dollars by 2002. With the very sizeable exception of financial assets (a majority of all individual stock trades will soon be originated from the internet, for instance), and travel services, most of that projected internet commerce revenue will still be for items you can physically touch, things which are delivered later, instead of now, things which you\u2019ll keep after you purchase them and not literally throw away after a single use.But it isn\u2019t that commerce for books, computers, and other actual stuff is just getting bigger than that for advertiser-paid content. Not at all. Advertisements on the web have shown themselves to be eminently ignorable by the web-browsing public, and, as a result, advertising revenue has actually fallen, and considerably so. Every large web-content site you have ever heard of has a huge budget for advertising outside the net, print, magazine, television, even radio, because ads on the internet itself just aren\u2019t that effective. And, yet, what these very firms sell, ostensibly, is internet advertising, and not the actual content of their websites. So, while things haven\u2019t reached panic proportions yet in the content business, it will be interesting to see how content providers are going to react to all this.The very definition of industrial-age mass media is that it is produced on something cheap enough that it can thrown away after consumption. Of course, geodesic media has the same or cheaper delivery cost. Furthermore, Moore\u2019s Law on a ubiquitous internetwork allows the size of a \u2018production run\u2019, or \u2018audience size\u2019, to approach one. Or, at least, you could do it that way, if you could lower your transaction costs far enough. In other words, in a geodesic medium such as the net, it will probably turn out cheaper to actually pay the content\u2019s creator directly for custom content with digital bearer microcash than it is to \u2018target\u2019 advertising through one or more industrially-organised \u2018infomediaries\u2019 (or whatever McKinsey\u2019 s buzzword-du-jour is these days).That\u2019ll be true no matter how big, or fast, your customer datamines can be. The market is your database, in other words. Database marketing, just like database transaction settlement, will choke on the sheer volume of \u2018targeted impressions\u2019 it has to monitor, and, more important, transfer prices it has calculate to pay for those impressions. A geodesic market sees such information choke points as damage, and routes around them.Advertising supported mass-media, is, of course, the quintessential transfer-priced command economy. That is, accountants, not markets, attempt to calculate the value of whatever content an advertiser purchases on behalf of that content\u2019s consumers, using not-always-accurate heuristics like cost per thousand impressions, say, or percentage audience share. As most serious students of finance already know, it was the demonstration of the near-impossibility calculating a transfer price which resulted in most of the Nobel prises in economics given out in the last few decades. And so, as I\u2019ve said about financial cryptography and cryptography itself, financial economics is the only economics that matters these days. In fact, the only time transfer pricing is even attempted is when transaction costs outside the firm were too high, for one reason or another, to get a market price. This is, of course, Coase\u2019s theorem, the fundamental theorem of microeconomics, and that theorem, in turn, is the very definition of what is, or isn\u2019t, a firm. More to the point, transaction cost determines exactly how large any firm can be.The very concept of economy of scale comes from this. Since we at IBUC have sworn ourselves the equivalent of a barbarian blood-oath against transfer pricing on the internet, we have always considered web-page advertising as an almost unitary proxy for the potential content segment of digital bearer microcash market, and thus completely fair game when we go \u2018viking\u2019 in that direction. However, it now appears, the market for that unitary proxy has fallen. Does mean that there\u2019ll be no more content on the internet, especially at very low cost? Hardly. It only means that transfer pricing doesn\u2019t work as a way to pay for internet content. It\u2019s only really a problem for industrial-style distribution hierarchies, not the people who actually produce new content. As the technology of internet content delivery keeps exploding, and the price of distribution itself collapses accordingly.MP3 audio files proliferate, much to the consternation of record company executives everywhere. And much to the delight of those artists getting heard by more people just by disintermediating those very same record companies. And, it\u2019s getting cheaper.All this new networked content business needs is a new way to pay for it all at that exponentially falling delivery price. (Shhhh. If you listen very carefully, you can hear a Norse rowing song coming up the river.) So, while most industrial content \u2018infomediaries\u2019 may be hiding behind their castle walls of lawyers, professional managers and strategic consultants, the smarter ones are investing a little danegeld to get involved in these new markets for content and get along with their new barbarian neighbours. After all, artists just want to be seen and heard, not sell to themselves.Intermediation doesn\u2019t go away in this new world: it atomises into smaller and smaller bits with each iteration of Moore\u2019s law. So there is a way to pay for micro-cost content, and that is digital bearer micropayment. It\u2019s simple to imagine a protocol where a content client keeps putting pennies into a server\u2019s coinbox for a certain number of megabytes or seconds of additional streamed content. It\u2019s even easier to see some kind of XML function for doing things with each web page we see. The problem is, most of this potentially valuable content is still, for all practical intents and purposes, buried deep inside the transfer-priced cost of other things, like advertising, and even internet access. Internet access which, itself, is buried in the cost of telephony in certain tariff-mandated transfer-priced markets such as Great Britain. It\u2019s \u2018free\u2019, in other words. That the word \u2018free\u2019 actually means a redirected payment and a transfer price makes no difference to an uninformed, and, frankly, innumerate, public. They are \u2018paying\u2019 all that they want to for using the web, for internet access, and especially for telephony and, they expect the price to fall as time goes on.It\u2019s what Michael Eisner likes to call the financial \u2018box\u2019 we have to operate in. As long as a customer\u2019s cost to use the net falls over time, he\u2019s happy, whether he pays cash to every website he sees, or he pays for it by the month to an ISP, or he pays what amounts to a tax on his phone calls, to get it.How does a content provider bootstrap this? Easy. Damn the torpedoes, sell stuff for cash anyway, and let the market sort it out. Transfer-priced content is going to go away, one way or another, and clinging to the sinking ship of advertiser revenue and other equivalents won\u2019t help matters.What will happen in the content market is what always happens when revenue dries up: a shakeout. If it\u2019s not currently underway, that is. Pathfinder, for instance, is gone, subsumed by a separate site for each Time Warner\u2019s media properties. The people who do things for free will continue to do so until their expenditures, or their opportunity cost, causes them to quit. The people who do really valuable things will continue to do so as well, and get paid for it somehow. For the rest, it\u2019s really a question of either being the lowest cost producer/ distributor, or finding new revenue streams, or some combination of both.My claim is that those in the last group will be people who focus on aggregating and distributing content instead of creating it, that everyone\u2019s going to be the lowest cost producer/distributor, that the transfer-priced revenue they were invented for will dry up. Any good market eats it\u2019s young, and all that.That brings me to something I\u2019ve called a geodesic recursive auction. I\u2019ve actually talked about the idea here in this column before, but this new \u2018emergency\u2019 in internet content revenue dictates a little more detail in the discussion.The idea itself is pretty simple. I create new content. I sell it to you for the most I can get for it, and I keep doing that until nobody else wants to buy it anymore. If people are deluging my server with purchase requests, I raise my prices until the load goes down to something manageable. If I have no traffic, then I\u2019m charging too much. Buy low, sell high; charge all that the market will bear. Darwin rules. By the same token, if I download something from you, I can turn right around and sell it again to anyone who wants to buy it, thus maybe recoup my costs, and even make a profit. The assumption is that on the net, things like copyright and other intellectual \u2018property\u2019 controls simply cost too much to enforce. It\u2019s hard to reach out and arrest somebody over the net, particularly if functionally anonymous bearer transactions are the cheapest possible transactions. Also, the additional cost of copy-control mechanisms such as \u2018watermarks\u2019, \u2018cryptolopes\u2019 and so on is simply too high for whatever extra value they might provide.Before the advent of ubiquitous geodesic internetworks, much less auction-priced digital bearer transactions, huge amounts of profit were eaten up in the inefficient transfer-pricing of production assets, or, more important, the information about that assets, up and down the organisation chart and its corresponding chart of accounts. Industrial-era record companies, publishers, and entertainment networks are all still fairly hierarchical entities today, even though the economics of Moore\u2019s law has changed their business considerably over the last thirty or forty years. It\u2019s not without a reason that the most important person in the movie business these days is the artist\u2019s agent, and not the studio head, for instance. Digital bearer cash, at sufficiently small denominations, probably the $10-3 (a tenth of a penny) range, or maybe lower, enables the direct purchase, and, more important, the immediate disposal of content after its use.In so doing, it solves precisely the problem that advertising does by batching impressions and transfer-pricing the cost of delivering the content responsible for those impressions. More to the point, it uses economics and software to solve the problem of copyright infringement, because storage cost should vastly exceed purchase price. (By the way, we at IBUC call $10^-3 a \u2018minidollar\u2019 because \u2018millidollar\u2019 sounds too close to \u2018Millicent\u2019 a proprietary trade-name belonging to Digital, now Compaq. Another transfer pricing problem, yes?) In other words, digital bearer minidollars give us the exact industrial definition of \u2018mass-media\u2019 \u2013 use it once and throw it away \u2013 but without the transfer-pricing overhead of hierarchically organised markets. Toffler\u2019s \u2018mass-customisation\u2019, indeed. Only there\u2019s no industrial-era \u2018mass\u2019 to any of it. Every single bit is paid for directly by the user of those bits, in a hyper-efficient, auction-priced, cash settled, geodesic, market. The customer, and the producer, get exactly what they want, and more of it, for less money. Sounds like progress, instead of disaster, to me. And, of course, for us at IBUC, it\u2019 s almost divine providence.Back to table of contents\"Who needs money anyway?\": The New Monetary Economics, Monetary Separation, and Digital Bearer SettlementOne of my best friends in the whole world is Mark Tenney of Mathematical Finance in Alexandria, Virginia. The best man at my wedding, I met Mark during my mostly sad attempt to go to the University of Chicago as a \u201cStudent-at-Large\u201d, where I snuck in the back door and hung out for almost a year before they threw me out \u2013 though, to my credit, or lack there of, it was for impecuniosity, more than anything else. \u201cFirst thing you do, you get the money\u201d, and all that.It was fun, though, and I did manage to transfer enough credit from Chicago to finish my undergraduate philosophy degree at Missouri. Up until the last five years or so, when I discovered the \u201cUniversity of the Internet\u201d, I\u2019d always wished I could afford to go back some day and play some more, especially in finance and economics.Anyway, Mark was one of those scary mathematical prodigies who finished both high-school and college in three years apiece, finished all-but-a-doctoral-dissertation in Physics at Brandeis in three years, hedging himself with an Master\u2019s, then turned on a dime and did the same thing in Finance at Chicago, hedging again with an MBA in Finance. All this before wading into the fray of quantitative fixed-income analytics-for-hire, swinging that claymore-sized intellect of his with both hands.Last year, I told Mark that I had decided to concentrate on digital bearer transactions full-time, and he asked a bunch of questions like he always does when I reveal my latest off-the-wall idea. And not saying much in reply, which he also always does, being one of the most laconic people I\u2019ve ever met. That\u2019s okay, I suppose. I talk enough for both of us.Anyway, a few days later, Mark calls me up, all excited. Well, as excited as Mark gets, anyway. \u201cYou could issue digital bearer certificates backed up by an S&P 500 portfolio,\u201d Mark says with not much affect, followed by dead air, which is my cue to talk.\u201cYup,\u201d says I, chattering away, \u201cThat\u2019s easy. Old hat. We talked about stuff like that on cypherpunks years ago. The only problem is, it\u2019s illegal in the US for various reasons, and proving that you\u2019re only issuing to and redeeming from foreign nationals is really too complicated. We don\u2019t call it \u2018digital bearer settlement\u2019 for nothing. Of course, that doesn\u2019t keep several smash-the-state cryptoanarchists out there from daydreaming, in color, about that idea pretty much full time. Expressions like \u2018tax-evasion\u2019 and \u2018money-laundering\u2019 only make them work harder, after all. Me, I\u2019m only in it to reduce transaction costs. Illegal business is chump change compared to putting the entire global economy onto the net in digital bearer form.\u201cSteve Schear and I even figured that you could do it with just about any stock, anywhere, from anywhere, as long as it was legal in the jurisdiction you did it from. Sort of an \u2018Unsponsored Network Depository Receipt\u2019, UNDRs, for short\u2026\u201d and then, I proceeded to go into an entire rant on that. In four-part harmony. Arlo Guthrie would have been proud\u2026Finally, I run out of gas, like I always do, and Mark says, \u201cIf you issue digital bearer certificates collateralized by the S&P 500, you won\u2019t need cash anymore.\u201d More dead air.\u201cWell,\u201d I said, jumping back in, \u201cmaybe, maybe not. I mean, the dollar\u2019s pretty much pecunia franca right now, yes? Anyway, you wanna write something up about it, and we\u2019ll zing it out onto some of my mail lists for comment?\u201dI figure that if Mark was excited enough, he could bash on the mathematical finance of this idea much better than I ever could, being mostly innumerate myself, with my undergraduate philosophy degree from a midwestern state-school, and leftover student-at-large credit from UofC.I mean, the closest thing I ever got to a genuine financial education was sneaking out of the University of Chicago Bookstore Graduate School of Business textbook section with books like Brealy & Meyers\u2019 \u201cCorporate Finance\u201d, and Sharpe\u2019s \u201cInvestments\u201d. Needless to say, reading stuff like that, and hanging around people like Mark at a place like Chicago pretty much set my \u201cif there\u2019s not a market for it, it really doesn\u2019t matter\u201d view of reality into steel-reinforced concrete. It\u2019s kind of the core of my anti-state bias as well, I suppose.Mark is, of course, a pro at this kind of stuff, having figured ways to use Green\u2019s functions to kill off lots of Monte-Carlo modeling, building closed-form solutions for various security prices, and so forth. His asset-liability models sit in the guts of several very large insurance companies, and there are questions about his asset-value calculation methods on the US actuarial exam. One of his latest projects is building the analytical core of start-up e-finance company in an as-yet undisclosed European country, and his client before that was one of the largest financial services firms in the world, owning well-known insurance and mutual fund companies everywhere you would care to name.So, I didn\u2019t hear much from Mark about this idea of his anymore, probably because most of his \u2018wetware\u2019 bandwidth is paid for these days, with real money, and he doesn\u2019t have much time to spare for actual fun \u2013 much less writing a non-reviewed finance paper that I would just pass around the net for free. And so that\u2019s the last I heard of it for a while.Then, a few months ago, after I\u2019d started up my new company, IBUC.COM, to actually issue digital bearer cash and other stuff some day, some newbie on the cypherpunks list talked about trying to do yet another internet currency, a smallish rant with a whole bunch of, well, wrong stuff in it. So wrong, in fact, I can\u2019t even remember most of it. As is unfortunately usual in these circumstances, I ended up writing my own rant in reply. It centered around my own favorite point on the subject, that unless any \u201cinternet currency\u201d was exchangeable into dollars, or some other standard unit of exchange, nobody was going to pay any attention to it.There have been several efforts on cypherpunks and elsewhere to think about synthetic currencies based on attention, or machine cycles, for instance, and, while using machine cycles to prevent forgery is at the core of most decent micromoney protocols like MicroMint, but you have to denominate your digital bearer cash in something financial, or it will be of no real use to normal people. Not that most cypherpunks care about being normal, you understand, but there it is.Nonetheless, I did toss off some nice words in the direction of the e-gold guys, who, at the time, were issuing a kind of gold-backed \u201cinternet currency\u201d, albeit in book-entry form. They had been having some success with it, mostly among the anarcho-survivalist gold-bug crowd. Meaning that a lot of very bright erst- and proto-cypherpunks have been playing with e-gold, for reasons of politics, paranoia, or both. Or at least so I figured at the time, anyway.Dr. Douglas Jackson, the oncologist-turned-founder of e-gold, is quite a bit more phlegmatic about these things himself, though certainly never a fan of fiat currency. He understands, for instance, that storage costs can make gold-backed account balances actually depreciate over time. But, in implementing the e-gold payment system, he and several thousand e-gold users have ended up with quite a bit more experience in non-credit-card internet payments than anyone else has to date, mostly because they didn\u2019t try to do anything too complicated in the early stages.More to the point, all of Doug\u2019s competition (like First Virtual, CyberCash, and DigiCash, to name a few) have killed themselves off going for the main chance. They kept trying to conquer the world, trying to be some kind of sole transactor of business on the web, without understanding that finance is a business of herds and swarms and that nobody trusts anyone who\u2019s the sole anything.Meanwhile, Doug\u2019s still doing a tidy, if not land-office, business, precisely because he\u2019s not trying to take over the world. In fact, I\u2019d say that anyone who\u2019s interested in internet payment should pay more than a little attention to e-gold, or, as their evangelist Jim Ray likes to call it, \u201cThe little internet payment system that could.\u201dAnyway, Ian Grigg, an expatriate Australian who I can\u2019t really call a cypherpunk \u2013 more of a \u201cmoneypunk\u201d, maybe, since he\u2019s spent a lot of time lately down in Anguilla building things for e-gold, among other people \u2013 sees this cypherpunks rant of mine about internet currency after I forwarded it to dbs, the digital bearer settlement discussion list that I run. Ian observed there that if transaction speed was fast enough, the market would probably converge to a world without cash at all. Shades of Mark Tenney.Since I respect Ian\u2019s opinion, because Ian seems to have read every \u201cAustrian\u201d economist there ever was, and is a great fan of Scottish free banking, not to mention because of all his work for e-gold, which now runs on his \u201cRicardo\u201d web-market-making system, I thought to myself, \u201cOkay. Maybe. Someday. In the meantime, I want IBUC to do cash, dollars preferably, thank you very much, and after that, other actual securities, and, after that, we\u2019ll see if the dollar really does evaporate as the world\u2019s primary exchange currency.\u201d And having said so to the list in reply, I left the discussion there for the time being.Which brings me to a little while ago, when I was half-to-three-quarters of the way through with a nice rant for this column on something else entirely, and ended up throwing it all in the trash.That was because of something I got in email from another friend of mine, one of the best internet transaction lawyers in the business, John Muller, a partner at Bobreck, Fleger and Harrison, in San Francisco. Among other things, John is Chair of the Web Site Working Group of the American Bar Association Joint Subcommittee on Electronic Financial Services (say that ten times fast), and Co-chair of the Automated Transactions and Electronic Agents project of the ABA Cyberspace Law Committee.What John sent me was the most recent Electronic Financial Services Update, the back issues of which can be seen at http://www.abanet.org/buslaw/efss/whatsnew.html, and in that update was \u201cTowards a Moneyless World?\u201d, a paper by Malte Krueger, of the University of Cologne and the University of Western Ontario, for the International Atlantic Economic Conference, which was held in Vienna this past March. Apparently, this paper was also presented in different form to the Second Berlin Conference on Internet Economics a little while later.And, there, after converting PDF to PostScript, and then PDF to ASCII text so I could read it faster, there was a pointer to where my friend Mark Tenney \u2013 and, I bet, Ian Grigg \u2013 got the idea that as transaction latency and transaction costs go to zero, the value function of currency converges to that of more \u201cfinancial\u201d assets: They were quoting, whether they knew it or not, the so-called \u201cNew Monetary Economics\u201d (NME), a phrase coined by Robert Hall, but conceived, in the early 1980\u2019s, by no less a pair of financial luminaries than Eugene Fama, of the Efficient Market Hypothesis, and Fischer Black, of the Black-Sholes option equation. Others, like Krueger, apparently, call this the \u201cBFH system\u201d, in their honor \u2013 or for other reasons, it\u2019s hard for me to tell.Krueger says, of NME/BFH,In the current system money (cash and deposits) is used as medium of exchange and unit of account. In the BFH system there would be no common medium of exchange with a fixed nominal value in terms of the unit of account. Instead, assets with variable prices are used. This implies that, in principle, any asset could serve as a medium of exchange. An example that is often used to illustrate \u2018moneyless\u2019 payments are mutual funds shares. The value of mutual funds\u2019 shares varies with the value of the funds\u2019 assets and within certain limits they can be used for making payments. So, the medium of payment \u2018mutual fund share\u2019 has a value that is not fixed in terms of the commonly used unit of account. Eugene Fama (1980) argues that monetary separation is efficient because the financial system (Fama uses the term \u2018banks\u2019) serves two functions that are independent of each other: the accounting function and the portfolio management function. Banks could fulfill the accounting function without holding assets or using any medium of payment. It would be sufficient to have a unit of account. As an uninvolved third party, banks could just keep records of transactions. The issue of liabilities and the purchase of assets is derived from the second function, the portfolio management function. In this function banks help individuals to hold their wealth in a form they desire.What the above means to me is pretty much what Tenney and Grigg said, that Moore\u2019s law creates an increasingly geodesic, ubiquitous, public internetwork, which, coupled with the financial cryptography of digital bearer settlement, \u201csurfacts\u201d currency into its constituent parts. Why keep something which doesn\u2019t earn you money, in other words? Why not use something which is as risk-free as possible but still earns money while it\u2019s in your possession? Furthermore, the longer money\u2019s going to be in your possession, the more incentive you have to invest in something where short-term volatility isn\u2019t a problem. We\u2019ll leave discussion of my opinion on the \u201caccounting\u201d function as an exercise for the reader.Anyway, Macroeconomists call this division of unit of exchange from unit of account, monetary separation. And, as a result, we get more and more different kinds of exchange with decreasing transaction cost. Banks go back to being \u201ccounting houses\u201d instead of fiduciaries, trustees, keeping track of who owes what to whom, and the returns on money are higher for the users of that money. The advent of the money-market mutual fund, was, of course, a step down this road.As to whether this means the death of currency, Krueger comes down on the side of network effects \u2013 unfortunately conflating them with path-dependency; network effects being cool, and path dependency being balderdash \u2013 and says that the opportunity costs of keeping track of various different asset classes, and, more importantly, exchanging those different asset classes with others just to effect any trade whatsoever in a virtual re-emergence of barter, still costs too darn much, and thus, the internet gives us monetary integration, and not separation. As someone said of Mozart, \u201ctoo many notes\u201d.I\u2019m personally not so sure, Moore\u2019s law being what it is. It might be easy enough with with enough bandwidth and processing power to do all those exchanges and re-balance one\u2019s \u201cportfolio\u201d of money-equivalents, paying people in whatever asset class they want, and still make more money than parking money as dollars in a bank somewhere, or, worse, keeping cash on hand.However, I also think that it\u2019ll be a while, just yet, for that world to emerge, and, frankly, I want to buy things with dollars, and right now.By way of some even more twisted synchronicity, Krueger\u2019s paper then points to my friend Tatsuo Tanaka\u2019s paper on the macroeconomic consequences of internet free banking. Which, oddly enough, I edited and recommended for publication in the peer-reviewed internet journal First Monday four or so years ago. I even invited Tanaka to come up and present the paper at a Digital Commerce Society of Boston luncheon shortly after the paper came out.Tanaka says, first of all, that internet free-banking is like the expatriate-cash Eurodollar market on steroids. Internet free-banking drives the final nail in the coffin of central bank control of any nation\u2019s currency, because, if a currency is stable enough, and maybe even if it isn\u2019t, sooner or later more of the currency is \u201cissued\u201d on a fiduciary basis outside a country, collateralized by foreign-held dollar-denominated accounts, for instance, than is issued by the central bank itself. And the net makes where the money is, heh, immaterial.Unfortunately, Tanaka also says that competition for underwriting cash to the net causes the eventual fractional reservation of digital cash against its denominated currency, and that, sooner or later, crises of confidence in all those different issues, and their various partial reserves, force the creation of, you guessed it, monetary union of some kind. Tanaka liked to wax about the eventual creation of a central bank of cyberspace, thus setting most cypherpunks\u2019 and other free-money advocates\u2019 teeth on edge, mine included, skyward-rolling eyes and all.But the story gets weirder than that. Recently, Douglas Jackson and his crew at e-gold have been taking their association with \u201cmoneypunks\u201d like Mr. Grigg (and, um, others :-) ), to heart lately. They split themselves into a trustee-underwriter relationship of several firms, and, in the process, have created an offshore subsidiary, based in, where else, Anguilla, to, you guessed it, offer fractionally-reserved, (but non-blinded) gold-denominated digital bearer certificates, called, oddly enough, DigiGold.The idea behind DigiGold is to fractionally reserve gold denominated transactions, loaning out the reserve\u2019s other fraction to offset the cost of gold storage, which, as we noted above, at a percent or more a year, is a considerable one if you\u2019re trying to create a currency which is supposed to hold its value. In fact, Ian went so far as to start buying and selling notes denominated in gold recently, apparently as part of his work with DigiGold.\u201cGold-denominated Burmese opium futures\u201d, indeed.For one final bit of weirdness, I eventually got around to reading Glassman and Hassett\u2019s Dow 36,000 article in the Atlantic Monthly, which, at the core of its analysis, notes that among other things and contrary to received wisdom, equities held in the long term are much less risky than even long-term government bonds are, and how the market has been compensating for that for the last few decades or so by driving equity prices slowly upward to their risk-adjusted \u201creasonable\u201d price. Like their title says, they say that the Dow could be at 36,000 and still be \u201creasonable\u201d, whatever that means. Mercy.A splendid read nonetheless, whether you agree with them or not, and the bit about the risk of the equity market certainly makes a compelling argument for a very, very, interesting result for us, in light of all of the above.At the core of all modern financial analysis is the proposition that government bonds, especially short-term ones, are the safest investment. They\u2019re safe because, for instance, the chance of the US government defaulting on any given 90-day T-Bill on any given day is virtually non-existent. T-Bills are literally risk free, and all other investment is calculated against them for riskiness. The Net Present Value equation, for instance, says that if the returns of a proposed investment are less than you would get from a T-Bill, you should forget the investment and keep your money in T-Bills instead.And, at every year of bond maturity, the government bond sits at the lowest point of the risk \u201cwell\u201d for that maturity. Or so I thought, until I saw Glassman and Hassett\u2019s description of what all financial theorists knew already for a fact, that the long-term risk of the overall equity market is much less than that of even government bonds.So. Can we back that \u201czero\u201d equity-market risk down the maturity curve to the present? Maybe, with a derivative or two. I haven\u2019t gone looking for the answer, and it\u2019s press time already. I wouldn\u2019t be surprised, though, and to walk out on a very thin limb, I\u2019m going to assume it to be true.Certainly the idea of, say an S&P 500, or maybe a larger-index-based \u201ccash\u201d starts to make sense, if we can do it. After all, Ian Grigg and his friends are trying, for all intents and purposes, to do roughly the same kind of thing with gold. Gold hops around a bunch, and volatility is probably not a good thing for a currency to have. So any financial engineering you can do to at least take the volatility down a bit would be good. And you\u2019d want to do the same thing with equity indices, because, as a functional perpetuity, a stock can be just as volatile as a 30-year bond might be.What we get, if we do create a low-volatility equity-based currency, is really very interesting.We get what Gene Fama and Fisher Black must have been thinking about back in early eighties heyday of the \u201cNew Monetary Economics\u201d: a completely private form of \u201criskless\u201d return.Think about that for a minute. Not only do we have digital bearer settlement, so we don\u2019t need the nation-state to provide force and ensure the non-repudiation of our transactions, but we don\u2019t even need another kind of force either: the confiscatory force of a nation\u2019s tax system, making for \u201criskless\u201d government securities, which, in turn, undergird our very concept of what risk is.What we get is truly private money. That is, someday we can create a completely synthetic currency based upon a commonly-referenced equity market index.Look, Ma, no currency board, much less a central bank. No guns. No sovereign. And we still get money. Amazing.So now, instead of stepping back to a commodity economy to avoid state control of the monetary supply, using something like gold to anchor value on the net, we can step forward into the information economy, the geodesic economy: All we need to collateralize our transactions is a sufficiently representative and publicly known equity index, with the volatility hedged for short term use using other publicly known derivatives. Presto change-o, a synthetic internet security. And, of course, this works with bearer held stocks, if we ever get those, as well.Finally, anyone who wants to can do this \u2013 well, if their reputation\u2019s good enough. This is finance, after all.Of course, the sticking point all this fun is the state itself, as I said to Mark Tenney more than a year ago. Remember all the book-entry taxes and regulations about bearer ownership of bonds, TEFRA, et. al., here in the U.S., and then exponentiate that number to get the regulatory barriers for bearer equity.It\u2019ll certainly be easier, for the time being, to issue cash denominated in dollars than it would be to try to climb an enormous ziggurat of regulators and legislators, telling all of them that issuing bearer-form equity-index-denominated money would be a good thing, even if it completely removed their central banks, much less their very government bonds, from the center of the financial universe. A lead balloon, indeed. Almost makes you want to believe in path-dependency, that does.But don\u2019t despair. Remember that if digital bearer transactions really do something I\u2019m betting my company on, sooner or later an equity index-based \u201cinternet currency\u201d will in fact emerge as the best way to buy things.Even more interesting, if we\u2019re right, government-extorted revenue will cease to be the foundation upon which the concept of \u201criskless\u201d return \u2013 and all of finance itself \u2013 rests.But that\u2019s probably what Fama and Black had in mind, right?Back to table of contents"}
{"prompt": "A Declaration of the Independence of Cyberspace", "completion": "Governments of the Industrial World, you weary giants of flesh and steel, I come from Cyberspace, the new home of Mind. On behalf of the future, I ask you of the past to leave us alone. You are not welcome among us. You have no sovereignty where we gather.We have no elected government, nor are we likely to have one, so I address you with no greater authority than that with which liberty itself always speaks. I declare the global social space we are building to be naturally independent of the tyrannies you seek to impose on us. You have no moral right to rule us nor do you possess any methods of enforcement we have true reason to fear.Governments derive their just powers from the consent of the governed. You have neither solicited nor received ours. We did not invite you. You do not know us, nor do you know our world. Cyberspace does not lie within your borders. Do not think that you can build it, as though it were a public construction project. You cannot. It is an act of nature and it grows itself through our collective actions.You have not engaged in our great and gathering conversation, nor did you create the wealth of our marketplaces. You do not know our culture, our ethics, or the unwritten codes that already provide our society more order than could be obtained by any of your impositions.You claim there are problems among us that you need to solve. You use this claim as an excuse to invade our precincts. Many of these problems don\u2019t exist. Where there are real conflicts, where there are wrongs, we will identify them and address them by our means. We are forming our own Social Contract. This governance will arise according to the conditions of our world, not yours. Our world is different.Cyberspace consists of transactions, relationships, and thought itself, arrayed like a standing wave in the web of our communications. Ours is a world that is both everywhere and nowhere, but it is not where bodies live.We are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.We are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.Your legal concepts of property, expression, identity, movement, and context do not apply to us. They are all based on matter, and there is no matter here.Our identities have no bodies, so, unlike you, we cannot obtain order by physical coercion. We believe that from ethics, enlightened self-interest, and the commonweal, our governance will emerge. Our identities may be distributed across many of your jurisdictions. The only law that all our constituent cultures would generally recognize is the Golden Rule. We hope we will be able to build our particular solutions on that basis. But we cannot accept the solutions you are attempting to impose.In the United States, you have today created a law, the Telecommunications Reform Act, which repudiates your own Constitution and insults the dreams of Jefferson, Washington, Mill, Madison, DeToqueville, and Brandeis. These dreams must now be born anew in us.You are terrified of your own children, since they are natives in a world where you will always be immigrants. Because you fear them, you entrust your bureaucracies with the parental responsibilities you are too cowardly to confront yourselves. In our world, all the sentiments and expressions of humanity, from the debasing to the angelic, are parts of a seamless whole, the global conversation of bits. We cannot separate the air that chokes from the air upon which wings beat.In China, Germany, France, Russia, Singapore, Italy and the United States, you are trying to ward off the virus of liberty by erecting guard posts at the frontiers of Cyberspace. These may keep out the contagion for a small time, but they will not work in a world that will soon be blanketed in bit-bearing media.Your increasingly obsolete information industries would perpetuate themselves by proposing laws, in America and elsewhere, that claim to own speech itself throughout the world. These laws would declare ideas to be another industrial product, no more noble than pig iron. In our world, whatever the human mind may create can be reproduced and distributed infinitely at no cost. The global conveyance of thought no longer requires your factories to accomplish.These increasingly hostile and colonial measures place us in the same position as those previous lovers of freedom and self-determination who had to reject the authorities of distant, uninformed powers. We must declare our virtual selves immune to your sovereignty, even as we continue to consent to your rule over our bodies. We will spread ourselves across the Planet so that no one can arrest our thoughts.We will create a civilization of the Mind in Cyberspace. May it be more humane and fair than the world your governments have made before.FDavos, Switzerland\nFebruary 8, 1996"}
{"prompt": "Smart Contracts Glossary", "completion": "Agent: A person or organization, usually represented by a true name or nym. Also, a computer program controlled by, and acting on behalf of, an agent. More generally, a combination of a nym with a persistent pattern of behavior, upon which can be based a reputation. Note that this differs from the legal and business definitions of\"agent\", but corresponds more closely to the economics and computer science uses of the term.Contract: A set of agreements or promises between agents.Parties (aka Principals): Agents who have agreed to the contracting question.Third Parties: Agents who have not agreed to the contract in question.Performance: Carrying out the promises specified in a contract.Contractual Security: A paradigm for making security arrangements between organizations, based on two claims: (1) the primary goal of inter-organization security is to protect and enforce the performance of contracts, and (2) where this goal is achieved, dependence on reputation, outside enforcement, and other factors for the secure performance of that organization's contracts is minimized.Contractual Key Distribution: a paradigm for distributing keys among individuals and organizations, in which the key distribution and certificate structure reflects the contractual arrangements between parties.Protocol: A sequence of messages between multiple agents.Smart contract: A set of promises, including protocols within which the parties perform on the other promises. The protocols are usually implemented with programs on a computer network, orin other forms of digital electronics, thus these contracts are \"smarter\" than their paper-based ancestors. No use of artificial intelligence is implied.Alice and Bob: Our exemplar parties to a smart contract.Eve: Our exemplar eavesdropper, whose objective is to find out valuable information about about a contract and its performance without being a party to that contract.Mallet: Our exemplar active attacker. His objective might either be stealing something of value involved in the performance of a smart contract, or denying it to the parties to the contract. He might either be an economically rational agent, out for pure personal gain,or Byzantine, a worst-case attacker who inflicts the greatest possible damage on one or more of the parties regardless of personal loss.Mediator: A third party involved realtime in the protocols between smart contract parties, trusted with some of the contents and/or performance of that contract.Arbitrator: A third party trusted with some of the contents,and some of the history of performance, of a contract, and trusted by contracted parties to resolve disputes arising from that contract fairly.Unbundling: The principle of distribution of trust. Unbundling of mediation and arbitration functions separates tasks, spreads risk, minimizes vulnerability, and reduces linkability, but often at the cost of greater complexity.Enemy (aka attacker): An agent whose preferences could cause another agent harm; a third party who influences performance of a contract to the detriment of one or both parties.Object: Herein used to refer generically to any kind of digital data, which could be a key, a credential, a contract, a program, or a wide variety of other things.Credential: A claim made by one agent about another.Positive credential: A claim made about an agent, that the agent would prefer to reveal, such as a degree from a prestigious school.Negative credential: A claim made about an agent, that the agent would prefer not to reveal, such as a bad credit rating.Cryptographic protocol: A protocol that uses mathematical principles and keys to accomplish smart contract objectives.Privity: The principle that only the parties to a contract, including its designated arbitrators, need to have knowledge of or control over the contents and performance of that contract. Privity as an objective of smart contract is a generalization of the legal principle of privity. It formalizes the tradition of \"it's none of your business\". Attacks against privity are epitomized by Eve the eavesdropper, a passive observer of contents or performance, and malicious vandal Mallet, who actively interferes with performance or steals value. Privacy and confidentiality, or protecting the value of information about a contract, its parties, and its performance from Eve, is thus subsumed under privity. Privity often comes into conflict with observability and verifiability.Observability: The ability of the parties to a contract to observe each other's performance of that contract, or to prove their performance to the other party. Also, the ability to differentiate between intentional violations of the contract and good faith errors. An important objective of smart contract design that often comes into conflict with privity.Verifiability: The ability of a party to prove to an arbitrator that a contract has been performed or breached, and to differentiate between intentional violation and good faith errors. An important objective of smart contract design that often comes into conflict with privity.Reputable name: A nym or true name that has a good reputation, usually because it carries many positive credentials, has a good credit rating, or is otherwise highly regarded. Companies strive to carry reputable brand names, while professionals such as doctors and lawyers strive to have many good personal recommendations of their name. Reputable names can be difficult to transfer between agents, because reputation assumes persistence of behavior, but such transfer can sometimes occur (for example, the sale of brand names between companies).True name: An identifier that links many different kinds of information about an agent, such as a full birth name or social security number. As in magick, knowing a true name can confer tremendous power to one's enemies. It also can have major economic value among those who cooperate peacefully, as in the use of direct marketing to target product information to those agents most likely to be interested in those particular products.Mix: A cryptographic protocol for messaging, in which analysis of who is talking to whom (traffic analysis) by Eve is prevented by the Russian-doll encryption of the message by the sender with the public keys of each mix operator in the chain, and the mixing of messages by each operator, so that panoptic wiretapper Eve loses track of the messages. Only 1 out of N of the operators needs to be trusted with the traffic information, although Eve can sometimes gather statistics over large numbers of messages to eventually guess who is talking to whom. The communicating parties can also be mutually anonymous, and with normal encryption need trust no other parties with the content of messages. Confidential messaging is necessary for the some of the privity features of Chaumian credentials and bearer securities to be strongly implemented on an actual network. Another confidential messaging system is the \"Dining Cryptographers\" net, also invented by Chaum.Nym: An identifier that links only a small amount of related information about a person, usually that information deemed by the nym holder to be relevant to a particular organization or community. Examples of nyms include electronic bulletin board nicknames, pen names, aliases, and brand names. A nym may gain reputation within its community. For example, a conglomerate may sell a wide variety of brand names, each reputable in its own market niche. With Chaumian credentials, a nym can take advantage of the positive credentials of the holder's other nyms, as provably linked by the is-a-person credential.Name space: a set of short identifiers with a simple syntax, such as telephone numbers, computer-readable Internet address numbers, human-readable Internet domain names, etc.Chaumian credentials: a cryptographic protocol for proving one possesses claims made about oneself by other nyms, without revealing linkages between those nyms.Is-a-person credential: In Chaumian credentials, the true name credential, used to prove the linkage of otherwise unlinkable nyms, and to prevent the transfer of nyms between agents.Key: A focus of obscurity and control; a random number drawn from a name space so large that a lucky guess is vastly improbable. The public key half of an assymetric key pair can also act as a nym.Biometric: Information pattern used to identify a particular body, such as a fingerprint, autograph, retina scan, password, etc.Authentication: Proof that one is communicating with an agent that possesses a particular key.Secret key (symmetric) cryptography: Uses a key shared between agents to communicate with confidentiality and authentication.Public key (assymmetric) cryptography: Uses two keys, the private key and the public key. The public key is used to encrypt objects,and to verify digital signatures. The private key is used to to decrypt and sign objects, and is typically kept secret by one or more key holders. Allows key distribution without exposing the key.Secret sharing: method of splitting a key (and thus, in effect,any object encrypted with that key) into N parts, of which only M are needed to recreate the key, but less than M of the parts provide no information about the key. A potent tool for distributing control over objects between agents.Digital signature: Cryptographic protocol, based on public key cryptography, that proves that an object was in active contact with the private key corresponding to the signature: the object was actively \"signed\" with that key. Probably should have been called a \"digital stamp\" or \"digital seal\" since its function resembles more those methods than an autograph.Bit commitment: A variant of digital signatures, used to commit an object, such as a promise or prediction, without revealing that object until later. It is impossible to unobservably violate the protocol, or to modify the object after it has been committed.Blind signature: digital signature and secret-key encryption protocols that together have the mathematical property of commutativity, so that they can be stripped in reverse of the order they were applied. The effect is that Bob \"signs\" an object, for which he can verify its general form, but cannot see its specific content. Typically the key of the signature defines the meaning of the signed object, rather than the contents of the object signed, so that Bob doesn't end up signing a blank check. Used in digital bearer instruments, where Bob is the clearing agent, and Chaumian credentials, where Bob is the credential issuer.Digital bearer instruments: Objects identified by a unique key,and issued, cleared, and redeemed by a clearing agent. When an the object is transferred, the transferee can request the clearing agent to verify that the key has never before been cleared, and issue a new key. The clearing agent prevents multiple clearing of particular objects, but can be prevented from linking particular objects one or both of the clearing nyms who transferred that object. These instruments come in an \"online\" variety, cleared during every transfer, and thus both verifiable and observable, and an \"offline\" variety, which can be transferred without being cleared, but is only verifiable when finally cleared, by revealing any the clearing nym of any intermediate holder who transferred the object multiple times (a breach of contract). Privacy from the clearing agent can take the form of transferree-unlinkability, transferrer-unlinkability, or \"double blinded\" where both transferrer and transferee are unlinkable by the clearing agent. Digital cash is a popular form of digital bearer instrument.Locality: * immediacy, such as that provided by online clearing of digital bearer instruments * dealing with the agents one knows best * dealing in one's area of specialtyHot Backup: A backup service which comes online upon failure of the current service. Usually triggered by a dead-man switch.Zero-Knowledge Interactive Proof (ZKIP): A cryptographic protocol that can be used to prove that an agent possesses a key (and by weaker implication, that otherwise normally functioning agents who have an incentive to respond properly to the challenge, but fail to do so, do not possess the key), without revealing any information about that key. Currently used for authentication, and in smart weapons for Identification Friend or Foe (IFF).Smart Property: Software or physical devices with the desired characteristics of ownership embedded into them; for example devices that can be rendered of far less value to agents who lack possession of a key, as demonstrated via a zero knowledge interactive proof. Methods of implementing smart property might include OND (cf.), and engrained immobilizing or destructive devices to foil attempts to hot-wire the property.Operation Necessary Data (OND): Data necessary to the operation of smart property. For example, a complex, proprietary firing sequence needed to operate a computerized engine, a CAD file needed to manufacture a specialized part, etc. To avoid theft of service, ZKIP is required to open an encrypted channel to the device. To avoid leaking the OND to Eve, tamper detection combined with a dead-man switch can be used on the device end of the channel.Smart Lien: Sharing control of smart property between parties, usually two parties called the owner and the lien holder. This property may be in the proximate possession of the owner or the lien holder, corresponding to the common-law notions of \"artisan's lien\" and \"innkeeper's lien\" respectively. Might be used to secure lines of credit, insurance policies, and many other kinds of contracts that involve smart property.Security: Represents a basic asset, such as a share of ownership (stock) or a claim debt (bonds, cash).Contingent contract: Contains terms which depend on the choice of a party or a state of the world. An option is an example of a contingent contract.Derivative: A call or put option, future, or synthetic asset;such a contract is \"derived\" from a basic underlying security.Synthetic asset: A derivative constructed, or \"synthesized\", by combining securities and other derivatives. Cash flows for sophisticated synthetics can be calculated to high precision, by means of finely grained decision trees.Cash flow: The expected sequence of payments according to the terms of a contract. From cash flow can be computed the basic financial objectives of a contract, such as net present value.Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 1995 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "For-Pay Remailers", "completion": "What if you could make money by running a remailer?Right now, most remailer operators are operating out of altruism. This is good in a lot of ways but it has its problems, as recent events have shown:I'm sure we can all think of more. I know that it would be a lot easier to justify continuing to run the remailer to myself if it were bringing in a few dollars a month.I think there are some experiments in for-pay remailers that have been tried. Sameer is, I think, charging for some services, although paerhaps that was just for anonymous return addresses. A long time ago Karl Barrus had a service which required pre-issued \"digital postage stamps\", but I don't think many people used it.The time may be ripe to look at this more seriously. Several factors are coming together:To expand on these:It is obviously difficult to operate a remailer service that charges if other people are offering the equivalent service for free. Since it is pretty easy to start up a remailer, the marginal cost to do so is low, hence the profits are low, too. However, although it is easy to start a remailer, it is not so easy to keep one running in the face of complaints from recipients of abusive mail or inappropriate posts; hassles from sysops, owners, net feeds, or others upwards in that great chain of command; possible law enforcement problems when illegal communications occur; possible threats of lawsuits (such as from the scientologists when their sacred documents are posted), etc. So we should not be misled into thinking that running a remailer is cost free.On the other hand I should be clear that I would not expect to make a killing on this service. Something on the order of a penny a message seems reasonable just at a guess. Maybe it should be a factor of 10 higher or lower.One issue is of course the additional difficulty this will cause in the use of the remailer. There are several things to consider here. On the one hand you could argue that it is already too difficult to use the remailers, and any additional hassles involved with including some kind of payment tokens would kill the market. OTOH I can agree in spirit with the sentiments expressed here recently about the low quality which seems to characterize much of the use of the remailers.I don't look at messages, but occasionally I do see bounces, and very frequently they are ugly little flames or similar worthless material. Now, I hope that I am seeing the dregs, that the kinds of clueless people who make the mistakes which cause me to see the messages are the ones least likely to use the service in a worthwhile manner. But still, it is discouraging. In that context, maybe making the system a little harder to use would be worthwhile, in that it would screen out the casual harrasser. (Or, more realistically, this might just keep the exceptionally motivated harrassers.)In any case, I think the presence of the remailer scripts can make using a for-pay remailer not much more difficult than using a free one. If the cost is as low as I suggested and the inclusion of payment tokens is nearly automatic, then adding costs should not have much negative impact on use, certainly not on meaningful, worthwhile use.And even a modest cost might arrest the wholesale spamming that Detweiler and/or the recent \"Scythe\" seem to love. At least we would be paid for enduring the hassle of the complaints.Now, the next question is the details of the payment. Frankly, I don't think any of the current systems are quite right for us due to our special needs, but things are changing rapidly. Let me describe something about how they work.I know of two systems that are VISA/Mastercard based. One is called First Virtual (http://www.fv.com). They are oriented towards information sales and say that they aren't for service providers, but in practice it looked to me like they could be used for services. When a customer wants to pay, he sends you his FV ID. You send this to FV and they send an email message to the customer asking whether he authorizes the payment. If he says \"yes\", FV credits your account. You get a check every month. Customers who always say \"no\" get booted out of the system (as do merchants who submit bogus bills). They charge 29 cents plus 2 percent per transaction, but merchants can batch up multiple orders by a single customer before sending it in.There are a few problems with a system like this, many of which are somewhat generic to our situation. The most fundamental is that we don't know who our customers are much of the time. In fact, the whole point of the remailer network is that we not know that fact for any case except the first hop in the chain. If we required customers to expose their FV account ID at every hop, it would make it a lot easier to track messages through the network (even if the ID's were hidden in the encryption envelope it seems risky). If we then sent a message to FV saying that we needed to charge ID XXX, and FV responds with an email to the person's home address, this offers more possibilities for tracing.One solution would be only to charge on entry into the remailer net. Perhaps remailer operators would even charge each other then, and the first remailer would charge some larger amount to deal with a \"typical\" chain length? Many interesting possibilities here.Another issue is that the overhead charges by FV would require batching up messages before submitting them. Let me make clear that the batch must consist all of charges to a single user. It doesn't do any good to send one message to FV asking them to please charge a penny to each of 100 VISA accounts. No, you would have to count messages from each user, separately, and when user XXX had sent, say, $1 worth of messages, you could send in the request to FV and get back 70 or so cents.So this adds some overhead and record-keeping that we don't currently have to do, although perhaps it is not so difficult. But it would raise new questions of authenticating FV ID's, and shares some of the negative privacy impacts and message linking issues mentioned above.The other VISA based system is called OpenMarket. I just read about it tonight so I don't know it as well (http://www.openmarket.com). It is pretty tied to the WWW so it would not seem to work for us. Customers get connected to a particular WWW server which authenticates them and charges their VISA card appropriately, then they get redirected to the merchant with some kind of token that says they have paid.The NetBank (email to netbank-intro@agents.com) is a digital-cash like system. Customers get tokens which are basically large secret numbers which have a cash value. They send them to the merchants, and the merchants then send them to the bank which credits their account. The NetBank sends you a check every month.The interesting thing is how customers buy the cash tokens. One way is by connecting to a 900 number with your modem. They charge the customer $10.00 and give him a digital cash token worth that much. Another way is by faxing a check to them. I wasn't clear on how you get the cash token back in that case; I guess they email it to you at an address you specify. From the privacy point of view, these are not that great; 900 numbers have Automatic Number Identification so unless you are willing to tramp out to a pay phone to get your cash then it could be linked to your phone number. And the fax system must have some kind of return address that would link to you.The other problem with NetBank is that the smallest denomination which can be spent is 25 cents. Due to the cash-like nature of the tokens, I don't see a natural way to accumulate several messages into one payment. Maybe we could layer our own low-value digital cash system on top of NetBank, where users could buy our anonymous cash for 25 cents and get enough tokens for 25 messages, then we would settle amongst ourselves (or actually with the anon-mail-token bank). Actually this might help with the privacy problems, too. Anonymous digital cash is heavily patented, though.With a cash-like system, each message would include a numeric token in the header which is the digital cash. The remailer would strip that out and send it in for credit. This is a simple system and could be largely automatic. However there are some tricky issues about cheaters re-using cash.NetBank charges $4 per month, plus, for the 900-number-based cash, 20% off of face value.The last system I'll describe is David Chaum's DigiCash (http://www.digicash.com). Chaum is the inventor of digital cash and he certainly knows his stuff, plus as I said he has the intellectual property pretty well sewed up patent-wise. The DC payment system is also WWW based at present. The customer has to be running a special program on his computer, separate from his web browser. This program holds his digital cash, which is similar conceptually to the NetBank cash but more sophisticated cryptographically. When he wants to buy something, the merchant's web server makes a connection to the customer's DC program, and it transfers the cash to the merchant.DigiCash says they are planning an email based system but for now their emphasis is on the WWW. Right now they are only in beta and not using real money. I don't know when they will be real and email based, and I don't know if they have said what their commission will be. But when this comes up it may be the best approach if small-value transactions can be supported. DigiCash is fully anonymous in the sense that once a customer receives the money, it is \"blinded\" in a special cryptographic way so that the bank cannot associate it with that customer (and no one else can, either). This kind of anonymity fits in very well with our remailer requirements.Well, I know this is a lot of information to work through, but mostly I want people to be aware of the possibilities. Most of this stuff is very, very new, only weeks old, generally. Probably over the next few months we will see a lot more options appear. I am confident that there will soon be payment systems that would provide the technical basis for fee based remailing. I don't expect anyone to get rich by this, but it might help compensate for the risks we all face, and it might serve to improve the quality of the remailer network.Hal Finney\nhal@rain.orgHal Finney Home Page"}
{"prompt": "Politics vs Technology", "completion": "This position seems to be fast becoming cypherpunks dogma, but I don't agree. The notion that we can just fade into cypherspace and ignore the unpleasant political realities is unrealistic, in my view.Have people forgotten the Clipper proposal, with the possible follow-on to make non-Clipper encryption illegal? To the extent this proposal has been or will be defeated, it will happen through political maneuvering, not technology.Have people forgotten the PGP export investigation? Phil Zimmermann hasn't. He and others may be facing the prospect of ten years in prison if they were found guilty of illegal export. If anyone has any suggestions for how to escape from jail into cyberspace I'd like to hear about them.Mike's SecureDrive is a terrific program for protecting privacy. But if we want to keep keys secret from politically-motivated investigations, we have to rely on the very political and non-technological Fifth Amendment (an amendment which Mike Godwin of EFF and others contend does not actually protect disclosure of cryptographic keys). Again, we need to win political, not technological, victories in order to protect our privacy.I even question Mike's point about the government's inability to ban books. Look at the difficulty in keeping PGP available in this country even though it is legal. Not only have FTP sites been steadily closed down, even the key servers have as well. And this is legal software.Sure, this software is currently available overseas, but that is because PGP's only legal limitations are the U.S. patent issues. Imagine how much worse it would be if non-escrowed encryption were made illegal in a broad range of countries, with stringent limits on net access to countries which promote illegal software? Here again, these kinds of decisions will be made in the political realm.Fundamentally, I believe we will have the kind of society that most people want. If we want freedom and privacy, we must persuade others that these are worth having. There are no shortcuts. Withdrawing into technology is like pulling the blankets over your head. It feels good for a while, until reality catches up. The next Clipper or Digital Telephony proposal will provide a rude awakening.Hal Finney\nhal@rain.orgHal Finney Home Page"}
{"prompt": "The Case for Privacy", "completion": "An old science fiction novel features a device that surrounds its bearer with an impenetrable bubble of force. The inventor rapidly discovers that every government and political faction on the planet wants what he has and is prepared to use any means, from persuasion to brute force, to get it. Our hero spends most of the book alternately listening to arguments, trying to decide who are the good guys and using his invention to help him escape attempts to capture him.After about a hundred and fifty pages he realizes that he has been asking the wrong question. The answer to \"what faction can be trusted with a monopoly over the shield\" is \"no.\" The right question is how the shield will affect the world\u2014how it will alter the balance between freedom and oppression, individual and state, small and big. The answer to that is easy. A world where the random individual is armored against anything short of an atomic explosion will be, on net, a better and freer world than the one he is currently living in. He writes out an explanation of how the shield works and spends two days distributing the information to people all over the world. By the time Military Security\u2014the most formidable of his pursuers\u2014catches up with him, it is too late. The cat is out of the bag.Poul Anderson's shield is fiction. The nearest real world equivalent is privacy\u2014my control over other people's access to information about me. Neither my government nor my neighbor can punish my thoughts, because neither can read my mind. That is why thoughts are free. However much other people are offended by what I write, they cannot retaliate unless they know who wrote it, what he looks like, where he lives. That is why Salmon Rushdie is still alive despite the death sentence passed on the author of The Satanic Verses fifteen years ago by Iranian authorities.Defensive weapons can be used for bad purposes; an impenetrable shield would be very useful for a bank robber. But it would be even more useful for the bank teller. Robbing banks would be harder in a world where everyone had the shield than in a world where nobody did.The ability to control other people's access to information about you can be used for bad purposes too. That is the usual argument against privacy\u2014\"If you haven't done anything wrong, what do you have to hide?\" The ability to conceal past crimes from the police and potential victims is useful to a robber. But the ability to conceal what I have that is worth stealing, where it is, how it is protected, is equally useful to the potential victim. Broadly stated, privacy gives each of us more control over his own life\u2014which on average, if not in every case, is likely to lead to a freer world.If I am a bad guy, the police are not the only people I might want to keep secrets from. When courting a wealthy widow, it helps if she does not know that my last three wives drowned in their bath tubs after taking out large life insurance policies. When borrowing money, it helps if the lender does not know that I have declared bankruptcy twice already.But in a world of voluntary transactions\u2014such as loans and marriages\u2014my privacy does not require you to take me on faith. You have the option of not taking me. I have the power to keep my past defaults secret from a potential lender but he has the power to refuse to lend to me if I do. Privacy is my ability to control other people's access to information about me. That does not mean that they cannot get the information\u2014only that they cannot get it without my permission. Someone who offers to take care of my children but refuses to allow me access to the records that would show whether or not he has ever been convicted of child abuse has already told me all I need to know.In some contexts I am willing to let other people know things about me. In others I am eager to. If only lenders knew a little more about my finances I would not be interrupted at dinner by phone calls from people offering to refinance my nonexistent mortgage. If sellers were better informed about what sorts of things I was interested in buying, advertisements would be less of a nuisance and more of a service. Even in a world where I could keep information secret, I often would choose not to. Privacy provides me protection when I want it and only when I want it.Government is not reason. It is not eloquence. It is a force, like fire: a dangerous servant and a terrible master.Privacy includes the ability to keep things secret from the government. The better I can do that, the less able government is to help me\u2014I might be keeping secret my weakness for alcohol, or heroin, or gambling or pornography and so preventing the government from stepping in to protect me from myself. And the better other people can keep secrets from the government, the harder it is for the government to protect me from them. If you view government as a benevolent super being watching over you\u2014a wise and kindly uncle with a long white beard\u2014you will and should reject much of what I am saying.But government is not Uncle Sam or a philosopher king. Government is a set of institutions through which human beings act for human purposes. Its special feature\u2014what differentiates political action from the other ways in which we try to get what we want\u2014is that government is permitted to use force to make people do things. A firm can try to fool me into giving it my money. A tax collector uses more direct methods. A preacher can try to persuade me to renounce my sins. The Drug Enforcement Administration, with the help of the local police, can arrange to have me locked up until I do.Part of the genius of American political culture is the recognition that making it hard for governments to control people is not always a bad thing. Political mechanisms, even in a democracy, give us only very limited control over what government can do to us. Reducing government's ability to do bad things to us, at the cost of limiting its ability to protect us from bad things done to us by ourselves or by other people, may not be such a bad deal. And since government, unlike a private criminal, has overwhelming superiority of physical force, control over what information it can get about me is one of the few ways in which I can limit its ability to control me.I have defined privacy and sketched the reasons why I think it is, on the whole, a good thing. The obvious next questions are where privacy comes from\u2014what determines how much of it we have\u2014and what we can and should do to get more of it.One of the things that determines how much control I have over other people's access to information about me is technology. If someone invents a mind reading machine or a reliable truth drug, my thoughts will no longer be as private as they now are. Or as free.Another is custom\u2014systems of social norms. The more willing my friends and neighbors are to gossip about something, the easier it is for information about that something to get from those who have it to those who want it. That is one reason why Israelis are better informed about how much money their friends and relations make than Americans are and modern Americans better informed about other people's sex lives than nineteenth century Britons were.A final factor is law. In the U.S., the Fourth Amendment to the Constitution prohibits \"unreasonable searches and seizures\" and requires that search warrants shall only be issued with probable cause. The more narrowly courts interpret that restriction, the easier it is to keep secrets from the police. One important example is the series of cases that applied the restriction to wiretaps as well as physical searches. Later cases have ruled on to what extent the use of high tech devices to figure out what people are doing inside their houses\u2014infrared photographs to spot illegal greenhouses growing marijuana, for example\u2014is a search and so requires a warrant.Law and technology interact in complicated ways. For your neighbor's nosy fifteen year old to use a scanner to listen to the phone calls you make on your wireless phone and tell his friends about them is illegal. It is also easy, making that particular legal protection of privacy in practice unenforceable. The substitute is technology\u2014encryption of the signal from the handset to the base station. Similarly with cell phones.As these examples suggest, technological developments can both decrease and increase privacy. So can law. Legal rules that ban or limit technologies for learning things about other people, such as laws against wiretaps, increase privacy. Legal rules that ban or limit technologies for preventing other people from learning things about us, such as restrictions on the use of encryption, decrease it.It used to be that one reason to move from a village to the big city was to get more privacy. Walls were no higher in the city, windows no less transparent. But there were so many more people. In the village, interested neighbors could keep track of what who was doing with whom. In the city, nobody could keep track of everyone.That form of privacy\u2014privacy through obscurity\u2014is doomed. I cannot keep track of the million people who share the city I live in. But the computer on my desk has enough space on its hard drive to hold a hundred pages of information on every man, woman and child in San Jose. With a few hundred dollars worth of additional storage, I could do it for everyone in California, for a few thousand, everyone in the country. And I can do more than store the information. If I had it I could search it\u2014produce, in a matter of seconds, a list of those of my fellow citizens who are left handed gun owners with more than six children. Privacy through obscurity cannot survive modern data processing.As it happens, I do not have a hundred pages worth of information on each of my fellow citizens. But with a little time and effort\u2014too much for a single individual, but not too much for a government, a police department, or a large firm\u2014I could. It is hard to pass through the world without leaving tracks. Somewhere there is a record of every car I have registered, every tax form I have filed, two marriages, one divorce, the birth of three children, thousands of posts to online forums on a wide variety of subjects, four published books, medical records and a great deal more.Much such information, although not all of it, was publicly available in the past. But actually digging it up was a lot of work. The result was that most of us went through life reasonably sure that most of the people we met did not know much about us beyond what we chose to tell them. That will not be true in the future.Data processing is one technology with the potential to sharply reduce privacy. Another is surveillance. One form\u2014already common in England\u2014is a video camera on a pole.A video camera in a park connected to a screen with a police officer watching it is, at first glance, no more a violation of privacy than the same police officer standing in the park watching what is going on. It merely lets the officer do his watching somewhere warm and out of the wet. Add a video recorder and it is arguably an improvement, since the evidence it produces is less subject to mistake or misrepresentation than the memory of the policeman. And, judging by British experience, such surveillance cameras are an effective way of reducing crime. What's the problem?To see the answer, add one more technology\u2014face recognition software. Combine that with a database, put up enough cameras, and we have a record of where everyone was any time of the day and\u2014with suitable cameras\u2014night. The arresting officer, or the prosecuting attorney, no longer has to ask the defendant where he was at eight P.M. of July ninth. All he has to do is enter the defendant's social security number and the date and the computer will tell him. And, if the defendant was in a public place at the time, show him.For a slightly lower tech version of the same issue, consider the humble phone tap. In the past, the main limit on how many phones got tapped by police was not the difficulty of getting a court order but the cost of implementing it. Phone taps are labor intensive\u2014someone has to listen to a lot of phone calls in order to find the ones that matter.That problem has now been solved. Voice recognition software originated by companies such as Dragon Systems and IBM lets computers convert speech into text\u2014a boon for computer users who are slow typists. The same technology means that the police officer listening to someone else's phone calls can now be replaced by a computer. Only when it gets a hit, spots the words or phrases it has been programmed to listen for, does it need to call in a human being. Computers work cheap.In an old comedy thriller (The President's Analyst, starring James Coburn) the hero, having temporarily escaped his pursuers and made it to a phone booth, calls a friendly CIA agent to come rescue him. When he tries to leave the booth, the door won't open. Down the road comes a phone company truck loaded with booths. The truck's crane picks up the one containing the analyst, deposits it in the back, replaces it with an empty booth and drives off.A minute later a helicopter descends containing the CIA agent and a KGB agent who is his temporary ally. They look in astonishment at the empty phone booth. The American speaks first:\"It can't be. Every phone in America tapped?\"The response (you will have to imagine the Russian accent)\"Where do you think you are, Russia?\"A great scene in a very funny movie\u2014but it may not be a joke much longer. The digital wiretap bill, pushed through Congress by the FBI a few years ago, already requires phone companies to provide law enforcement with the ability to simultaneously tap one percent of all phones in a selected area. There is no obvious reason why that cannot be expanded in the future. My current estimate is that the dedicated hardware to do the listening part of the job\u2014for every phone call in the U.S.\u2014would cost less than a billion dollars. And it is getting cheaper.So far I have been discussing technologies that already exist. Fast forward a little further and surveillance need no longer be limited to public places. Video cameras are getting smaller. It should not be all that long before we can build one with the size\u2014and the aerodynamic characteristics\u2014of a mosquito.Here again, if we regard government law enforcement agents as unambiguously good guys, there is no problem. The better our record of where everyone was when, the easier it will be to catch and convict criminals.The same technology would make keeping track of dissidents, or political opponents, or members of an unpopular religion, or people with the wrong sexual tastes, or people who read the wrong books, or anyone else, a great deal easier than it now is. It is true that the random government is rather less likely to have bad intentions than the random criminal. But if it does have bad intentions it can do a great deal more damage.The technologies I have been discussing so far\u2014database and face recognition software, surveillance hardware\u2014have the potential to make this a much less private world. So do other technologies that I have not covered: improvements in lie detectors and interrogation drugs to learn what we think, biometric identification by fingerprints, retinal patterns, DNA to learn who we are, with or without our permission. The future implications of such developments are sufficiently strong to have convinced at least one thoughtful observer that the best we can hope for in the future is a transparent society, a world without privacy where the police can watch us but we can also watch them (Brin 1999). I would find the symmetry of that future more appealing if it did not conceal an important asymmetry: They can arrest us and we cannot arrest them.But there are other technologies.We start with an old problem: How to communicate with someone without letting other people know what you are saying. There are a number of familiar solutions. If worried about eavesdroppers, check under the eaves. To be safer still, hold your private conversation in the middle of a large, open field, or a boat in the middle of a lake. The fish are not interested and nobody else can hear.That no longer works. The middle of a lake is still within range of a shotgun mike. Eaves do not have to contain eavesdroppers\u2260just a microphone and a transmitter. Phone lines can be tapped, cordless or cell phone messages intercepted. An email bounces through multiple computers on its way to its destination\u00e3anyone controlling one of those computers can save a copy for himself.The solution is encryption. Scramble the message. Provide the intended recipient with the formula for unscrambling it. Now it does not matter if someone intercepts your mail. He can't read it.There is still a problem. In order to read my scrambled message you need the key\u2260the formula describing how to unscramble it. If I do not have a safe way of sending you messages, I may not have a safe way of sending you the key either. If I sent it by a trusted messenger but made a small mistake as to who he was really working for, someone else now has a copy and can use it decrypt my future messages to you.About twenty-five years ago, this problem was solved. The solution is public key encryption. It works by using two keys, each of which decrypts what the other encrypts. One of the two\u2014my public key\u2014I make available to anyone who might want to send me a message. The other never leaves my hands. Someone who wants to communicate with me encrypts his messages with my public key. I use my private key to decrypt them.Public key encryption provides a free bonus\u2014digital signatures. In order to prove that a message was sent by me I can encrypt it using my private key. The recipient decrypts it using my public key. The fact that what comes out is text rather than gibberish proves it was encrypted with the matching private key\u2014which only I have. Hence, unless I have been very careless, the message is from me.Imagine a world where public key encryption is in general use. Add in related technologies such as anonymous digital money, to permit payments that leave no paper trail, and anonymous remailers, to keep who I am talking to, as well as what I am saying, private\u2014for details see (Friedman 1996). In that world I can email someone\u2014anyone\u2014with reasonable certainty that nobody else can read the message. I can have telephone conversations without worrying about who may be listening. In that world I can if I wish establish an online persona\u2014an identity defined by my digital signature\u2014while keeping control over the link between that and my realspace persona. However much my online persona offends someone\u2014even the rulers of Iran\u2014there is very little anyone can do about it. It is hard to murder someone when you don't know his name, what he looks like, or what continent he is on.I have been describing things we already know how to do. Most can already be done\u2014using free software that runs on the computers most of us have. I now take a small step forward to add one more element to the mix: Virtual reality. Using goggles and earphones\u2014if we are willing to step further into science fiction, direct links between mind and computer\u2014we create the illusion of seeing, hearing, perhaps tasting and touching. The world of strong privacy expands from text messages and phone conversations to something very much like the real world we currently live in. Just let your fingers do the walking.I have described two clusters of technologies. One\u2014database, voice and text recognition, surveillance\u2014has the potential to reduce privacy to the point where those who control the technology know very nearly everything that everyone does. The other\u2014encryption, online communication, virtual reality\u2014has the potential to increase privacy to the point where individuals have nearly total control over other people's access to information about them. What if we get both?It will be an interesting world. Everything you do in realspace will be known to the authorities, perhaps to everyone\u2014David Brin's Transparent Society. But most of the important stuff\u2014all transactions involving information, ideas, arguments, beliefs\u2014will have been moved to cyberspace, protected by the strong privacy of encryption. Freedom of speech will no longer depend on how the Supreme Court interprets the First Amendment. It will be protected, instead, by the laws of mathematics\u2014which so far, at least, heavily favor defense over offense, encryption over cracking.There will be\u2014already have been\u2014attempts to use law to block both futures. Supporters of privacy will try to get laws restricting the ability of law enforcement\u2014and other people\u2014to use technology to learn our secrets. Opponents of privacy will try to get laws restricting the ability of private individuals to use encryption to protect their secrets.There are at least two legal approaches to preserving privacy in the face of technologies such as computer databases and surveillance. One is to use law to prevent other people from getting information\u2014a data base is of no use if there is nothing in it. The other is to permit other people to get information but use law to limit what they can do with it.An example of the first approach is regulation of wire tapping and other forms of surveillance\u2014both laws against private surveillance and laws restricting surveillance by law enforcement agents. Such restrictions can keep some information about me from getting to other people. But they do nothing to protect the vast amount of information that I generate by going about my daily life in the public view\u2014buying and selling, marrying and getting divorced, writing and talking.An example of the second approach is the web of restrictions, legal, contractual, and customary, on the use of confidential information. I cannot keep my doctor from having access to the medical information he creates when he examines me and uses when he prescribes for me. But I can, to some limited degree, prevent him from sharing that information with other people. Credit bureaus are free to collect information on people in order to advise other people as to whether to lend them money but, under current Federal law, they are only permitted to release that information in response to requests from people who have a legitimate need for it.As the example of credit bureaus suggests, there are practical difficulties with protecting privacy by letting other people have information and then controlling what they do with it. Credit agencies could not serve their intended purpose at any reasonable cost if they engaged in an extensive investigation of everyone who asked for information. And even if the agency limits itself to giving the information to people who can prove they are entitled to it, there is no way it can control who they then give it to. It is probably prudent to assume that what the credit agency knows about you any else can know if he really wants to. The forms you sign when you shift to a new doctor include an extensive list of people to whom and circumstances under which your medical information will be made available, so it might be equally prudent not to rely too much on your medical privacy.As long as we limit our options to current technologies for protecting privacy, the outlook does not look good. We might succeed in restricting the use of surveillance, wiretapping, and similar technologies, although attempts to restrict their use by law enforcement face serious opposition by those concerned with the threat of crime and terrorism. But most information about us is public, and once information is out it is hard to control how other people use it or who they give it to.The technologies of strong privacy offer at least a partial solution. If I make a purchase with a credit card, I create a paper trail\u2014someone, somewhere, knows what I bought. Even if I use cash, a purchase in real space requires me to walk into a store where someone sees me\u2014the information about what I bought is now his as well as mine. In a world where the relevant software is a little better than it now is\u2014say ten years in the future\u2014that someone is a store video camera linked to facial recognition software linked to a database. Stores, after all, like to know who their customers are.If, however, I buy something over the phone or over the internet, using the digital equivalent of cash\u2014anonymous digital currency\u2014only I know that I bought it. If the something is not a physical object that must be delivered to me but information\u2014music, data, software\u2014I can collect my purchase online without ever revealing my identity or location.Thus the technologies of encryption and computer networking can permit us, to a considerable extent, to move through the world without leaving footprints behind. If I want to receive advertising based on my past purchases\u2014as it happens I often do\u2014I can choose to make those purchases under my real name and provide my real address. If I want to receive the advertising without making my acts publicly observable\u2014perhaps I am purchasing pornography\u2014I can do it via an online identity. The link that ties my realspace body to my cyberspace persona is under my control. I have privacy\u2014control over other people's access to information about me.If we go a little further into science fiction I could even have privacy from my doctor. He knows the information that an examination\u2014via remote controlled devices\u2014revealed about me. He does not need to know what my name is, my face looks like, or where I live. It is not likely that I would want to carry my privacy that far\u2014but I could.So far I have been considering ways in which we might preserve privacy against the threat posed by technology. But there is another side to the story. For those who think that we already have too much privacy, what I view as the solution may look more like the problem. There have already been attempts to restrict the use of encryption to protect privacy. There will be more.Suppose I concede, at least for the purposes of argument, that it is possible to have too much privacy as well as too little. Further, and less plausibly, suppose I believed that the strong privacy provided by encryption is a serious problem. How might one use law to solve it?One difficulty is that encryption regulation poses the problem summed up in the slogan\u2014\"when guns are outlawed, only outlaws have guns.\" The mathematics of public key encryption have been public for decades. The software to do it already exists in a variety of forms, some of them freely available. Given the nature of software, once you have a program you can make an unlimited number of copies. Keeping encryption software out of the hands of spies, terrorists, and competent criminals is not a practical option. They probably have it already, and if they don't they can easily get it. The only people affected by a law against encryption software are the law abiding.What about banning or restricting the use of encryption\u2014at least encryption that cannot be broken by law enforcement agents? To enforce such a ban law enforcement agencies could randomly monitor all communication systems, looking for illegally encrypted messages. One practical problem is the enormous volume of information flowing over computer networks. A second and even more intractable problem is that while it is easy enough to tell whether a message consists of text written in English, it is very much harder\u2014in practice impossible\u2014to identify other sorts of content well enough to be sure that they do not contain encrypted messages.Consider a three million pixel digital photo. To conceal a million character long encrypted message\u2014an average sized novel\u2014I replace the least significant bit of each of the numbers describing the color of a pixel with one bit of the message. The photo is now a marginally worse picture than it was\u2014but there is no way an FBI agent, or a computer working for an FBI agent, can know precisely what the photo ought to look like.Short of banning communication over computer networks or at least restricting it to text messages, there is no way that law enforcement can keep sophisticated criminals, spies, or terrorists from using encryption. What can be done is to put limits on the encryption software used by the rest of us\u2260to insist, for example, that if AOL or Microsoft builds encryption into their programs it must contain a back door permitting properly authorized persons to read the message without the key.This still leaves the problem of how to give law enforcement what it wants without imposing unacceptably high costs on the rest of us. Consider the description of adequate regulation given by Louis Freeh, at the time the head of the FBI\u2014the ability to crack any encrypted message in half an hour. The equivalent in realspace would be legal rules that let properly authorized law enforcement agents open any lock in the country in half an hour. That includes not only the lock on your front door but the locks protecting bank vaults, trade secrets, lawyers' records, lists of contributors to unpopular causes, and much else.Encryption provides the locks for cyberspace. If all legal encryption comes with a mandatory back door accessible in half an hour to any police officer with a court order, everything in cyberspace is vulnerable to a private criminal with the right contacts. Those locks have billions of dollars worth of stuff behind them\u2260money in banks, trade secrets in computers and in messages. If being a police officer gives you access to locks with billions of dollars behind them, in cash, diamonds, or information, some cops will become criminals and some criminals will become cops.In one important way, the consequence for cyberspace is even worse than the equivalent in realspace. If a police officer opens a safe and pockets a stack of cash or a bag of diamonds, the owner can see that something is missing and demand it back. But when information is copied the original is still there. If the officer who has decrypted your communications or stored data assures you that he found nothing relevant to his investigation and so took nothing away, there is no way to prove he is lying.For encryption regulation to be useful it must either prevent the routine use of encryption or make it easy for law enforcement agents to access encrypted data and messages. Not only would that seriously handicap routine transactions, it would make computer crime easier by restricting the technology best suited to defend against it. And what we get in exchange is protection not against the use of encryption by sophisticated criminals and terrorists\u2260there is no way of providing that\u2260but only against its use by ordinary people and unsophisticated criminals. It does not look like a very attractive deal.Some years ago Professor Etzioni, who has contributed a chapter to this volume, published a book arguing for some restrictions on privacy as ways of promoting the common good. In reading it, I was struck by two differences between our views that explain much of the difference in our conclusions.The first was that I did, and he did not, define privacy in the context of freedom of association. Consider the question of airlines requiring their pilots to be tested for drugs and alcohol. Professor Etzioni regards that as a (desirable) restriction on the pilots' privacy. I agree that it is desirable but not that it restricts privacy.In a society where privacy is protected you have a right not to be tested. You do not have a right to be hired to fly airplanes\u2014and, if you choose to exercise your right not to be tested, you should not be surprised if the airline exercises its right not to hire you. The background legal principle is not that I have a right to be hired as a pilot or that United Airlines has a right to have me fly their planes. The background principle is that they can hire me to fly their planes if and only if both they and I agree. Given that principle of free association many\u2014although not all\u2014of the problems that Professor Etzioni sees with privacy vanish.The second difference has to do with our different views of government. While Professor Etzioni makes occasional references to the risk of some future oppressive government misusing information, he does not take seriously similar concerns with regard to our current government. His implicit assumption is that government is to be viewed as a benevolent agent standing above the human struggle, not as a mechanism through which individuals seek to achieve their goals, often at the expense of other individuals. That is not a view that strikes me as realistic.Privacy, like almost anything else, can be used for good or bad purposes. My thesis in this chapter is that, on net, more privacy makes the world a better place. It does so because it is an essentially defensive weapon, a way of reducing the ability of other people to control us.Reducing the ability of other people to control us is not always a good thing\u2014someone may, after all, want to control me for my own good or control you to keep you from hurting me. But we live in a world where too much control is more of a problem than too little. In the entire world over the past century, something on the order of ten million people have been killed by private murderers. Between a hundred and two hundred million have been killed by the governments that ruled them (Rummel (1999) estimates about 170 million from 1900 to 1987). Quite a lot of individual pain, suffering, injustice has been due to the acts of private individuals; some could have been prevented by better law enforcement. But mass pain, suffering and injustice has been very nearly a monopoly of governments. If governments were better able to control us, there would have been more of it. And at the individual level, while privacy can be used to protect criminals against police, it can also be used to protect victims against criminals.It is tempting to try for the best of both worlds\u2014to restrict the privacy of bad people while protecting that of good, permit governments to collect detailed information about us but only allow it to be used for good purposes. But somebody must decide who are the good people and the bad, what purposes are worthy or unworthy. Whoever that somebody is will have his own agenda, his own purposes. Angels are in short supply.To put the matter differently, \"cannot\" is better protection than \"may not.\" If we permit law enforcement agents to know everything about everybody but forbid them fro using that information against individuals with unpopular views or political opponents of the party in power, we are protected only by a \"may not.\" The same is true if private parties are able to collect information but restricted in what they may do with it. If the law keeps the information from being collected in the first place, we are protected by a cannot\u2014however corrupt or dishonest they are, or however convinced that they are working for a greater good, people cannot use information they do not have.\"Cannot\" at one level may depend on \"may not\" at another. You cannot use information that you do not have. You do not have it because you may not collect it. But even if the law forbids wiretaps or unauthorized surveillance, a sufficiently determined agency\u2014or a sufficiently competent private criminal\u2014can violate the law. That is where technologies that support privacy come into the picture. In a world where encryption is routine it does you no good to tap my phone because you cannot understand what I am saying. It does no good to intercept my email because you cannot read it. \"Cannot\" is better than \"may not.\"We can and should fight a delaying action against the use of technology to restrict privacy. But in the long run technology\u2014useful technology\u2014is hard to stop. In the long run, the real battle will be the one fought in defense of technologies that protect privacy. That one we might win.Brin, David (1999), The Transparent Society: Will Technology Force Us to Choose Between Privacy and Freedom? Perseus (The first chapter is webbed at http://www.kithrup.com/brin/tschp1.html)Etzioni, Amitai (1999), The Limits of Privacy, Basic Books.Friedman, David (1996) \"A World of Strong Privacy: Promises and Perils of Encryption,\" Social Philosophy and Policy, pp. 212-228. Webbed at http://www.daviddfriedman.com/Academic/Strong_Privacy/Strong_Privacy.htmlRummel, Rudolph J. (1999), Statistics of democide: Genocide and mass murder since 1900, Lit Verlag.Anderson, Poul, ShieldEllen Frankel Paul, Fred D. Miller, Jr., & Jeffrey Paul (Eds). (2000) The Right to Privacy, Cambridge University Press.http://www.mega.nu:8080/ampp/rummel/20th.htm (detailed statistics on 20th century democide)http://www.daviddfriedman.com/future_imperfect_draft/future_imperfect.html (Much more detailed account of encryption, surveillance, and much else.)David Friedman is a professor of law at Santa Clara University; his specialty is the economic analysis of law and his current interests include the effect of technology on the world over the next few decades. His most recent book is Law's Order: What Economics has to do with Law and Why It Matters. You can learn more than you want to know about both him and his ideas at www.daviddfriedman.com."}
{"prompt": "Money, Blockchains, and Social Scalability", "completion": "Blockchains are all the rage. The oldest and biggest blockchain of them all is Bitcoin, which over its eight-year history so far starshipped in value from 10,000 bitcoins per pizza (before there were exchanges that priced bitcoin in traditional currencies) to over $1,000 per bitcoin. As of this writing Bitcoin has a market capitalization of over $16 billion. Running non-stop for eight years, with almost no financial loss on the chain itself, it is now in important ways the most reliable and secure financial network in the world.The secret to Bitcoin\u2019s success is certainly not its computational efficiency or its scalability in the consumption of resources. Specialized Bitcoin hardware is designed by highly paid experts to perform only one particular function\u2014to repetitively solve a very specific and intentionally very expensive kind of computational puzzle. That puzzle is called a proof-of-work, because the sole output of the computation is just a proof that the computer did a costly computation. Bitcoin\u2019s puzzle-solving hardware probably consumes in total over 500 megawatts of electricity. And that is not the only feature of Bitcoin that strikes an engineer or businessman who is focused on minimizing resource costs as highly quixotic. Rather than reduce its protocol messages to be as few as possible, each Bitcoin-running computer sprays the Internet with a redundantly large number of \u201cinventory vector\u201d packets to make very sure that all messages get accurately through to as many other Bitcoin computers as possible. As a result, the Bitcoin blockchain cannot process as many transactions per second as a traditional payment network such as PayPal or Visa. Bitcoin offends the sensibilities of resource-conscious and performance-measure-maximizing engineers and businessmen alike.Instead, the secret to Bitcoin\u2019s success is that its prolific resource consumption and poor computational scalability is buying something even more valuable: social scalability. Social scalability is the ability of an institution\u2014a relationship or shared endeavor, in which multiple people repeatedly participate, and featuring customs, rules, or other features which constrain or motivate participants\u2019 behaviors\u2014to overcome shortcomings in human minds and in the motivating or constraining aspects of said institution that limit who or how many can successfully participate. Social scalability is about the ways and extents to which participants can think about and respond to institutions and fellow participants as the variety and numbers of participants in those institutions or relationships grow. It's about human limitations, not about technological limitations or physical resource constraints. There are separate engineering disciplines, such as computer science, for assessing the physical limitations of a technology itself, including the resource capacities needed for a technology to handle a greater number of users or a greater rate of use. Those engineering scalability disciplines are not, except by way of contrast with social scalability, the subject of this essay.Even though social scalability is about the cognitive limitations and behavior tendencies of minds, not about the physical resource limitations of machines, it makes eminent sense, and indeed is often crucial, to think and talk about the social scalability of a technology that facilitates an institution. The social scalability of an institutional technology depends on how that technology constrains or motivates participation in that institution, including protection of participants and the institution itself from harmful participation or attack. One way to estimate the social scalability of an institutional technology is by the number of people who can beneficially participate in the institution. Another way to estimate social scalability is by the extra benefits and harms an institution bestows or imposes on participants, before, for cognitive or behavioral reasons, the expected costs and other harms of participating in an institution grow faster than its benefits. The cultural and jurisdictional diversity of people who can beneficially participate in an institution is also often important, especially in the global Internet context. The more an institution depends on local laws, customs, or language, the less socially scalable it is.Without institutional and technological innovations of the past, participation in shared human endeavors would usually be limited to at most about 150 people\u2014the famous \u201cDunbar number\u201d. In the Internet era, new innovations continue to scale our social capabilities. In this article I will discuss how blockchains, and in particular public blockchains that implement cryptocurrencies, increase social scalability, even at a dreadful reduction in computational efficiency and scalability.Cognitive capacity\u2014here in the form of the relative size of a species\u2019 neocortex\u2014set limits on how large primate groups can be. Maintaining animal or intimate human groups requires extensive emotional communications and investments in relationships, such as grooming in primates and gossiping, humor, story-telling, and other conversations, songs, and play in traditional human groups. Overcoming human cognitive limits to who or how many people can participate in an institution\u2014the famous \u201cDunbar number\u201d of around 150 people\u2014requires institutional and technological innovation. (Source)Innovations in social scalability involve institutional and technological improvements that move function from mind to paper or mind to machine, lowering cognitive costs while increasing the value of information flowing between minds, reducing vulnerability, and/or searching for and discovering new and mutually beneficial participants. Alfred North Whitehead said, \u201cIt is a profoundly erroneous truism, repeated by all copy-books and by eminent people when they are making speeches, that we should cultivate the habit of thinking what we are doing. The precise opposite is the case. Civilization advances by extending the number of important operations which we can perform without thinking about them.\u201d Friedrich Hayek added: \u201cWe make constant use of formulas, symbols, and rules whose meaning we do not understand and through the use of which we avail ourselves of the assistance of knowledge which individually we do not possess. We have developed these practices and institutions by building upon habits and institutions which have proved successful in their own sphere and which have in turn become the foundation of the civilization we have built up.\u201dA wide variety of innovations reduce our vulnerability to fellow participants, intermediaries, and outsiders, and thereby lower our need to spend our scarce cognitive capacities worrying about how an increasingly large number of increasingly diverse people might behave. Another class of improvements motivates the accurate collection and transmission of valuable information between an increasing number and variety of participants. Yet other advances enable a wider number or variety of mutually beneficial participants can discover each other. All these kinds of innovations have over the course of human prehistory and history improved social scalability, sometimes dramatically so, making our modern civilization with its vast global population feasible. Modern information technology (IT), especially by making use of the historically recent discoveries of computer science, can often discover many more mutually beneficial matches, can improve motivations for information quality, and can reduce the need for trust within certain kinds of institutional transactions, with respect to an increasingly large number and variety of people, thereby further increasing social scalability in some very important ways.Information flows between minds\u2014what I have called intersubjective protocols\u2014include spoken and written words, custom (tradition), the contents of law (its rules, customs, and case precedents), a variety of other symbols (e.g. \u201cstar\u201d ratings common in online reputation systems), and market prices, among many others.Trust minimization is reducing the vulnerability of participants to each other\u2019s and to outsiders\u2019 and intermediaries\u2019 potential for harmful behavior. Most institutions which have undergone a lengthy cultural evolution, such as law (which lowers vulnerability to violence, theft, and fraud), as well as technologies of security, reduce, on balance, and in more ways than the reverse, our vulnerabilities to, and thus our needs to trust, our fellow humans, compared with our vulnerabilities before these institutions and technologies evolved. In most cases an often trusted and sufficiently trustworthy institution (such as a market) depends on its participants trusting, usually implicitly, another sufficiently trustworthy institution (such as contract law). These trusted institutions in turn traditionally implement a variety of accounting, legal, security, or other controls that make them usually and sufficiently, at least for facilitating the functionality of their client institutions, trustworthy, by minimizing vulnerability to their own participants (such as accountants, lawyers, regulators, and investigators). An innovation can only partially take away some kinds of vulnerability, i.e. reduce the need for or risk of trust in other people. There is no such thing as a fully trustless institution or technology.The nonexistence of complete trustlessness is true even of our strongest security technology, encryption. Although some cryptographic protocols do guarantee certain specific data relationships with astronomically high probability against opponents with astronomically high computing power, they do not provide complete guarantees when accounting for all possible behaviors of all participants. For example, encryption can strongly protect an e-mail from direct eavesdropping by third parties, but the sender still trusts the recipient to not forward or otherwise divulge the contents of that email, directly or indirectly to any undesired third parties. As another example, in our strongest consensus protocols harmful behavior by certain fractions of participants or intermediaries well short of 100% (as measured by their computing power, stake-holding, or individuation and counting) can compromise the integrity of transactions or information flows between participants and thereby on balance harm the participants. The historically recent breakthroughs of computer science can reduce vulnerabilities, often dramatically so, but they are far from eliminating all kinds of vulnerabilities to the harmful behavior of any potential attacker.Matchmaking is facilitating the mutual discovery of mutually beneficial participants. Matchmaking is probably the kind of social scalability at which the Internet has most excelled. Social networks like Usenet News, Facebook, and Twitter facilitate the mutual discovery of like-minded or otherwise mutually entertaining or mutually informing people (and even future spouses!). After they have allowed people more likely to be of mutual benefit to discover each other, social networks then facilitate relationships at various levels of personal investment, from casual to frequent to obsessive. Christopher Allen among others has done some interesting and detailed analyses about group size and time spent mutually interacting in online games and associated social networks.eBay, Uber, AirBnB, and online financial exchanges have brought social scalability via often great improvements in commercial matchmaking: searching for, finding, bringing together, and facilitating the negotiation of mutually beneficial commercial or retail deals. These or related services also facilitate performances such as payment and shipping, as well as verification that other obligations undertaken by strangers in these deals have been performed and communication about the quality of such performances (as with \u201cstar rating\u201d systems, Yelp reviews, and the like).Whereas the main social scalability benefit of the Internet has been matchmaking, the predominant direct social scalability benefit of blockchains is trust minimization. A blockchain can reduce vulnerability by locking in the integrity of some important performances (such as the creation and payment of money) and some important information flows, and in the future may reduce the vulnerability of the integrity of some important matchmaking functions. Trust in the secret and arbitrarily mutable activities of a private computation can be replaced by verifiable confidence in the behavior of a generally immutable public computation. This essay will focus on such vulnerability reduction and its benefit in facilitating a standard performance beneficial to a wide variety of potential counterparties, namely trust-minimized money.Money and markets directly benefit the participants in each particular trade by the market matching a buyer with a mutually beneficial seller and by a widely acceptable and standardized counter-performance (money). I use markets here in the sense Adam Smith used the term: not as a specific place or service where buyers and sellers are brought together (although it might sometimes involve these), but rather the broad set of typically pairwise exchanges whereby the supply chain that makes a product is coordinated.Money and markets also incentivize creation of more accurate price signals that reduce negotiation costs and errors for participants in other similar exchanges. The potent combination of money and market thereby allowed a far higher number and variety of participants to coordinate their economic activities than previous exchange institutions, which more resembled bilateral monopolies than competitive markets.Markets and money involve matchmaking (bringing together buyer and seller), trust reduction (trusting in the self-interest rather than in the altruism of acquaintances and strangers), scalable performance (via money, a widely acceptable and reusable medium for counter-performance), and quality information flow (market prices).The greatest early thinker about money and markets was Adam Smith. At the dawn of the industrial revolution in Britain, Smith observed in The Wealth of Nations how making even the most humble of products depended, directly and indirectly, on the work of large numbers of a wide variety of people:Observe the accommodation of the most common artificer or day-laborer in a civilized and thriving country, and you will perceive that the number of people of whose industry a part, though but a small part, has been employed in procuring him this accommodation, exceeds all computation. The woolen coat, for example, which covers the day laborer, as coarse and rough as it may appear, is the produce of the joint labor of a great multitude of workmen. The shepherd, the sorter of the wool, the wool-comber or carder, the dyer, the scribbler, the spinner, the weaver, the fuller, the dresser, with many others, must all join their different arts in order to complete even this homely production. How many merchants and carriers, besides, must have been employed in transporting the materials from some of those workmen to others who often live in a very distant part of the country! How much commerce and navigation in particular, how many shipbuilders, sailors, sail makers, rope makers, must have been employed in order to bring together the different drugs made use of by the dyer, which often come from the remotest corners of the world! What a variety of labor, too, is necessary in order to produce the tools of the meanest of those workmen! To say nothing of such complicated machines as the ship of the sailor, the mill of the fuller, or even the loom of the weaver, let us consider only what a variety of labor is requisite in order to form that very simple machine, the shears with which the shepherd clips the wool. The miner, the builder of the furnace for smelting the ore, the feller of the timber, the burner of the charcoal to be made use of in the smelting-house, the brick maker, the brick layer, the workmen who attend the furnace, the millwright, the forger, the smith, must all of them join their different arts in order to produce them. Were we to examine, in the same manner, all the different parts of his dress and household furniture, the coarse linen shirt which he wears nest his skin, the shoes which cover his feet, the bed which he lies on, and all the different parts which compose it, the kitchen grate at which be prepares his victuals, the coals which he makes use of for that purpose, dug from the bowels of the earth, and brought to him perhaps by a long sea and a long land carriage, all the other utensils of his kitchen, all the furniture of his table, the knives and forks, the earthen or pewter plates upon which he serves up and divides his victuals, the different hands employed in preparing his bread and his beer, the glass window which lets in the heat and the light, and keeps out the wind and the rain, with all the knowledge and art requisite for preparing that beautiful and happy invention, without which these northern parts of the world could scarce have afforded a very comfortable habitation, together with the tools of all the different workmen employed in producing those different conveniences; if we examine, I say, all these things, and consider what a variety of labor is employed about each of them, we shall be sensible that without the assistance and co-operation of many thousands, the very meanest person in a civilized country could not be provided, even according to what we may falsely imagine the easy and simple manner in which he is commonly accommodated.And this was before the many successive waves of industrial revolution and globalization between 1776 and now that refined, elaborated, and extended the division of labor many times more. Rather than trusting in the unlikely altruism of so many strangers, markets and money create many pairings of mutual benefit and thus motivate this large network of mutually oblivious people to act in our interests:In civilized society man stands at all times in need of the cooperation and assistance of great multitudes, while his whole life is scarce sufficient to gain the friendship of a few persons\u2026[In contrast to other animals,] man has an almost constant occasion for the help of his brethren, and it is vain for him to expect it from their benevolence only\u2026 [Exchange is the] manner in which we obtain from another the far greater part of those good offices which we stand in need of. It is not from the benevolence of the butcher, the brewer, or the baker, that we expect our dinner, but from their regard for their own interest.Smith goes on to describe how division of labor, and thus labor productivity, depends on the extent of the network of pairwise exchanges: \u201cAs it is the power of exchanging that gives occasion to the division of labor, so the extent of this division must always be limited by the extent of that power, or, in other words, by the extent of the market\u201d. As the exchange network around a country and around the globe grows, involving a greater number and variety of producers, so grows the division of labor and thereby labor productivity.Money facilitates social scalability by increasing the opportunities for this exchange. By lowering coincidence problems (coincidence-of-wants in exchange and coincidence-of-want-and-event in unilateral transfers), via a widely acceptable and reusable form of wealth storage and transfer, money greatly lowered transaction costs, making possible more exchanges of a greater variety of goods and services involving exchanges and other wealth transfer relationships with a much larger number and much wider variety of people.A wide variety of media, from oral language itself, clay, paper, telegraph, radio, and computer networks, have served to communicate offers, acceptances, and the resulting deals and prices, as well as performance monitoring and other business communications.One of the most knowledgeable observations of the price network produced by markets and money can be found in Friedrich Hayek\u2019s essay, \u201cThe Use of Knowledge in Society\u201d:In a system in which the knowledge of the relevant facts is dispersed among many people, prices can act to coordinate the separate actions of different people\u2026in any society in which many people collaborate, this planning, whoever does it, will in some measure have to be based on knowledge which, in the first instance, is not given to the planner but to somebody else, which somehow will have to be conveyed to the planner. The various ways in which the knowledge on which people base their plans is communicated to them is the crucial problem for any theory explaining the economic process, and the problem of what is the best way of utilizing knowledge initially dispersed among all the people is at least one of the main problems of economic policy\u2014or of designing an efficient economic system\u2026 The mere fact that there is one price for any commodity\u2014or rather that local prices are connected in a manner determined by the cost of transport, etc.\u2014brings about the solution which (it is just conceptually possible) might have been arrived at by one single mind possessing all the information which is in fact dispersed among all the people involved in the process\u2026 The marvel is that in a case like that of a scarcity of one raw material, without an order being issued, without more than perhaps a handful of people knowing the cause, tens of thousands of people whose identity could not be ascertained by months of investigation, are made to use the material or its products more sparingly; i.e., they move in the right direction\u2026.The price system is just one of those formations which man has learned to use (though he is still very far from having learned to make the best use of it) after he had stumbled upon it without understanding it. Through it not only a division of labor but also a coordinated utilization of resources based on an equally divided knowledge has become possible\u2026a solution is produced by the interactions of people each of whom possesses only partial knowledge.Where long ago we used clay, and more recently paper, today programs and protocols running on our computers and data networks implement most of our commercial dealings. While this has greatly improved matchmaking and information flow, it has come at the cost of an increase in vulnerability to harmful behavior.As networks grow, more people with fewer mutually understood habits of and constraints on behavior are added. Security via root-trusting access control, designed for small and chummy offices like Bell Labs where co-workers were well known and income and expenditures well controlled by paper procedures rather than performed on these office computers, breaks down as an efficient and effective security mechanism as organizations become larger, as organizational boundaries are crossed, and as more valuable and concentrated resources such as money are put on or activated via the computers. The more strangers one receives emails from, the more likely one is likely to get a phishing attack or a malware-laced attachment. Traditional computer security is not very socially scalable. As I describe in \u201cThe Dawn of Trustworthy Computing\u201d:When we currently use a smart phone or a laptop on a cell network or the Internet, the other end of these interactions typically run on other solo computers, such as web servers. Practically all of these machines have architectures that were designed to be controlled by a single person or a hierarchy of people who know and trust each other. From the point of view of a remote web or app user, these architectures are based on full trust in an unknown \u201croot\u201d administrator, who can control everything that happens on the server: they can read, alter, delete, or block any data on that computer at will. Even data sent encrypted over a network is eventually unencrypted and ends up on a computer controlled in this total way. With current web services we are fully trusting, in other words we are fully vulnerable to, the computer, or more specifically the people who have access to that computer, both insiders and hackers, to faithfully execute our orders, secure our payments, and so on. If somebody on the other end wants to ignore or falsify what you've instructed the web server to do, no strong security is stopping them, only fallible and expensive human institutions, which often stop at national borders.Many server computers are not valuable enough for insiders or outsiders to attack. But an increasing number of others contain valuable concentrations of resources, motivating attack. Centralized root-trusting security scales poorly. As the resources controlled by computers become more valuable and more concentrated, traditional root-trusting security becomes more like the \u201ccall the cop\u201d security we are used to in the physical world. Fortunately, with blockchains we can do much better for many of our most important computations.Scalable markets and prices require scalable money. Scalable money requires scalable security, so that a greater number and variety of people can use the currency without losing its integrity against forgery, inflation, and theft.An individual or group communicating under the name \u201cSatoshi Nakamoto\u201d brought Bitcoin to the Internet in 2009. Satoshi\u2019s breakthrough with money was to provide social scalability via trust minimization: reducing vulnerability to counterparties and third parties alike. By substituting computationally expensive but automated security for computationally cheap but institutionally expensive traditional security, Satoshi gained a nice increase in social scalability. A set of partially trusted intermediaries replaces a single and fully trusted intermediary.Financial controls on computational steroids: a blockchain as an army of robots, each checking up on each other\u2019s work.When we can secure the most important functionality of a financial network by computer science rather than by the traditional accountants, regulators, investigators, police, and lawyers, we go from a system that is manual, local, and of inconsistent security to one that is automated, global, and much more secure. Cryptocurrencies, when implemented properly on public blockchains, can substitute an army of computers for a large number of traditional banking bureaucrats. \u201cThese block chain computers will allow us to put the most crucial parts of our online protocols on a far more reliable and secure footing, and make possible fiduciary interactions that we previously dared not do on a global network.\u201d (Source)The characteristics most distinctively valuable in blockchain technology in general, and Bitcoin in particular \u2014 for examplecome from the high levels of security and reliability a blockchain can maintain without human intervention. Without that high security it\u2019s just a gratuitously wasteful distributed database technology still tied to the local bureaucracies it would have to depend upon for its integrity.Since the mid-20th century computing has increased in efficiency by many orders of magnitude, but humans are using the same brains. This has created plenty of possibility for overcoming human limitations, and institutions based solely on human minds, with computational capabilities, including in security, doing what they do best, with human minds doing what they still do best. As a result, humans have no more raw mental ability to scale up our institutions than we ever have. But there is plenty of potential for improving social scalability by replacing some human functions with computational ones. (An important note\u2014this argument depends on the slope, not the absolute position, of the human ability line. The absolute position shown above is arbitrary and depends on what human \u201ccomputation\u201d we are measuring).A new centralized financial entity, a trusted third party without a \u201chuman blockchain\u201d of the kind employed by traditional finance, is at high risk of becoming the next Mt. Gox; it is not going to become a trustworthy financial intermediary without that bureaucracy.Computers and networks are cheap. Scaling computational resources requires cheap additional resources. Scaling human traditional institutions in a reliable and secure manner requires increasing amounts accountants, lawyers, regulators, and police, along with the increase in bureaucracy, risk, and stress that such institutions entail. Lawyers are costly. Regulation is to the moon. Computer science secures money far better than accountants, police, and lawyers.In computer science there are fundamental security versus performance tradeoffs. Bitcoin's automated integrity comes at high costs in its performance and resource usage. Nobody has discovered any way to greatly increase the computational scalability of the Bitcoin blockchain, for example its transaction throughput, and demonstrated that this improvement does not compromise Bitcoin\u2019s security.It is probable that no such big but integrity-preserving performance improvement is possible for the Bitcoin blockchain; this may be one of these unavoidable tradeoffs. Compared to existing financial IT, Satoshi made radical tradeoffs in favor of security and against performance. The seemingly wasteful process of mining is the most obvious of these tradeoffs, but Bitcoin also makes others. Among them is that it requires high redundancy in its messaging. Mathematically provable integrity would require full broadcast between all nodes. Bitcoin can\u2019t achieve that but to even get anywhere close to a good approximation of it requires a very high level of redundancy. So a 1 MB block consumes far more resources than a 1 MB web page, because it has to be transmitted, processed, and stored with high redundancy for Bitcoin to achieve its automated integrity.These necessary tradeoffs, sacrificing performance in order to achieve the security necessary for independent, seamlessly global, and automated integrity, mean that the Bitcoin blockchain itself cannot possibly come anywhere near Visa transaction-per-second numbers and maintain the automated integrity that creates its distinctive advantages versus these traditional financial systems. Instead, a less trust-minimized peripheral payment network (possibly Lightning) will be needed to bear a larger number of lower-value bitcoin-denominated transactions than Bitcoin blockchain is capable of, using the Bitcoin blockchain to periodically settle with one high-value transaction batches of peripheral network transactions.Bitcoin supports a lower rate transactions than Visa or PayPal, but due to its stronger automated security these can be much more important transactions. Anybody with a decent Internet connection and a smart phone who can pay $0.20-$2 transaction fees\u2014substantially lower than current remittance fees\u2014can access Bitcoin any where on the globe. Lower value transactions with lower fees will need to be implemented on peripheral bitcoin networks.When it comes to small-b bitcoin, the currency, there is nothing impossible about paying retail with bitcoin the way you\u2019d pay with a fiat currency \u2014 bitcoin-denominated credit and debt cards, for example, with all the chargeback and transactions-per-second capabilities of a credit or debit card. And there are also clever ways to do peripheral bitcoin retail payments in which small value payments happen off-chain and are only periodically bulk-settled on the Capital-B Bitcoin blockchain. That blockchain is going to evolve into a high-value settlement layer as bitcoin use grows, and we will see peripheral networks being used for small-b bitcoin retail transactions.When I designed bit gold I already knew consensus did not scale to large transaction throughputs securely, so I designed it with a two-tier architecture: (1) bit gold itself, the settlement layer, and (2) Chaumian digital cash, a peripheral payment network which would provide retail payments with high transactions-per-second performance and privacy (through Chaumian blinding), but would like Visa be a trusted third party and thus require a \u201chuman blockchain\u201d of accountants, etc. to operate with integrity. The peripheral payment network can involve only small value transactions, thereby requiring much less of a human army to avoid the fate of Mt. Gox.Ralph Merkle: pioneer of public-key cryptography and inventor of hierarchical hash-tree structures (Merkle trees).Money requires social scalability in its design, via security. For example it should be very hard for any participant or intermediary to forge money (to dilute the supply curve leading to undue or unexpected inflation). Gold can have value anywhere in the world and is immune from hyperinflation because its value doesn\u2019t depend on a central authority. Bitcoin excels at both these factors and runs online, enabling somebody in Albania to use Bitcoin to pay somebody in Zimbabwe with minimal trust in or and no payment of quasi-monopoly profits to intermediaries, and with minimum vulnerability to third parties.There are all sorts of definitions of \u201cblockchain\u201d out there, almost all of them just implicitly broad hand-waving amid the mountains of marketing hype. I suggest a clear definition that can be communicated to lay people. It is a blockchain if it has blocks and it has chains. The \u201cchains\u201d should be Merkle trees or other cryptographic structures with a similar integrity functionality of post-unforgeable integrity. Also the transactions and any other data whose integrity is protected by a blockchain should be replicated in a way objectively tolerant to worst-case malicious problems and actors to as high a degree as possible (typically the system can behave as previously specified up to a fraction of 1/3 to 1/2 of the servers maliciously trying to subvert it to behave differently).Bitcoin\u2019s socially scalable security, based on computer science rather than on police and lawyers, allows, for example, customers in Africa to pay suppliers in China seamlessly across borders. A private blockchain cannot accomplish this feat nearly as easily, since it would require an identification scheme, certificate authority, and PKI shared between these various jurisdictions. (Source)Because of this fraction, and because of the (hopefully very rare) need to update software in a manner that renders prior blocks invalid\u2014an even riskier situation called a hard fork\u2014blockchains also need a human governance layer that is vulnerable to fork politics. The most successful blockchain, Bitcoin, has maintained its immutable integrity via decentralized decision-making among experts in the technology combined with a strong dogma of immutability, under which only the most important and rare bug fixes and design improvements, that cannot be made any other way, justify a hard fork. Under this philosophy of governance accounting or legal decisions (such as altering an account balance or undoing a transaction) never justify a hard fork, but should be accomplished by traditional governance outside of (or on top of) the system (e.g. via a court injunction forcing a Bitcoin user to send a new transaction that effectively undoes the old one, or confiscating the particular keys and thus the particular holdings of a particular user).To say that data is post-unforgeable or immutable means that it can\u2019t be undetectably alteredafter being committed to the blockchain. Contrary to some hype this doesn\u2019t guarantee anything about a datum\u2019s provenance, or its truth or falsity, before it was committed to the blockchain. That requires additional protocols, often including expensive traditional controls. Blockchains don\u2019t guarantee truth; they just preserve truth and lies from later alteration, allowing one to later securely analyze them, and thus be more confident in uncovering the lies. Typical computers are computational etch-a-sketch, while blockchains are computational amber. Important data should be committed to blockchain amber as early as possible, ideally directly from and cryptographically signed by the device in which it was generated, to maximize the blockchain\u2019s benefit in securing its integrity.A Merkle tree of four transactions (tx0 through tx3). Combined with a proper replication and chains of transaction blocks protected by proof-of-work, Merkle trees can make data such as transactions post-unforgeable by consensus. In Bitcoin, a Merkle root hash securely summarizes and is used to verify the unaltered state of all the transactions in a block.My own 1998 \u201csecure property title\u201d architecture had Merkle trees and replication of data tolerant against an objective fraction of arbitrarily faulty software or malicious actors, but not blocks. It demonstrated my theory that you could protect the integrity of globally shared data and transactions, and use that ability to design a cryptocurrency (bit gold). It did not have the more efficient and computationally scalable blocks-and-ledger system that Bitcoin does. Also like today\u2019s private blockchains, secure property titles assumed and required securely distinguishable and countable nodes.Given the objective 51% hashrate attack limit to some important security goals of public blockchains like Bitcoin and Ethereum, we actually do care about the distinguishable identity of the most powerful miners to answer the question \u201ccan somebody convince and coordinate the 51%?Blockchain security is objectively limited and blockchain governance is heavily influenced by the potential for a 51% attack. An attack of course does not have to be called an \u201cattack\u201d by the attackers; instead they might call it \u201cenlightened governance\u201d or \u201cdemocracy in action\u201d. Indeed some kinds of software updates needed to fix bugs or otherwise improve the protocol require a soft fork. Some other kinds of software updates require hard forks, which in Bitcoin pose an even greater security and continuity risks than soft forks. Blockchains, although reducing trust far more than any other network protocols, are still far from trustless. Miners are partially trusted fiduciaries, and those who are not expert developers or computer scientists who have invested a great deal of time in learning the design principles and codebase of a blockchain must place a great deal of faith in the expert developer community, much as non-specialists who want to understand the results of a specialized science do of the corresponding scientists. During a hard fork exchanges can also be very influential by deciding which fork to support with their order books and trade symbol continuity.Public blockchains thus mostly but not entirely dodge the identity-is-hard bullet and take care of its remaining problem of identifying the most powerful miners at a higher \u201cwet\u201d/\u201csocial\u201d level, where it is probably more appropriate, rather than trying to securely map such an inherently wet (brain-based) concept onto the protocol, as PKI (public key infrastructure) rather awkwardly tries to do.So I think some of the \u201cprivate blockchains\u201d qualify as bona fide blockchains; others should go under the broader rubric of \u201cdistributed ledger\u201d or \u201cshared database\u201d or similar. They are all very different from and not nearly as socially scalable as public and permissionless blockchains like Bitcoin and Ethereum.All of the following are very similar in requiring an securely identified (distinguishable and countable) group of servers rather than the arbitrary anonymous membership of miners in public blockchains. In other words, they require some other, usually far less socially scalable, solution to the Sybil (sockpuppet) attack problem:The dominant, but usually not very socially scalable, way to identify a group of servers is with a PKI based on trusted certificate authorities (CAs). To avoid the problem that merely trusted third parties are security holes, reliable CAs themselves must be expensive, labor-intensive bureaucracies that often do extensive background checks themselves or rely on others (e.g. Dun and Bradstreet for businesses) to do so. (I once led a team that designed and built such a CA). CAs also act as a gatekeeper, rendering these permissioned systems. CAs can become singular points of political control and failure. \u201cPublic blockchains are automated, secure, and global, but identity is labor-intensive, insecure, and local.\u201dPKI-enabled private blockchains are a nice for banks and some other large enterprises because they already have mature in-house PKIs that cover the employees, partners, and private servers needed to approve important transactions. Bank PKIs are relatively reliable. We also have semi-reliable CAs for web servers, but not generally speaking for web clients, even though people have been working on the problem of client certificates since the invention of the web: for example advertisers would love to have a more secure alternative to phone numbers and cookies for tracking customer identities. Yet it hasn\u2019t happened.PKI can work well for some important things and people but it is not nearly so nice or so easy for lesser entities. Its social scalability is limited by the traditional wet identity bureaucracy on which it depends.Some significant thefts in the broader bitcoin ecosystem. Whereas the Bitcoin blockchain itself is probably the most secure financial network in existence (and indeed must remain far more secure than traditional payment networks in order to maintain its low governance costs and seamless cross-border capability), its peripheral services based on older centralized web servers are very insecure. (Source: author)We need more socially scalable ways to securely count nodes, or to put it another way to with as much robustness against corruption as possible, assess contributions to securing the integrity of a blockchain. That is what proof-of-work and broadcast-replication are about: greatly sacrificing computational scalability in order to improve social scalability. That is Satoshi\u2019s brilliant tradeoff. It is brilliant because humans are far more expensive than computers and that gap widens further each year. And it is brilliant because it allows one to seamlessly and securely work across human trust boundaries (e.g. national borders), in contrast to \u201ccall-the-cop\u201d architectures like PayPal and Visa that continually depend on expensive, error-prone, and sometimes corruptible bureaucracies to function with a reasonable amount of integrity.The rise of the Internet as seen the rise of a variety of online institutions, among them social networks, \u201clong-tail\u201d retail (e.g. Amazon), and a variety of services that allow small and dispersed buyers and sellers to find and do business with each other (eBay, Uber, AirBnB, etc.) These are just the initial attempts to take advantage of our new abilities. Due to the massive improvements in information technology over recent decades, the number and variety of people who can successfully participate in an online institution is far less often restricted by the objective limits of computers and networks than it is by limitations of mind and institution that have usually have not yet been sufficiently redesigned or further evolved to take advantage of those technological improvements.These initial Internet efforts have been very centralized. Blockchain technology, which implements data integrity via computer science rather than via \u201ccall the cops\u201d, has so far made possible trust-minimized money\u2014cryptocurrencies\u2014and will let us make progress in other financial areas as well as other areas where transactions can be based primarily on data available online.This is not to say that adapting our institutions to our new capabilities will be easy, or indeed in particular cases anything short of difficult and improbable. Utopian schemes are very popular in the blockchain community, but they are not viable options. Reverse-engineering our highly evolved traditional institutions, and even reviving in new form some old ones, will usually work better than designing from scratch, than grand planning and game theory. One important strategy for doing so was demonstrated by Satoshi\u2014sacrifice computational efficiency and scalability\u2014consume more cheap computational resources\u2014in order to reduce and better leverage the great expense in human resources needed to maintain the relationships between strangers involved modern institutions such as markets, large firms, and governments."}
{"prompt": "The Idea of Smart Contracts", "completion": "What is the meaning and purpose of \"security\"? How does it relate the the relationships we have? I argue that the formalizations of our relationships\u2014especially contracts\u2014provide the blueprint for ideal security.Many kinds of contractual clauses (such as collateral, bonding, delineation of property rights, etc.) can be embedded in the hardware and software we deal with, in such a way as to make breach of contract expensive (if desired, sometimes prohibitively so) for the breacher. A canonical real-life example, which we might consider to be the primitive ancestor of smart contracts, is the humble vending machine. Within a limited amount of potential loss (the amount in the till should be less than the cost of breaching the mechanism), the machine takes in coins, and via a simple mechanism, which makes a freshman computer science problem in design with finite automata, dispense change and product according to the displayed price. The vending machine is a contract with bearer: anybody with coins can participate in an exchange with the vendor. The lockbox and other security mechanisms protect the stored coins and contents from attackers, sufficiently to allow profitable deployment of vending machines in a wide variety of areas.Smart contracts go beyond the vending machine in proposing to embed contracts in all sorts of property that is valuable and controlled by digital means. Smart contracts reference that property in a dynamic, often proactively enforced form, and provide much better observation and verification where proactive measures must fall short.As another example, consider a hypothetical digital security system for automobiles. The smart contract design strategy suggests that we successively refine security protocols to more fully embed in a property the contractual terms which deal with it. These protocols would give control of the cryptographic keys for operating the property to the person who rightfully owns that property, based on the terms of the contract. In the most straightforward implementation, the car can be rendered inoperable unless the proper challenge-response protocol is completed with its rightful owner, preventing theft.If the car is being used to secure credit, strong security implemented in this traditional way would create a headache for the creditor - the repo man would no longer be able to confiscate a deadbeat's car. To redress this problem, we can create a smart lien protocol: if the owner fails to make payments, the smart contract invokes the lien protocol, which returns control of the car keys to the bank. This protocol might be much cheaper and more effective than a repo man. A further reification would provably remove the lien when the loan has been paid off, as well as account for hardship and operational exceptions. For example, it would be rude to revoke operation of the car while it's doing 75 down the freeway.In this process of successive refinement we've gone from a crude security system to a reified contract:Mature security systems will be undertaking different behavior for different contracts. To continue with our example, if the automobile contract were a lease, the final payment would switch off leasee access; for purchase on credit, it would switch off creditor access. A security system, by successive redesign, increasingly approaches the logic of the contract which governs the rights and obligations covering the object, information, or computation being secured. Qualitatively different contractual terms, as well as technological differences in the property, give rise to the need for different protocols.(Derived from \"Formalizing and Securing Relationships on Public Networks\", by Nick Szabo)A related article discusses a formal language for analyzing contracts and specifying smart contracts.Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 1997 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "Cyberspace, Crypto Anarchy, and Pushing Limits", "completion": "This messages touches on two topics of recent interest (to some) here:Setting up payment systems for message transmission, to handle the issues of \u201cmailbombing\u201d and \u201cflooding\u201d in a more natural way (locality of reference, user of a service pays, avoidance of the \u201cMorris Worm\u201d explosion effects which could\u2019ve happened with Detweiler bombed us, as Hal noted).The general issue of \u201cCyberspace.\u201d This lies at the root of some recent disagreements here, and is worthy of more discussion. Crypto will make this a very real cusp issue in the next several years.Why debate it now? What could possibly come out of such a debate?It happens that I\u2019m reading a wonderful new book by Kip Thorne, entitled \u201cBlack Holes and Space Warps.\u201d This is widely available in bookstores, in hardback only at this time. ($30, but it\u2019s a whopping big book, and I got it at Barnes and Noble for $24. Speaking of Barnes and Noble, the Santa Clara store is selling Li and Vitanyi\u2019s \u201cIntro. to Kolmogorov Complexity\u201d book for $44, before the 20% hardback discount, which may be a mispricingm, as I paid $60 for mine. Check it out if you\u2019re interested....I think there were two copies.)Thorne has spent 30 years studying gravitational collapse and black holes, and was a coauthor of the famed 1973 book on \u201cGravitation,\u201d which I got to use in a Xeroxed form for my general relativity class in 1973.The point? Thorne describes his involvement with Carl Sagan in working out the physics of time travel via wormholes. Thorne had an epiphany: however unlikely the engineering or financing of something is, there is something valuable to be gained in examining the absolute limits of what is possible without regard for engineering practicalities. Thus, he and his students looked into the implications of an extremely advanced civilization able to somehow hold open the mouth of a wormhole. The conclusions are fascinating and led to a new line of thinking about the structure of space-time.Pushing limits and seeing \u201cideal\u201d behavior is invigorating.The connection to crypto is this: Perhaps we should be thinking more about the implicaitons and effects of strong crypto, digital money, ideal remailers, etc., assuming that certain practical problems that bedevil us today are, or soon will be, solved. To some extent we already do this, as when we discuss Chaum\u2019s ideal mixes in the same way engineer\u2019s discuss ideal op amps--a useful abstraction of behavior in the limit that lesser, real world implementations can then be contrasted with.And of course many of us have found Vernor Vinge\u2019s \u201cTrue Names\u201d to be an excellent (and quickly readable) treatment of how things could work in a world of fast, cheap, and secure communication. Other writers have seen things differently (e.g., \u201cShockwave Rider,\u201d \u201c1984,\u201d \u201cSnow Crash\u201d).Here, to cut to the chase, are some brief statements of what I see as the \u201cbehavior in the limits.\u201d I won\u2019t elaborate on them right now.\u201cPay as you go\u201d is the natural way to handle most economic transactions. There are exceptions, of course, such as insurance, contracts for future perfomance, etc., but for the most part money is used to mediate immediate exchanges. For a timely example, why can your enemies not \u201cjunk mail bomb\u201d you with truly large (tons) of junk mail? Junk mail, as we call it, is in relatively small volumes (at most a mailbox full, except for celebrities perhaps) because of one simple thing: someone has to pay for the delivery! There is no possibility of a \u201cfree\u201d way to \u201cMake 19 copies of this ton of garbabe and mail them to your enemies.\u201d That there is with software--the remailer bombing by Detweiler, the 1988 Morris Worm, the \u201cDave Rhodes\u201d chain letters--is due to some flaws in the current Net model:costs of message trasnmission are not directly borne by senders (encourage overuse by some of scarce resources, a la the \u201ctragedy of the commons\u201d).sites and remailers will respond to \u201cinstructions\u201d to send the message on, to make copies of it, etc.I thus consider it imperative that we develop as quickly as we can the following:payment systems for message transmission (I\u2019ve argued for \u201cdigital postage\u201d as a first and comparatively easy application of digital money, others have as well, and Ray Cromwell just today issued his own proposal....time we get going on this. And lest you think I\u2019m calling for altruism here, I think some fortunes will be made in this area.)anonymous or identity-obscuring protocols, a la Chaum.a general move away from \u201ccommons\u201d-oriented systems, which breed the notions of \u201cfair access\u201d and such. If the \u201cproblem\u201d is that poor people cannot--it is alleged--afford a $17 a month Net connection (what Netcom charges, in about 25 cities and growing), then my solution would be to simply subsidize their bill. (I\u2019m not advocating this, nor do I think it wise to subsidize anyone\u2019s phone, Net, or dinner bills, but better this than \u201cnationalizing\u201d networks and thus creating more confusion and less efficiency for all.)Connectivity will be altered dramatically, The \u201cdistance\u201d in cyberspace is already uncorrelated to physical distance. (Hardly surprising, as this was apparent with the telephone. But a useful way of looking at cyberspace, as being a space of radically altered connectivities and distances.)Local access to service, the phone or cable lines that reach the home or office, is a potential bottleneck. But once a connection is made to a local node where multiple competitors exist (that is, once beyond the local government-granted monopoly), the possibility of \u201ccensorship\u201d decreases rapidly, for several reasons.thus, push for \u201cencrypted access\u201d lines from a terminal node (home, office) to a point with unlimited connectivity.this is the situation I now have with my PacBell line and Netcom: PacBell doesn\u2019t \u201ccare\u201d what I use the local line for, and once outside, I can dial a less-censorious Netcom rather than a Big Brotherish AOL or Prodigy.Cyberspace is infinitely colonizable. No limits to growth. (Assumption: realization of cyberspace is on various machines and networks, which are not free, nor infinite. But the \u201cno limits\u201d comes from ease with which those near a \u201cboundary\u201d can simply push out that boundary with more CPU resource, more networks, etc.).Crypto means access to \u201cregions\u201d can be controlled by \u201cowners\u201d:\u201cmy house, my rules\u201d enforced locally, without central State authorityessentially unbreakable security (in crypto sense)By the way, strong crypto is the \u201cbuilding material\u201d of cyberspace...the mortar, the bricks, the support beams, the walls. Nothing else can provide the \u201cpermanence\u201d...without crypto, the walls are subject to collapse at the first touch by a malicious person or agency. With crypto, not even a 100 megaton H-bomb can breach the walls.(If you think I\u2019m exaggerating, do some calculations on the energy to break a 1000-decimal-digit modulus.)No \u201czoning laws\u201d will be needed, or possible, in cyberspace. (Neil Stephenson\u2019s \u201cSnow Crash,\u201d while a wonderful and thought-provoking read, got it wrong here: cyberspace is too extensible and locally controllable.)Physical location of cyberspace locations will be increasingly hard to pin down. A vast \u201clabyrinth of rooms and corridors\u201d might be physically instantiated on a computer in Malaysia, while a \u201cvirtual gambling hall\u201d is being run via cryptographic cutouts (remailers) from someone\u2019s bedroom in Provo, Utah.The talk about \u201caccess rules\u201d is thus shown to be meaningless, unless the governments crack down on networks, crypto, and private systems in a way far beyond anything now being talked about.This is the \u201ccrypto anarchy\u201d I have been writing about since 1988. Cyberspace will turn out to be a far vaster frontier than anything we have seen so far. With \u201conly\u201d 10^70 or so particles in the entire universe, there\u2019s vastly more \u201cspace\u201d (address space, key space, etc.) in even a relatively small set of digits. Cyberspace is mathematical space, and its spaciousness is truly unlimited.And we\u2019ll be moving our trade, our entertainment, and much of our lives into cyberspace a whole lot faster than we\u2019ll be slowly moving into low Earth orbit and beyond. In fact, I consider that I\u2019m already half-way in. In a few years, with Mosaic-like one-touch connectivity, with a plethora of network choices, with secure remailers and similar tools to anonymize my transactions, I\u2019ll be so far in there\u2019ll be turning back.Enough for these remarks right now. I think it makes sense to take a slightly longer-range view of the inevitable trends, to see where we\u2019re going, to see what issues need more work.I hope some of you agree with me.--Tim May"}
{"prompt": "Confidential Auditing", "completion": "The auditing function is a vast and indispensable part of the modern economy. Auditing controls allow, among other things, employers to delegate resources and authority to employees, franchisors to delegate to franchisees, stockholders to delegate to management, advertisers to count eybeballs, marketers to gather more reliable data on customers, and make possible a wide variety of other such relationships. Auditing controls might fairly be called the security protocols of capitalism.A recent general survey showed that 83% of Americans are \"very concerned\" about their privacy on the Internet. One can expect even stronger figures from European customers, who have more first-hand experience with private data, much of it originally compiled for innocuous reasons, being used for political repression. Businesses recognize the shortcomings of NDAs and are looking for more reliable ways to protect confidential data. The vast majority of e-commerce customers are concerned about privacy.Auditing is in deep conflict with efforts towards greater privacy. Auditors have an ethic of recording, investigating, and reporting as much as possible, and often see privacy efforts as attempts to prevent auditing and potentially cover up fraud. Indeed, the recent multi-$billion failures of Baring's Bank and the Long Term Capital hedge fund, and more generally the recent problems with \"crony capitalism\" which have shorn stockholders and creditors of over $1 trillion, have been ascribed to such secrecy[3]. At the top of the list of current IMF reforms is \"openness\", a buzzword for the introduction of greater auditing controls and reporting requirements.Since auditing controls are used to secure trillions of dollars of transactions every year, they are not going away, and indeed will likely grow more effective and intrusive. On the other hand, we now have at our disposal the many breakthroughs achieved over the last two decades in modern cryptography. Can we use these to strike a better balance between auditing and privacy? I have come up with an architecture which uses such protocols to greatly improve this tradeoff: confidential auditing.We can achieve auditing logs unforgeable after commitment via secure timestamps[1]. We can then achieve to a great extent unforgeability prior to commitment, with segregation of duties via multiparty integrity constraints[2]. We then audit these commitments via multiparty private computations[4]. This combination allows a wide variety of transactions, conducted with normal efficiency, to be observed and verified by selected arbitrators or auditors, via more expensive private computations applied to randomly sampled commitments. This maintains a high degree of confidentiality for the inputs.The participants in this mutually confidential auditing protocol can verify that the books match the details of transactions stored in a previously committed transaction log, and that the numbers add up correctly. The participants can compute summary statistics on their confidentially shared transaction logs, including cross-checking of the logs against counterparties to a transaction, without revealing those logs. They only learn what can be inferred from the statistics, can't see the details of the transactions.Assuming many practical details I have glossed over in this sketch (such as the efficiency of auditing computations, the availability of digital transaction records in standard format, etc.), confidential auditing can bring a substantial improvement over current practices. Currently the details of all an organization's transactions, including for example medical records in an HMO and transactions in top-secret government programs, are either exposed directly to auditors, or are immune from auditing, allowing fraud.With mutually confidential auditing we will be able to gain high confidence in the factuality of counterparties' claims and reports without revealing identifying and other detailed information from the transactions underlying those reports. This will provide the basis for solid reputation systems, and other trusted third party systems, that maintain integrity across time, communications, summarization, and preserve confidentiality for transaction participants. With confidential auditing we will often be able to have both openness and privacy.BLLV98 A. Buldas, P. Laud, H. Lipmaa, J. Villemson, \"Time-Stamping with Binary Linking Schemes\", Crypto 98 \u21a9Szabo, in progress \u21a9See recent back issues of The Wall Street Journal and The Economist \u21a9Overview, http://szabo.best.vwh.net/msc.html; Quorum systems model, http://szabo.best.vwh.net/quorum.html \u21a9[B91] D. Beaver, \"Efficient Multiparty Protocols Using Circuit Randomization\", ACM STOC 91[RB89] T. Rabin & M. Ben-Or, \"Verifiable Secret Sharing and Multiparty Protocols with Honest Majority\", ACM STOC 89[GRR98] R. Gennaro, T. Rabin, & M. Rabin: \"Simplified VSS and Fast-Track Multiparty Computations\", PODC 98"}
{"prompt": "Proplets: Devices for Controlling Property", "completion": "Civilization has highly evolved practices for determining whether certain actions are allowable or not, or who should prevail in a dispute, namely law. Such a body of knowledge cannot be reinvented from scratch, so instead e-commerce security should draw heavily on it\u2014building property rights, contract and tort law into technology at a very basic level. Proplets define the basic security architecture for local evidence gathering, enforcement, and negotiation of such laws.Proplets do not rely on central planning, AI, or a single trusted third party for any function. Central planning is not able to account for the distributed and diverse knowledge and preferences of different people. A \"trusted third party\" is a nice-sounding synonym for a wide-open security hole that a designer chooses to overlook. Proplet design places strong emphasis on eliminating such exposures.The key is building in, at the most basic level of technology, code (in both the legal and software sense) that allows a widely distributed people, each person having his own unique information, circumstances, and preferences, to cooperate within well known, mutually agreeable, and strongly enforced constraints. With these constraints the risks and benefits of technology are balanced, weapons are monitored and securely restricted in their use to only very narrow, specific, lawful conditions, and for every person there is more profit from peace than from destruction.The goal of proplet design is to control physical objects with digital protocols. Proplets protect its structure and function from non-owners, and observe the environment for phenomena impinging on a region, on matter, or on its owner. A proplet is an electromechanical device (e.g. a MEMS device) with the following core abilities:A proplet may optionally also have the following abilities:No computational module can be read or controlled by physical tampering\u2014it will shut down, erase itself, or even self-destruct depending on the severity of tampering. Computational modules are \"transparent\" to their publically registered controller and opaque to other entities.Only protocols that are simple and composable with provable security govern the communications between the security kernel (private key operations), control box, sandbox, and other components of a computation modules. Similarly for communications between modules and between proplets.How does a proplet find out who owns it, or a guest module who controls it? There are two basic ways:A proplet's guest modules are publicly listed and transferred independently of each other and of the proplet's ownership module.With the home proplet alternative, biometric control of the home proplets may replace public ownership records.Proplets control electronics directly from ownership or guest modules. Proplets control machinery via entanglement. Entanglement can take at least two forms:Entanglment designs have in common that they make it too expensive for the attacker to steal the electronics or machinery by severing it from the controlling proplet.Deeds, in the context of replicated property titles and proplets, are smart contracts executed by a deed module. The current owner may add new deeds agreed to (but not remove old ones) by drafting signing and signing such a smart contract with other current property owners. The deed binds both properties (perhaps to different terms, depending on what the two current owners have negotiatied). The deed modules can be audited at any time by the contemporary owners of other proplets bound to the deeds. Founders of competing property title registries define master deeds, or tort laws, to govern disputes within registry properties. They also define tort law for disputes between their properties and properties defined by other registires, by coming to agreements with those registry founders. Founders also create the initial allocations.Founders are often the manufacturers of proplets. They build in a particular registry as authoratative for their proplets as well as designing an accompanying tort law.For example, the founder of registry of fixtures in a spatial region can sign an agreement with a movable property (chattel) registry, governing the behavior of chattel moving through space and interacting with fixtures. The manufacturers of chattel and fixtures program their proplets to respect the appropriate registries and constrain their sensors and effectors to follow the tort law that has been agreed to.Proplets combine our most highly evolved practices for cooperation on a large scale with a technology architecture suitable for advances well into the future, even well into posthuman civilization. Proplets provide a much sounder footing for solving the problems of high technology cooperation including problems such as privacy, weapons of mass destruction, and other abuses of the power of advanced technology.\"Computer Security as the Future of Law\", Mark Miller\n\"Formalizing and Securing Relationships on Public Networks\", Nick Szabo\n\"Secure Property Titles\", Nick SzaboMy thanks to Gregory Burch, J.D. for his helpful questions.Please send your comments to nszabo (at) law (dot) gwu (dot) edu"}
{"prompt": "Bitcoin: A Peer-to-Peer Electronic Cash System", "completion": "A purely peer-to-peer version of electronic cash would allow online payments to be sent directly from one party to another without going through a financial institution. Digital signatures provide part of the solution, but the main benefits are lost if a trusted third party is still required to prevent double-spending. We propose a solution to the double-spending problem using a peer-to-peer network. The network timestamps transactions by hashing them into an ongoing chain of hash-based proof-of-work, forming a record that cannot be changed without redoing the proof-of-work. The longest chain not only serves as proof of the sequence of events witnessed, but proof that it came from the largest pool of CPU power. As long as a majority of CPU power is controlled by nodes that are not cooperating to attack the network, they'll generate the longest chain and outpace attackers. The network itself requires minimal structure. Messages are broadcast on a best effort basis, and nodes can leave and rejoin the network at will, accepting the longest proof-of-work chain as proof of what happened while they were gone.Commerce on the Internet has come to rely almost exclusively on financial institutions serving as trusted third parties to process electronic payments. While the system works well enough for most transactions, it still suffers from the inherent weaknesses of the trust based model. Completely non-reversible transactions are not really possible, since financial institutions cannot avoid mediating disputes. The cost of mediation increases transaction costs, limiting the minimum practical transaction size and cutting off the possibility for small casual transactions, and there is a broader cost in the loss of ability to make non-reversible payments for non-reversible services. With the possibility of reversal, the need for trust spreads. Merchants must be wary of their customers, hassling them for more information than they would otherwise need. A certain percentage of fraud is accepted as unavoidable. These costs and payment uncertainties can be avoided in person by using physical currency, but no mechanism exists to make payments over a communications channel without a trusted party.What is needed is an electronic payment system based on cryptographic proof instead of trust, allowing any two willing parties to transact directly with each other without the need for a trusted third party. Transactions that are computationally impractical to reverse would protect sellers from fraud, and routine escrow mechanisms could easily be implemented to protect buyers. In this paper, we propose a solution to the double-spending problem using a peer-to-peer distributed timestamp server to generate computational proof of the chronological order of transactions. The system is secure as long as honest nodes collectively control more CPU power than any cooperating group of attacker nodes.We define an electronic coin as a chain of digital signatures. Each owner transfers the coin to the next by digitally signing a hash of the previous transaction and the public key of the next owner and adding these to the end of the coin. A payee can verify the signatures to verify the chain of ownership.The problem of course is the payee can't verify that one of the owners did not double-spend the coin. A common solution is to introduce a trusted central authority, or mint, that checks every transaction for double spending. After each transaction, the coin must be returned to the mint to issue a new coin, and only coins issued directly from the mint are trusted not to be double-spent. The problem with this solution is that the fate of the entire money system depends on the company running the mint, with every transaction having to go through them, just like a bank.We need a way for the payee to know that the previous owners did not sign any earlier transactions. For our purposes, the earliest transaction is the one that counts, so we don't care about later attempts to double-spend. The only way to confirm the absence of a transaction is to be aware of all transactions. In the mint based model, the mint was aware of all transactions and decided which arrived first. To accomplish this without a trusted party, transactions must be publicly announced[1], and we need a system for participants to agree on a single history of the order in which they were received. The payee needs proof that at the time of each transaction, the majority of nodes agreed it was the first received.The solution we propose begins with a timestamp server. A timestamp server works by taking a hash of a block of items to be timestamped and widely publishing the hash, such as in a newspaper or Usenet post[2-5]. The timestamp proves that the data must have existed at the time, obviously, in order to get into the hash. Each timestamp includes the previous timestamp in its hash, forming a chain, with each additional timestamp reinforcing the ones before it.To implement a distributed timestamp server on a peer-to-peer basis, we will need to use a proof-of-work system similar to Adam Back's Hashcash[6], rather than newspaper or Usenet posts. The proof-of-work involves scanning for a value that when hashed, such as with SHA-256, the hash begins with a number of zero bits. The average work required is exponential in the number of zero bits required and can be verified by executing a single hash.For our timestamp network, we implement the proof-of-work by incrementing a nonce in the block until a value is found that gives the block's hash the required zero bits. Once the CPU effort has been expended to make it satisfy the proof-of-work, the block cannot be changed without redoing the work. As later blocks are chained after it, the work to change the block would include redoing all the blocks after it.The proof-of-work also solves the problem of determining representation in majority decision making. If the majority were based on one-IP-address-one-vote, it could be subverted by anyone able to allocate many IPs. Proof-of-work is essentially one-CPU-one-vote. The majority decision is represented by the longest chain, which has the greatest proof-of-work effort invested in it. If a majority of CPU power is controlled by honest nodes, the honest chain will grow the fastest and outpace any competing chains. To modify a past block, an attacker would have to redo the proof-of-work of the block and all blocks after it and then catch up with and surpass the work of the honest nodes. We will show later that the probability of a slower attacker catching up diminishes exponentially as subsequent blocks are added.To compensate for increasing hardware speed and varying interest in running nodes over time, the proof-of-work difficulty is determined by a moving average targeting an average number of blocks per hour. If they're generated too fast, the difficulty increases.The steps to run the network are as follows:Nodes always consider the longest chain to be the correct one and will keep working on extending it. If two nodes broadcast different versions of the next block simultaneously, some nodes may receive one or the other first. In that case, they work on the first one they received, but save the other branch in case it becomes longer. The tie will be broken when the next proof-of-work is found and one branch becomes longer; the nodes that were working on the other branch will then switch to the longer one.New transaction broadcasts do not necessarily need to reach all nodes. As long as they reach many nodes, they will get into a block before long. Block broadcasts are also tolerant of dropped messages. If a node does not receive a block, it will request it when it receives the next block and realizes it missed one.By convention, the first transaction in a block is a special transaction that starts a new coin owned by the creator of the block. This adds an incentive for nodes to support the network, and provides a way to initially distribute coins into circulation, since there is no central authority to issue them. The steady addition of a constant of amount of new coins is analogous to gold miners expending resources to add gold to circulation. In our case, it is CPU time and electricity that is expended.The incentive can also be funded with transaction fees. If the output value of a transaction is less than its input value, the difference is a transaction fee that is added to the incentive value of the block containing the transaction. Once a predetermined number of coins have entered circulation, the incentive can transition entirely to transaction fees and be completely inflation free.The incentive may help encourage nodes to stay honest. If a greedy attacker is able to assemble more CPU power than all the honest nodes, he would have to choose between using it to defraud people by stealing back his payments, or using it to generate new coins. He ought to find it more profitable to play by the rules, such rules that favour him with more new coins than everyone else combined, than to undermine the system and the validity of his own wealth.Once the latest transaction in a coin is buried under enough blocks, the spent transactions before it can be discarded to save disk space. To facilitate this without breaking the block's hash, transactions are hashed in a Merkle Tree [7][2][5], with only the root included in the block's hash. Old blocks can then be compacted by stubbing off branches of the tree. The interior hashes do not need to be stored.A block header with no transactions would be about 80 bytes. If we suppose blocks are generated every 10 minutes, 80 bytes * 6 * 24 * 365 = 4.2MB per year. With computer systems typically selling with 2GB of RAM as of 2008, and Moore's Law predicting current growth of 1.2GB per year, storage should not be a problem even if the block headers must be kept in memory.It is possible to verify payments without running a full network node. A user only needs to keep a copy of the block headers of the longest proof-of-work chain, which he can get by querying network nodes until he's convinced he has the longest chain, and obtain the Merkle branch linking the transaction to the block it's timestamped in. He can't check the transaction for himself, but by linking it to a place in the chain, he can see that a network node has accepted it, and blocks added after it further confirm the network has accepted it.As such, the verification is reliable as long as honest nodes control the network, but is more vulnerable if the network is overpowered by an attacker. While network nodes can verify transactions for themselves, the simplified method can be fooled by an attacker's fabricated transactions for as long as the attacker can continue to overpower the network. One strategy to protect against this would be to accept alerts from network nodes when they detect an invalid block, prompting the user's software to download the full block and alerted transactions to confirm the inconsistency. Businesses that receive frequent payments will probably still want to run their own nodes for more independent security and quicker verification.Although it would be possible to handle coins individually, it would be unwieldy to make a separate transaction for every cent in a transfer. To allow value to be split and combined, transactions contain multiple inputs and outputs. Normally there will be either a single input from a larger previous transaction or multiple inputs combining smaller amounts, and at most two outputs: one for the payment, and one returning the change, if any, back to the sender.It should be noted that fan-out, where a transaction depends on several transactions, and those transactions depend on many more, is not a problem here. There is never the need to extract a complete standalone copy of a transaction's history.The traditional banking model achieves a level of privacy by limiting access to information to the parties involved and the trusted third party. The necessity to announce all transactions publicly precludes this method, but privacy can still be maintained by breaking the flow of information in another place: by keeping public keys anonymous. The public can see that someone is sending an amount to someone else, but without information linking the transaction to anyone. This is similar to the level of information released by stock exchanges, where the time and size of individual trades, the \"tape\", is made public, but without telling who the parties were.As an additional firewall, a new key pair should be used for each transaction to keep them from being linked to a common owner. Some linking is still unavoidable with multi-input transactions, which necessarily reveal that their inputs were owned by the same owner. The risk is that if the owner of a key is revealed, linking could reveal other transactions that belonged to the same owner.We consider the scenario of an attacker trying to generate an alternate chain faster than the honest chain. Even if this is accomplished, it does not throw the system open to arbitrary changes, such as creating value out of thin air or taking money that never belonged to the attacker. Nodes are not going to accept an invalid transaction as payment, and honest nodes will never accept a block containing them. An attacker can only try to change one of his own transactions to take back money he recently spent.The race between the honest chain and an attacker chain can be characterized as a Binomial Random Walk. The success event is the honest chain being extended by one block, increasing its lead by +1, and the failure event is the attacker's chain being extended by one block, reducing the gap by -1.The probability of an attacker catching up from a given deficit is analogous to a Gambler's Ruin problem. Suppose a gambler with unlimited credit starts at a deficit and plays potentially an infinite number of trials to try to reach breakeven. We can calculate the probability he ever reaches breakeven, or that an attacker ever catches up with the honest chain, as follows[8]:p\nq\nq\nz\n=\n=\n=\n probability an honest node finds the next block\n probability the attacker finds the next block\n probability the attacker will ever catch up from z blocks behindq\nz\n={\n1\n(q/p\n)\nz\nifp\u2264q\nifp>q\n}Given our assumption that\np>q\n, the probability drops exponentially as the number of blocks the attacker has to catch up with increases. With the odds against him, if he doesn't make a lucky lunge forward early on, his chances become vanishingly small as he falls further behind.We now consider how long the recipient of a new transaction needs to wait before being sufficiently certain the sender can't change the transaction. We assume the sender is an attacker who wants to make the recipient believe he paid him for a while, then switch it to pay back to himself after some time has passed. The receiver will be alerted when that happens, but the sender hopes it will be too late.The receiver generates a new key pair and gives the public key to the sender shortly before signing. This prevents the sender from preparing a chain of blocks ahead of time by working on it continuously until he is lucky enough to get far enough ahead, then executing the transaction at that moment. Once the transaction is sent, the dishonest sender starts working in secret on a parallel chain containing an alternate version of his transaction.The recipient waits until the transaction has been added to a block and\nz\nblocks have been linked after it. He doesn't know the exact amount of progress the attacker has made, but assuming the honest blocks took the average expected time per block, the attacker's potential progress will be a Poisson distribution with expected value:\u03bb=z\nq\npTo get the probability the attacker could still catch up now, we multiply the Poisson density for each amount of progress he could have made by the probability he could catch up from that point:\u2211\nk=0\n\u221e\n\u03bb\nk\ne\n\u2212\u03bb\nk!\n\u22c5{\n(q/p\n)\n(z\u2212k)\n1\nifk\u2264z\nifk>z\n}Rearranging to avoid summing the infinite tail of the distribution...1\u2212\n\u2211\nk=0\nz\n\u03bb\nk\ne\n\u2212\u03bb\nk!\n(1\u2212(q/p\n)\n(z\u2212k)\n)Converting to C code...Running some results, we can see the probability drop off exponentially with\nz\n.Solving for P less than 0.1%...We have proposed a system for electronic transactions without relying on trust. We started with the usual framework of coins made from digital signatures, which provides strong control of ownership, but is incomplete without a way to prevent double-spending. To solve this, we proposed a peer-to-peer network using proof-of-work to record a public history of transactions that quickly becomes computationally impractical for an attacker to change if honest nodes control a majority of CPU power. The network is robust in its unstructured simplicity. Nodes work all at once with little coordination. They do not need to be identified, since messages are not routed to any particular place and only need to be delivered on a best effort basis. Nodes can leave and rejoin the network at will, accepting the proof-of-work chain as proof of what happened while they were gone. They vote with their CPU power, expressing their acceptance of valid blocks by working on extending them and rejecting invalid blocks by refusing to work on them. Any needed rules and incentives can be enforced with this consensus mechanism.W. Dai, \"b-money,\" http://www.weidai.com/bmoney.txt, 1998. \u21a9H. Massias, X.S. Avila, and J.-J. Quisquater, \"Design of a secure timestamping service with minimal trust requirements,\" In 20th Symposium on Information Theory in the Benelux, May 1999. \u21a9 \u21a9S. Haber, W.S. Stornetta, \"How to time-stamp a digital document,\" In Journal of Cryptology, vol 3, no 2, pages 99-111, 1991. \u21a9D. Bayer, S. Haber, W.S. Stornetta, \"Improving the efficiency and reliability of digital time-stamping,\" In Sequences II: Methods in Communication, Security and Computer Science, pages 329-334, 1993. \u21a9S. Haber, W.S. Stornetta, \"Secure names for bit-strings,\" In Proceedings of the 4th ACM Conference on Computer and Communications Security, pages 28-35, April 1997. \u21a9 \u21a9A. Back, \"Hashcash - a denial of service counter-measure,\" http://www.hashcash.org/papers/hashcash.pdf, 2002. \u21a9R.C. Merkle, \"Protocols for public key cryptosystems,\" In Proc. 1980 Symposium on Security and Privacy, IEEE Computer Society, pages 122-133, April 1980. \u21a9W. Feller, \"An introduction to probability theory and its applications,\" 1957. \u21a9PDF available in English, Chinese (Simplified), Chinese (Traditional), Hebrew, Italian, Japanese, Russian, Spanish, and Vietnamese"}
{"prompt": "b-money", "completion": "I am fascinated by Tim May's crypto-anarchy. Unlike the communities traditionally associated with the word \"anarchy\", in a crypto-anarchy the government is not temporarily destroyed but permanently forbidden and permanently unnecessary. It's a community where the threat of violence is impotent because violence is impossible, and violence is impossible because its participants cannot be linked to their true names or physical locations.Until now it's not clear, even theoretically, how such a community could operate. A community is defined by the cooperation of its participants, and efficient cooperation requires a medium of exchange (money) and a way to enforce contracts. Traditionally these services have been provided by the government or government sponsored institutions and only to legal entities. In this article I describe a protocol by which these services can be provided to and by untraceable entities.I will actually describe two protocols. The first one is impractical, because it makes heavy use of a synchronous and unjammable anonymous broadcast channel. However it will motivate the second, more practical protocol. In both cases I will assume the existence of an untraceable network, where senders and receivers are identified only by digital pseudonyms (i.e. public keys) and every messages is signed by its sender and encrypted to its receiver.In the first protocol, every participant maintains a (seperate) database of how much money belongs to each pseudonym. These accounts collectively define the ownership of money, and how these accounts are updated is the subject of this protocol.The creation of money. Anyone can create money by broadcasting the solution to a previously unsolved computational problem. The only conditions are that it must be easy to determine how much computing effort it took to solve the problem and the solution must otherwise have no value, either practical or intellectual. The number of monetary units created is equal to the cost of the computing effort in terms of a standard basket of commodities. For example if a problem takes 100 hours to solve on the computer that solves it most economically, and it takes 3 standard baskets to purchase 100 hours of computing time on that computer on the open market, then upon the broadcast of the solution to that problem everyone credits the broadcaster's account by 3 units.The transfer of money. If Alice (owner of pseudonym KA) wishes to transfer X units of money to Bob (owner of pseudonym KB), she broadcasts the message \"I give X units of money to KB\" signed by KA. Upon the broadcast of this message, everyone debits KA's account by X units and credits KB's account by X units, unless this would create a negative balance in KA's account in which case the message is ignored.The effecting of contracts. A valid contract must include a maximum reparation in case of default for each participant party to it. It should also include a party who will perform arbitration should there be a dispute. All parties to a contract including the arbitrator must broadcast their signatures of it before it becomes effective. Upon the broadcast of the contract and all signatures, every participant debits the account of each party by the amount of his maximum reparation and credits a special account identified by a secure hash of the contract by the sum the maximum reparations. The contract becomes effective if the debits succeed for every party without producing a negative balance, otherwise the contract is ignored and the accounts are rolled back. A sample contract might look like this:KA agrees to send KB the solution to problem P before 0:0:0 1/1/2000. KB agrees to pay KA 100 MU (monetary units) before 0:0:0 1/1/2000. KC agrees to perform arbitration in case of dispute. KA agrees to pay a maximum of 1000 MU in case of default. KB agrees to pay a maximum of 200 MU in case of default. KC agrees to pay a maximum of 500 MU in case of default.The conclusion of contracts. If a contract concludes without dispute, each party broadcasts a signed message \"The contract with SHA-1 hash H concludes without reparations.\" or possibly \"The contract with SHA-1 hash H concludes with the following reparations: ...\" Upon the broadcast of all signatures, every participant credits the account of each party by the amount of his maximum reparation, removes the contract account, then credits or debits the account of each party according to the reparation schedule if there is one.The enforcement of contracts. If the parties to a contract cannot agree on an appropriate conclusion even with the help of the arbitrator, each party broadcasts a suggested reparation/fine schedule and any arguments or evidence in his favor. Each participant makes a determination as to the actual reparations and/or fines, and modifies his accounts accordingly.In the second protocol, the accounts of who has how much money are kept by a subset of the participants (called servers from now on) instead of everyone. These servers are linked by a Usenet-style broadcast channel. The format of transaction messages broadcasted on this channel remain the same as in the first protocol, but the affected participants of each transaction should verify that the message has been received and successfully processed by a randomly selected subset of the servers.Since the servers must be trusted to a degree, some mechanism is needed to keep them honest. Each server is required to deposit a certain amount of money in a special account to be used as potential fines or rewards for proof of misconduct. Also, each server must periodically publish and commit to its current money creation and money ownership databases. Each participant should verify that his own account balances are correct and that the sum of the account balances is not greater than the total amount of money created. This prevents the servers, even in total collusion, from permanently and costlessly expanding the money supply. New servers can also use the published databases to synchronize with existing servers.The protocol proposed in this article allows untraceable pseudonymous entities to cooperate with each other more efficiently, by providing them with a medium of exchange and a method of enforcing contracts. The protocol can probably be made more efficient and secure, but I hope this is a step toward making crypto-anarchy a practical as well as theoretical possibility.One of the more problematic parts in the b-money protocol is money creation. This part of the protocol requires that all of the account keepers decide and agree on the cost of particular computations. Unfortunately because computing technology tends to advance rapidly and not always publicly, this information may be unavailable, inaccurate, or outdated, all of which would cause serious problems for the protocol.So I propose an alternative money creation subprotocol, in which account keepers (everyone in the first protocol, or the servers in the second protocol) instead decide and agree on the amount of b-money to be created each period, with the cost of creating that money determined by an auction. Each money creation period is divided up into four phases, as follows:Planning. The account keepers compute and negotiate with each other to determine an optimal increase in the money supply for the next period. Whether or not the account keepers can reach a consensus, they each broadcast their money creation quota and any macroeconomic calculations done to support the figures.Bidding. Anyone who wants to create b-money broadcasts a bid in the form of <x, y> where x is the amount of b-money he wants to create, and y is an unsolved problem from a predetermined problem class. Each problem in this class should have a nominal cost (in MIPS-years say) which is publicly agreed on.Computation. After seeing the bids, the ones who placed bids in the bidding phase may now solve the problems in their bids and broadcast the solutions.Money creation. Each account keeper accepts the highest bids (among those who actually broadcasted solutions) in terms of nominal cost per unit of b-money created and credits the bidders' accounts accordingly."}
{"prompt": "The Crypto Anarchist Manifesto", "completion": "A specter is haunting the modern world, the specter of crypto anarchy.Computer technology is on the verge of providing the ability for individuals and groups to communicate and interact with each other in a totally anonymous manner. Two persons may exchange messages, conduct business, and negotiate electronic contracts without ever knowing the True Name, or legal identity, of the other. Interactions over networks will be untraceable, via extensive re- routing of encrypted packets and tamper-proof boxes which implement cryptographic protocols with nearly perfect assurance against any tampering. Reputations will be of central importance, far more important in dealings than even the credit ratings of today. These developments will alter completely the nature of government regulation, the ability to tax and control economic interactions, the ability to keep information secret, and will even alter the nature of trust and reputation.The technology for this revolution--and it surely will be both a social and economic revolution--has existed in theory for the past decade. The methods are based upon public-key encryption, zero-knowledge interactive proof systems, and various software protocols for interaction, authentication, and verification. The focus has until now been on academic conferences in Europe and the U.S., conferences monitored closely by the National Security Agency. But only recently have computer networks and personal computers attained sufficient speed to make the ideas practically realizable. And the next ten years will bring enough additional speed to make the ideas economically feasible and essentially unstoppable. High-speed networks, ISDN, tamper-proof boxes, smart cards, satellites, Ku-band transmitters, multi-MIPS personal computers, and encryption chips now under development will be some of the enabling technologies.The State will of course try to slow or halt the spread of this technology, citing national security concerns, use of the technology by drug dealers and tax evaders, and fears of societal disintegration. Many of these concerns will be valid; crypto anarchy will allow national secrets to be trade freely and will allow illicit and stolen materials to be traded. An anonymous computerized market will even make possible abhorrent markets for assassinations and extortion. Various criminal and foreign elements will be active users of CryptoNet. But this will not halt the spread of crypto anarchy.Just as the technology of printing altered and reduced the power of medieval guilds and the social power structure, so too will cryptologic methods fundamentally alter the nature of corporations and of government interference in economic transactions. Combined with emerging information markets, crypto anarchy will create a liquid market for any and all material which can be put into words and pictures. And just as a seemingly minor invention like barbed wire made possible the fencing-off of vast ranches and farms, thus altering forever the concepts of land and property rights in the frontier West, so too will the seemingly minor discovery out of an arcane branch of mathematics come to be the wire clippers which dismantle the barbed wire around intellectual property.Arise, you have nothing to lose but your barbed wire fences!"}
{"prompt": "Crypto Anarchy and Virtual Communities", "completion": "The combination of strong, unbreakable public key cryptography and virtual network communities in cyberspace will produce interesting and profound changes in the nature of economic and social systems. Crypto anarchy is the cyberspatial realization of anarcho-capitalism, transcending national boundaries and freeing individuals to make the economic arrangements they wish to make consensually.Strong cryptography, exemplified by RSA (a public key algorithm) and PGP (Pretty Good Privacy), provides encryption that essentially cannot be broken with all the computing power in the universe. This ensures security and privacy. Public key cryptography is rightly considered to be a revolution.Digital mixes, or anonymous remailers, use crypto to create untraceable e-mail, which has many uses. (Numerous anonymous remailers, in several countries, are now operating. Message traffic is growing exponentially.)Digital pseudonyms, the creation of persistent network personas that cannot be forged by others and yet which are unlinkable to the \"true names\" of their owners, are finding major uses in ensuring free speech, in allowing controversial opinions to be aired, and in providing for economic transactions that cannot be blocked by local governments. The technology being deployed by the Cypherpunks and others, means their identities, nationalities, and even which continents they are on are untraceable -- unless they choose to reveal this information. This alters the conventional \"relationship topology\" of the world, allowing diverse interactions without external governmental regulation, taxation, or interference.Digital cash, untraceable and anonymous (like real cash), is also coming, though various technical and practical hurdles remain. \"Swiss banks in cyberspace\" will make economic transactions much more liquid and much less subject to local rules and regulations. Tax avoidance is likely to be a major attraction for many. An example of local interest to Monte Carlo might be the work underway to develop anonymous, untraceable systems for \"cyberspace casinos.\" While not as attractive to many as elegant casinos, the popularity of \"numbers games\" and bookies in general suggests a opportunity to pursue.Data havens and information markets are already springing up, using the methods described to make information retrievable anonymously and untraceably.Governments see their powers eroded by these technologies, and are taking various well-known steps to try to limit the use of strong crypto by their subjects. The U.S. has several well-publicized efforts, including the Clipper chip, the Digital Telephony wiretap law, and proposals for \"voluntary\" escrow of cryptographic keys. Cypherpunks and others expect these efforts to be bypassed. Technology has let the genie out of the bottle. Crypto anarchy is liberating individuals from coercion by their physical neighbors\u2014who cannot know who they are on the Net\u2014and from governments. For libertarians, strong crypto provides the means by which government will be avoided.The presentation will describe how several of these systems work, briefly, and will outline the likely implications of this combination of crypto anarchy and virtual cyberspace communities.This paper describes the combination of two major technologies:This paper describes the combination of two major technologies:These areas have generally remained separate, at least in published papers. Certainly the developers of cyberspace systems, such as MUDs, MOOs, and Habitat-like systems, appreciate the importance of cryptography for user authentication, overall security, and certainly for (eventual) digital purchase of services. But for the most part the combination of these two areas has been the province of the science fiction writer, notably writers such as Vernor Vinge, William Gibson, Bruce Sterling, and Orson Scott Card.The \"Cypherpunks\" group, a loose, anarchic mailing list and group of hackers, was formed by several of us in 1992 as a group to make concrete some of the abstract ideas often presented at conferences. We've had some successes, and some failures.[1] The Cypherpunks group also appeared at a fortuitous time, as PGP was becoming popular, as Wired magazine appeared (they featured us on the cover of their second issue), and as the publicity (hype?) about the Information Superhighway and the World Wide Web reached a crescendo.The site ftp.csua.berkeley.edu has a number of essays and files, including crypto files, in the directory pub/cypherpunks. I have also written/ compiled a very large 1.3 MB FAQ on these issues, the Cyphernomicon, available at various sites, including my ftp directory, ftp.netcom.com, in the directory pub/tc/tcmay.The Cypherpunks group is also a pretty good example of a \"virtual community.\" Scattered around the world, communicating electronically in matters of minutes, and seeming oblivious to local laws, the Cypherpunks are indeed a community, and a virtual one. Many members use pseudonyms, and use anonymous remailers to communicate with the list. The list itself thus behaves as a \"message pool,\" a place where information of all sort may be anonymous deposited\u2014and anonymous received (since everyone sees the entire list, like a newspaper, the intended recipient is anonymized).Legal Caveat: Consult your local laws before applying any of the methods described here. In some jurisdictions, it may be illegal to even read papers like this (seriously). In particular, I generally won't be giving ftp site addresses for copies of PGP, remailer access, digital cash systems, etc. These are well-covered in more current forums, e.g., sci.crypt or talk.politics.crypto, and there are some unresolved issues about whether giving the address of such sites constitutes (or \"aids and abets\") violation of various export and munitions laws (crypto is considered a munition in the U.S. and probably elsewhere....some nations consider a laser printer to be a munitions item!).The past two decades have produced a revolution in cryptography (crypto, for short) the science of the making of ciphers and codes. Beyond just simple ciphers, useful mainly for keeping communications secret, modern crypto includes diverse tools for authentication of messages, for digital timestamping of documents, for hiding messages in other documents (steganography), and even for schemes for digital cash.Public key cryptography, the creation of Diffie and Hellman, has dramatically altered the role of crypto. Coming at the same time as the wholesale conversion to computer networks and worldwide communications, it has been a key element of security, confidence, and success. The role of crypto will only become more important over the coming decades.Pretty Good Privacy, PGP, is a popular version of the algorithm developed by Rivest, Shamir, and Adleman, known of course as RSA. The RSA algorithm was given a patent in the U.S., though not in any European countries, and is licensed commercially.[2]These tools are described in detail in various texts and Conference proceedings, and are not the subject of this paper.[3] The focus here is on the implications of strong crypto for cyberspace, especially on virtual communities.Mention should be made of the role of David Chaum in defining the key concepts here. In several seminal papers (for example,[4][5]), Chaum introduced the ideas of using public key cryptography methods for anonymous, untraceable electronic mail, for digital money systems in which spender identity is not revealed, and in schemes related to these. (I make no claims of course that Chaum agrees with my conclusions about the political and socioeconomic implications of these results.)Notes: cyberspace, Habitat, VR, Vinge, etc. Crypto holds up the \"walls\" of these cyberspatial realities. Access control, access rights, modification privileges.Virtual communities are the networks of individuals or groups which are not necessarily closely-connected geographically. The \"virtual\" is meant to imply a non-physical linking, but should not be taken to mean that these are any less community-like than are conventional physical communities.Examples include churches, service organizations, clubs, criminal gangs, cartels, fan groups, etc. The Catholic Church and the Boy Scouts are both examples of virtual communities which span the globe, transcend national borders, and create a sense of allegiance, of belonging, and a sense of \"community.\" Likewise, the Mafia is a virtual community (with its enforcement mechanisms, its own extra-legal rules, etc.) Lots of other examples: Masons, Triads, Red Cross, Interpol, Islam, Judaism, Mormons, Sindero Luminoso, the IRA, drug cartels, terrorist groups, Aryan Nation, Greenpeace, the Animal Liberation Front, and so on. There are undoubtedly many more such virtual communities than there are nation-states, and the ties that bind them are for the most part much stronger than are the chauvinist nationalism emotions. Any group in which the common interests of the group, be it a shared ideology or a particular interest, are enough to create a cohesive community.Corporations are another prime example of a virtual community, having scattered sites, private communication channels (generally inaccessible to the outside world, including the authorities), and their own goals and methods. In fact, many \"cyberpunk\" (not cypherpunk) fiction authors make a mistake, I think, in assuming the future world will be dominated by transnational megacorporate \"states.\" In fact, corporations are just one example\u2014of many\u2014of such virtual communities which will be effectively on a par with nation-states. (Note especially that any laws designed to limit use of crypto cause immediate and profound problems for corporations-countries like France and the Philippines, which have attempted to limit the use of crypto, have mostly been ignored by corporations. Any attempts to outlaw crypto will produce a surge of sudden \"incorporations,\" thus gaining for the new corporate members the aegis of corporate privacy.)In an academic setting, \"invisible colleges\" are the communities of researchers.These virtual communities typically are \"opaque\" to outsiders. Attempts to gain access to the internals of these communities are rarely successful. Law enforcement and intelligence agencies (such as the NSA in the U.S., Chobetsu in Japan, SDECE in France, and so on, in every country) may infiltrate such groups and use electronic surveillance (ELINT) to monitor these virtual communities. Not surprisingly, these communities are early adopters of encryption technology, ranging from scrambled cellphones to full-blown PGP encryption.[6]The use of encryption by \"evil\" groups, such as child pornographers, terrorists, abortionists, abortion protestors, etc., is cited by those who wish to limit civilian access to crypto tools. We call these the \"Four Horseman of the Infocalypse,\" as they are so often cited as the reason why ordinary citizen-units of the nation-state are not to have access to crypto.This is clearly a dangerous argument to make, for various good reasons. The basic right of free speech is the right to speak in a language one's neighbors or governing leaders may not find comprehensible: encrypted speech. There's not enough space here to go into the many good arguments against a limit on access to privacy, communications tools, and crypto.The advent of full-featured communications systems for computer-mediated virtual communities will have even more profound implications. MUDs and MOOs (multi-user domains, etc.) and 3D virtual realities are one avenue, and text-centric Net communications are another. (Someday, soon, they'll merge, as described in Vernor Vinge's prophetic 1980 novella, True Names.)An interesting way to view issues of network visibility is in terms of the \"transparency\" of nodes and links between nodes. Transparent means visible to outsiders, perhaps those in law enforcement or the intelligence community. Opaque mean not transparent, not visible. A postcard is transparent, a sealed letter is opaque. PGP inventor Phil Zimmermann has likened the requirement for transparency to being ordered to use postcards for all correspondence, with encryption the equivalent of an opaque envelope (envelopes can be opened, of course, and long have been).Transparent links and nodes are the norm in a police state, such as the U.S.S.R., Iraq, China, and so forth. Communications channels are tapped, and private use of computers is restricted. (This is becoming increasingly hard to do, even for police states; many cite the spread of communications options as a proximate cause of the collapse of communism in recent years.)There are interesting \"chemistries\" or \"algebras\" of transparent vs. opaque links and nodes. What happens if links must be transparent, but nodes are allowed to be opaque? (The answer: the result is as if opaque links and nodes were allowed, i.e., full implications of strong crypto. Hence, any attempt to ban communications crypto while still allowing private CPUs to exist....)If Alice and Bob are free to communicate, and to choose routing paths, then Alice can use \"crypto arbitrage\" (a variation on the term, \"regulatory arbitrage,\" the term Eric Hughes uses to capture this idea of moving transactions to other jurisdictions) to communicate with sites\u2014perhaps in other countries\u2014that will perform as she wishes. This can mean remailing, mixing, etc. As an example, Canadian citizens who are told they cannot access information on the Homolka-Teale murder case (a controversial case in which the judge has ordered the media in Canada, and entering Canada, not to discuss the gory details) nevertheless have a vast array of options, including using telnet, gopher, ftp, the Web, etc., to access sites in many other countries--or even in no country in particular.Most of the consequences described here arise from this chemistry of links and nodes: unless nearly all node and links are forced to be transparent, including links to other nations and the nodes in those nations, then the result is that private communication can still occur. Crypto anarchy results.\"The Net is an anarchy.\" This truism is the core of crypto anarchy. No central control, no ruler, no leader (except by example, reputation), no \"laws.\" No single nation controls the Net, no administrative body sets policy. The Ayatollah in Iran is as powerless to stop a newsgroup\u2014alt.wanted.moslem.women or alt.wanted.moslem.gay come to mind\u2014he doesn't like as the President of France is as powerless to stop, say, the abuse of French in soc.culture.french. Likewise, the CIA can't stop newsgroups, or sites, or Web pages, which give away their secrets. At least not in terms of the Net itself...what non-Net steps might be taken is left as an exercise for the paranoid and the cautious.This essential anarchy is much more common than many think. Anarchy\u2014the absence of a ruler telling one what to do\u2014is common in many walks of life: choice of books to read, movies to see, friends to socialize with, etc. Anarchy does not mean complete freedom\u2014one can, after all, only read the books which someone has written and had published\u2014but it does mean freedom from external coercion. Anarchy as a concept, though, has been tainted by other associations.First, the \"anarchy\" here is not the anarchy of popular conception: lawlessness, disorder, chaos, and \"anarchy.\" Nor is it the bomb-throwing anarchy of the 19th century \"black\" anarchists, usually associated with Russia and labor movements. Nor is it the \"black flag\" anarchy of anarcho-syndicalism and writers such as Proudhon. Rather, the anarchy being spoken of here is the anarchy of \"absence of government\" (literally, \"an arch,\" without a chief or head).This is the same sense of anarchy used in \"anarchocapitalism,\" the libertarian free market ideology which promotes voluntary, uncoerced economic transactions.[7] I devised the term crypto anarchy as a pun on crypto, meaning \"hidden,\" on the use of \"crypto\" in combination with political views (as in Gore Vidal's famous charge to William F. Buckley: \"You crypto fascist!\"), and of course because the technology of crypto makes this form of anarchy possible. The first presentation of this was in a 1988 \"Manifesto,\" whimsically patterned after another famous manifesto.[8] Perhaps a more popularly understandable term, such as \"cyber liberty,\" might have some advantages, but crypto anarchy has its own charm, I think.And anarchy in this sense does not mean local hierarchies don't exist, nor does it mean that no rulers exist. Groups outside the direct control of local governmental authorities may still have leaders, rulers, club presidents, elected bodies, etc. Many will not, though.Politically, virtual communities outside the scope of local governmental control may present problems of law enforcement and tax collection. (Some of us like this aspect.) Avoidance of coerced transactions can mean avoidance of taxes, avoidance of laws saying who one can sell to and who one can't, and so forth. It is likely that many will be unhappy that some are using cryptography to avoid laws designed to control behavior.National borders are becoming more transparent than ever to data. A flood of bits crosses the borders of most developed countries\u2014phone lines, cables, fibers, satellite up/downlinks, and millions of diskettes, tapes, CDs, etc. Stopping data at the borders is less than hopeless.Finally, the ability to move data around the world at will, the ability to communicate to remote sites at will, means that a kind of \"regulatory arbitrage\" can be used to avoid legal roadblocks. For example, remailing into the U.S. from a site in the Netherlands...whose laws apply? (If one thinks that U.S. laws should apply to sites in the Netherlands, does Iraqi law apply in the U.S.? And so on.)This regulatory arbitrage is also useful for avoiding the welter of laws and regulations which operations in one country may face, including the \"deep pockets\" lawsuits so many in the U.S. face. Moving operations on the Net outside a litigious jurisdiction is one step to reduce this business liability. Like Swiss banks, but different.Something needs to be said about the role of anonymity and digital pseudonyms. This is a topic for an essay unto itself, of course.Are true names really needed? Why are they asked for? Does the nation-state have any valid reason to demand they be used?People want to know who they are dealing with, for psychological/evolutionary reasons and to better ensure traceability should they need to locate a person to enforce the terms of a transaction. The purely anonymous person is perhaps justifiably viewed with suspicion.And yet pseudonyms are successful in many cases. And we rarely know whether someone who presents himself by some name is \"actually\" that person. Authors, artists, performers, etc., often use pseudonyms. What matters is persistence, and nonforgeability. Crypto provides this.On the Cypherpunks list, well-respected digital pseudonyms have appeared and are thought of no less highly than their \"real\" colleagues are.The whole area of digitally-authenticated reputations, and the \"reputation capital\" that accumulates or is affected by the opinions of others, is an area that combines economics, game theory, psychology, and expectations. A lot more study is needed.It is unclear if governments will move to a system of demanding \"Information Highway Driver's Licenses,\" figuratively speaking, or how systems like this could ever be enforced. (The chemistry of opaque nodes and links, again.)It surprises many people that some of these uses are already being intensively explored. Anonymous remailers are used by tens of thousands of persons-and perhaps abused.[9] And of course encryption, via RSA, PGP, etc., is very common in some communities. (Hackers, Net users, freedom fighters, white separatists, etc....I make no moral judgments here about those using these methods).Remailers are a good example to look at in more detail. There are two current main flavors of remailers:\"Cypherpunk\"-style remailers, which process text messages to redirect mail to another sites, using a command syntax that allows arbitrary nesting of remailing (as many sites as one wishes), with PGP encryption at each level of nesting.\"Julf\"-style remailer(s), based on the original work of Karl Kleinpaste and operated/maintained by Julf Helsingius, in Finland. No encryption, and only one such site at present. (This system has been used extensively for messages posted to the Usenet, and is basically successful. The model is based on operator trustworthiness, and his location in Finland, beyond the reach of court orders and subpoenas from most countries.)The Cypherpunks remailers currently number about 20, with more being added every month. There is no reason not to expect hundreds of such remailers in a few years.One experimental \"information market\" is BlackNet, a system which appeared in 1993 and which allows fully-anonymous, two-way exchanges of information of all sorts. There are reports that U.S. authorities have investigated this because of its presence on networks at Defense Department research labs. Not much they can do about it, of course, and more such entities are expected.(The implications for espionage are profound, and largely unstoppable. Anyone with a home computer and access to the Net or Web, in various forms, can use these methods to communicate securely, anonymously or pseudonymously, and with little fear of detection. \"Digital dead drops\" can be used to post information obtained, far more securely than the old physical dead drops...no more messages left in Coke cans at the bases of trees on remote roads.)Whistleblowing is another growing use of anonymous remailers, with folks fearing retaliation using remailers to publicly post information. (Of course, there's a fine line between whistleblowing, revenge, and espionage.)Data havens, for the storage and marketing of controversial information is another area of likely future growth. Nearly any kind of information, medical, religious, chemical, etc., is illegal or proscribed in one or more countries, so those seeking this illegal information will turn to anonymous messaging systems to access\u2014and perhaps purchase, with anonymous digital cash\u2014this information. This might include credit data bases, deadbeat renter files, organ bank markets, etc. (These are all things which have various restrictions on them in the U.S., for example....one cannot compile credit data bases, or lists of deadbeat renters, without meeting various restrictions. A good reason to move them into cyberspace, or at least outside the U.S., and then sell access through remailers.)Matching buyers and sellers of organs is another such market. A huge demand (life and death), but various laws tightly controlling such markets.Digital cash efforts. A lot has been written about digital cash.[10] [11] David Chaum's company, DigiCash, has the most interesting technology, and has recently begun market testing. Stefan Brands may or may not have a competing system which gets around some of Chaum's patents. (The attitude crypto anarchists might take about patents is another topic for discussion. Suffice it to say that patents and other intellectual property issues continue to have relevance in the practical world, despite erosion by technological trends.)Credit card-based systems, such as the First Virtual system, are not exactly digital cash, in the Chaumian sense of blinded notes, but offer some advantages the market may find useful until more advanced systems are available.I expect to see many more such experiments over the next several years, and some of them will likely be market successes.How will these ideas affect the development of cyberspace?\"You can't eat cyberspace\" is a criticism often levelled at argument about the role of cyberspace in everyday life. The argument made is that money and resources \"accumulated\" in some future (or near-future) cyberspatial system will not be able to be \"laundered\" into the real world. Even such a prescient thinker as Neal Stephenson, in Snow Crash, had his protagonist a vastly wealthy man in \"The Multiverse,\" but a near-pauper in the physical world.This is implausible for several reasons. First, we routinely see transfers of wealth from the abstract world of stock tips, arcane consulting knowledge, etc., to the real world. \"Consulting\" is the operative word. Second, a variety of means of laundering money, via phony invoices, uncollected loans, art objects, etc., are well-known to those who launder money...these methods, and more advanced ones to come, are likely to be used by those who wish their cyberspace profits moved into the real world.(Doing this anonymously, untraceably, is another complication. There may be methods of doing this--proposals have looked pretty solid, but more work is needed.)The World Wide Web is growing at an explosive pace. Combined with cryptographically-protected communication and digital cash of some form (and there are several being tried), this should produce the long-awaited colonization of cyberspace.Most Net and Web users already pay little attention to the putative laws of their local regions or nations, apparently seeing themselves more as members of various virtual communities than as members of locally-governed entities. This trend is accelerating.Most importantly, information can be bought and sold (anonymously, too) and then used in the real world. There is no reason to expect that this won't be a major reason to move into cyberspace.I've touched on the implications in several places. Many thoughtful people are worried about some of the possibilities made apparent by strong crypto and anonymous communication systems. Some are proposing restrictions on access to crypto tools. The recent debate in the U.S. over \"Clipper\" and other key escrow systems shows the strength of emotions on this issue.Abhorrent markets may arise. For example, anonymous systems and untraceable digital cash have some obvious implications for the arranging of contract killings and such. (The greatest risk in arranging such hits is that physical meetings expose the buyers and sellers of such services to stings. Crypto anarchy lessens, or even eliminates, this risk, thus lowering transaction costs. The risks to the actual triggermen are not lessened, but this is a risk the buyers need not worry about. Think of anonymous escrow services which hold the digital money until the deed is done. Lots of issues here. It is unfortunate that this area is so little-discussed....people seem to have an aversion for exploring the logical consequences in such areas.)The implications for corporate and national espionage have already been touched upon. Combined with liquid markets in information, this may make secrets much harder to keep. (Imagine a \"Digital Jane's,\" after the military weapons handbooks, anonymously compiled and sold for digital money, beyond the reach of various governments which don't want their secrets told.)New money-laundering approaches are of course another area to explore.Something that is inevitable is the increased role of individuals, leading to a new kind of elitism. Those who are comfortable with the tools described here can avoid the restrictions and taxes that others cannot. If local laws can be bypassed technologically, the implications are pretty clear.The implications for personal liberty are of course profound. No longer can nation-states tell their citizen-units what they can have access to, not if these citizens can access the cyberspace world through anonymous systems.I am making no bold predictions that these changes will sweep the world anytime soon. Most people are ignorant of these methods, and the methods themselves are still under development. A wholesale conversion to \"living in cyberspace\" is just not in the cards, at least not in the next few decades.But to an increasingly large group, the Net is reality. It is where friends are made, where business is negotiated, where intellectual stimulation is found. And many of these people are using crypto anarchy tools. Anonymous remailers, message pools, information markets. Consulting via pseudonyms has begun to appear, and should grow. (As usual, the lack of a robust digital cash system is slowing things down.Can crypto anarchy be stopped? Although the future evolution in unclear, as the future almost always is, it seems unlikely that present trends can be reversed:The Net is integrally tied to economic transactions, and no country can afford to \"disconnect\" itself from it. (The U.S.S.R. couldn't do it, and they were light-years behind the U.S., European, and Asian countries. And in a few more years, no hope of limiting these tools at all, something the U.S. F.B.I. has acknowledged.[13]Technological Inevitability: These tools are already in widespread use, and only draconian steps to limit access to computers and communications channels could significantly impact further use. (Scenarios for restrictions on private use of crypto.)As John Gilmore has noted, \"the Net tends to interpret censorship as damage, and routes around it.\" This applies as well to attempts to legislate behavior on the Net. (The utter impossibility of regulating the worldwide Net, with entry points in more than a hundred nations, with millions of machines, is not yet fully recognized by most national governments. They still speak in terms of \"controlling\" the Net, when in fact the laws of one nation generally have little use in other countries.)Digital money in its various forms is probably the weakest link at this point. Most of the other pieces are operational, at least in basic forms, but digital cash is (understandably) harder to deploy. Hobbyist or \"toy\" experiments have been cumbersome, and the \"toy\" nature is painfully obvious. It is not easy to use digital cash systems at this time (\"To use Magic Money, first create a client...\"), especially as compared to the easily understood alternatives.[14] People are understandably reluctant to entrust actual money to such systems. And it's not yet clear what can be bought with digital cash (a chicken or egg dilemma, likely to be resolved in the next several years).And digital cash, digital banks, etc., are a likely target for legislative moves to limit the deployment of crypto anarchy and digital economies. Whether through banking regulation or tax laws, it is not likely that digital money will be deployed easily. \"Kids, don't try this at home!\" Some of the current schemes may also incorporate methods for reporting transactions to the tax authorities, and may include \"software key escrow\" features which make transactions fully or partly visible to authorities.Strong crypto provides new levels of personal privacy, all the more important in an era of increased surveillance, monitoring, and the temptation to demand proofs of identity and permission slips. Some of the \"credentials without identity\" work of Chaum and others may lessen this move toward a surveillance society.The implications are, as I see it, that the power of nation-states will be lessened, tax collection policies will have to be changed, and economic interactions will be based more on personal calculations of value than on societal mandates.Is this a Good Thing? Mostly yes. Crypto anarchy has some messy aspects, of this there can be little doubt. From relatively unimportant things like price-fixing and insider trading to more serious things like economic espionage, the undermining of corporate knowledge ownership, to extremely dark things like anonymous markets for killings.But let's not forget that nation-states have, under the guise of protecting us from others, killed more than 100 million people in this century alone. Mao, Stalin, Hitler, and Pol Pot, just to name the most extreme examples. It is hard to imagine any level of digital contract killings ever coming close to nationstate barbarism. (But I agree that this is something we cannot accurately speak about; I don't think we have much of a choice in embracing crypto anarchy or not, so I choose to focus on the bright side.)It is hard to argue that the risks of anonymous markets and tax evasion are justification for worldwide suppression of communications and encryption tools. People have always killed each other, and governments have not stopped this (arguably, they make the problem much worse, as the wars of this century have shown).Also, there are various steps that can be taken to lessen the risks of crypto anarchy impinging on personal safety.[15]Strong crypto provides a technological means of ensuring the practical freedom to read and write what one wishes to. (Albeit perhaps not in one's true name, as the nation-state-democracy will likely still try to control behavior through majority votes on what can be said, not said, read, not read, etc.) And of course if speech is free, so are many classes of economic interaction that are essentially tied to free speech.A phase change is coming. Virtual communities are in their ascendancy, displacing conventional notions of nationhood. Geographic proximity is no longer as important as it once was.A lot of work remains. Technical cryptography still hasn't solved all problems, the role of reputations (both positive and negative) needs further study, and the practical issues surrounding many of these areas have barely been explored.We will be the colonizers of cyberspace.My thanks to my colleagues in the Cypherpunks group, all 700 of them, past or present. Well over 100 megabytes of list traffic has passed through he Cypherpunks mailing list, so there have been a lot of stimulating ideas. But especially my appreciation goes to Eric Hughes, Sandy Sandfort, Duncan Frissell, Hal Finney, Perry Metzger, Nick Szabo, John Gilmore, Whit Diffie, Carl Ellison, Bill Stewart, and Harry Bartholomew. Thanks as well to Robin Hanson, Ted Kaehler, Keith Henson, Chip Morningstar, Eric Dean Tribble, Mark Miller, Bob Fleming, Cherie Kushner, Michael Korns, George Gottlieb, Jim Bennett, Dave Ross, Gayle Pergamit, and\u2014especially\u2014the late Phil Salin. Finally, thanks for valuable discussions, sometimes brief, sometimes long, with Vernor Vinge, David Friedman, Rudy Rucker, David Chaum, Kevin Kelly, and Steven Levy.The Cypherpunks group was mainly formed by Eric Hughes, Tim May, and John Gilmore. It began both physical meetings, in the Bay Area and elsewhere, and virtual meetings on an unmoderated mailing list. The name was provided by Judith Milhon, as a play on the \"cyberpunk\" genre and the British spelling of cipher. The mailing list can be subscribed to by sending the single message subscribe cypherpunks in the body of a message to majordomo@toad.com. Expect at least 50 messages a day. About 600 subscribers in many countries are presently on the list. Some are pseudonyms. \u21a9RSA Data Security Inc., Redwood Shores, California, is the license administrator. Contact them for details. \u21a9Many crypto texts exist. A good introduction is Bruce Schneier's Applied Cryptography, John Wiley and Sons, 1994. This text includes pointers to many other sources. The \"Crypto\" Proceedings (Advances in Cryptology, Springer-Verlag, annually) are essential references. The annual Crypto conference in Santa Barbara, and the Eurocrypt and Auscrypt conferences, are where most crypto results are presented. \u21a9David Chaum, \"Untraceable Electronic Mail, Return Addresses, and Digital Pseudonyms,\" Comm. ACM 24, 2, February 1981, pp. 84-88. Cypherpunks-style remailers are a form of Chaum's \"digital mixes,\" albeit far from ideal. \u21a9David Chaum, \"Security without Identification: Transaction Systems to make Big Brother Obsolete,\" Comm. ACM 28, 10, October 1985. This is an early paper on digital cash...be sure to consult more recent papers. \u21a9The political opposition in Myan Mar\u2014formerly Burma\u2014is using Pretty Good Privacy running on DOS laptops in the jungles for communications amongst the rebels, according to Phil Zimmermann, author of PGP. This life-and-death usage underscores the role of crypto. \u21a9David Friedman, The Machinery of Freedom, 2nd edition. A leading theoretician of anarcho-capitalism. (Hayek was another.) \u21a9Tim May, The Crypto Anarchist Manifesto, July 1988, distributed on the Usenet and on various mailing lists. \u21a9Abuse, according to some views, of remailers is already occurring. A Cypherpunks-type remailer was used to post a proprietary hash function of RSA Data Security, Inc. to the Usenet. (Let me hasten to add that it was not a remailer I operate, or have control over, etc.) \u21a9article on digital cash, The Economist, 26 November 1994. pp. 21-23. \u21a9article on digital cash, Steven Levy, Wired. December 1994. \u21a9See Kevin Kelly's Out of Control, 1994, for a discussion of how central control is failing, and how the modern paradigm is one of market mechanisms, personal choice, and technological empowerment. \u21a9During the \"Digital Telephony Bill\" debate, an FBI official said that failure to mandate wiretap capabilities within the next 18 months would make it all moot, as the cost would rise beyond any reasonable budget (currently $500 million for retrofit costs). \u21a9\"Magic Money\" was an experimental implementation of Chaum's digital cash system. It was coded by \"Pr0duct Cypher,\" a pseudonymous member of the Cypherpunks list\u2014none of us knows his real identity, as he used remailers to communicate with the list, and digitally signed his posts. Many of us found it too difficult to use, which is more a measure of the deep issues involved in using digital analogs (no pun intended) to real, physical money. \u21a9Robin Hanson and David Friedman have written extensively about scenarios for dealing with the threats of extortionists, would-be assassins, etc. I am hoping some of their work gets published someday. (Much of the discussion was in 1992-3, on the \"Extropians\" mailing list.) \u21a9"}
{"prompt": "Formalizing and Securing Relationships on Public Networks", "completion": "History has seen successive revolutions in the costs of doing global business. First transportation, then manufacturing, and recently communications costs have fallen dramatically. Yet there are still major barriers to doing business internationally. The cost of doing business globally is increasingly dominated by issues of jurisdiction, security, and trust: the costs of developing, maintaining, and securing our relationships.Despite the recent rise of global computer networks, our institutions still take for granted that we live in a world of paper. We formalize our relationships with written contracts, written laws, and forms designed for paper. Our attitudes and laws regarding intellectual property and privacy have assumed a world of paper which is costly to copy. Increasingly, we can no longer take these deeply embedded, highly evolved paper institutions for granted. Nor, since these institutions involve complex human relationships, can we redesign them overnight. We are entering a period where civilization must once again adapt to a radical new media.Over the long stretch civilization, paper represents only one of many technologies used to mediate commercial relationships. The Inca used quipu \u2013 accounts encoded on strings, a system with interesting tamper-resistance properties. Early Middle Eastern civilizations used clay tokens for thousands of years. These combined the function of, and were a precursor to, both cuneiform writing and coins. Coins started out as lumps of standardize metal and weight. Since these were too expensive to test during a normal business transaction, they came to be stamped by reputable or powerful authorities. Coins played a major role in commerce for thousands of years, but that era is now over.Business is now dominated by paper and institutions of written literacy. Security measures have included chops, seals, and written signatures. Value has been transered via bills of exchange (which evolved into checks), bearer certificates, and accounts using the double-entry bookeeping system. Most importantly, we take for granted that contracts and law are written on this static medium, to be interpreted and enforced by human authorities.We are now entering an era of online communications and software \"literacy\". The \"physics of cyberspace\", studied by computer scientists, are radically different from the properties of paper, to an even greater degree than paper was different from string, clay, and metal. Not only written but also aural, visual, and other sensory media can be combined. Most importantly, digital media are dynamic \u2013 they not only transmit information, but can also make some kinds of decisions. Digital media can perform calculations, directly operate machinery, and work through some kinds of reasoning much more efficiently than humans.The movement from static to dynamic media promises to bring about a fourth cost revolution in the related areas of jurisdiction, trust, and security. Impacts on business will be felt in law, accounting, auditing, billing, collections, contracts, confidentiality, and so on: in short, the entire nature of our business relationships will be altered in ways only partially foreseeable.The main traditional way to formalize a business relationship is the contract, a set of promises agreed to in a \"meeting of the minds\". We naturally think of contracts as written, but oral agreements are also considered contracts, and have been around since prehistory. The contract is the basic building block of a market economy. Over many centuries of cultural evolution has emerged both the concept of contract and principles related to it, encoded into common law. Such evolved structures are often prohibitively costly to rederive. If we started from scratch, using reason and experience, it could take many centuries to redevelop sophisticated ideas like contract law and property rights that make the modern market work. But the digital revolution challenges us to develop new institutions in a much shorter period of time. By extracting from our current laws, procedures, and theories those principles which remain applicable in cyberspace, we can retain much of this deep tradition, and greatly shorten the time needed to develop useful digital institutions.Computers make possible the running of algorithms heretofore prohibitively costly, and networks the quicker transmission of larger and more sophisticated messages. Furthermore, computer scientists and cryptographers have recently discovered many new and quite interesting algorithms. Combining these messages and algorithms makes possible a wide variety of new protocols. These protocols, running on public networks such as the Internet, both challenge and enable us to formalize and secure new kinds of relationships in this new environment, just as contract law, business forms, and accounting controls have long formalized and secured business relationships in the paper-based world.In electronic commerce so far, the design criteria important for automating contract execution have come from disparate fields like economics and cryptography, with little cross-communication: little awareness of the technology on the one hand, and little awareness of its best business uses other. These efforts are striving after common objectives, and converge on the concept of smart contracts[1].Smart contracts reduce mental and computational transaction costs imposed by either principals, third parties, or their tools. The contractual phases of search, negotiation, commitment, performance, and adjudication constitute the realm of smart contracts. This article covers all phases, with an emphasis on performance. Smart contracts utilize protocols and user interfaces to facilitate all steps of the contracting process. This gives us new ways to formalize and secure digital relationships which are far more functional than their inanimate paper-based ancestors.The basic idea behind smart contracts is that many kinds of contractual clauses (such as collateral, bonding, delineation of property rights, etc.) can be embedded in the hardware and software we deal with, in such a way as to make breach of contract expensive (if desired, sometimes prohibitively so) for the breacher. A canonical real-life example, which we might consider to be the primitive ancestor of smart contracts, is the humble vending machine. Within a limited amount of potential loss (the amount in the till should be less than the cost of breaching the mechanism), the machine takes in coins, and via a simple mechanism, which makes a freshman computer science problem in design with finite automata, dispense change and product according to the displayed price. The vending machine is a contract with bearer: anybody with coins can participate in an exchange with the vendor. The lockbox and other security mechanisms protect the stored coins and contents from attackers, sufficiently to allow profitable deployment of vending machines in a wide variety of areas.Smart contracts go beyond the vending machine in proposing to embed contracts in all sorts of property that is valuable and controlled by digital means. Smart contracts reference that property in a dynamic, often proactively enforced form, and provide much better observation and verification where proactive measures must fall short.As another example, consider a hypothetical digital security system for automobiles. The smart contract design strategy suggests that we successively refine security protocols to more fully embed in a property the contractual terms which deal with it. These protocols would give control of the cryptographic keys for operating the property to the person who rightfully owns that property, based on the terms of the contract. In the most straightforward implementation, the car can be rendered inoperable unless the proper challenge-response protocol is completed with its rightful owner, preventing theft. But if the car is being used to secure credit, strong security implemented in this traditional way would create a headache for the creditor \u2013 the repo man would no longer be able to confiscate a deadbeat's car. To redress this problem, we can create a smart lien protocol: if the owner fails to make payments, the smart contract invokes the lien protocol, which returns control of the car keys to the bank. This protocol might be much cheaper and more effective than a repo man. A further reification would provably remove the lien when the loan has been paid off, as well as account for hardship and operational exceptions. For example, it would be rude to revoke operation of the car while it's doing 75 down the freeway.In this process of successive refinement we've gone from a crude security system to a reified contract:Mature security systems will be undertaking different behavior for different contracts. To continue with our example, if the automobile contract were a lease, the final payment would switch off leasee access; for purchase on credit, it would switch off creditor access. A security system, by successive redesign, increasingly approaches the logic of the contract which governs the rights and obligations covering the object, information, or computation being secured. Qualitatively different contractual terms, as well as technological differences in the property, give rise to the need for different protocols.Outside of the financial cryptography community, and long predating it, there is a deep tradition of protocols used in the course of performing contracts. These protocols consist of a flow of forms (\"data flow\", canonically displayed in data flow diagrams), along with checks and procedures called \"controls\". Controls serve many of the same functions as cryptographic protocols: integrity, authorization, and so on. This article uses \"control protocols\" or simply \"controls\" to refer to this combination of data flow and controls.Control protocols, and the professions of auditing and accounting[2] based on them, play a critical but ill-analyzed role in our economy. Economists lump them, along with other costs of negotiating and ensuring the performance of contracts, under their catch-all rubric of \"transaction costs\". But without controls, large corporations and the economies of scale they create would not be possible. Controls allow a quarrelsome species ill-suited to organizations larger than small tribes to work together on vast projects like manufacturing jumbo jets and running hospitals. These control protocols are the result of many centuries of business experience and have a long future ahead of them, but the digital revolution will soon cause these paper-era techniques to be dramatically augmented by, and eventually integrate into, smart contracts.Controls enable auditing of contract performances, allowing more precise inference of the behavior of an agent. Auditing is costly, so it is undertaken by random sampling. Economists study the substitutability between the probability of verifying a breach and the magnitude of legal fines, where physical enforcement is used. Conceivably, one could substitute increasingly high penalties for increasingly rarer and less expensive auditing. However, this is not robust to real-world conditions of imperfect information.Since controls primarily address the implicit contracts between employees and employer, there is little mapping from contract to control. A secondary function of controls to to monitor contracts with other organizations. Here there is some mapping, but it is confounded by the integration of the two functions in most controls. Rather than based on contractual terms, controls are typically based on managerial authorization.Controls are typically based around amounts of money and quantities of goods. A canonical control is double entry bookkeeping, where two books are kept, and there must be arithmetic reconciliation between the books. To conceal an irregularity, necessary to omit from both sides, or to record entries offsetting the irregularity. Notice that there is a problem distinguishing error from fraud. This problem crops up in many areas in both auditing and smart contracts. To illustrate, here are two common control techniques:Imprest: this is a family of controls involving the receipt or disbursement of bearer certificates (usually notes and coins). One example is the protocol used at most movie theaters. Entry is segregated from payment by introducing tickets and establishing two employee roles, the ticket seller in a booth, and the ticket stub salesman at the entrance. Periodically, a bookkeeper reconciles the number of tickets with the total paid. Discrepancy again indicates fraud or error.Customer audit: Techniques to get the customer to generate initial documentation of a transaction. For example, pricing goods at $.99 forces the employee to open the cash register to make change, generating a receipt.A complete control protocol typically features the generation of initial documentation, segregation of duties, and arithmetic reconciliation of quantities of goods, standard service events, and money.Of these, the segregation of duties deserves special comment.In a large business, transactions are divided up so that no single person can commit fraud. Segregation of duties is an instance of the principle of required conspiracy. For example, the functions of warehouse/delivery, sales, and receipt of payments are each performed by different parties, with a policy that each party reports every transaction to a fourth function, accounting. Any singular reported activity (e.g., delivery without receipt of payment) indicates potential fraud (e.g., a delivery was made to a customer and the payment pocketed instead of being put into the corporate treasury). Segregation of duties is the auditor's favorite tool. Where it is absent the auditor cries \"foul\", just as a good engineer would react to a single point of failure. Many cryptographic systems have rightfully gone down to commercial failure because they ground down to trust in a single entity rather than segregating functions so as to require conspiracy.There are least three significant differences between the scope and emphasis of smart contracts and controls. Controls are paper-era protocols designed around static forms, place little emphasis on confidentiality, and are based on management authorizations rather than one-to-one relationships.Smart contracts can be based on a wide variety of interactive protocols and user interfaces, and can be involved in a wide variety of kinds of contractual performance. Control protocols, developed in the era of paper, are based on static forms passed as messages and processed in tables and spreadsheets. Controls focus on money and counts of standardized goods and service events, easily recorded by numbers and manipulated by arithmetic, while mostly ignoring other kinds or aspects of contractual performance. Checksums on numbers, the basis of reconciliation, are crude and forgeable compared to cryptographic hashes. Electronic Data Interchange (EDI) keeps these static forms and maintains reliance on controls. It uses cryptographic hashes for nothing more sophisticated than integrity checks on individual messages.Controls place little emphasis on confidentiality, at least in the modern accounting literature. The emphasis on confidentiality in paper-era protocols is lacking because violation of often implicit confidences, via replication of data, was much more difficult with paper. Furthermore, technologies for protecting confidentiality while auditing were not feasible. Businesses traditionally trusted accounting firms with confidences, a trust that has eroded over the last century, and will erode still further as accounting firms start taking advantage of the vast amounts of inside and marketing information they are collecting from their customers' databases during audits. Using paper-based protocols in a digital world, there are few effective controls against the auditors themselves. Post-unforgeable transaction logs and multiparty secure computation, discussed below, indicate the possibility of cryptographic protocols to implement less relavatory but more effective auditing trails and controls; their use may be able to ameliorate the growing problems with data mining and breach of confidentiality.Auditors place quite a bit of trust in management to authorize transactions in a secure and productive manner. Objecting to this dual trust in management and distrust of employees inherent in the accounting tradition, there has been a trend in the last two decades towards a loosening of controls as a part of hierarchy flattening and empowerment of professional employees. Unfortunately, loose controls have led to several recent scandals in the banking and investment trade. The most recent view is that there must be a learned tradeoff between controls and empowerment. The smart contract view is that we need smarter controls, originating at the ownership of the company, and entailing less asymmetry between management and other professional employees. This means converting many implicit employee contracts to more explicit smart contracts based on more direct relationships between owners (or at least their directors) and employees, and symmetric formalizations between employees.Although most of these differences are biased against controls, these traditional protocols have a long future ahead of them, simply because they have a long past. They are highly evolved, hundreds of years old (double-entry bookkeeping, for example, predates the Renaissance). Smart contracts will incorporate many techniques and strategies from control protocols, such as generation of an initial record, segregation of duties, and reconciliation. It will not be long, however, before smart contracts start augmenting and transforming traditional business procedures, making a wide variety of new business structures possible and in the long run replacing traditional controls.Electronic Data Interchange (EDI) is the computer-to-computer communication of standardized business transactions between organizations, in a standard format that permits the receiver to perform the intended transaction. It renders traditional static business forms in cyberspace, and maintains the dependence on traditional controls. Beyond simple encryption and integrity checks, EDI does not take advantage of algorithms and protocols to add security and \"smarts\" to business relationships. It enables more rapid execution of traditional negotiation and performance monitoring procedures.EDI loses some security features provided by physical paper (such as difficulty of copying) while not gaining advantages from the wide variety of protocols possible beyond simple message-passing of static forms. This article examples a much richer set of protocols.EDI contracts tend to be merely reiterations of existing terms and conditions, with only some timing expectations changed for the electronic environment. By redesigning our business relationships to take advantage of a richer set of protocols, smart contracts can take us far beyond the paper-based paradigm of shipping around forms in a secure manner.The following classification, derived from Sokol[3], illustrates the variety of business forms that have been rendered in electronic form:Focal (or Schelling) points are often designed and submitted into negotiations by one side or another, both to bias the negotiations and to reduce their cost. The fixed price at the supermarket (instead of haggling), the prewritten contract the appliance salesman presents you, etc. are examples of hard focal points. They are simply agreed to right away; they serve as the end as well as the beginning of negotiations, because haggling over whether the nearest neighbor focal point is better is too expensive for both parties.There are many weak enforcement mechanisms which also serve a similar purpose, like the little arms in parking garages that prevent you from leaving without paying, the sawhorses and tape around construction sites, most fences, etc. Civilization is filled with contracts embedded in the world.More subtle examples include taxi meters, cash register readouts, computer displays, and so on. As with hard focal points, the cost of haggling can often be reduced by invoking technology as authority. \"I'm sorry, but that's what the computer says\", argue clerks around the world. \"I know I estimated $50 to get to Manhattan, but the meter reads $75\", says the taxi driver.Economists stress two properties important to good contract design: observability by principals and verifiability by third parties such as auditors and adjudicators. From the traditions behind contract law and the objectives of data security, we derive a third objective, privity. We flesh out the dimensions of contract design by disentangling mental from computational transaction costs, classifying the kinds of enforceability, characterizing the temporal phases of contracting, and discussing the nature of tradeoffs between the three design objectives.The costs that smart contracts address are lumped by economists under the catch-all rubric of \"transaction costs\". We can divide these into mental and computational transaction costs.One major category of costs include the cost of anticipating, agreeing to, and clearly writing down the various eventualities. These are largely mental transaction costs, although online research tools, for example, may bring more information about eventualities.Most contractual dispute involves an unforeseen or unspecified eventuality. We lack a good model for this. Such a model would account for the computational costs of foreseeing these eventualities, some of which may be uncomputable (and therefore of infinite cost). Where eventualities remain unspecified, contracts remain incomplete.Where counterparties lack focal points, they lack a meeting of minds. Negotiation addresses this gap; the farther apart the focal points (in terms of value), the more expensive the negotiations. There are a variety of institutions of negotiation, which economists study under the rubric of \"mechanisms\". These range from simple haggling to sophisticated auctions and exchanges.For the temporal phases of contracting we use the following schema, classified according to the two-phase model used in economics:Smart contracts often involve trusted third parties, exemplified by an intermediary, who is involved in the performance, and an adjudicator, who is invoked to resolve disputes arising out of performance (or lack thereof). Intermediaries can operate during search, negotiation, commitment, and/or performance. Hidden knowledge, or adverse selection, occurs ex-ante; hidden actions (moral hazards) occur ex-post.Here are some examples of contemporary electronic commerce activities and the phases of contracting they deal with:This article covers all phases, with a particular emphasis on performance.The first objective of smart contract design is observability, the ability of the principals to observe each others' performance of the contract, or to prove their performance to other principals. The field of accounting is, roughly speaking, primarily concerned with making contracts an organization is involved in more observable.Economists discuss \"hidden knowledge\", also known as \"adverse selection\", which can occur due to lack of ability to observe potential counterparties during the search and negotiation phases. Another major problem is \"hidden actions\", also known as \"moral hazard\", which can occur due to the lack of observability and ability to drop out of contract during the performance phase of a contract.One important task of smart contracts, that has been largely overlooked by traditional EDI, is critical to \"the meeting of the minds\" that is at the heart of a contract: communicating the semantics of the protocols to the parties involved. There is ample opportunity in smart contracts for \"smart fine print\": actions taken by the software hidden from a party to the transaction.Here's a small example of smart fine print:Without user interfaces smart contracts are largely invisible, like the electronics in newer car engines. This is both a blessing \u2013 counterparties don't have to feel like they're dealing with user-hostile computers \u2013 and a curse \u2013 the \"smart fine print\" problem of hidden actions.To properly communicate transaction semantics, we need good visual metaphors for the elements of the contract. These would hide the details of the protocol without surrendering control over the knowledge and execution of contract terms. For example, encryption can be shown by putting the document in an envelope, and a digital signature by affixing a seal onto the document or envelope.Amid all the hype about \"information warfare\", lost in the noise is the fact that it is impossible to commit an act of physical violence over the Net. That includes not only all physical crimes of coercion, but also arrest, incarceration, and other traditional methods of law enforcement. Because of this fact, and the jurisdictional swamp that is the multinational Internet, this article concentrates on means of protecting against breach and third parties that do not rely on law enforcement.We can categorize the security measures against breach, eavesdropping, and interference in the following manner:Currently, the most prevalent forms of security software are not proactive cryptography, but reactive and panoptic methods like virus scanning software, filtering firewalls, traceroutes of attackers, etc. Once modern cryptographic protocols are more widely deployed, the balance will likely shift towards preventative security.Reactive measures rely upon two areas: verifiability and penalties. As discussed in the section on accounting controls, under ideal economic conditions, the statistical distribution of verification failures is known, so that verification costs and penalties are can be traded off neatly. But with imperfect information, the jurisdictional swamp, and lack of collateral or other security, collection of damage awards is even more severely limited than in contracts confined to traditional geographic jurisdictions. Reputation costs may be the only practical source of penalties in many cases. For reactive measures to work, high verifiability is critical.So our second objective is verifiability, the ability of a principal to prove to an adjudicator that a contract has been performed or breached, or the ability of the adjudicator to find this out by other means. The disciplines of auditing and investigation roughly correspond with verification of contract performance.Our third objective of smart contract design is privity, the principle that knowledge and control over the contents and performance of a contract should be distributed among parties only as much as is necessary for the performance of that contract. This is a generalization of the common law principle of contract privity, which states that third parties, other than the designated adjudicators and intermediaries, should have no say in the enforcement of a contract. To maintain knowledge and control, performance must be encapsulated: protected from outside influences, especially sophisticated attacks. This is the idea behind both the legal doctrine of privity, which restricts redress to the parties to a contract, and the idea of property rights.Attacks against privity are epitomized by third parties Eve the eavesdropper, a passive observer of contents or performance, and malicious Mallet, who actively interferes with performance or steals service. Under this model privacy and confidentiality, or protecting the value of information about a contract, its parties, and its performance from Eve, is subsumed under privity, as are property rights. The most common definitions of \"security\" in the online world roughly correspond to the goal of privity.Our generalized privity thus encompasses property rights as stable objects linked to particular contracts (and thereby the parties in privity to such contracts, the \"owners\"). Privity creates a clear boundary within which operate a coherent set of rights, responsibilities, and the knowledge with which to carry out those responsibilities and protect those rights. Clarified boundaries also allow accountability. Protection from extraneous interference allows us to focus responsibility for the consequences of contract-related activity onto the parties to the contract.Privity says that we want to minimize vulnerability to third parties. Verifiability and observability often require that we invoke them. An intermediary must be trusted with some of the contents and/or performance of the contract. An adjudicator must be trusted with some of the contents, and some of the history of performance, and to resolve disputes and invoke penalties fairly. In smart contract design we want to get the most out of intermediaries and adjudicator, while minimizing exposure to them. One common outcome is that confidentiality is violated only in case of dispute.Many kinds of specific performance are often entrusted to intermediaries. We must be able to trust the intermediary (credit agency, anti-virus software vendor, certificate intermediary, digital cash mint, etc.) with their particular claims (about creditworthiness, dangerous byte patterns, identity, conservation of the money supply, etc.) As Ronald Reagan remarked in a slightly different context, \"trust but verify\". To deserve our trust, intermediaries must convince us that their claims are true. We need to be able to \"ping\" their veracity, verifying that certain claimed transactions in fact occurred. An entire profession exists in market economies to perform this function: auditing.Ideally, observability and verifiability can also include the ability to differentiate between intentional violations of the contract and good faith errors, but this is difficult in practice, since the difference is often largely one of subjective, unrevealed intent.A protocol[5] in computer science is a sequence of messages between at least two computers. At a higher level of abstraction, a protocol consists of algorithms communicating via messages. These programs act as proxies, or agents, for human users, who communicate their preferences via users interfaces. We distinguish protocol endpoints by names such as \"Alice\" and \"Bob\", but it should be kept in mind that the end points are really computer processing units, which may or may not be under the control of, or taking actions contrary to the intent of, the human user. Human users typically do not have full knowledge of the protocol in question, but rather a metaphorical understanding obtained via user interface, manuals, and so on. Unlike most real-world contracts, protocols must be unambiguous and complete.Protocols come in three basic types. I have modified the terminology of Schneier[6] to match more closely to the corresponding business terminology:The corresponding smart contracts elaborate on \"Alice\" to distinguish between the software (in two components, the endpoint of protocol and the user interface), and Alice herself. Cryptographic and other computer security mechanisms give us a kit of tools and parts from which we can build protocols, which form the basis of smart contracts.The security properties of physical media are based on physical properties we often take for granted, for example the unforgeability of an atom of gold. The structural constraints (\"physics\") of cyberspace relevant to security are described by the mathematical theories studied by computer scientists, especially in the specialty called cryptography. Here are the important \"fundamental particles\" of the cryptographic universe:These \"particles\" are potent building blocks for engineering secure protocols. Imagine a material so tough, it is completely impervious to a supernova, and so cheap you could use it to make walls, locks, safes, and envelopes to protect everyday items. This is not just a metaphor: cracking a 4,096 bit RSA key with best known algorithm really would require more electrical power for the computers than the power produced by a supernova. These cryptographic primitives promise to be a main driving force of the fourth cost revolution for global business.A family of protocols, called cryptographic protocols because their first application was computerized \"secret writing\", provide many of the basic building blocks that implement the improved tradeoffs between observability, verifiability, privity, and enforceability in smart contracts. Contrary to the common wisdom, obscurity is often critical to security. Cryptographic protocols are built around foci of obscurity called keys. A key's immense unknown randomness allows the rest of the system to be simple and public. The obscurity of a large random number, so vast that a lucky guess is astronomically unlikely, is the foundation upon which cryptographic protocols, and smart contracts based on them, are built.Two significant cautions are in order when thinking about how cryptographic protocols can be used in online relationships. The first is that protocols usually provide security \"up to\" some assumption. This assumption is a remaining weak point which a complete working system must address in some reasonable manner. One common endpoint is is assumptions about trusted third parties. Often the degree or function of the trust is not well specified, and it is up to the real-world systems analyst to characterize and ameliorate these exposures. The best mediated protocols only trust the intermediary or counterparty with a well limited function.Even without trusted third parties, cryptographic protocols often ground out in trust of the counterparty. For example, encryption of a message provides confidentiality up to the actions of parties with decrypting keys. Encryption does not stop key holders from posting plain text to Usenet. We cannot just say that encryption provides \"confidentiality\" and leave our concern for confidentiality at that.The second caution is that much of the terminology used in the cryptographic literature to name protocols (\"signatures\", \"cash\", etc.) is misleading. Sometimes the terminology falls short on substantial matters: a \"digital signature\", for example, is not biometric and is based on a key that can easily be copied if not protected by another mechanism. Often cryptographic protocols can be generalized to much wider purposes than implied by the label. For example, \"digital cash\" is a very general protocol which can implement a wide variety of bearer certificates and conservation wrappers for distributed objects.Protocols for smart contracts should be structured in such a way as to make their contractsA vandal can be a strategy or sub-strategy of a game whose utility is at least partially a function of one's own negative utility; or it can be a mistake by a contracting party to the same effect. \"Naive\" simply refers to both lack of forethought as to the consequences of an attack , as well as the relatively low amount of resources expended to enable that attack. Naive vandalism is common enough that it must be taken into consideration. A third category, (c) sophisticated vandalism (where the vandals can and are willing to sacrifice substantial resources), for example a military attack by third parties, is of a special and difficult kind that doesn't often arise in typical contracting, so that we can place it in a separate category and ignore it here. The distinction between naive and sophisticated strategies has been computationally formalized in algorithmic information theory.The expected loss due to third party attack is called the exposure. The cost of third parties to defeat the security mechanism is the disruption cost. If the disruption cost is greater than the expected benefit, we can expect an incentive compatible attacker to disrupt the security.One of the drivers of the trust cost revolution will likely be the wide variety of new cryptographic protocols that have emerged in recent years. The most traditional kind of cryptography is secret key cryptography, in which Alice and Bob (our exemplar parties to a smart contract) use a single shared, prearranged key to encrypt messages between them. A fundamental problem we will see throughout these protocols is the need to keep keys secret, and public key cryptography helps solve this. In this technique, Alice generates two keys, called the private and public keys. She keeps the private key secret and well protected, and publishes the public key. When Bob wishes to send a message to Alice, he encrypts a message with her public key, sends the encrypted message, and she decrypts the message with her private key. The private key provides a \"trapdoor\" that allows Alice to compute an easy inverse of the encryption function that used the public key. The public key provides no clue as to what the private key is, even though they are mathematically related. The RSA algorithm is the most widely used method of public key cryptography.Public key cryptography also makes possible a wide variety of digital signatures. These proves that a piece of data (hereafter referred to as just an \"object\") was in active contact with the private key corresponding to the signature: the object was actively \"signed\" with that key. There are two steps to an authentication protocol: signing and verification. These may occur synchronously, or, in many public protocols, a signature may be verified at some distant time in the future.The digital signature probably should have been called a \"digital stamp\" or \"digital seal\" since its function resembles more those methods than an autograph. In particular, it is not biometric like an autograph, although incorporation of a typed-in password as part of the private key used to sign can sometimes substitute for an autograph. In many Asian countries, a hand-carved wooden block, called a \"chop\", is often used instead of autographs. Every chop is unique, and because of the unique carving and wood grain cannot be copied. A digital signature is similar to the chop, since every newly generated key is unique, but it is trivial to copy the key if obtained from the holder. A digital signature relies on the assumption that the holder will keep the private key secret.A blind signature publically authenticates privy information (but can we use non-privy signatures blindly as well?). This is a digital signature and secret-key encryption protocol that together have the mathematical property of commutativity, so that they can be stripped in reverse of the order they were applied. It's like stamping an unknown document through carbon paper (without having to worry about smudging). The effect is that Bob \"signs\" an object, for which he can verify its general form, but cannot see its specific content. Typically the key of the signature defines the meaning of the signed object, rather than the contents of the object signed, so that Bob doesn't sign a blank check. Blind signatures used in digital bearer certificates, where Bob is the clearing agent, and in Chaumian credentials, where Bob is the credential issuer.The blind signature is one example of the many \"magic ink signatures\" cryptographers have invented. Another class of these protocols are used to limit the parties allowed to either verify the signature or to learn the identity of the signer. The most privy are the zero-knowledge proofs, where only the counterparty can authenticate the prover. Designated confirmer signatures allow the signer to designate particular counterparties as verifiers. For example, a business could give particular auditors, investigators, or adjudicators the authority to verify signed objects, while other third parties, such as competitors, can learn nothing from the signature. Group signatures allow members to sign as an authentic member of a group, without revealing which member made the signature.So far, we've assumed parties like Alice and Bob are monolithic. But in the world of smart contracts, they will use computer-based software agents and smart cards to do their electronic bidding. Keys are not necessarily tied to identities, and the task of doing such binding turns out to be more difficult than at first glance. Once keys are bound, they need to be well protected, but wide area network connections are notoriously vulnerable to hacking.If we assume that the attacker has the ability to intercept and redirect any messages in the network protocol, as is the case on wide area networks such as the Internet, then we must also assume, for practical all commercial operating systems, that they would also be able to invade client if not merchant computers and find any keys lying on the disk.There's no completely satisfactory solution to end point operations security from network-based attacks, but here's a strategy for practically defanging this problem for public-key based systems:All public key operation can be performed inside an unreadable hardware board or smart card on a machine with a very narrow serial-line connection (ie, it carries only a simple single-use protocol with well-verified security) to a dedicated firewall. This is economical for high traffic servers, but may be less practical for individual users. Besides better security, it has the added advantage that hardware speeds up the public key computations.If Mallet's capability is to physically seize the machine, a weaker form of key protection will suffice. The trick is to hold the keys in volatile memory. This makes the PC proof from physical attacks \u2013 all that needed to destroy the keys is to turn off the PC. If the key backups can be hidden in a different, secure physical location, this allows the user of this PC to encrypt large amounts of data both on the PC itself and on public computer networks, without fear that physical attack against the PC will compromise that data. The data is still vulnerable to a \"rubber hose attack\" where the owner is coerced into revealing the hidden keys.Object-oriented, or capability, security is a deep and promising area, but beyond the scope of this article. Capabilities can potentially simplify the design of many distributed security protocols. Instead of developing a new or modified cryptographic protocol for each contracting problem, capabilities may allow us to design a rich variety of distributed security protocols over a common cryptographic framework.For more information see Introduction to Capability Based Security.Quorum distribution of performance or control over resources can be based on the secret sharing of keys needed to perform or control a resource. These are also known as threshold techniques. These are methods of splitting a key (and thus control over any object encrypted with that key) into N parts, of which only M are needed to recreate the key, but less than M of the parts provide no information about the key. Secret sharing is a potent tool for distributing control over objects between principals.Markus Jacobsson has designed a quorum of mints for signing digital coins, for example. Quorum establishes a \"required conspiracy\" of M out of N to perform a function, providing an option for stronger protection than the typical 2 out of N used in segregation of duties, and greater confidence in the security underlying the segregation.Traditionally, auditors have contacted counterparties in order to verify that a transaction actually took place (The \"principle of required conspiracy\" at work again). With post-unforgeable logs, via a hierarchical system of one-way hash functions, a party can publically commit to transactions as they are completed by publishing signed cumulative hashes of the transaction stream. The confidentiality of the transaction is fully maintained until an auditor \"pings\" the transaction to determine its actual nature. The counterparty identity can remain confidential, because it is not required to establish the other facts of the transaction. The only attack is to forge transactions in real time, as the transaction itself takes place, which in most practical cases will be unfeasible. Most accounting fraud involves analyzing sets of completed transactions and then forging them to make them compute to a desired counterfactual result.Cryptographers have developed protocols which create virtual machines between two or more parties. Multiparty secure computation allows any number of parties to share a computation, each learning only what can be inferred from their own inputs and the output of the computation. These virtual machines have the exciting property that each party's input is strongly confidential from the other parties. The program and the output are shared by the parties. So, for example, we could run a spreadsheet across the Internet on this virtual computer. We would agree on a set of formulas, set up the virtual computer with these formulas, and each input our own private data. We could only learn only as much about the other participants' inputs as we could infer from our own inputs and the output.There are two major complications. The first is that this virtual computer is very slow: one machine instruction per network message. The second is that some parties learn the results before others. Several papers have disussed the fraction of parties one must trust in order to be assured of learning the correct output. The mechanism must be constructed so that a sufficient number of parties have an incentive to pass on the correct result, or reputation, side contracts, etc. used to the same effect.With these caveats, any algorithmic intermediary can, in principle, be replaced by a trustworthy virtual computer. In practice, because of the two complications, we usually construct more limited protocols out of more efficient elements.Trusted Third Party:Mathematically Trustworthy Protocol:Multiparty secure computer theory, by making possible privy virtual intermediation, has major implications for all phases of contracting. This can be seen most clearly in the area of negotiations. A \"mechanism\" in economics is an abstract model of an institution which communicates with its participants via messages, and whose rules can be specified algorithmically. These institutions can be auctions, exchanges, voting, and so on. They typically implement some kind of negotiation or decision making process.Economists assume a trusted intermediary operates the mechanism. Here's a simple example of using this virtual computer for a mechanism. Alice can submit a bid price, and Bob an ask price, to their shared virtual computer which has one instruction, \"A greater than B?\". The computer then returns \"true\" if Alice's bid is greater than Bob's offer. A slightly more sophisticated computer may then decide the settlement price according to a number of different algorithms (Alice's bid, Bob's ask, split the difference, etc.) This implements the mechanism \"blind bargaining\" with no trusted intermediary.In principle, since any computable problem can be solved on this virtual computer (they are \"Turing complete\"), any computable economic mechanism can be implemented without a trusted intermediary. In practice, these secure virtual computers run very slowly (one virtual machine instruction per network message), and the order in which participants learn results often matters. But the existence proof, that any economic mechanism can be run without a trusted intermediary, up to temporal issues, is very exciting. This means that, in principle, any contract which can be negotiated through a trusted third party (such as an auction or exchange) can be negotiated directly. So, in some abstract sense, the only remaining \"hard\" problems in smart contract negotiations are (a) problems considered hard even with a trusted intermediary (for the standard economic reasons), (b) nonsimultaneity problems in learning the decision, and (c) the task of algorithmically specifying the negotiating rules and output contract terms (This includes cases where an intermediary adds knowledge unavailable to the participants, such as a lawyer giving advice on how to draft a contract).Applying this kind of analysis to the performance phase of contracts is less straightforward. For starters, economic theories of the performance phase are not as well developed or simple as the mechanism theory of negotiations. Indeed, most economic theory simply assumes that all contracts can be perfectly and costlessly enforced. Some of the \"transaction cost\" literature has started to move beyond this assumption, but there are few compelling results or consensus theories in the area of techniques and costs of contract enforcement.Performance phase analysis with multiparty secure computer theory would seem to apply only to those contracts which can be performed inside the virtual computer. But the use of post-unforgeable auditing logs, combined with running auditing protocols inside the shared virtual computer, allows a wide variety of performances outside the virtual computer to at least be observed and verified by selected arbitrators, albeit not proactively self-enforced.The participants in this mutually confidential auditing protocol can verify that the books match the details of transactions stored in a previously committed transaction log, and that the numbers add up correctly. The participants can compute summary statistics on their confidentially shared transaction logs, including cross-checking of the logs against counterparties to a transaction, without revealing those logs. They only learn what can be inferred from the statistics, can't see the details of the transactions. Another intriguing possibility is that the virtual computer can keep state over long periods of time, allowing sophisticated forms of privy and self-enforcing secured credit.With mutually confidential auditing we will be able to gain high confidence in the factuality of counterparties' claims and reports without revealing identifying and other detailed information from the transactions underlying those reports. These provide the basis for solid reputation systems, and other trusted third party systems, that maintain integrity across time, communications, and summarization, and preserve confidentiality for transaction participants. Knowing that mutually confidential auditing can be accomplished in principle may lead us to practical solutions.Bearer certificates implement transferable rights on standardized contracts. Each kind of contract (for example, each denomination of \"coin\" in digital cash) corresponds to a digital signature, just as each issue of Federal Reserve Notes or stock certificates corresponds to a particular plate.In the most straightforward bearer certificate protocol, the issuer and transfer agent (the same entity, for our purposes, though they can easily be unbundled) create a serial number (really a large unguessable random number, rather than a sequence), and add it to a list of issued certificates. The transfer agent clears a transfer by checking the signature to identify and nature of the bearer contract and verify that it was made, then looking on that contract's issued list to make sure the serial number is there, then removing the serial number. Alternatively, the issuer can let the issuee make up the serial number, then, when cleared, check the signature and put the number on the list of cleared certificates. The signature provides the assurance that the certificate is indeed the the particular kind of contract with bearer, while the serial number assures that the same instance of that contract is not cleared or redeemed more than once. In these simple versions, the transfer agent can link the transferee to the transferor for all transfers. To implement the privacy characteristics of coins and physical bearer certificates, we need to add unlinkability features.Unlinkability can be provided by combining the second variation above, a list of cleared certificates, with blind signatures and a mixing effect. Enough instances of a standardized contract are issued over a period of time to create a mix. Between the issuing and clearing of a certificate, many other certificates with the same signature will be cleared, making it highly improbable that a particular clearing can be linked to a particular issue via the signature. There is a tradeoff between the mixing effect and the exposure to the theft of a \"plate\" for a particular issue: the smaller the issue, the smaller the exposure but the greater the linkability; a larger issue has both greater exposure and greater confidentiality.Blind signatures can be used to make certificate transfers unlinkable via serial number. Privacy from the transfer agent can take the form of transferee-unlinkability, transferor-unlinkability, or \"double blinded\" where both transferor and transferee are unlinkable by the transfer agent or a collusion of a transfer agent and counterparty.Bearer certificates come in an \"online\" variety, cleared during every transfer, and thus both verifiable and observable, and an \"offline\" variety, which can be transferred without being cleared, but is only verifiable when finally cleared, by revealing any the clearing name of any intermediate holder who transferred the object multiple times (a breach of contract).This unlinkability is often called \"anonymity\", but the issue of whether accounts are issued to real names or pseudonyms, and whether transferor and transferee identify themselves to each other, is orthogonal to unlinkability by the transfer agent in the online model. In the off-line model, account identification (or at least a highly reputable and/or secured pseudonym) is required: passing an offline certificate a second time reveals this identity. Furthermore, communications channels can allow Eve to link transferor and transferee, unless they take the precaution of using an anonymous remailer. Online clearing does make lack of identification a reasonable option for many kinds of transactions, although common credit and warrantee situations often benefit from or even require identification.When confronting an attempted clearing of a cleared serial number, we face an error-or-fraud dilemma similar to the one we encountered above in double entry bookkeeping. The ecash\u2122 protocol from DigiCash actually takes advantage of this ambiguity, second-transferring certificates on purpose to recover from a network failure. When certificates are lost over the net it is not clear to the transferor whether they have been received and cleared by the transferee or not. Second-transferring directly with the transfer agent resolves the ambiguity. This only works with the online protocol. The issue of distinguishing error from fraud is urgent in the offline protocol, but there is as yet no highly satisfactory solution. This problem is often intractable due to the subjectivity of intent.Issuance and cleared transfer of references to a distributed object conserves the usage of that object. This object becomes \"scarce\" in economic terms, just as use of physical objects is finite. Conserved objects provide the basis for a software economics that more closely resembles economics of scarce physical objects. Conserved objects can be used to selectively exclude not only scarce physical resources (such as CPU time, network bandwidth and response time, etc.), but also fruits of intellectual labor \u2013 as long as one is willing to pay the price to interact with that information over the network rather than locally (cf. content rights management). Conservation immunizes objects and the resources they encapsulate to denial of service attacks. Bearer certificate protocols can be used to transfer references to a particular instance or set of instances of an object, just as they can be used to transfer other kinds of standardized rights.Digital cash is the premier example of a digital bearer certificate. The issue and transfer agent is called a \"mint\". Bearer certificate protocols enable online payment while honoring the characteristics desired of bearer notes, especially unforgeability (via the clearing mechanism) and transfer confidentiality (via mixing and blinding).To implement a full transaction of payment for services, we often need need more than just the digital cash protocol; we need a protocol that guarantees that service will be rendered if payment is made, and vice versa. Current commercial systems use a wide variety of techniques to accomplish this, such as certified mail, face to face exchange, reliance on credit history and collection agencies to extend credit, etc. Potential smart contract protocols in this area are discussed under Credit.Content protection contracts are valuable in that they incentive publishers to allow users to view content directly, rather than indirectly and partially via queries to remote servers. Content protection of software distributed online would allow it to be run locally rather than remotely, while enforcing the contract rights and copyrights of the publisher against the user. This local usage billing of software often goes under the rubric of \"superdistribution\"[11].Watermark schemes work by altering less significant bits of content \u2013 usually a picture; sound works less well and text is difficult. These altered bits typically contain the identities of the publisher and viewer, and perhaps other information related to the contract. The idea is that, when investigators scan released content, the watermark will finger the breacher of the contract (or violator of copyright law).Watermark investigation can be assisted by a quite inexpensive technique, Web spiders. These spiders look for redistributed watermarked material on the Web. The customer originating the copy can then be fingered.One attack against watermarks is to overwrite likely watermark bits with other patterns legitimate to viewing software. The entanglement of watermark bits with bits important to the picture can be made rather obscure, but not strongly so by the standards of cryptography. Another attack is to steal content from a customer and distribute it as is. The watermark will finger the victim, rather than the thief.All watermark schemes can be defeated with sufficient effort. These schemes can then be distributed as software worldwide. Once the initial effort is put into breaking a scheme, the marginal cost of breaking it is minimal. Furthermore, once the watermark is removed, the content can be distributed and even published[12] with secure anonymity.In sum, watermark schemes can add significant risk to the copying of of low value or ephemeral information. This will be sufficient for many kinds of content, such as news or product updates. It won't stop, for long, the redistribution of high-value content. Since watermarks require traceable identification, they reduce customer privacy and require the inconvenience of registration and authentication, adding to the transaction costs of content purchase.Contrary to the hype, there is no strong content protection software. Watermarks are as close as we've come, and they fall far short of the standards of computer security. Large sums have gone into attempts to develop such technology, resulting in hundreds of patents but no substantial results.As a result, some publishers have begun putting their research dollars into a radical alternative, innocuously dubbed the \"secure CPU\" (SPU)[13]. This is a CPU that is \"secure\" against the owner of the computer! To enforce copyright or content contracts, the SPU monitors all content-related activity. Some marketing literature even lists, alongside the traditional copyright, a new \"right\" of publishers to monitor the usage of their content. Remarkably enough, these panoptic non-personal computers are the focus of major R&D efforts.The radical SPU projects demonstrate both the high value of content contracts to publishers and the high price we have to pay to maintain the paper-era intellectual property model online. Strong content protection would be valuable in going beyond indirect and partial viewing of content on servers, to viewing content directly and locally. The price is the loss of control over our own computers, and loss of privacy over our activities on those computers.The online content market is squeezed from above and below. From above, by the ease of redistributing high-value content. From below, by the mental transaction costs of charging for low value content \u2013 costs to which the requirements of registration and traceable identification add substantially. The size of the market in between is an open question. \"Information wants to be free\", but authors and publishers want to be paid for it. The current content market for more difficult to copy media, such as books, films, CD-ROM, and so forth is large, in the hundreds of billions of dollars per year. But on the Internet, free content dominates. Distributing ephemeral content in the form of service subscriptions is in most cases a more viable way to go. It remains to be seen how large the Internet content market will become, and to what extent customers will tolerate impositions on privacy and control of their computers in order to obtain legal content.Reputation can be viewed as the amount of trust an agent has created for himself[14]. Reputation systems ultimately need to be based on fact rather than mere opinion or faith to be effective. For example, if we are to have a good credit rating system, we need to be confident that the credit record assembled by the agency is sufficiently accurate. Reputation information is typical gathered and distributed by intermediaries trusted to perform this task. Reputation can take the form of a public database (such as credit rating services) or credentials issued by the tracking agency and carried by the user. A bearer doesn't want to show his negative credentials, so credentials are often only positive. But we want to protect ourselves against negative behavior sources well as search out positive sources.Tags that bundle the results of a wide variety of transactions - global names, or universal IDs, or \"True Names\" \u2013 may provide the most incentive for parties to carry their negative credentials. Most people have accumulated enough positive reputation is some areas that it is well-nigh impossible for them to start over their entire lives as newcomers.Robin Hanson[15] has observed that in a world of global names, the use of a local name may signal the hiding of negative credentials, so that the use of global names is in equilibrium. A further problem with local names is that our relationships are often not neatly compartmentalizable into standard service types, and even where they are we might like to expand them into new areas. On the other hand, local names are essential for privacy. I suggest that we will want to reveal progressively more local names to our counterparties as our relationships with them become closer and more co-exposed.While the global name equilibrium may hold for many of our relationships, there may be plenty of areas where the privity benefits of localizing names outweigh the costs of being less or unable to differentiate newcomers from hostiles. For example, the preference-tracking service at www.firefly.com increases participation via the use of pseudonyms, thereby protecting customers from exposure to strangers who might abuse that information. On the other hand, credit transactions typically demand identifying information, because the contractual exposure typically outweighs benefits of privity.Global name public keys, which have many drawbacks in terms of privity, may be the best way to track negative reputation, but they are no panacea. There is an important conundrum in an ID-based key system: the conflict between the ability to get a new key when the old one is or could be abused by another (key revocation), and the ability of another to be sure they are dealing with the same person again. This may also provide an opportunity for parties to selectively reveal positive credentials and hide negative ones. For example, a person with a bad credit rating could revoke the key under which that rating is distributed and create a new one, while selectively updating their positive credentials to the new key (e.g., have their alma mater create a new diploma).The current universal (non-cryptographic) key in the U.S., the social security number (SSN), is very difficult to revoke; it's much easier to change your name. This policy is probably no accident, since the biggest economic win of global name identification is the tracking of negative reputations, which revocation can defeat. As long as the SSN is a shared database key, not used for the purpose of securely identifying a faceless transaction, there is little need for revocation beyond the undesired erasure of negative history. Combining a secret authentication key, which must be revocable, with a public universal ID is quite problematic.One of the basic outstanding problems in smart contracts is the ensurement of credit. This comes up not only in loans, but in any other contract which involves a temporal lag between performance and reciprocal performance of the contractual terms.In current practice, there are several partially effective processes for ensuring future performance:These processes have a fundamental property in common \u2013 they violate the privity of credit transactions \u2013 in other words, they bring in third parties to track reputations or enforce repayment. Do credit transactions entail a fundamental imbalance in incentives that can only be redressed by bringing in third parties, or can the security protocols be discovered which allow credit with minimal or no third party involvement?Three important variables have been proposed for reputation economics:In turn, Peter Swire[16] describes two problems facing inadequately secured or unsecured loans to \"credit names\":Adverse selection: Prior deadbeats can start fresh by signing up for the new service. Going in, it will be biased in favor of deadbeats. This problem may be addressed by using Chaumian credentials. These allow the established positive reputations of previous names to be carried over to the credit name, without allowing anyone to link the two names. Entrants without positive reputations can be rejected.The endgame problem: A credit name can establish a good credit rating over time. When the limit is high enough, the borrower can quickly spend it all. A malicious borrower, with a good rating established under a previous name, can systematically profit at the expense of the lender, if the throw-away value is greater than the replacement cost. To address this problem, creditors will have to charge higher rates to new credit names and raise credit limits more slowly than for traceable names. Honest borrowers will subsidize the dishonest, to an even greater extent than they do in the current credit card system.Secured credit need not violate privity if the physical control over the securing property can be shared. So that, for example, automobile credit can be secured as long as repossession is possible, as described in the example above.A standard mechanism of secured credit applicable online is the escrow. An escrow is an intermediary trusted to hold messages until messages from both sides are received, and, optionally, their contents verified - to extent the content is verifiable, and at the expense of some privity. The escrow then sends the messages off to their recipients, along with receipts. Messages can contain any sort of data: content, a bearer certificate, etc.Alice wants a New York City cab ride for which she's willing to pay $100, but she doesn't trust Bob the taxi driver to get her there on time if she pays up front. Bob in turn doesn't trust Alice to pay at the end of the trip. Commerce can be consummated by Alice tearing a $100 bill and giving half to Bob. After the trip she gives the other half to Bob, which he can then reassemble into a negotiable $100 bill. Alice loses her incentive to not pay. Bob gains incentive to get her there on time as promised. Both have made what economists call a \"credible commitment\" to perform their respective parts of the contract. Markus Jacobsson has digitized this idea, coming up with a protocol for ripped digital cash. As with many other aspects of digital cash, the idea can be further generalized to rip some other kinds of bearer instruments \u2013 specifically, those whose value can be divided roughly in half. If the transfer is double-blinded the transfer agent has no knowledge of the participants and therefore no bias to favor one over the other. The transfer agent must, however, be able to assess proof of performance, and the protocol is only workable where such proof (in the form of proof of receipt of a message, for example) is available.The ripped bill is similar to using the transfer agent as an escrow agent. An advantage over using an escrow agent is that the need for extra anonymous channels between the parties and the escrow is avoided. A disadvantage is that the transfer agent now has taken on the major additional job of acting as an adjudicator, assessing proofs of performance (or at the very least, must be responsible for subcontracting out this job and implementing the adjudicator's judgement).Credit cards provide relatively little protection from third parties, especially in the area of privacy, but they do have an interesting contractual feature worth noting, the chargeback. With chargebacks customers can get refunds on allegedly unwanted merchandise. The issuer tracks the number of chargebacks both for customers and merchants; too many chargebacks can get you booted out of the system. This provides an efficient mechanism for refunds without resorting to expensive tort proceedings. Many customers who read the fine print or otherwise learn about chargeback limits often do chargebacks despite receiving and enjoying the merchandise; there is no practical way for the issuer to detect such fraud, and so it can only be pruned by limiting the number of chargebacks per customer. Some merchants complain vociferously about such customer \"theft\", and it seems to make possible coordinated attacks to put merchants out of business, but nevertheless merchants sign up for credit cards, because that's what their customers have signed up for. The chargeback feature makes customers more comfortable purchasing goods of unknown quality, especially mail-order and over the Internet. Chargeback provides a crude but effective partial solution to the information asymmetry problem between retailers and consumers.\"Time release\" money that becomes good only after a certain date, and \"interval money\", that would expire after a certain date have been proposed. These can be implemented by a digital mint expiring or activating special issues of digital cash, or by a third party issuing escrowed keys at specific times. Since these keys are encrypted against the escrow agent, and that agent doesn't know what they will be used for, the escrow agent has no incentive to cheat. A generalization of this is that transfer and redeemability are each associated with interval sets, or validity periods when each can and cannot be performed. This is analogous to clipping coupons on bonds.Hal Finney[17] has described a loan mix, to unlink borrowers from amount borrowed. The identity of the potential borrowers is still public, as well as the system for enforcing payment, but the actual amount loaned or borrowed remains unknown. The system starts with participants putting unknown amounts into a pot and getting receipts (bearer bonds) for these amount. All participants then borrow a standard amount. Whether a participant is a net borrower or a net creditor, and of what amount, remains private. When the loan is due all participants repay the standard amount, and the creditors reclaim the amounts on their bearer bonds. The amount actually borrowed (or, if negative, loaned) is the public amount borrowed minus the amount put into the pot. One consequence is that while negative reputations can still be accumulated when participants fail to pay back the standard amount, positive reputations are minimal, since participants who borrow and loan are indistinguishable. If future creditors put stock in positive participation, one could gain a credit rating by perpetually participating as a net borrower of zero, by loaning and borrowing the same amounts.Smart contracts combine protocols, users interfaces, and promises expressed via those interfaces, to formalize and secure relationships over public networks. This gives us new ways to formalize the digital relationships which are far more functional than their inanimate paper-based ancestors. Smart contracts reduce mental and computational transaction costs, imposed by either principals, third parties, or their tools.Mark Miller[18] foresees that the law of the Internet, and the devices attached to it, will be provided by a grand merger of law and computer security. If so, smart contracts will be a major force behind this merger.A previous version of this paper appeared in the peer-reviewed journal First Monday, at http://www.firstmonday.dk/issues/issue2_9/szabo/index.htmlMany of the links above and references here rely on URLs that can be found in the online edition of this paper, at http://szabo.best.vwh.net/caymanpaper.html.The author has been refining these ideas since the early 1990's. A variety of earlier articles on this topic can be found at http://szabo.best.vwh.net \u21a9George H. Bodnar and William S. Hopwood, 1987.Accounting Information Systems. 3rd ed. Boston: Allyn and Bacon. \u21a9Phyllis K. Sokol, 1995. From EDI to Electronic Commerce: a business initiative. New York: McGraw-Hill. \u21a9Oliver Hart, 1989. \"Incomplete Contracts,\" In: John Eatwell, Murray Milgate, and Peter Newman (eds.), The New Palgrave: Allocation, Information, and Markets. New York: Norton.Bruce Schneier,1996. Applied Cryptography. 2nd ed. New York: Wiley. \u21a9John Bouvier, 1856. A Law Dictionary: Adapted to the Constitution and Laws of the United States of American and of the Several States of the American Union. Rev. 6th ed. \u21a9Michael Polanyi, Personal knowledge: Towards a post-critical philosophy. Chicago: University of Chicago Press.The economics of distributed knowledge is studied by the Austrian school; in particular see Friedrich Hayek, \"On the Use of Knowledge in Society.\"Vernon V. Palmer, 1992. The Paths to Privity: The History of Third-Party Beneficiary Contracts at English Law. San Francisco: Austin and Winfield.Lance Cotrell, 1995. \"Mixmaster & Remailer Attacks.\"Brad Cox, 1995. Superdistribution:: Objects as Property on the Electronic Frontier. Reading, Mass.: Addison-Wesley. \u21a9Ian Goldberg and David Wagner, 1997. \"Enabling Anonymous Publishing on the World Wide Web.\" \u21a9Olin Silbert, David Bernstein, and David Van Wie, 1996. \"Securing the Content, Not the Wire for Information Commerce.\" \u21a9Joseph M. Reagle Jr., 1996. \"Trust in Electronic Markets,\" First Monday, Volume 2, number 2 (August). \u21a9Robin Hanson, personal communication. \u21a9Peter Swire, 1997. \"The Uses and Limits of Financial Cryptography: A Law Professor's Perspective.\" \u21a9Hal Finney, 1997. \"Anonymous Credit\" posts. \u21a9Mark Miller, 1997. \"The Future of Law,\" paper delivered at the Extro 3 Conference (August 9). \u21a9Please send your comments to nszabo (at) law (dot) gwu (dot) edu"}
{"prompt": "A Formal Language for Analyzing Contracts", "completion": "The author presents a mini-language for professionals and researchers interested in drafting and analyzing contracts. It is intended for computers to read, too. The main purpose of this language is to specify, as unambiguously and completely and succinctly as possible, common contracts or contractual terms. These include financial contracts, liens and other kinds of security, transfer of ownership, performance of online services, and supply chain workflow.The following problems may be addressed by the language when interpreted by computer:The process of designing this language is also a great way to explore the basic nature of contracts (what are the \"elements\" out of which a wide variety of useful contracts can be drafted?) and their composibility (what rules for composing these atoms rule out impossible contracts?) The language is also a creative tool for thinking up and \"sketching\" new kinds of contracts. I welcome your participation.The words in our language follow legal terminology as much as possible \u2013 thus for example performance means execution to satisfy the terms of the contract (as in the legal field), rather than measured quantities like speed, memory usage, bandwidth, etc. (as programmers use the term). A law degree is not required to use the language, but some familiarity with contract law and the drafting of contracts is recommended. A lawyer who did reasonably well on the analytical and logical sections of the U.S. LSAT or its overseas equivalent, will, I suspect, have better luck drafting contracts in this language than than a programmer whose sole experience lies in traditional procedural language. That is why I call this a drafting language not a programming language.Our language can specify the output of a negotiation (which could be an auction, an exchange, or two parties drafting the contract, or one party drafting and the other agreeing to it, etc. ). It also can define the input to an engine that drives and monitors the transactions that perform the contract:Performance of the contract, i.e. its reification as a smart contract, can thus be seen as (hypothetical, at this point) execution of a program written in our language. Furthermore, our language incorporates a wide variety of contractual terms, not just abstract monetary terms and their derivatives. These two characteristics make our language very different from special purpose financial contract languages such as[4]. While we use several financial contract examples to introduce our language and demonstrate its flexibility, its scope both in functionality and the kinds of contracts and transaction protocols it can represent is far broader.Each word and phrase in our language has a clear standard meaning. As a result, contracts can be drafted that will be far less subject to disputes over interpretation. On the other hand, the language is not very good at expressing many subjective and ambiguous concepts that are often necessary in contracts. Nor is it any good, in its present state, in referring to jurisdictions or doctrines of law. The language is nevertheless very different from a traditional programming language. Contractual terms are defined in terms of events that trigger their performance. Such events include dates and times, choices made by the parties, observable breaches of contract, and so on.Our language is not a markup language. It is not about manipulating text for the purposes of drafting contracts. It is not about structuring text, specifying fill-out forms, defining static data formats, or similar tasks of languages such as HTML or XML. For those tasks one should use a markup language, or a text-manipulating programming language (e.g. Perl), not this language. Our language does something very different. It models the dynamics of contract performance \u2013 when and under what conditions obligations should be performed.The words and sentences of the language do not consist of instructions followed down the page from one step to the next. Instead, a contract is read (both by human and computer) by following nested definitions of contractual terms as they expand, and by looking at events in when statements and seeing what they trigger. If the drafter does need to explicitly construct a step by step calendar schedule, this can be done by using calendar-driven events or words like for and then.The language encourages composition of contracts. Contracts, rights, and obligations can be nested. We call these nested structures clauses. Contracts and clauses involve two parties, the Holder, from whose point of view we read the contract, and a Counterparty. Multi-party agreements can be drafted by composing several two-party contracts.Our first example is a well-known financial contract, the future. A future is an obligation on the part of the Holder of the futures contract to purchase a certain amount of a certain commodity in a certain month, and the obligation on the part of the future contract writer, the Counterparty, to deliver these goods. For the purposes of introducing this contract, we give it in the abstract form in which financial analysts usually deal with it, leaving out important details that describe the third parties who act as trusted intermediaries to define \"fair bundles\" of commodities, and we also leave out many details about the actual delivery.Since this language is not yet being computer interpreted, the syntax is designed more for human than computer readability. I will be a bit fast and loose with the syntax, and you can be too. I mostly use tabs instead of brackets {} to structure clauses in a way that seems natural and readable to me \u2013 and I hope to you \u2013 but might confuse a computer. Feel free to develop your own style.The top three lines in the contract, in the form name(parameters) = tells us that we are defining a named clause. The named clause can define an entire contract or just a clause in a larger contract. We can pass the names of other named clauses, lists of events, and other kinds of information that the named clause needs \u2013 these are the parameters.when withinPeriod(p) means \"when the first calendar or clock event generated during period p\". The drafter can elsewhere set how often this regular \"clock tick\" event occurs. The first such clock tick after the start of the period, in this case the first scheduled delivery day in the month of July, triggers the clause with the brackets {}. More sophisticated schedules are possible, such as those that minimize delivery costs for the Counterparty by delivering to different Holders on different days in July. Fortunately, we can hide these scheduling details within the calendar event and schedule iterator mechanisms, leaving the drafter free from worrying about exactly when markets are open, which days are weekends or holidays or leap days, and the like. The Counterparty's delivery schedule can be negotiated or this detail can be left up to the Counterparty. In the contract above, the constraints on delivery are that it occur within July and only in conjunction with payment from the Holder.The innermost clause says to swap rightA for rightB. This clause is split into a Holder right and a Counterparty right. The right clause Holder rightA means \"Holder has the right to performance of rightA\", in this case delivery of the pork bellies. The clause Counterparty rightB means \"Counterparty has the right to performance of rightB\", which here is the payment of 1,500 dollars. with indicates a simultaneous swap \u2013 the two transactions should occur together, perhaps intermediated by an escrow agent to enforce both the delivery and payment terms.A then statement allows us to proceed step by step. If we had two clauses written thus:They could be performed in any order \u2013 right2 might be performed first, or right1 might be, or (most likely) performance on both might proceed at the sime time. Several when statements nested together at the same level have any implicit also as they can be triggered in any order.Envision a dancing elf that follows nesting of clauses as they are performed and of events as they are caught. (Programmers call this dancing elf by the boring name \"instruction pointer\"). There can be more than one dancing elf if there is an also or if more than one when statement is triggered while another is active, but usually we only need to think about one at a time.If we wish to add the constraint that right2 cannot be performed until right1 has been, we use then:Traditional programmers will be sorely tempted to fill their contracts with then statements, mimicking the style of procedural programming. Do not! Those experienced with drafting contracts know that in some cases such a constraint is clearly appropriate and in some cases it clearly isn't, and it is important when adding constraints to be explicit. Therefore the following statement is illegal, and will be rejected both by the computer and by any right-thinking drafters working without a computer:Finally, we have already seen this kind of clause:This means that right1 and right2 should be performed simultaneously \u2013 and either both of them should be performed, or neither of them. In the lingo of computer scientists, it should be an \"atomic\" transaction.The then terminate at the end of the named clause ensures that all rights and obligations under the contract are terminated once it has been performed. It is not triggered until the one-line body of the future contract has been completed. as well as any outstanding subordinate clauses with their rights and obligations. This clause is implicit at the end of every named clause, but for this one time we make it explicit. This clause is often used explicitly when the drafter wants to ensure the proper termination of non-named clauses nested within a named clause.Let's now proceed through the futures contract step by step, as clauses are activated and then performed. A normal font indicates the clause is inactive. A bold font indicates an active state \u2013 the clauses is being performed.When the parties commit to the contract its first clauses (the clauses at the highest level of indentation) are awoken. In our futures contract we have only one such clause, and so the when (but not the clauses nested underneath it) go to in an active state, waiting for the withinPeriod() event:When the calendar has advanced to the end of trading on the last trading day of August, the withinPeriod(p) event occurs and the when activates the clauses nested at the next level inside. The when itself becomes inactive \u2013 it is no longer waiting for an event:The then has cause the terminate to wait for the when and its subclauses to be performed. Once the swap of rights has been performed, the performed clauses convert to inactivity and the terminate fires:It is easy to generalize in our language. The generic futures contract looks like this:Instead of pork bellies, we can swap any other rightA for rightB, which can be a wide variety of things beside money. Drafters can specify very general boilerplate and fill in details for specific contracts later.We now present another kind of financial contract. In this American option, the Holder has the right to buy for $20 (the option strike price) per share one round lot (100 shares) of XYZ Corp on or before the last trading day of August. These kinds of contracts are called \"derivatives\" because the call option is derived from the underlying right (here a stock).Think about that dancing elf again. (When reading or writing in our language it's important to follow these dancing elves. If the elves become annoying, think of some other dynamic character or process for a metaphor that suits). As it goes around it wakes up clauses, making them active, causing them to be performed. Sometimes there can be more than one elf dancing through the code at the same time, for example if more than one when statement is triggered while another is active, but usually we only need to think about one at a time.The contract starts out with dancing elves in the two top-level clauses:These when statements are now waiting for their respective events. Since the events are mutually exclusive (it is first beforeTime(time), then afterTime(time), but never both) we only need to worry about the first to be executed. Note that, unless separated by a then, the order of the clauses at the same level is not important. The following code is identical to the code in our example:The beforeTime(time) is immediately activiated, so that we start with the nested clause(s) at the level immediate below it active as well \u2013 in this case, when choiceOf(Holder).A series of whenes at the same level in that clause all start waiting for any of them to be triggered. When a when receives an event thrown below it or at it, the nested clause below it becomes active. Then the clauses below it become active and are performed down to the wheness one level below. The whenes at that level go from inactive to active, now waiting for their events to occur.The when beforeTime(time) becomes active when the option itself is first activated, and remains active until time. Being active it wakes up the when choiceOf(Holder). This when specifies the event that gives the contract its nature as an option -- the choice of its holder to exercise it or not. If the Holder chooses to do so, the Holder gets the stock (rightA) from the Counterparty (the writer of the call option) in exchange for the money (rightB). The dancing elves then move from the when clause to the swap clause:When code gets complicated, we might not be able to easily tell whether the implicit then terminate on the last line will get executed. So it's a good idea to terminate the contract explicitly when the option expires.We will see examples where more than one kind of event, and even sequences of events (such as a calender schedule of payment dates) trigger the execution of contractual terms.Remember that the language does not proceed by default step by step \u2013 instead the reader (human or computer) should follow down the nested contract definitions as they expand, and look at events in when statements to see what they trigger. Explicit step by step calendar schedules can be built using for, then, and calendar events.Here's an example that uses such explicit steps. A bond makes a sequence of fixed payments, called coupons, on a regular schedule, and then makes a final payment, the principal. We don't show here the details of the schedule itself, but in general a schedule could be defined to be any kind of temporal sequence \u2013 we could pay out coupons on the last day of every month, on every Japanese holiday, according to the computation of Easter (don't laugh \u2013 schedulers of medieval fairs had to face this problem), or however we choose. When implemented the calendar events and schedule iterator will contain a very thorough implementation that solves many of the nasty calendar problems that often appear in transaction processing systems.for iterates through the events in the schedule one by one, with the nested when handling them. When it appears after a for clause, a then advances the iterator one more step.Next we sketch a contract to sell a car on credit. Being a sketch rather than a full-fledged design, this is an oversimplified or \"toy\" example \u2013 we leave out fees, any references to a related insurance contract, warrantees, waivers, etc. We also for simplicity have the bank (here the Holder) be the same as the car dealer. Finally, we don't show here any lien on the car to secure the loan. We will make a stab at a lien-like mechanism in an example below.If we want to allow prepayment, our schedule would contain single times rather than periods with a begin time and an end time. And our loan payments would look as follows:We could compute the above payment from other information we are more likely to see in the contract, but this involves just normal programming. We can use a function to perform the computation in the first place:\"=\" sets, for all time (thus constant), the number payment.amount to the value returned by the function computeInterest. We could also do more complicated things \u2013 deduct interest for prepayment, or conversely add prepayment penalties, or a wide variety of other conditions.We can also structure the car purchase contract so that the new owner doesn't get the title until after the downPayment has been received:Let's use our language to analyze some important advances in the history of economic institutions. Genoa was an independent and rather libertarian (for its time) city heavily involved in the Mediterranean sea trade. During its height in the twelth through fifteenth centuries it developed many commercial innovations, including two we will examine here, the \"dry exchange\" loan and pooled-risk insurance.Here is a clause from a contract made in Genoa on June 23 in 1271 A.D. A man is co-signing an obligation being made by his son:Wherefore and for which we promise, both of us [liable] for the whole amount, to give and to pay to you or to your accredited messenger 53 gold hyperpers, good and of correct weight, in Romania [Byzantium], by the Kalends of September. If, however, we do not give you these [hyperpers] within the said time limit, [we promise] for each of the said hyperpers 11 shillings Genoese in Genoa whenever you wish. Otherwise we promise, both of us [liable] for the whole amount, to give to you, making the stipulation, the penalty of the double of the said amount, the aforesaid [conditions] remaining as settled. And we pledge to you as security for the aforesaid [promises] all our goods, existing and future...[5]Now, this is a very clever contract, called by scholars a \"dry exchange\". The Catholic Church forbad the charging of interest, so a loan contract that came right out and charged interest would be unenforceable and expose the drafters to further Church sanctions. But both long-distance exchange (making a trade at a distant market at a later date -- often via a sea voyage, thus a \"wet\" exchange) and currency exchange were quite legal, enforceable, and common. The above contract combined these two, along with damage clauses, in a clever way. None of the above parties had any intention of travelling to Byzantium, or even outside Genoa, to perform on this contract. Its logic can be analyzed as follows (the Holder is the creditor). We've added the statements \"in (geographic location)\", security, and foreclose to highlight important aspects of this contract. The latter sells enough of the goods at auction to satisfy penalty (if there was not enough to satisfy the creditors there was a bankruptcy procedure to fairly allocate the remain security among the creditors, but this is not shown):Neither party expected payment1 to be performed. The amounts of hyperpers and shillings probably reflected accurately the exchange rate between the two coins at the time \u2013 there's no sense being too obvious. But it would have been far too expensive to travel to Byzantium just to do this exchange. So in fact both parties expected payment2, a fake damage clause, to normally be performed. If it wasn't, then we have two real damage clauses \u2013 the somewhat reasonable \"penalty of the double\" and the lethal \"all our goods, existing and future\". Another interpretation of the latter clause is that it would only refer to a value of goods up to the double penalty amount, but the goods could be chosen from among all the goods of the debtor and the co-signer. Certainly a modern court would consider the interpretation I have placed on it in our language to be unconscionable, therefore unenforceable.Above the part we quoted, the contract does not specify how much the original loan amount was \u2013 the debtors simply acknowledge that they have received from the creditor \"a number of Genoese deniers\" and then promise other currencies in return as quoted above. So a Church investigator couldn't prove just from reading the contract that any interest was charged. As for the Genoese judge arbitrating a dispute, he would likely be in favor of loans at interest, and happy to wink and nod and interpret the contract literally.Modern derivatives traders do this all the time, creating synthetic assets or combinations that mimic the financial functionality of some other contract while avoiding its legal limitations. Our language is ideal for drafting and analyzing such contracts.The earliest risk-pooling insurance contracts were structured similarly to, and enforced under the same legal principals as, loans. Indeed, let's start with a simple loan for a purchase of goods with no interest where the Holder (the creditor) can call in the loan any time between days t1 and t2:Let's add to our language a safeArrival(goods) event \u2013 the event that a ship carrying goods arrives safely in port and that goods are offloaded and accounted for. Now by adding to this loan contract only one extra line, whening safeArrival(), and slightly modifying a few others we can transform it into a marine insurance contract. The insured is the Holder, the insurer is the Counterparty. For this simple version damages are paid in a fixed amount (principal) if safeArrival does not occur:Here's an example of an early insurance contract of this kind \u2013 again from Genoa, the birthplace of modern commercial institutions. For the first time we see a pool of insurers \u2013 not one but many counterparties, each pledging their entire property as security. Often these were feudal lords with large landholdings, so the value that could be brought to bear to back these insurance contracts was vast. This is how Lloyds Names still work today. Since several Names back a single contract (e.g. covering a single shipment of goods, as here), each Name puts only a tiny fraction of their estate at risk in that voyage. An insurance exchange like Lloyds allows the agents of goods owners, shippers, and Names to meet and mass-produce these kinds of contracts....Geri, [son] of the late Ser Lapo of Florence, Simone Guascone, [9 more Names listed], each of them [liable] for the amount written below, have acknowledged and in truth have declared to me, notary undersigned, as a public official [holding] a public office, making the stipulation and receiving in the name and stead of Federico Vivaldi, citizen of Genoa, that they have bought, have had, and have received from him a certain amount of goods of the said Frederico...And for these goods and in consideration of their price each of them has promised to give and to pay to said Frederico or to his accredited messenger: [from] the said Geri, 150 gold florins, the said Simone, 50 florins, [100 florins each from the other Names] within the next five months from now. Otherwise they have promised to give and to pay to the said Frederico the penalty of the double of it and of the entire amount to which and to the extent of which [this agreement] is violated or is not observed as above, together with restitution of all losses, unrealized profits, and expenses which might be incurred because of it in court or outside \u2013 the aforesaid remaining as settled, and under hypothecation and pledge of their goods and [the goods] of any one of them, existing and future.[The above is binding] with the exception and special reservation that if the amount of goods, property, and merchandise which was loaded or is to be loaded by Frederico Imperiale or by another in his behalf for the account of the said Frederico Vivaldi in Aigues-Mortes \u2013 to be transported to Ayassoluk and Rhodes or to either of these two localities in a certain ship...and which departed from Aigues-Mortes or is about to depart in order to sail to aforesaid regions \u2013 is brought and unloaded in the said localities of Ayasoluk and Rhodes or in either of them, in safety, then and in such a case the present intrument is cancelled, void, and of no value and pro rata. And be it understood that such a risk begins when the said ship departs and sets sail from Aigues-Mortes, and it remains and lasts, while the captain goes, stays [in port], sails, loads and unloads, from the said locality of Aigues-Mortres up to the said localities of Ayassoluk and Rhodes, in whatever manner and way he wishes, until said amount of goods, property, and merchandise has been brought and unloaded in Ayassoluk and Rhodes or in either of these two localities in safety, and pro rata. Let the present instrument also be cancelled if the said Frederico refrains from asking payments of the aforesaid amounts of money for the space of one year after the time or the time limit has elapsed for asking or obtaining their payment....Done as above, September 15th, around nones. [1393 A.D.][5]Ignoring the pro rata language, the specific definition of the risks that prevent generation or not of the safeArrival() event, and ignoring the multiple Names (i.e. treating them as one Counterparty), the contract can be modelled by the insurance contract we drafted above with its parameters filled in as follows, and with Frederico Vivaldi as the insured (the Holder):This contract was still, legally speaking, a loan. This had at least two interesting consequences on what we now call the insurance premium. Firstly, the premium was treated as goods purchases by the insurer on credit. Secondly, even at this late date, contracts were coy about the actual value of such goods. Leaving the value of those goods unspecified made usury difficult to prove in this \"loan\".Events in a when clause can be combined in logical conditions which must evaluate to true in order to trigger the subclause. This can be used to model conditional clauses in contracts, and, more broadly, procedural and substantive rules of law. When constructing rules we call the primitive events elements. For example, here is, roughly following the Restatement(Second) of Contracts, a legal rule for promissory estoppel:We include a gratuitous \"then\" here for readability. Computer programmers should note that we are following a shorthand here used by lawyers \u2013 we write the logical phrase (A and B and C and D) as (A B C and D). When mixing and and or, write out the complete logic, and use parentheses where appropriate.The rule elements, such as \"there is a promise\", exist in a superimposed state. By default, the logic is ignorant of the facts, and each element is genuinely at issue. As a result, \"there is a promise\" and the other elements of the above rule are both true and false, at the same time. (Those familiar with quantum mechanics or legal reasoning know what I'm talking about here). In the initial state, where every element is genuinely at issue, nontrivial rules will always evaluate to both true and false. Thus, both \"promise will be enforced\" and \"promise will not be enforced\" clauses will be triggered. When the clauses are incompatible, as these appear to be by their label, it is up to the implementor of the clause to deal with this properly. In this case, such a clause should only be treated as advisory until all material elements have been decided \u2013 i.e., they are no longer genuinely at issue, at which point the rule can be used to make a decision, i.e. trigger a single clause which takes a consistent action. A future version of this document will describe how to resolve elements genuinely at issue into elements not genuinely at issue, and thus decide on a single outcome or course of action. It will also describe how to deal with advisory clauses; for example, to analyze which elements are most favorable to one outcome or another. Finally, another future feature will include elements that cover a range of numerical values, rather than just true or false, and a formalized \"balancing test\" that determines outcomes based on underlying numerical estimates.Our rule language is ideal for specifying estates and future interests in real estate deeds. One can also apply these patterns to other kinds of property where appropriate. Here are some examples:Lease for Term: (n.b. \u2013 Grantor = self). This is an old common law lease that actually transfers title for a certain period of time.Life Estate with Reverter: (n.b. \u2013 Grantor = self)Assignable Reverter for Lease. To make future interests assignable, define them separately. Note to make the Grantor explicit. (As usual we are looking at things from the obligor's side):We can now redefine the Life Estate with Reverter in terms of the separately defined future interest:Life Estate with Remainder. The only difference here is that the property is remaindered to a third party instead of reverting to the grantor.Fee Simple Determinable. The Condition can be any verifiable event or change of state of the property or its title. A common real estate condition, for example, is \"used for commercial purposes\" \u2013 i.e., a restriction that the property may not be used for commercial purposes, otherwise the grantee is penalized by losing title to the grantor.Fee Simple Subject to Executory Limitation. Same as Fee Simple Determinable, except the property gets remaindered to a third party instead of revertin to the grantor.Fee Simple Subject to Condition Subsequent. Here title is not automatically transferred upon occurence of the condtion. Instead the Grantor must do some affirmative and verifiable act (in this example \"entering\" the property), to reclaim the title.In this section we will look at ways to construct multiparty agreements, distinguish ambient from thrown events, and examine a number of other more advanced features of or ways to use our language.We will complete the life cycle of the American option we drafted above by \"writing\" the option \u2013 creating it from an underlying security rightA and selling it for rightX. Here the Holder (same party as the Holder above, in this case the person who will buy the written option) first verifies that the Counterparty indeed holds the underlying security (rightA) with Broker. The Broker is trusted by the Holder to make sure Counterparty continues to hold the security until the option is exercised or expired. The contract between the Broker and Holder is escrowRight().)Since Counterparty, the option writer, is not paying anything up front for an option on rightB, this right does not need to be escrowed.We now redraft the option itself to take advantage of the escrow. rightA is transferred to Holder by the throw upon excercise, or back to Counterparty if the option expires.We can think of events as coming in two kinds. The first, ambient events, occur spontaneously in the environment, or are generated by an entity external to our specification such as a user or a schedule. The second, thrown events, are events we explicitly throw as above.In this manual I have expressed contract clauses in terms of rights. Often contract language is expressed in terms of obligations, which can be done as a mirror image \u2013 to Holder right is the same as from Counterparty obligation and vice versa. Use from to distinguish an obligation.Further showing the flexibility of our language we can add sensors and effectors, adding \"smarts\" to our contracts and augmenting legal enforcement with technological constraints.First we draft a specification for the contract-like bevavior of a vending machine:We have here introduced a new language feature, a state variable. Our state variable moneyAmount generates an event upon surpassing the candy price threshold of $0.90. Note that nickels, dimes, etc. are actual physical objects that the sensors (generating events \"nickel\", \"dime\", etc.) detect and treat separately \u2013 they are not merely abstract amounts of money.State variables can be troublesome, and should be avoided unless utterly necessary as here. This one is relatively harmless because the coin slot tends to force the coins to come in one at a time, so that no two clauses are trying to change the state variable at the same time. Even if they were, the addition operation is what mathematicians call \"commutative\", meaning it doesn't matter what order it's done in. But if the operation on the state variable were more complicated or involved certain other kinds of operations, we wouldn't know whether it was commutative. The order in which events occured and changed the state variable might matter very much, and we could get into big trouble. So avoid state variables whenever possible.To simplify things, we've left out making change \u2013 our machine has to have one of those signs you sometimes see, \"exact change only\". If the customer puts in a coin that pushes the amount from, say, $.80 to $1.05 \u2013 too bad, the machine eats it. If the customer puts in $0.90 (or more) and then adds more coins, however, the machine automatically returns the extra coins. The machine will also return whatever has been put in the till, if the customer changes her mind and decides not to buy the candy. Exercise for the reader: verify for yourself that the above behavior descriptions are correct as the code is written.RedirectNewCoinsTo(returnTill) causes any further coins to drop into the return chute instead of onto the sensor that triggers the above events. The reader must here imagine what the mechanism looks like, as part of the behavior is \"encoded\" in its mechaninism rather than explitly in this statement.Think of the nested contracts and rights as an upside-down tree \u2013 a hierarchy of nested clauses. Events propagate from up from the \"leaves\" of the tree towards the \"root\" at the top. They are caught by the first when event they encounter for that event. In this case, once we enter the when threshold() clause, the when (nickel | dime | quarter) clause overrides the when(nickel) and so on clauses above them.Like a perpetuity, our vending machine has no scheduled time or condition where it stops performing \u2013 therefore we have a continue statement to overrid the implicit then terminate on the last line.Alas, neither I nor real world candy machine makers have any code to solve the case where the candy gets stuck in the machine.The above is a transcription of machine behavior. Now we make it even more like a contract. Here we incorporate the customer and his choices, which implicitly generated the coin events in the code above \u2013 here the coins are rights of the Holder. Thinking more about the party, rather than the machine, allows us to recognize that at each step the customer wants feedback on how much money they have put in, thus to Counterparty display(moneyAmount). This display is done by the Holder (the vending machine as an agent of the vendor) as a right of the Counterparty (the customer). To enable better customer choice, we add a new construct to our language: choiceOf(agent, right) which allows the customer multiple choice, based on which right they wish to transfer to the agent's counterparty (here the vending machine, the Holder).How is it that we have specified the behavior of a vending machine in a language designed for drafting contracts? Can nickels, dimes, quarters, and operations like dropping coins from one till to another be thought of as rights and obligations? I think so. They are not legal rights and obligations, to be sure. There is no explicit contract between the vendor and candy machine customers, and if their were it would probably waive liability for violating most of the clauses in our code. What this code describes is the logical and typical behavior of a vending machine. It also reifies the implicit understanding most customers have when using a vending machine. Thus it models a contract-like \"meeting of the minds\" between the customer and the vendor that is mediated by the machine.Here is a stab at formally describing the hypothetical \"auto repo auto\". The car is controlled by a proplet and the proplet looks to property titles to determine ownership authority. The proplet lets only the titled owner enter and drive the car. \"Holder\" is the bank that made the loan and \"Counterparty\" is the new owner. As above we ignore the car dealer; the bank originally owning the car. This example highlights the ability of the language to very succinctly describe contracts but also its inability to describe the actual security that will enforce the contract. There is of course a lot missing here, including the items missing from the above car loan contract. From a smart contracts viewpoint, the biggest thing missing is that there is nothing to motivate the \"Holder getTitle(car)\" in the last when, nor any way specified here to enforce it. And of course all connection between ownership and authority to enter, start, and drive the car is here implicit \u2013 the actual proplet behavior in this regard would have to account for safety, emergency use, etc.For all that work-up, we've only actually added one clause to our car purchase contract above. The clause forfeits the title and is structured much like the damage clauses we have seen. A breachedPerformance() event is generated if it is detected (by the Holder, a third party auditor, or the proplet itself) that the Countparty failed to make a payment according to the schedule specified by loan.Here is a formal specification of the language's grammar in \"Backus-Naur Form\"(BNF). The specification is for a planned computer-readable version of the language and there are a few minor differences, such as the use of brackets {} instead of tabs to denote nesting. BNF is used to define what linguists call \"context-free grammars\". It is also used, as here, to define the syntax of languages that computers can also interpret and execute. I also include some more discussion of the meanings of the words and structures, especially how the computer might interpret them. As you can see, this is an evolving language, a work in progress with many unresolved issues. Your suggestions for changing or adding more kinds of contractual terms to our language are quite welcome.Q: There are already languages for specifying financial contracts[3], what is the novelty here?A: This the first specification language to generalize contractual structures to any kind of exclusive rights, not just money. This is also the first language that incorporates the dynamic nature of many contracts, (their dependence on time or events) in a succinct, complete, and potentially executable manner. Surprisingly, this often makes the specification more not less succinct.Where's the money?A: This language is targeted toward an economy of distributed software and devices performing services for each other. A money economy can be constructed out of a barter economy but not vice versa. Real online money is far more subtle than a mere shared variable (or even the specification of \"bank notes\" in this language). Money is just one kind of fungible exclusive right, and the structure of financial contracts are generalized by converting money terms into any fungible exclusive right.Q: What assumptions are you making?A: This is the most important question to ask of any novel scheme! I have identified at least the following:Q: What are some problems with this language you'd like to see solved?A: Implementations that satisfy the above assumptions for the particular language atoms, and also for compositions of the atoms. (Of course, various protocols in the \"financial cryptography\" field, in my own proposals, in the E language, etc. provide many valuable building blocks for such solutions).There are many instances of deals gone sour at the last minute when the salesfolk check with legal and discover that the deal is not possible due to a clause in another contract \u2013 for example a promise not to sell to a customer's competitors in an industry for a certain period of time. Worse, such a conflict might not be discovered until the contraditory commitment has been made. \u21a9The E programming language \u21a9Proceedings of the Financial Cryptography Conferences, Springer-Verlag \u21a9Composing contracts: an adventure in financial engineering \u2013 A different kind of language for specifying financial contracts in order to compute their risk and value. \u21a9Lopez and Raymond, Medieval Trade in the Mediterranean World: Illustrative Documents, Columbia University Press 2001. \u21a9 \u21a9Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 2002 by Nick Szabo\nPreliminary draft -- Redistribution only with written permission of author.Editor's note: Some links may be broken."}
{"prompt": "Secure Property Titles with Owner Authority", "completion": "The advent of writing greatly improved the tracking of property rights, and indeed gave rise to our modern systems of property rights and law. However, written records have proven to be quite vulnerable to abuse. A common pattern during eras of political instability or oppression has been the confiscation of land via the forgery or destruction of public records. Reconstruction from informal records, such as residency recorded in phone books, even when possible is costly and fraught with error and potential for fraud[1]. Large amounts of, in some areas most, property in developing countries is not formally titled[2]. Even during eras of political stability in developed countries, there occur many expensive problems with titles.[3] Straightforward transcription of written records into a centralized online repository would make many of these problems even worse \u2013 electronic records can be highly vulnerable to loss and forgery, and insiders are the most common source of such attacks. This paper proposes a secure, distributed title database to prevent such attacks against property rights in the future.Many kinds of Internet resources have a basic characteristic: users must agree on their control across trust boundaries. A big example is names. The article \"Names: Decentralized, Secure, Human-Meaningful: Choose Two\" dismisses not only the ubiquity and importance of this problem, but also the possibility of solution.[4] Instead petnames are proposed. These are at best mere mnemonics to translate human-readable into cryptographic names; petnames don't do anything to secure naming across trust boundaries. All three attributes \u2013 decentralized, secure, and human-meaningful \u2013 must be provided if people are to communicate and be communicated about securely over the Internet, and this paper along with the article Advances in Distributed Security shows how to provide all three.More generally, we show how to implement transferable global rights, enforced entirely by protocol, to names, attributions, bit gold, and similar purely informatic property owned by a particular entity but possessed and relied upon by the public, and how to implement a secure title database for other kinds of property. For a particular example of cross-trust-boundary rights enforced entirely by protocol, see my proposal for name integrity in cross-trust-boundary file systems.In all cases of property rights there is a defined space, whether a namespace or physical space, and the task is to agree on simple attributes of or rights to control subdivisions of that space. In some cases a name or other symbol corresponds to a person or object owned or controlled by that person. For example, Internet users must agree on which domain name corresponds to which web site operator. In other cases we are simply concerned with control over a subdivision of the space. With real estate we must agree on who owns various rights (to occupy the surface, to mine the minerals under, etc.) to a piece of land. With radio spectrum we must agree on who owns what range of frequencies and in what physical space (or transmitting power as an easily observed approximation of physical space used).It is the author's hypothesis that all such agreements of control, including control over the semantics of symbols, to be made and respected across trust boundaries are problems of agreeing on and maintaining property rights. Thus the results of this paper are far more general than they might first appear \u2013 I believe this paper provides a solution to secure namespaces and similar problems as well as the problem of securely recording agreements on traditional property rights. Highlighting the property rights nature of public directories also highlights the limitations of these mappings \u2013 for example that names, addresses, and other symbols whose semantics are controlled by a person can often be delegated, just as property can be given or rented.New advances in replicated database technology will give us the ability to securely maintain and transfer ownership for a wide variety of kinds of property, including not only land but chattels, securities, names, and addresses. This technology will give us public records which can \"survive a nuclear war\", along the lines of the original design goal of the Internet. While thugs can still take physical property by force, the continued existence of correct ownership records will remain a thorn in the side of usurping claimants.I use political words in this essay as metaphors to describe how our hypothetical property title software, and especially its protocol for distributing the title database across a public network, could work. A group, called a property club, gets together on the Internet[5] and decides to keep track of the ownership of some kind of property. The property is represented by titles: names referring to the property, and the public key corresponding to a private key held by its current owner, signed by the previous owner, along with a chain of previous such titles. Title names may \"completely\" describe the property, for example allocations in a namspace. (Of course, names always refer to something, the semantics, so such a description is not really complete). Or the title names might simply be labels referring to the property. Various descriptions and rules \u2013 maps, deeds, and so on \u2013 may be included.The property club can be thought of as a \"microgovernment\", an entity that performs globally and independently one narrow function normally associated with government. In particular it is a \"constitutional microdemocracy\" with low entry and exit costs. After the rules of property transfer have been decided, each vote should stay within this constitution \u2013 so that normally the vote will simply implement a distributed operation according to the property rules. The voting is necessary not due to a democratic political ideology but because it is the optimal result in analysis of distributed databases with malicious attackers.[6] If the rules are violated by the winning voters, the correct losers can exit the group and reform a new group, inheriting the old titles. Users of the titles (relying parties) who wish to maintain correct titles can securely verify for themselves which splinter group has correctly followed the rules and switch to the correct group. If the rules are violated by losing voters, they can be excluded from further participation both by correct winners and rule-following relying parties.This voting-or-reformation method works well where exit costs are low. Thus in practice users should not \"put all their eggs in one basket\", but different title clubs should be used for different kinds of property. Note that the key security feature of the club is not the voting, but a set of objective, often automated, rules and an unforgeable audit trail that allows both club members and relying parties to check whether each vote followed the rules. So, to go further with the political metaphor, a property club is a \"constitutional microdemocracy\" with most of the emphasis on the \"constitutional\". The voting is necessary, but is quite regulated.To implement a property club, we set up a replicated database so that the club members, hereafter \"servers\", can securely maintain titles of ownership, and securely transfer them upon the request of current owners. Actually getting end users to respect the property rights agreed upon by this system will be dependent on the specific nature of the property, and is beyond the scope of the current inquiry. The purpose of the replicated database is simply to securely agree on who owns what. The entire database is public.The ideal title database would have the following properties:We cannot achieve ideals (1) and (3), so we introduce \"voting\" as follows. A good model of secure replicated databases is the \"Byzantine Quorum System\" of Malkhi & Reiter[6]. In contrast to most recent work in peer-to-peer software, our design is based on mathematical proofs of security rather than hand-waving. For a short discussion of such threshold-of-servers approaches, see my essay \"Coalition Design for Secure Protocols\". The database is replicated across a universe of servers U, |U|=n. The \"quorum system\" is a collection of subsets (quora) of these servers, each pair of which intersect. Each quorum can operate on behalf of the system; intersection guarantees that operations done on distinct quora preserve consistency. A quorum system tolerant of Byzantine (unconditionally malicious) server failures is a collection of subsets of servers, each pair of which intersect in a set containing sufficiently many correct servers to guarantee the consistency of the replicated data. The authors construct a protocol such that any intersection contains at least 2f+1 servers, thus providing resilience against up to f malicious servers, n > 4f.Using these results it looks like we can approach our ideal title database as follows:Sharing control over property, for example as security for a loan, could be accomplished by sharing the private key corresponding to the current owner's public key. Possession of this private key is required to sign over title; multiparty threshold signatures could also be handled. So it may be a good idea to use one keypair for each combination of title and current owner, rather than keypairs representing the identities of owners. When certain contractual conditions are met, such as the last payment on a loan, this could trigger the generation of a new keypair held solely by the owner, and transfer of title from the shared keypair to the new keypair.The initial allocations might occur by mapping existing property rights from their current institutional incarnation, or by using traditional methods of staking and negotiating mutual recognition of claims. Some methods less dependent on an existing legal regime for the rights will be discussed in this section.For some kinds of allocation, such as spatial regions or a hierarchical namespace, we wish to be able to subdivided and re-merge properties. Current owner Alice should be able to transfer various fractional portions of her title to multiple single relying counterparties. One possibility is to have \"divide\" or \"merge\" messages whereby the current owner of a property can retire the old property specifications(s) and link them to new property spec(s), the whole message being signed by the owner. Then the new property spec(s) are introduced and considered active, and the old ones considered deactivated. It would be the responsibility subsequent transferees to ensure that the new specifications do not intersect, and are otherwise in good order.One way to approach the homesteading, or initial allocation, problem, I call the \"emergent respect\" style: Alice claims the entire unallocated universe. Bob also claims it, the same property spec under a different digital signature. They then may choose to subdivide, sell, give away, etc. property. Each conflicting root grows like a tree into an allocation of all property.How to resolve trees with conflicting roots? Eventually, the thugs, mechanisms, or informal agreements which enforce property rights converge on a particular tree as the standard, proper allocation. Roots who give away more property to more people, or who actually deploy mechanisms to protect their property, will gain more respect for the tree they started.In a namespace, conflicts may be resolved by giving names to the conflicting roots, and keeping track of those name-subtree mappings as property.Usurpers may be able to steal property by setting up their own root and enforcing it, but they can't delete the alternative allocations. The history is always there as evidence for claims.Those with no firsthand knowledge of conflicting claims may resolve them by consulting authorities, and weighing the opinions of these authorities according to trust metrics, similar to trust metrics sometimes used for public key certificates.With secure timestamps, homesteading could be done on a first-come rather than emergent respect basis.For some kinds of property we might want to add the right of adverse possession, or formalized squatting. Here's one general way to implement a kind of adverse possession:This method doesn't attempt to define or utilize a state of \"disuse\". Instead it equates activity of the property with the ongoing active online presence of an owner who knows about the title and wishes to continue ownership. Cost of maintaining the title might be made high by requiring a periodic registry fee from owners. However, this introduces the problem of who obtains the benefit, by property club rules, of the profits from this fee, and the problem of that the fee lowers the profit of owning the property, even perhaps making it negative. One possibility, where costs of protecting the property are high, is to charge a \"Georgian tax\" based on some imprecise but objective estimate of the value potential of the property, and allocate the fees to the task of securing the property. To come up with this estimate, or to account for usage of the property itself, would involve mechanisms or observation of characteristics specific to the kind of property, to which subject we now turn.Largely unaddressed above is the problem of divergence between actual conditions and directory rights. For example, squatters might legitimately, in the eyes of most property rights enforcers, occupy and improve unused land which a title registry indicates is owned by others. De Soto[2] describes squatters and emergent property rights on the American frontier and today's developing world. When names are property, a name may violate a pre-existing trademark, causing the confusion that both the new namespace and the old trademark namespace were designed to solve.When divergence becomes too great, a solution to address the unreality of the title registry is needed. One such solution is for the squatters to set up their own rival registry, and then prove the superior correspondence of their registry to actual reality over control and use of the resources. Another solution for squatters is to use the adverse possession mechanism described above \u2013 but this works only if the cost of maintaining the title is sufficiently high.Another solution is to examine the incentives of the titled owner, to see if they correspond to truthfully claiming control over a resource. In most cases there may be incentive to lie, and we can't use this method. In some cases there is incentive to tell the truth and we can, with caveats, rely on it. Any such incentive assumption in the property rules should be explicated, so that relying parties can examine whether the conditions creating the incentive still hold.Another solution is for property club rules and the registry to originally incorporate rich information about the actual state of property, and modify the actual ownership and transfer on this property based on that state, in a way that leaves few ambiguities so it can be fully audited by club members and third parties. It is most advantageous when this auditing can remain automated, as envisioned above. However the introduction as rule criteria of unrecorded (or unsecurely recorded) transient states common in physical property causes auditing, and thus the titles, to become both less secure and more expensive.My thanks to Gregory Burch, J.D., Eileen O'Connor, J.D., Melora Svoboda, and many others for their helpful comments.Kelly McCollum, \"Using Phone Books, Scholars Build a Data Base for Resettling Kosovars\" \u21a9Hernando de Soto, The Mystery of Capital \u21a9 \u21a9Reasons to buy title insurance \u21a9Bryce \"Zooko\" Wilcox, Names: Decentralized, Secure, Human-Meaningful: Choose Two \u21a9Property on the Internet may take all kinds of new forms. For analysis one recently emerged form, the ownership of open source software projects, see Eric Raymond, \"Homesteading the Noosphere\". \u21a9Malkhi & Reiter, \"Byzantine Quorum Systems\", STOC97 \u21a9 \u21a9Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 1998,1999,2002,2005 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "Trusted Third Parties are Security Holes", "completion": "Commercial security is a matter of solving the practical problems of business relationships such as privacy, integrity, protecting property, or detecting breach of contract. A security hole is any weakness that increases the risk of violating these goals. In this real world view of security, a problem does not dissapear because a designer assumes it away. The invocation or assumption in a security protocol design of a \"trusted third party\" (TTP) or a \"trusted computing base\" (TCB) controlled by a third party constitutes the introduction of a security hole into that design. The security hole will then need to be plugged by other means.If the risks and costs of TTP institutional alternatives were not accounted for in the protocol design, the resulting protocol will in most cases be too costly or risky to be practical. If the protocol beats these odds and proves practical, it will only succeed after extensive effort has gone into plugging the TTP security hole(s). TTP assumptions cause most of the costs and risks in a security protocol, and plugging TTP security holes produces the most benefit and profit.As a result, we propose a security protocol design methodology whereby the most risky and expensive part(s) of a security protocol, the trusted third partie(s), are designed in parallel with security protocol(s) using those parties. The objectives of cost and risk minimization are focused on the TTPs rather than the security protocols themselves, which should be designed to suit the cost and risk minimized TTPs.We also briefly discuss and reference research and implementation in security mechanisms that radically reduce trusted third party costs and risks by distributing automated TTPs across several parties, only a portion of which need to act in a reliable or trustworthy matter for the protocol to be reliable or trustworthy.This author has professional experience implementing a TTP that was assumed by early advocates of public key cryptography. This TTP has come to be called a \"certificate authority\" (CA). It has been given the responsibility of vouching for the \"identity\" of participants. (Here I focus on the costs imposed by the TTP; alternatives such as PGP's Web of Trust and SPKI have been discussed amply elsewhere).The certificate authority has proved to be by far the most expensive component of this centralized public key infrastructure (PKI). This is exacerbated when the necessity for a TTP deemed by protocol designers is translated, in PKI standards such as SSL and S/MIME, into a requirement for a TTP. A TTP that must be trusted by all users of a protocol becomes an arbiter of who may and may not use the protocol. So that, for example, to run a secure SSL web server, or to participate in S/MIME, one must obtain a certifcate from a mutually trusted certificate authority. The earliest and most popular of these has been Verisign. It has been able to charge several hundred dollars for end user certificates \u2013 far outstripping the few dollars charged (implicitly in the cost of end user software) for the security protocol code itself. The bureaucratic process of applying for and renewing certificates takes up far more time than configuring the SSL options, and the CA's identification process is subject to far greater exposure than the SSL protocol itself. Verisign amassed a stock market valuation in the 10's of billions of U.S. dollars (even before it went into another TTP business, the Internet Domain Name System(DNS) by acquiring Network Solutions). How? By coming up with a solution \u2013 any solution, almost, as its security is quite crude and costly compared to the cryptographic components of a PKI \u2013 to the seemingly innocuous assumption of a \"trusted third party\" made by the designers of public key protocols for e-mail and the Web.Some more problems with CAs are dealt with here.The Internet DNS is another example of the high costs and risks imposed by a TTP. This one tiny part of the TCP/IP protocol stack has accounted for a majority of the disputes and handwringing involving that protocol. Why? Because it is one of the few areas of the TCP/IP stack that depends on a centralized hieararchy of TTPs rather than on protocol negotiations between individual Internet nodes. The DNS is also the single component of the Internet most likely to fail even when its names are not being disputed or spoofed.The high costs of implementing a TTP come about mainly because traditional security solutions, which must be invoked where the protocol itself leaves off, involve high personnel costs. For more information on the necessity and security benefits of these traditional security solutions, especially personnel controls, when implementing TTP organizations, see this author's essay on group controls. The risks and costs borne by protocol users also come to be dominated by the unreliability of the TTP \u2013 the DNS and certificate authorities being two quite commom sources of unreliability and frustration with the Internet and PKIs respectively.Companies like Visa, Dun and Bradstreet, Underwriter's Laboratories, and so forth connect untrusting strangers into a common trust network. Our economy depends on them. Many developing countries lack these trust hubs and would benefit greatly from integrating with developed world hubs like these. While these organizations often have many flaws and weaknesses \u2013 credit card companies, for example, have growing problems with fraud, identity theft, and innacurate reports, and Barings recently went belly up because their control systems had not properly adapted to digital securities trading \u2013 by and large these institutions will be with us for a long time.This doesn't help us get TTPs for new protocols. These institutions have a particular way of doing business that is highly evolved and specialized. They usually cannot \"hill climb\" to a substantially different way of doing business. Substantial innovations in new areas, e.g. e-commerce and digital security, must come from elsewhere. Any new protocol design, especially paradigmatically different areas such as capabilities or cryptographic computations, will be a mismatch to the existing institutions. Since building new TTPs from scratch is so costly, it is far cheaper when introducing protocols from these institutionally novel security technologies to minimize their dependencies on TTPs.Many are the reasons why organizations may come to favor costly TTP based security over more efficient and effective security that minimizes the use of TTPs:Limitations of imagination, effort, knowledge, or time amongst protocol designers \u2013 it is far easier to design security protocols that rely on TTPs than those that do not (i.e. to fob off the problem rather than solve it). Naturally design costs are an important factor limiting progress towards minimizing TTPs in security protocols. A bigger factor is lack of awareness of the importance of the problem among many security architects, especially the corporate architects who draft Internet and wireless security standards.The temptation to claim the \"high ground\" as a TTP of choice are great. The ambition to become the next Visa or Verisign is a power trip that's hard to refuse. The barriers to actually building a successful TTP business are, however, often severe \u2013 the startup costs are substantial, ongoing costs remain high, liability risks are great, and unless there is a substantial \"first mover\" advantage barriers to entry for competitors are few. Still, if nobody solves the TTP problems in the protocol this can be a lucrative business, and it's easy to envy big winners like Verisign rather than remembering all the now obscure companies that tried but lost. It's also easy to imagine oneself as the successful TTP, and come to advocate the security protocol that requires the TTP, rather than trying harder to actually solve the security problem.Entrenched interests. Large numbers of articulate professionals make their living using the skills necessary in TTP organizations. For example, the legions of auditors and lawyers who create and operate traditional control structures and legal protections. They naturally favor security models that assume they must step in and implement the real security. In new areas like e-commerce they favor new business models based on TTPs (e.g. Application Service Providers) rather than taking the time to learn new practices that may threaten their old skills.Mental transaction costs. Trust, like taste, is a subjective judgment. Making such judgement requires mental effort. A third party with a good reputation, and that is actually trustworthy, can save its customers from having to do so much research or bear other costs associated with making these judgments. However, entities that claim to be trusted but end up not being trustworthy impose costs not only of a direct nature, when they breach the trust, but increase the general cost of trying to choose between trustworthy and treacherous trusted third parties.For most of human history the dominant form of property has been personal property. The functionality of personal property has not under normal conditions ever depended on trusted third parties. Security properties of simple goods could be verified at sale or first use, and there was no need for continued interaction with the manufacturer or other third parties (other than on occasion repair personel after exceptional use and on a voluntary and temporary basis). Property rights for many kinds of chattel (portable property) were only minimally dependent on third parties \u2013 the only problem where TTPs were neededwas to defend against the depredations of other third parties. The main security property of personal chattel was often not other TTPs as protectors but rather its portability and intimacy.Here are some examples of the ubiquity of personal property in which there was a reality or at least a strong desire on the part of owners to be free of dependence on TTPs for functionality or security:This desire is instinctive and remains today. It manifests in consumer resistance when they discover unexpected dependence on and vulnerability to third parties in the devices they use. Suggestions that the functionality of personal property be dependent on third parties, even agreed to ones under strict conditions such as creditors until a chattel loan is paid off (a smart lien) are met with strong resistance. Making personal property functionality dependent on trusted third parties (i.e. trusted rather than forced by the protocol to keep to the agreement governing the security protocol and property) is in most cases quite unacceptable.We now propose a security protocol design methodology whereby protocol(s) are designed to minimize these costs and risks of the TTPs. Minimizing the costs and risks of the security protocol(s) themselves is an important but secondary priority.Currently, security designers usually invoke or assume TTPs to suit the most elegant and secure or least computationally costly security protocol. These naive TTPs are then used in a proof of concept of an overall protocol architecture. But this does not discover the important things that need to be discovered. Once a security protocol is implemented the code itself costs very little, and exponential cost functions such as Moore's law keep reducing computational, bandwidth, and many other technological costs. The costs of the security protocol itself (except for the costs of message rounds, limited by the speed of light, and the costs of the user interface, limited by mental transaction costs) approach zero. By far the largest long-term cost of the system (as we learned with PKI) is the cost of implementing the TTPs.It's far more fruitful to estimate from the beginning what the TTPs will cost, rather than try to design the security protocols to minimize the costs of the TTPs. This will likely bring the designer to quite different trust assumptions and thus security protocols than if (s)he assumes pure, unanalyzed TTPs in certain places in order to simplify the security protocol. A natural corrolary is if that there exists a security protocol that can eliminate or greatly reduce the costs of a TTP, then it pays greatly to implement it rather than one which assumes a costly TTP. Even if the latter security protocol is simpler and much more computationally efficient.A corollary of \"trusted third parties are security holes\" is \"all security protocols have security holes\", since no protocol is fully free of such assumptions. The key steps in estimating TTP costs and risk are to (1) examine one's assumptions thoroughly to uncover all TTP assumptions and characterize specifically what each TTP is and is not expected to do, (2) observe that each such specific hole and task has an associated cost and risk.There are several other important considerations, including:If for a new context like e-commerce we can find a security protocol which replaces a TTP organization (a complex set of traditions quite unproven in the new context) with mathematics (which at least in itself is quite clear and provable) it will often be a very big win to do so. More often we will replace a complex costly TTP with one or more much simpler TTPs plus mathematics. That too is a big win. We can only tell if and by how much it is a win by focusing on the trust assumptions and the resulting costs of the TTPs rather than focusing on the efficiency of the security protocol. The key is to focus on the cost of the TTPs and design the security protocol to minimize them, rather than assuming TTPs in order to simplify or optimize the efficiency of the security protocol.A good digital security protocol designer is not only an expert in computer science and cryptography, but also very knowledgeable about the traditional costly techniques of physical security, auditing, law, and the business relationships to be secured. This knowledge is not used to substitute these costly security methods for more cost effective digital security, but in order to minimize hidden dependence on costly methods for the real security. A good protocol designer also designs, rather than merely assumes, TTPs that work with minimal use of costly techniques.We saw above that the keys to minimizing TTPs are to identify them, characterize them, estimate their costs and risks, and then design protocols around TTPs of minimal cost and risk. When the risk is mitigated with techniques like those in this session, it can be very substantially reduced.Three areas of research and implementation show special promise in improving trust. Two of these involve the particularly thorny area of privacy, where breach of trust is often irreversible \u2013 once data gets out it can be impossible to put back.The first protocol family in which trust can be distributed to preserve privacy is the Chaum mixes. Mixes allow communications immune from third party tracing. Only any one out of N proxies in a proxy chain need be trustworthy for the privacy to be preserved. Unfortunately, all N of the proxies need to be reliable or the message will be lost and must be resent. The digital mix protocol's tradeoff is to increase messaging delays (resends) in order to minimizes the risk of irreversible privacy loss.Another protocol family in which trust can be distributed to preserve privacy is the multiparty private computations. Here a virtual computer is distributed across the N parties who provide specially encrypted input to each other rather than to a trusted third party. The distributed computer takes inputs from each of the N parties, computes an agreed to algorithm, then outputs the answer. Each party learns only the answer not the inputs of any other party. The threshold of parties that that must collude to violate privacy or threaten reliability can be traded off and have been studied in detail in the ample literature on this topic. Multiparty private computations can be used for confidential auditing, confidential preference gathering and data mining, auctions and exchanges with confidential bids, and so on.A protocol family that replicates data, and distributes operations on that data, while preserving the integrity of that data, are the Byzantine resilient replicated databases. Implementations of Byzantine resilient replicated databases include Fleet and Phalanx. Fleet implements replicated persistence of general purpose objects. Some open source implementations, which approach but do not achieve Byzantine resilience, general purpose, or complete decentralization include Mojo Nation and Freenet. Applications include secure name registries and property titles as well as securely published content in Mojo Nation and Freenet. The most advace work in this area involves Byzantine fault tolerant quorum systems and other recent advanced in distributed security.It is important to note that these threshold techniques are only meant to enhance the integrity of a single step or run of the protocol. Practical systems, such as Mojo Nation, combine a majority or super-majority within a particular run with failure detection and choice by clients of servers between runs. So we can add back all the reputation systems, auditing, and so on that add robustness in the long term to distributed systems. The majorities or super-majorities within an invocation create a very good short-term robustness that is missing from current systems like Freenet and Mojo Nation. (It's only party missing from Mojo, which has a 4-of-8 voting scheme but this has not been shown to be Byzantine resilient up to 4-of-8).Remote attestation has been proposed for verifying the state of software running on clients to protect intellectual property. A more valuable use for remote attestation is for verifying the behavior of servers. This is also called the transparent server approach. Through remote attestation, clients can verify that the specific desired code is running on a server. Combined with the ability to audit that code as open source, remote attestation of servers can greatly decrease the vulnerability of clients and users to the server. Given the importance of the trusted third party problem we have discussed here, this approach has vast potential to convert trusted third party protocols into secure protocols, and to make possible a wide variety of secure protocols that were heretofore impossible. For example, Hal Finney has implemented a version of bit gold called reusable proofs of work, based on a secure coprrocessor board that allows users to remotely attest the code running on the card. While one still needs to trust the manufacturer of the card, this manufacturer is separated from the installation of server code onto and the operation of the server on the card.Often the protocol designer can't figure out how to fix a vulnerability. If the attack one needs a TTP to protect against is not a serious real-world threat in the context of the application the designer is trying to secure, it is better to simply leave the small hole unplugged than to assign the task to a TTP. In the case of public key cryptography, for example, protocol designers haven't figured out how to prevent a \"man-in-the-middle\" (MITM) attack during the initial key exchange. SSL tried to prevent this by requiring CAs as trusted third parties, as described above, and this solution cost the web community billions of dollars in certificate fees and lost opportunities to secure communications. SSH, on the other hand, decided to simply leave this small hole unplugged. The MITM hole has, to the best of my knowledge, never even once been exploited to compromise the privacy of an SSH user, yet SSH is far more widely used to protect privacy than SSL, at a tiny fraction of the cost. This economical approach to security has been looked at at greater length by Ian Grigg.Alan Karp, Mark Miller, and others have observed the confusion over words like \"trust\" and \"trusted\" as used in the security community, and proposed replacing the verb \"trusts\" with \"is vulnerable to\". This substitution is a great way to radically clarify security protocol designs. \"Trusted third party\" as used in this essay becomes \"vulnerable to a third party\", and the point of this paper, that this is a security hole, becomes obvious.In the context of protocol designs, instead of saying the protocol designer trusts some little-known generic class of parties (referred to in the singular as \"a trusted third party\") with a given authorization (which probably really means the protocol designer just can't figure out how to plug a security hole), an honest protocol designer will admit that there is a vulnerability here \u2013 and that it is up to \"out of band\" mechanisms to plug or minimize, or up to users to knowledgeably ignore, that hole. The class of parties is little-known because security protocol designers typically don't know much about the traditional non-digital security, legal, and institutional solutions needed to make such a party trustworthy. The substitution of \"vulnerable to\" for \"trusted\" works well in protocol design, and in communicating honestly about the security of a protocol.Alas, are security designers and sellers of security systems who invoke \"trusted third parties\", \"trusted computing\", and the like really going to come out and admit that their protocols are \"vulnerable\"? Security designs sound so much more secure when they use the euphemism \"trust\".In the real world, beyond the technical context of security protocol design, \"trust\" has a variety of meanings. One different use of \"trust\" is well-informed trust, for example \"I trust this armor to protect me from normal bullets, because it's been very well tested\", \"I trust this site with this authorization because we're using a strong security protocol to protect me when I grant this authorization\", or \"I trust my wife with the kids\", in which cases translating \"trust\" to \"am vulnerable to\" would be to reverse its meaning. That \"trust\" can take on practically opposite meanings, depending upon the context, is another strong argument for avoiding use of the word when describing the vulnerabilities, or lack thereof, of security protocols. Whether a designer thinks he does or must trust some generic class of parties is one thing. Whether a particular user will actually trust a particular entity in that class when the protocol actually runs is quite another matter. Whether either the user's trust or the designer's trust is well informed is yet another matter still.Traditional security is costly and risky. Digital security when designed well diminishes dramatically in cost over time. When a protocol designer invokes or assumes a TTP, (s)he is creating the need for a novel organization to try to solve an unsolved security problem via traditional security and control methods. Especially in a digital context these methods require continuing high expenditures by the TTP and the TTP creates a bottleneck which imposes continuing high costs and risks on the end user.A far better methodology is to work starting from TTPs that either well known, or easy to characterize, and of minimal cost. The best \"TTP\" of all is one that does not exist, but the necessity for which has been eliminated by the protocol design, or which has been automated and distributed amongst the parties to a protocol. The latter strategy has given rise to the most promising areas of security protocol research including digital mixes, multiparty private computations, and Byzantine resiliant databases. These and similar implementations will be used to radically reduce the cost of current TTPs and to solve the many outstanding problems in privacy, integrity, property rights, and contract enforcement while minimizing the very high costs of creating and operating new TTP institutions.Links in the text.My thanks to Mark Miller who encouraged me to write down these thoughts and provided many good comments. My thanks also to Hal Finney, Marc Stiegler, David Wager, and Ian Grigg for their comments.Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 2001, 2004, 2005 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "Contracts with Bearer", "completion": "\"Digital bearer certificate\" is a broad term developed by this author[1] incorporating at least two emerging technologies: digital cash and distributed capabilities (secure distributed object references). I will first describe the Chaumian protocol and its innovative privacy feature. I will then discuss how these ideas map to the world of capabilities in the section on generic vs. specific rights. I have altered digital cash terminology from digital cash to bearer certificate or token, from mint to issuer or transfer agent, and so on to reflect the ability of Chaum's protocols to generalize. Chaumian bearer certificates implement standardized rights transferable regardless of the identity of the holder. Each kind of contract (for example, each denomination of \"coin\" in digital cash) corresponds to a digital signature, just as each issue of Federal Reserve Notes or stock certificates corresponds to a particular plate.In the most straightforward Chaumian protocol, the issuer and transfer agent (the same entity, for our purposes, though they can easily be unbundled) create a serial number (really a large unguessable random number, rather than a sequence), and append it to a list of issued certificates. The transfer agent clears a transfer (i.e., redeems the certificate) by checking the signature to identify the class of bearer contract and verify that it was made, then looking on that contract's issued list to make sure the serial number is there, then removing the serial number. Alternatively, the issuer can let the issuee make up the serial number, then, when cleared, check the signature and put the number on the list of cleared certificates. The signature provides the assurance that the certificate is indeed the the particular kind of contract with bearer, while the serial number assures that the same instance of that contract is not cleared or redeemed more than once. In these simple versions, the transfer agent can link the transferee to the transferor for all transfers. To implement the privacy characteristics of coins and physical bearer certificates, we need to add unlinkability features.Meet the greatest simple equation since e=mc2:S is a digital signature. f is the blinding function, and g an unblinding function. The blinding functions are usually based on a secret random number called the \"blinding factor\". m is another random number, a unique identifier which can, for example, refer to an instance of some object.The idea is very clever but very simple. It may be counterintuitive because the simplest physical world metaphor of this highly useful e-commerce primitive sounds worse than useless: Alice can get Carol to sign a blank check! Here's how:The genius behind this discovery: cryptography guru David Chaum. The brilliance lies in step 3: Chaum discovered that some signatures have the property of being \"commutative\" with the blinding functions: Alice can strip off the blinding in the reverse order which the blinding and signature were applied, leaving just Alice's signature of n. It is as if Alice put a piece of carbon paper inside the envelope!In particular for RSA signatures, with public key (pq, e) and private key d, the blind signature functions are the following modulo pq:We can check that the blind signature property holds: gSf(m) = (m(ke))d * k-1 = md * k * k-1 = md, which is the valid RSA signature of private key d on m.Distinguish between either a counter or third party tracing one person's true name, via lack of or weak communications mix, and a third party linking two entities (whether nyms, use-more-than-once-addresses, account numbers, or true names) as being involved in the same transaction. By unlinkability herein we mean the latter. The goal where true names are used (this occurs, for example, when using true name accounts or not using good communications mixes), is to prevent third party linking of two people doing business with each other. Where nyms are used the goal is to minimize the release of traffic information, to prevent the unwanted accumulation of unique behavior patterns, which could be used to link nyms (including to their true names), or could augment other means of breaching privacy. Blinding especially helps where rights holders want to keep third party or public accounts denominated in generic rights. In that case a communications mix doesn't even in principle give us what blinding does.Besides protecting against the transfer agent, Chaum's transferor-, transferee-, and double-blinding protocols protect against collusion of a party with a transfer agent to identify the countparty account or nym.Unlinkability can be provided by combining a list of cleared certificates with blind signatures and a delay-mixing effect. Enough instances of a standardized contract are issued over a period of time to create a mix. Between the issuing and clearing of a certificate, many other certificates with the same signature will be cleared, making it highly improbable that a particular clearing can be linked to a particular issue via the signature. There is a tradeoff between the mixing effect and the exposure to the theft of a \"plate\" for a particular issue: the smaller the issue, the smaller the exposure but the greater the linkability; a larger issue has both greater exposure and greater confidentiality.Blind signatures can be used to make certificate transfers unlinkable via serial number. Privacy from the transfer agent can take the form of transferee-unlinkability, transferor-unlinkability, or \"double blinded\" where both transferor and transferee are unlinkable by the transfer agent or a collusion of a transfer agent and counterparty.A use-once-address communications mix plus foreswearing any reputation gain from keeping accounts, in theory also buys us unlinkability, but a communications mix is weak and very expensive.Bearer certificates come in an \"online\" variety, cleared during every transfer, and thus both verifiable and observable, and an \"offline\" variety, which can be transferred without being cleared, but is only verifiable when finally cleared, by revealing any the clearing name of any intermediate holder who transferred the object multiple times (a breach of contract).This unlinkability is often called \"anonymity\", but the issue of whether accounts are issued to real names or pseudonyms, and whether transferor and transferee identify themselves to each other, is orthogonal to unlinkability by the transfer agent in the online model. In the off-line model, account identification (or at least a highly reputable and/or secured pseudonym) is required: passing an offline certificate a second time reveals this identity. Furthermore, communications channels can allow Eve to link transferor and transferee, unless they take the precaution of using an anonymous remailer. Online clearing does make lack of identification a reasonable option for many kinds of transactions, although common credit and warrantee situations often benefit from or even require identification.When confronting an attempted clearing of a cleared serial number, we face an error-or-fraud dilemma similar to the one we encountered above in double entry bookkeeping. The ecash\u2122 protocol from DigiCash actually takes advantage of on purpose to recover from a network failure. When certificates are lost over the net it is not clear to the transferor whether they have been received and cleared by the transferee or not. Second-transferring directly with the transfer agent resolves the ambiguity. This only works with the online protocol. The issue of distinguishing error from fraud is urgent in the offline protocol, but there is as yet no highly satisfactory solution. This problem is often intractable due to the subjectivity of intent.With ideal two-way anonymous communications between use-once keys, and completely accountless clearing, unlinkability via blind signatures becomes redundant. This ideal case has yet to be even closely approached with implemented technology, and necessarily involves long communications delays which are often intolerable. Real imperfect communications mixes and less expensive blinded tokens complement each other.Issuance and cleared transfer of references to a distributed object conserves the usage of that object. This object becomes \"scarce\" in economic terms, just as use of physical objects is finite. Conserved objects provide the basis for a software economics that more closely resembles economics of scarce physical objects. Conserved objects can be used to selectively exclude not only scarce physical resources (such as CPU time, network bandwidth and response time, etc.), but also fruits of intellectual labor \u2013 as long as one is willing to pay the price to interact with that information over the network rather than locally (cf. content rights management). Conservation immunizes objects and the resources they encapsulate to denial of service attacks. Bearer certificate protocols can be used to transfer references to a particular instance or set of instances of an object, just as they can be used to transfer other kinds of standardized rights.To implement a full transaction of payment for services, we often need need more than just the digital cash protocol; we need a protocol that guarantees that service will be rendered if payment is made, and vice versa. Current commercial systems use a wide variety of techniques to accomplish this, such as certified mail, face to face exchange, reliance on credit history and collection agencies to extend credit, etc. I discuss such issues in my article on smart contracts.To discuss the mapping between Chaumian certificates and distributed capabilities as implemented in for example E I introduce some different, partly overlapping terminology: generic vs. specific, exclusive vs. non-, Transfer Agent vs. Provider, token vs. Swiss number.Rights can be generic or specific. Generic rights correspond to a class of objects, specific rights to an instance. So a specific right is implemented with a Swiss number, a large random number. The signed numbers corresponding to generic rights I will call \"tokens\".Rights can also be exclusive or non-exlusive. Any object which must be conserved, or finally allocated to a specific user, is \"exclusive\".Simple example: the right to an exclusive lock on some 1 MB of memory is generic and exclusive. The right to an exclusive lock on the specific address space 100-101 is specific and exclusive. The right to two dozen particular stock quotes at 12:22 p.m. today is specific and non-exclusive.The main motivation for these distinctions are different mechanisms of unlinkable transfer of these rights, set out below.For simplicity generic rights are all \"use-once\": the life cycle of a token consists of issuance, followed by a series of transfers, followed by consumption. More sophisticated life cycles, such as alternating transfer and consumption, are likely possible with some extra protocol.With a perfect communications mix, including use-once return addresses, and no reputation building, we wouldn't need blinded tokens. However, communications mixes are expensive, and we want the option of having certain public records by which to build reputations, yet do certain rights transfers privately. For these reasons, we should allow clients to blind token transfers in addition to providing a communications mix.For inexpensive, unlinkable, and verifiable transfer of exclusive generic rights, using blinded tokens, there must be a signficant population of interchangable generic rights. Such rights bundled with nonexlusive specific rights can also be cheaply transferred since online clearing is not required for the latter. Unlinkable and verifiable transfer of exclusive specific rights seems to require online clearing via an expensive communications mix.Two kinds of TTPs: a Transfer Agent (TA) and a Provider. The TA operates like an accountless digital cash mint, clearing the transfer of tokens for generic rights. Digital cash is a special case: money is the most generic of rights.The Provider is responsible for actually holding the object, which can contain unique state. The Provider issues a Swiss number, or better a signed description of the specific right and its Swiss number. This signature allows offline verification of the nonexlusive right where the Provider is reputable. The TA issues a token for the corresponding generic rights.Chaum has also developed other means for dealing with unique state[2].I'm assuming the TA and Provider have known reputable signatures. The trust or reputation needed to ensure correctness of transfer between Provider, TA, and users is partly left for later analysis. The two main goals here are to assure that users can verify their rights (including exclusivity from transferors where promised) and retain full privacy from TAs and Providers. Some other trust assumptions are likely made here which need to be explicated and analyzed.To implement exclusive transfers, the TA keeps a list of cleared (cancelled) token numbers. The TA corresponds to a \"mint\" in the Chaumian online digital cash protocol (see above). A class of generic rights corresponds to a \"denomination\" of coin. The Provider may also keep a list of outstanding or used Swiss numbers, like an E Registrar.Here is another example of a generic right, or class of fungible objects: \"A queriable SQL database with up to 10 MB of storage, and certain standard response time guarantees\".The TA sees only classes of fungible objects. The Provider and users see particular instances with unique state, for example a database filled with unique information.The Provider acts analogously to a \"shop\". It is just another token client to the TA, which like other clients can transfer or receive tokens. Its special role is that it is responsible for issuance, where it tells the TA about a new instance, obtains a new token, and transfers it to the client to whom the new generic right is being issued. The TA generates and destroys token supply only at the behest of the Provider; otherwise all its transfers conserve the supply of a particular generic right. The Provider is also responsible for the delivery of service to the client bearing the promised right(s), at which time the Provider \"deposits\" the generic token(s), instructing the TA to decrement the token supply. In digital cash terminology, the Provider is the only entity which has to keep something like a bank account. Rights holders can also keep an account, if they wish to use it to help build reputation, or they can just use the TA for accountless conserved rights transfer.The Provider issues along with the initial generic rights token a signed affadavit, machine or human readable, describing aspects of the object which may be non-exlusive and unique, along with that instance's Swiss number and the public key(s) of the generic right(s) for which it is valid. For example, it might say \"a database containing quotes of these two dozen listed stocks as of 12:22 pm Monday\", without actually containing those quotes. Often such description is worth more when bundled with generic exclusive rights, such as the right to a fast response time. The specific rights can elaborate in unique ways upon the generic rights, as long as these elaborations are not taken to define exclusive rights. The generic rights let the TAs garuntee exclusivity to users and conservation of resources to Providers, while the specific rights describe the unique state to any desired degree of elaboration. The Provider must be prepared to service any specific promise it has issued, as long as it is accompanied by the proper conserved generic tokens.This method of composing specific and generic rights, transferred as a bundle but with exlusive generic atoms cleared by different TAs, allows arbitrarily sophisticated rights bundles, referring to objects with arbitrarily unique state, to be transferred unlinkably. A wide variety of derivatives and combinations are possible. The only restriction is that obtaining rights to specific exclusive resources must either be deferred to the consumption phase, or transferred with online clearing via expensive communications mix.If the Provider wished to guarantee exclusivity to a specific right, transfer seems to require an expensive communications mix between Provider and transferee, rather than a cheap blinded token. For example, \"Deep Space Station 60 from 0500-0900 Sunday\" or \"a lock on autoexec.bat now\" demands exclusivity to a specific right, and thus seems to require a communications mix to unlinkably transfer. On the other hand, \"A one hour block on DSS-60 in May\" and \"the right to lock autoexec.bat at some point\" are generic and can be transferred privately with the much less expensive blinding, given a sufficient population of other tokens for this class of generic right transfered between the issuance and consumption of a given token.Clients can deal with the TA without a communications mix. They deal with the Provider via a communications mix. If both the initial and final holders failed to do this, the Provider could link them. If just the final holder failed to do so, the Provider could identify him as the actual user of the resource. Thus for full privacy generic transfers are cheap, and nonexclusive transfers are cheap, while specific exsclusive transfers and actually using the object seem to require the expensive communications mix.My thanks to David Chaum, Mark Miller, Bill Frantz, Norm Hardy, and many others for taking the time to give me their valuable insights into these issues.The first public references to this idea can be found here, here. I also referred to this idea during this period in many personal communications, using the phrases \"digital bearer instrument\", \"digital bearer certificate\", \"scarce object\", and \"conserved object\". The idea of digital bearer certificates as a serious proposal for the financial industry has been popularized, with many intruiging additional ideas, by Bob Hettinga. \u21a9David Chaum, Online Cash Checks \u21a9\"Blind Signatures for Untraceable Payments,\" D. Chaum,\nAdvances in Cryptology Proceedings of Crypto 82,\nD. Chaum, R.L. Rivest, & A.T. Sherman (Eds.), Plenum, pp. 199-203.The E distributed object languagePlease send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 1997, 1999 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "The God Protocols", "completion": "Imagine the ideal protocol. It would have the most trustworthy third party imaginable \u2013 a diety who is on everybody's side. All the parties would send their inputs to God. God would reliably determine the results and return the outputs. God being the ultimate in confessional discretion, no party would learn anything more about the other parties' inputs than they could learn from their own inputs and the output.Alas, in the our temporal world we deal with humans rather than deities. Yet, too often we are forced to treat people in a nearly theological manner, because our infrastructure lacks the security needed to protect ourselves.Network security theorists have recently solved this problem to an astonishing extent. They have developed protocols which create virtual machines between two or more parties. Multiparty secure computation allows any number of parties to share a computation, each learning only what can be inferred from their own inputs and the output of the computation. These virtual machines have the exciting property that each party's input is strongly confidential from the other parties. The program and the output are shared by the parties.For example, we could run a spreadsheet across the Internet on this virtual computer. We would agree on a set of formulas and set up the virtual computer with these formulas. Each participant would have their own input cells, which remain blank on the other participants' computers. The participants share output cell(s). Each input our own private data into our input cells. Alice could only learn only as much about the other participants' input cells as she could infer from her own inputs and the output cells.There are three major limitations. The first is that this virtual computer is very slow: in some cases, one arithmetic calculation per network message. Currently it is at best practical only for small logic or arithmetic calculations used as an adjunct to or component of more efficient computations and protocols.The second is that there is a tradeoff between privacy, fairness, and fault tolerance. Fairness means everybody learning the results in such a way that nobody can gain an advantage by learning first. Fault tolerance can provide robustness against a minority, so that it takes a majority dropping out to halt the protocol, or it can be nonrobust but fail-stop, so that a single participant can terminate the protocol. Many papers have discussed the fraction of parties one must trust in order to be assured of learning the correct output. In traditional results, fairness and privacy could not both be achieved with a faulty majority. Recent papers[3][4][5][6] have produced fair and private protocols even with faulty majorities. They trade robustness for privacy and fairness against any proportion of faulty parties. The advantage of this fail-stop approach is that one can usually find new partners and start over again, but one does not want to suffer irreversible losses such as leaking information, being left holding the bag, or being convinced of an incorrect result.The third limitation is that, far from being omniscient or omnipotent, the protocol will accomplish only what is specified in the algorithm and the inputs. It won't be able to replace human trusted third parties where those parties provide insight or knowledge that cannot be provided by a computer.With these caveats, any algorithmic intermediary can, in principle, be replaced by a trustworthy virtual computer. In practice, because of the three complications, we usually construct more limited protocols out of more efficient elements.Multiparty computation theory, by making possible privy virtual intermediation, has major implications, in theory, for all kinds of contractual relationships. This can be seen most clearly in the area of negotiations. A \"mechanism\" in economics is an abstract model of an institution which communicates with its participants via messages, and whose rules can be specified algorithmically. These institutions can be auctions, exchanges, voting, and so on. They typically implement some kind of negotiation or decision making process.Economists assume a trusted intermediary operates the mechanism. Here's a simple example of using this virtual computer for a mechanism. Alice can submit a bid price, and Bob an ask price, then their shared virtual program which has one instruction, \"A greater than B?\". The computer then returns \"true\" if Alice's bid is greater than Bob's offer. A slightly more sophisticated computer may then decide the settlement price according to a number of different algorithms (Alice's bid, Bob's ask, split the difference, etc.) This implements the mechanism \"blind bargaining\" with no trusted intermediary.In principle, since any computable problem can be solved on this virtual computer (they are \"Turing complete\"), any computable economic mechanism can be implemented without a trusted intermediary. In practice, we face the three limitations discussed above. But the existence proof, that any economic mechanism can be run without a trusted intermediary, is very exciting. This means that, in principle, any contract which can be negotiated through a trusted third party (such as an auction or exchange) can be negotiated directly. So, in some abstract sense, the only remaining \"hard\" problems in smart contract negotiations are (a) problems considered hard even with a trusted intermediary (for the standard economic reasons), and (b) the task of algorithmically specifying the negotiating rules and output contract terms (This includes cases where an intermediary adds knowledge unavailable to the participants, such as a lawyer giving advice on how to draft a contract). In practice, many problems which can be solved in principle with multiparty computation will re-arise when we implement protocols in an efficient, practical manner. The God Protocols give us a target to shoot for.Applying this kind of analysis to the performance phase of contracts is less straightforward. For starters, economic theories of the performance phase are not as well developed or simple as the mechanism theory of negotiations. Indeed, most economic theory simply assumes that all contraccts can be perfectly and costlessly enforced. Some of the \"transaction cost\" literature has started to move beyond this assumption, but there are few compelling results or consensus theories in the area of techniques and costs of contract enforcement.Performance phase analysis with multiparty secure computer theory would seem to apply only to those contracts which can be performed inside the virtual computer. But the use of post-unforgeable auditing logs, combined with running auditing protocols inside the shared virtual computer, allows a wide variety of performances outside the virtual computer to at least be observed and verified by selected arbitrators, albeit not proactively self-enforced.The participants in this mutually confidential auditing protocol can verify that the books match the details of transactions stored in a previously committed transaction log, and that the numbers add up correctly. The participants can compute summary statistics on their confidentially shared transaction logs, including cross-checking of the logs against counterparties to a transaction, without revealing those logs. They only learn what can be inferred from the statistics, can't see the details of the transactions. Another intriguing possibility is that the virtual computer can keep state over long periods of time, allowing sophisticated forms of privy and self-enforcing secured credit.If mutually confidential auditing ever becomes practical, we will be able to gain high confidence in the factuality of counterparties' claims and reports without revealing identifying and other detailed information from the transactions underlying those reports. These would provide the basis for solid reputation systems, and other trusted third party systems, that maintain integrity across time, communications, summarization, and preserve confidentiality for transaction participants. Knowing that mutually confidential auditing can be accomplished in principle will hopefully lead us to practical solutions to these important problems.D. Chaum, C. Cr\u00e9peau, and I. Damgaard, Multiparty unconditionally secure protocols; In 19th Symp. on Theory of Computing, pages 11-19. ACM, 1988.\"The Spymasters Double Agent Problem: Multiparty Computations Secure Unconditionally from Minorities and Cryptographically from Majorities,\" D. Chaum, Advances in Cryptology CRYPTO'89, G. Brassard (Ed.), Springer-Verlag, pp. 591-601.C. Cr\u00e9peau, J. van de Graaf, and A. Tapp, Committed Oblivious Transfer and Private Multi-Party Computations; Advances in Cryptology: Proceedings of Crypto '95, Springer-Verlag, pages 110-123, 1995. \u21a9Complete Characterization of Adversaries Tolerable in Secure Multi-Party Computation, Martin Hirt and Ueli Maurer. Computer Science Department, ETH Z\u00fcrich. 1997. in Proceedings of PODC '97 \u21a9Matthias Fitzi, Martin Hirt, and Ueli Maurer: Trading correctness for privacy in unconditional multi-party computation. In Advances in Cryptology \u2014 CRYPTO '98, volume 1462 of Lecture Notes in Computer Science, 1998. \u21a9R. Cramer, I. Damgaard, S. Dziembowski, M. Hirt, T. Rabin, Efficient Multi-Party Computations with Dishonest Majority, Proceedings of Eurocrypt '99, Springer Verlag LNCS, to appear (May '99). \u21a9Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 1997-1999 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "Multinational Small Business", "completion": "Currently the vast majority of businesses on the planet are small, but the vast bulk of multinational business is conducted by large corporations.In the future the size distribution of multinationals will approach that of local business. The phase change between these states may be quite rapid as telecomm and transport costs pass through a \"melting point\", creating a wide variety of new multinational small businesses, and industries to support those businesses.Barriers to multinational small business includeBoth transport and telecomm costs have become unprecedentedly low, and with fiber optics telecomm costs will drop orders of magnitude further.Small business can cut through the Gordian knot of jurisdictions with the technologies of jurisdictional independence, including strong encryption for communications and databases, digital cash, firewalls, foiling of traffic analysis with proxy servers and digital mixes, and other system security measures. For use of these capabilities to become routine they must be made seamlessly available in the telecommunications equipment and software used by small business. In their commercial dealings, businesses will increasingly deal with industry specific dispute arbitrators rather than traditional legal jurisdictions, and auditing information from transactions will be shared only between the parties necessary to resolve the dispute. Businesses will learn to share the information needed to attract investment and sales, only to those investors and customers, without jeopardizing their legal status in any major market in the maze of obscure jurisdictions they operate in. The companies that first bring these capabilities to international small business at affordable prices stand to reap large fortunes. The new paradigm of smart contracts may provide the cornerstone for building these tools.Once jurisdictional indepdence is won, small business has nearly endless opportunities to arbitrage between the relative strengths and weaknesses of various localities in various aspects of their business, much like multinationals currently take advantage of relaxed regulatory burdens and low labor costs in Third World countries now. Government intervention probably costs the global economy over $3 trillion U.S. dollars annually; thus vast markets wait to be cracked open by short-circuiting the intervention of governments in both macro and micro markets.Language and culture may remain the largest barriers. Two methods of attack:The rise of virtual nations. Multinational small businesses might speak entirely English, Japanese, Mandarin, etc. Their employees might live primarily within a single cultural milieu, dispersed thru a large number of small ethnic communities around the world, keeping close culture-specific, multimedia communications links between the communities. The worldwide Anglo, Japanese, and Mandarin business networks will be taken up by other cultures, and physically dispersed in most cases.Language-translation software. Crude, specialized versions might soon be reliable, convenient, and inexpensive enough for many kinds of small business uses, such as translating technical manuals.English is becoming increasingly the de facto language for business and technology.One interesting question is what small changes might bring about the phase change faster. Something as simple as a user-friendly voice teleconferencing system, might be enough to tip the penguins into the water. Or it might be widespread Internet access with encrypted, route-mixed TCP/IP connections and virtual whiteboards.Another interesting question in any major new trend is what will be the bottleneck pieces. With the clonable PC, Intel's CPUs and Microsoft's DOS turned out to be the only proprietary elements, with assembly, disk drives, terminals, and the like highly competitive. Wealth will flow to the businesses that provide the bottleneck tools for the coming explosion in multinational small business.The flip side of multinational small business is setting up market processes internal to the large multinational corporation.Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 1997, 1999 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "Shelling Out: The Origins of Money", "completion": "The precursors of money, along with language, enabled early modern humans to solve problems of cooperation that other animals cannot \u2013 including problems of reciprocal altruism, kin altruism, and the mitigation of aggression. These precursors shared with non-fiat currencies very specific characteristics \u2013 they were not merely symbolic or decorative objects.From the very start, England's 17th century colonies in America had a problem \u2013 a shortage of coins[D94][T01] The British idea was to grow large amounts of tobacco, cut timber for the ships of their global navy and merchant marine, and so forth, sending in return the supplies they felt were needed to keep the Americans working. In effect, early colonists were supposed to both work for the company and shop at the company store. The investors and the Crown much preferred this to paying in coin what the farmers might ask, letting the farmers themselves buy the supplies \u2013 and, heaven forbid, keep some of the profit as well.The colonists' solution was at hand, but it took a few years for them to recognize it. The natives had money, but it was very different from the money Europeans were used to. American Indians had been using money for millenia, and quite useful money it turned out to be for the newly arrived Europeans \u2013 despite the prejudice among some that only metal with the faces of their political leaders stamped on it constituted real money. Worse, the New England natives used neither silver nor gold. Instead, they used the most appropriate money to be found in their environment \u2013 durable skeleton parts of their prey. Specifically, they used wampum, shells of the clam venus mercenaria and its relatives, strung onto pendants.Necklace of wampum. During trade the beads were counted, removed, and re-assembled on new necklaces. Native American shell beads were also sometimes woven into belts or other mnemonic and ceremonial devices that demonstrated the wealth and commitment of a tribe to a treaty.Clams were found only at the ocean, but wampum traded far inland. Sea-shell money of a variety of types could be found in tribes across the American continent. The Iriquois managed to collect the largest wampum treasure of any tribe, without venturing anywhere near the clam's habitat.[D94] Only a handful of tribes, such as the Narragansetts, specialized in manufacturing wampum, while hundreds of other tribes, many of them hunter-gatherers, used it. Wampum pendants came in a variety of lengths, with the number of beads proportional to the length. Pendants could be cut or joined to form a pendant of length equal to the price paid.Once they got over their hangup about what constitutes real money, the colonists went wild trading for and with wampum. Clams entered the American vernacular as another way to say \"money\". The Dutch governor of New Amsterdam (now New York) took out a large loan from an English-American bank \u2013 in wampum. After a while the British authorities were forced to go along. So between 1637 and 1661, wampum became legal tender in New England. Colonists now had a liquid medium of exchange, and trade in the colonies flourished.[D94]The beginning of the end of wampum came when the British started shipping more coin to the Americas, and Europeans started applying their mass-manufacturing techniques. By 1661, British authorities had thrown in the towel, and decided it would pay in coin of the realm \u2013 which being real gold and silver, and its minting audited and branded by the Crown, had even better monetary qualities than shells. In that year wampum ceased to be legal tender in New England. In 1710 briefly became legal tender in North Carolina. It continued to be used as a medium of exchange, in some cases into the 20th century \u2013 but its value had been inflated one hundred fold by Western harvesting and manufacturing techniques, and it gradually went the route that gold and silver jewelry had gone in the West after the invention of coinage \u2013 from well crafted money to decoration. The American language of shell money became a quaint holdover \u2013 \"a hundred clams\" became \"a hundred dollars\". \"Shelling out\" came to mean paying in coins or bills, and eventually by check or credit card.[D94] Little did we know that we had touched the very origins of our species.Native American money took many forms besides shells. Furs, teeth, and a variety of other objects with properties we will discuss below were also commonly used as media of exchange. 12,000 years ago, in what is now Washington state, the Clovis people developed some marvelously long chert blades. The only problem \u2013 they break far too easily. They were useless for cutting. The flints were being made \"for the sheer enjoyment\" \u2013 or for some other purpose that had nothing to do with cutting.[G01] As we shall see, this seeming frivolity was, quite likely, actually very important to their survival.Native Americans had not, however, been the first to make artful but useless blades, nor had they invented shell money. Nor, for that matter, had Europeans, even though they, too, in ages past had widely used shells and teeth for money \u2013 not to mention cattle, gold, silver, weapons, and much else. Asians had used all that and faux axes issued by governments to boot, but they as well imported this institution. For archaeologists have found pendants of shells dating to the early Paleolithic that could easily have substituted for Native American money.Beads made from shells of the pea-sized snail Nassarius kraussianus, that lived in a nearby estuary. Blombos Cave, South Africa, 75,000 B.P.[B04]In the late 1990s archaeologist Stanley Ambrose discovered, in a rock-shelter in the Rift Valley of Kenya, a cache of beads made of ostrich eggshell, blanks, and shell fragments. They are dated using the argon-argon (40Ar/39Ar) ratio to at least 40,000 years old[A98]. Pierced animal teeth have been found in Spain also dating to this time.[W95] Perforated shells have also been recovered from early Paleolithic sites in Lebanon[G95]. Recently regular shells, prepared as strung beads and dating further back still, to 75,000 BP, have been found in Blombos Cave in South Africa.[B04]Ostrich-eggshell beads, Kenya Rift Valley, 40,000 B.P. (Courtesy Stanley Ambrose)Our modern subspecies had migrated to Europe and necklaces of shell and tooth appear there, from 40,000 B.P. onward. Shell and tooth pendants appear in Australia from 30,000 B.P. onward[M93]. In all cases, the work is highly skilled, indicating a practice that probably dates much further back in time. The origin of collecting and decorating is quite likely Africa, the original homeland of the anatomically modern subspecies. Collecting and making necklaces must have had an important selection benefit, since it was costly \u2013 manufacture of these shells took a great deal of both skill and time during an era when humans lived constantly on the brink of starvation[C94].Practically all human cultures, even those that do not engage in substantial trade or that use more modern forms of money, make and enjoy jewelry, and value certain objects more for their artistic or heirloom qualities than for their utility. We humans collect necklaces of shells and other kinds of jewelry \u2013 for the sheer enjoyment of it. For the evolutionary psychologists an explanation that humans do something for \"the sheer enjoyment of it\" is not an explanation at all \u2013 but the posing of a problem. Why do so many people find the collection and wearing of jewelry enjoyable? For the evolutionary psychologist, this question becomes \u2013 what caused this pleasure to evolve?Detail of necklace from a burial at Sungir, Russia, 28,000 BP. Interlocking and interchangeable beads. Each mammoth ivory bead may have required one to two hours of labor to manufacture.[W97]Evolutionary psychology starts with a key mathematical discovery of John Maynard Smith[D89]. Using models of populations of co-evolving genes, from the well-developed area of population genetics, Smith posited genes that can code for strategies, good or bad, used in simple strategic problems (the \"games\" of game theory). Smith proved that these genes, competing to be propagated into future generations, will evolve strategies that are Nash equilibria to the strategic problems presented by the competition. These games include the prisoner's dilemma, a prototypical problem of cooperation, and hawk/dove, a prototypical problem of aggression and its mitigation.Critical to Smith's theory is that these strategic games, while played out between phenotypes proximately, are in fact games between genes at the ultimate level \u2013 the level of competition to be propagated. The genes \u2013 not necessarily the individuals \u2013 influence behavior as if they were boundedly rational (coding for strategies as optimal as possible, within the limits of what phenotypes can express given the biological raw materials and previous evolutionary history) and \"selfish\" (to use Richard Dawkins' metaphor). Genetic influences on behavior are adaptations to the social problems presented by genes competing through their phenotypes. Smith called these evolved Nash equilibria evolutionary stable strategies.The \"epicycles\" built on top of the earlier individual selection theory, such as sexual selection and kin selection, disappear into this more general model which, in a Copernican manner, puts the genes rather than individuals at the center of the theory. Thus Dawkins' metaphorical and often misunderstood phrase, \"selfish gene\", to describe Smith's theory.Few other species cooperate on the order of even Paleolithic humans. In some cases \u2013 brood care, the colonies of ants, termites, and bees, and so forth, animals cooperate because they are kin \u2013 because they can help copies of their \"selfish genes\" found in their kin. In some highly constrained cases, there is also ongoing cooperation between non-kin, which evolutionary psychologists call reciprocal altruism. As Dawkins describes it[D89], unless an exchange of favors is simultaneous (and sometimes even then), one party or the other can cheat. And they usually do. This is the typical result of a game theorists call the Prisoner's Dilemma \u2013 if both parties cooperated, both would be better off, but if one cheats, he gains at the expense of the sucker. In a population of cheaters and suckers, the cheaters always win. However, sometimes animals come to cooperate through repeated interactions and a strategy called Tit-for-Tat: start cooperating and keep cooperating until the other party cheats \u2013 then defect yourself. This threat of retaliation motivates continued cooperation.The situations where such cooperation in fact occurs in the animal world are highly constrained. The main constraint is that such cooperation is restricted to relationships where at least one of the participants is more or less forced to be in the proximity of the other. The most common case is when parasites, and hosts whose bodies they share, evolve into symbiotes. If the interests of the parasite and the host coincide, so that both working together would be more fit than either on their own, (i.e. the parasite is also providing some benefit to the host), then, if they can play a successful game of Tit-for-Tat, they will evolve into symbiosis \u2013 a state where their interests, and especially the exit mechanism of genes from one generation to the next, coincides. They become as a single organism. However, there is much more than cooperation going on here \u2013 there is also exploitation. They occur simultaneously. The situation is analogous to an institution humans would develop \u2013 tribute \u2013 which we will analyze below.Some very special instances occur that do not involve parasite and host sharing the same body and evolving into symbiotes. Rather, they involve non-kin animals and highly constrained territory. A prominent example Dawkins describes are cleaner fish. These fish swim in and out of the mouths of their hosts, eating the bacteria there, benefiting the host fish. The host fish could cheat \u2013 it could wait for the cleaner to finish its job, then eat it. But they don't. Since they are both mobile, they are both potentially free to leave the relationship. However, the cleaner fish have evolved a very strong sense of individual territoriality, and have stripes and dances that are difficult to spoof \u2013 much like a difficult to forge brand logo. So the host fish know where to go to get cleaned \u2013 and they know that if they cheat, they will have to start over again with a new distrustful cleaner fish. The entrance costs, and thus the exit costs, of the relationship are high, so that it works out without cheating. Besides, the cleaner fish are tiny, so the benefit of eating them is not large compared to the benefit of a small number of, or even one, cleaning.One of the most pertinent examples.is the vampire bat. As their name suggests, they suck the blood of prey mammals. The interesting thing is that, on a good night, they bring back a surplus; on a bad night, nothing. Their dark business is highly unpredictable. As a result, the lucky (or skilled) bats often share blood with the less lucky (or skilled) bats in their cave. They vomit up the blood and the grateful recipient eats it.The vast majority of these recipients are kin. Out of 110 such regurgitations witnessed by the strong-stomached biologist G.S. Wilkinson, 77 were cases of mothers feeding their children, and most of the other cases also involved genetic kin. There were, however, a small number that could not be explained by kin altruism. To demonstrate these were cases of reciprocal altruism, Wilkinson combined the populations of bats from two different groups. Bats, with very rare exception, only fed old friends from their original group.[D89] Such cooperation requires building a long-term relationship, where partners interact often, recognize each other, and keep track of each other's behavior. The bat cave helps constrain the bats into long-term relationships where such bonds can form.We will see that some humans, too, chose highly risky and discontinuous prey items, and shared the resulting surpluses with non-kin. Indeed, they accomplished this to a far greater extent than the vampire bat. How they did so is the main subject of our essay. Dawkins suggests, \"money is a formal token of delayed reciprocal altruism\", but then pursues this fascinating idea no further. We will.Among small human groups, public reputation can supercede retaliation by a single individual to motivate cooperation in delayed reciprocation. However, reputational beliefs can suffer from two major kinds of errors \u2013 errors of about which person did what, and errors in appraising the value or damages caused by that act.The need to remember faces and favors is a major cognitive hurdle, but one that most humans find relatively easy to overcome. Recognizing faces is easy, but remembering that a favor took place when such memory needs to be recalled can be harder. Remembering the specifics about a favor that gave it a certain value to the favored is harder still. Avoiding disputes and misunderstandings can be improbable or prohibitively difficult.The appraisal or value measurement problem is very broad. For humans it comes into play in any system of exchange \u2013 reciprocation of favors, barter, money, credit, employment, or purchase in a market. It is important in extortion, taxation, tribute, and the setting of judicial penalties. It is even important in reciprocal altruism in animals. Consider monkeys exchanging favors \u2013 say pieces of fruit for back scratches. Mutual grooming can remove ticks and fleas that an individual can't see or reach. But just how much grooming versus how many pieces of fruit constitutes a reciprocation that both sides will consider to be \"fair\", or in other words not a defection? Is twenty minutes of backscratching worth one piece of fruit or two? And how big a piece?Even the simple case of trading blood for blood is more complicated than it seems. Just how do the bats estimate the value of blood they have received? Do they estimate the value of a favor by weight, by bulk, by taste, by its ability to satiate hunger, or other variables? Just the same, measurement complications arise even in the simple monkey exchange of \"you scratch my back and I'll scratch yours\".For the vast majority of potential exchanges, the measurement problem is intractable for animals. Even more than the easier problem of remembering faces and matching them to favors, the ability of both parties to agree with sufficient accuracy on an estimate of the value of a favor in the first place is probably the main barrier to reciprocal altruism among animals.Just the stone tool-kit of even early Paleolithic man that has survived for us to find was in some ways too complicated for brains of our size. Keeping track of favors involving them \u2013 who manufactured what quality of tool for whom, and therefore who owed whom what, and so on \u2013 would have been too difficult outside the boundaries of the clan. Add onto that, quite likely, a large variety of organic objects, ephemeral services (such as grooming), and so on that have not survived. After even a small fraction of these goods had been transferred and services performed our brains, as inflated as they are, could not possibly keep track of who owed what to whom. Today we often write these things down \u2013 but Paleolithic man had no writing. If cooperation occurred between clans and even tribes, as the archaeological record indicates in fact occured, the problem gets far worse still, since hunter-gatherer tribes were usually highly antagonistic and mutually distrustful.If clams can be money, furs can be money, gold can be money, and so on \u2013 if money is not just coins or notes issued by a government under legal tender laws, but rather can be a wide variety of objects \u2013 then just what is money anyway? And why did humans, often living on the brink of starvation, spend so much time making and enjoying those necklaces when they could have been doing more hunting and gathering? Nineteenth century economist Carl Menger[M1892] first described how money evolves naturally and inevitably from a sufficient volume of commodity barter. In modern economic terms the story is similar to Menger's.Barter requires a coincidence of interests. Alice grows some pecans and wants some apples; Bob grows apples and want some pecans. They just happen to have their orchards near each other, and Alice just happens to trust Bob enough to wait between pecan harvest time and apple harvest time. Assuming all these conditions are met, barter works pretty well. But if Alice was growing oranges, even if Bob wanted oranges as well as pecans, they'd be out of luck \u2013 oranges and apples don 't both grow well in the same climate. If Alice and Bob didn't trust each other, and couldn't find a third party to be a middleman[L94] or enforce a contract, they'd also be out of luck.Further complications could arise. Alice and Bob can't fully articulate a promise to sell pecans or apples in the future, because, among other possibilities, Alice could keep the best pecans to herself (and Bob the best apples), giving the other the dregs. Comparing the qualities as well as the quantities of two different kinds of goods is all the more difficult when the state of one of the goods is only a memory. Furthermore, neither can anticipate events such as a bad harvest. These complications greatly add to the problem of Alice and Bob deciding whether separated reciprocal altruism has truly been reciprocal. These kinds of complications increase the greater the time interval and uncertainty between the original transaction and the reciprocation.A related problem is that, as engineers would say, barter \"doesn't scale\". Barter works well at small volumes but becomes increasingly costly at large volumes, until it becomes too costly to be worth the effort. If there are n goods and services to be traded, a barter market requires n^2 prices. Five products would require twenty-five prices, which is not too bad, but 500 products would require 250,000 prices, which is far beyond what is practical for one person to keep track of. With money, there are only n prices \u2013 500 products, 500 prices. Money for this purpose can work either as a medium of exchange or simply as a standard of value \u2013 as long as the number of money prices themselves do not grow too large to memorize or change too often. (The latter problem, along with an implicit insurance \"contract\", along with the lack of a competitive market may explain why prices were often set by long-evolved custom rather than proximate negotiation).Barter requires, in other words, coincidences of supply or skills, preferences, time, and low transaction costs. Its cost increases far faster than the growth in the number of goods traded. Barter certainly works much better than no trade at all, and has been widely practiced. But it is quite limited compared to trade with money.Primitive money existed long before large scale trade networks. Money had an even earlier and more important use. Money greatly improved the workings of even small barter networks by greatly reducing the need for credit. Simultaneous coincidence of preference was far rarer than coincidences across long spans of time. With money Alice could gather for Bob during the ripening of the blueberries this month, and Bob hunt for Alice during the migration of the mammoth herds six months later, without either having to keep track of who owed who, or trust the other's memory or honesty. A mother's much greater investment in child rearing could be secured by gifts of unforgeable valuables. Money converts the division of labor problem from a prisoner's dilemma into a simple swap.The proto-money used by many hunter-gatherer tribes looks very different from modern money, now serves a different role in our modern culture, and had a function probably limited to small trade networks and other local institutions discussed below. I will thus call such money collectibles instead of money proper. The terms used in the anthropological literature for such objects are usually either \"money\", defined more broadly than just government printed notes and coins but more narrowly than we will use \"collectible\" in this essay, or the vague \"valuable\", which sometimes refers to items that are not collectibles in the sense of this essay. Reasons for choosing the term collectible over other possible names for proto-money will become apparent. Collectibles had very specific attributes. They were not merely symbolic. While the concrete objects and attributes valued as collectible could vary between cultures, they were far from arbitrary. The primary and ultimate evolutionary function of collectibles was as a medium for storing and transferring wealth. Some kinds of collectibles, such as wampum, could be quite functional as money as we moderns know it, where the economic and social conditions encouraged trade. I will occasionally use the terms \"proto-money\" and \"primitive money\" interchangeably with \"collectible\" when discussing pre-coinage media of wealth transfer.People, clans or tribes trade voluntarily because both sides believe they gain something. Their beliefs about the value may change after the trade, for example as they gain experience with the good or service. Their beliefs at the time of the trade, although to some degree inaccurate as to the value, are still usually correct as to the existence of gain. Especially in early intertribal trade, restricted to high value items, there was strong incentive for each party to get their beliefs right. Thus trade almost always did benefit both parties. Trade created value as much as the physical act of making something.Because individuals, clans, and tribes all vary in their preferences, vary in their ability to satisfy these preferences, and vary in the beliefs they have about these skills and preferences and the objects that are consequent of them, there are always gains to be made from trade. Whether the costs of making these trades \u2013 transaction costs \u2013 are low enough to make the trades worthwhile is another matter. In our civilization, far more trades are possible than were through most of human history. Nevertheless, as we shall see some kinds of trades were worth more than the transaction costs, for some cultures, probably back to the beginning of homo sapiens sapiens.Voluntary spot trades are not the only kinds of transactions that benefit from lower transaction costs. This is the key to understanding the origin and evolution of money. Family heirlooms could be used as collateral to remove the credit risk from delayed exchanges. The ability of a victorious tribe to extract tribute from the vanquished was of great benefit to the victor . The victor's ability to collect tribute benefited from some of the same kinds of transaction cost techniques as did trade. So did the plaintiff in assessment of damages for offenses against custom or law, and kin groups arranging a marriage. Kin also benefited from timely and peaceful gifts of wealth by inheritance. The major human life events that modern cultures segregate from the world of trade benefited no less than trade, and sometimes more so, from techniques that lowered transaction costs. None of these techniques was more effective, important, or early than primitive money \u2013 collectibles.When H. sapiens sapiens displaced H. sapiens neanderthalensis, population explosions followed. Evidence from the takeover in Europe, c. 40,000 to 35,000 B.P, indicates that H. sapiens sapiens increased the carrying capacity of its environment by a factor of ten over H. sapiens neanderthalensis \u2013 i.e., the population density increased tenfold[C94]. Not only that, the newcomers had spare time to create the world's first art \u2013 such as the wonderful cave paintings, a wide variety of well crafted figurines \u2013 and of course the wonderful pendants and necklaces of seashells, teeth, and eggshell.These objects were not useless decorations. Newly effective wealth transfers, made possible by collectibles as well as other probable advance of the era, language, created new cultural institutions that quite likely played the leading role in the increase of carrying capacity.The newcomers, H. sapiens sapiens, had the same size brain, weaker bones, and smaller muscles than the Neanderthals. Their hunting tools were more sophisticated, but in 35,000 B.P. they were basically the same tools \u2013 they were probably not even twice as effective, much less ten times more effective. The biggest difference may have been wealth transfers made more effective or even possible by collectibles. H. sapiens sapiens took pleasure from collecting shells, making jewelry out of them, showing them off, and trading them. H. sapiens neanderthalensis did not. The same dynamic would have been at work, tens of thousands of years earlier, on the Serengeti, when H. sapiens sapiens first appeared in that dynamic maelstrom of human evolution, Africa.We shall describe how collectibles lowered transaction costs in each kind of wealth transfer \u2013 in the voluntary free gift of inheritance, in voluntary mutual trade or marriage, and in the involuntary transfers of legal judgments and tribute.All these kinds of value transfer occurred in many cultures of human prehistory, probably from the beginning of Homo sapiens sapiens. The gains to be made, by one or both parties, from these major life event transfers of wealth, were so great that they occurred despite high transaction costs. Compared to modern money, primitive money had a very low velocity \u2013 it might be transferred only a handful of times in an average individual's lifetime. Nevertheless, a durable collectible, what today we would call an heirloom, could persist for many generations and added substantial value at each transfer \u2013 often making the transfer even possible at all. Tribes therefore often spent large amounts of time on the seemingly frivolous tasks of manufacturing and exploring for the raw materials of jewelry and other collectibles.The Kula trading network of pre-colonial Melanesia. The kula valuables doubled as \"high power\" money and mnemonic for stories and gossip. Many of the goods traded, mostly agricultural products, were available in different seasons, and so could not be traded in kind. Kula collectibles solved this double-coincidence problem as an unforgeabaly costly, wearable (for security), and circulated (literally!) money. Necklaces circulated clockwise, and armshells counter-clockwise, in a very regular pattern. By solving the double-coincidence problem an armshell or necklace would prove more valuable than its cost after only a few trades, but could circulate for decades. Gossip and stories that about prior owners of the collectibles further provided information about upstream credit and liquidity. In other Neolithic cultures collectibles, usually shells, circulated in a less regular pattern but had similar purposes and attributes.[L94]Kula armshell (mwali).Kula necklaces (bagi).For any institution in which wealth transfer is an important component, we will ask the following questions:What coincidence in time between the event, the supply for the transferred good, and demand for the transferred good was necessary? How unlikely or how high a barrier to the wealth transfer did the improbability of coincidence represent?Would the wealth transfers formed a closed loop of collectibles just based on that institution, or were other wealth transfer institutions necessary to complete circulation cycles? Taking the actual flow graph of monetary circulation seriously is critical to understanding the emergence of money. General circulation among a wide variety of trades did not and would not exist for most of human prehistory. Without completed and repeated loops collectibles would not circulate and would become worthless. A collectible, to be worth making, had to add value in enough transactions to amortize its cost.We shall first examine the kind of transfer most familiar and economically important to us today \u2013 trade.Bruce Winterhalder[W98] surveys models of how and why food is sometimes transferred between animals: tolerated theft, producing/scrounging/opportunism, risk-sensitive subsistence, by-product mutualism, delayed reciprocity, trade/exchange not in kind, and other selection models (including kin altruism). Here we focus on risk-sensitive subsistence, delayed reciprocity, and trade (exchange not in kind). We argue that substituting trade of food for collectibles for delayed reciprocity can increase food sharing. It does so by mitigating the risks of a variable food supply while avoiding the largely insurmountable problems of delayed reciprocity between bands. We will deal with kin altruism and theft (tolerated or not) in broader contexts below.Food is worth far more to starving people than to well fed ones. If the starving man can save his life by trading his most precious valuables, it may be worth to him months or even years of the labor it might take to replace that value. He will usually consider his life worth more than the sentimental value of the family heirlooms. Like fat itself, collectibles can provide insurance against food shortages. Starvation from local shortages could be staved off with at least two different kinds of trades \u2013 for the food itself, or for foraging or hunting rights.Nevertheless, the transaction costs were usually too high \u2013 bands were far more likely to fight than ever trust each other. The hungry band that couldn't find its own food usually starved. However, if the transaction costs could be lowered, by lowering the need for trust between bands, food that was worth a day's labor to one band might be worth several months' labor to the starving band.Local but extremely valuable trade was, this essay argues, made possible among many cultures by the advent of collectibles, by the time of the Upper Paleolithic. Collectibles substituted for otherwise necessary but non-existent trusting long term relationships. If there had existed a high degree of sustained interaction and trust between tribes, or individuals of different tribes, so that they gave each other unsecured credit, this would have stimulated time-lagged barter trade. However, such a high degree of trust then is highly implausible \u2013 for the reasons stated above regarding reciprocal altruism, confirmed by the empirical evidence that most hunter-gatherer tribal relations have been observed to be quite antagonistic. Hunter-gatherer bands usually broke up into small bands for most of the year and gathered into \"aggregates\", something like medieval European fairs, for a few weeks out of the year. Despite the lack of trust between bands, an important trade in staples, of the kind illustrated in the accompanying figure, almost surely occurred in European and probably elsewhere, such as with the big game hunters of America and Africa.The scenario illustrated by the accompanying figure is hypothetical, but it would be very surprising if it did not occur. While many Europeans even in the Paleolithic enjoyed wearing shell necklaces, many lived farther inland and made necklaces instead out of the teeth of their prey. Flints, axes, furs, and other collectibles were also quite likely used as media of exchange.Reindeer, bison, and other human prey migrated at different times of the year. Different tribes specialized in different prey, to the point where over 90%, and sometimes as much as 99%, of the remains from many sites during the Paleolithic in Europe come from a single species[C94]. This indicates at least seasonal specialization and perhaps full-time specialization by a tribe in a single species. To the extent they specialized, the members of a single tribe would have become experts at the behavior, migration habits, and other patterns surrounding their specific prey species, as well as the specialized tools and techniques for hunting them. Some tribes observed in recent times are known to have specialized. Some North American Indian tribes specialized respectively in hunting bison, antelope, and fishing for salmon. In northern Russia and parts of Finland, many tribes, including the Lapp even today, specialized in herding a single species of reindeer.Such specialization was probably far higher when more large prey (horse, auroch, giant elk, bison, giant sloth, mastodon, mammoth, zebra, elephant, hippopotamus, giraffe, musk oxen, etc.) roamed North America, Europe, and Africa in large herds during the Paleolithic. Large wild animals unafraid of humans no longer exist. During the Paleolithic they were either driven extinct or adapted to be afraid of humans and our projectiles. However, for most of the time span of H. sapiens sapiens these herds were abundant and easy pickings to specialist hunters. According to our theory of trade-based predation, specialization was quite likely far higher when large prey roamed North America, Europe, and Africa in large herds during the Paleolithic. Trade-based division of labor in hunting between tribes is consistent with (although not securely confirmed by) the archaeological evidence from the Paleolithic in Europe.These migrating bands, following their herds, frequently interacted, creating many opportunities for trade. American Indians preserved food by drying, making pemmican, and so on in ways that lasted for a few months but typically not a full year. Such food was commonly traded, along with skins, weapons, and collectibles. Often these trades occurred during annual trading expeditions[T01].Large herd animals migrated through a territory only two times a year, with a window most often of one or two months. Without any other source of protein besides their own prey species, these specialist tribes would have starved. The very high degree of specialization demonstrated in the archaeological record could only have occurred if there was trade.Thus, even if the time-offset barter of meat were the only kind of trade, this is quite sufficient to make the use of collectibles quite worthwhile. The necklaces, flints, and any other objects used as money circulate in a closed loop, back and forth, in roughly equal amounts so long as the value of meat traded remains roughly equal. Note that it is not enough, for the theory of collectibles put forth in this paper to be correct, that single beneficial trades were possible. We must identify closed loops of mutually beneficial trades. With closed loops the collectibles continue to circulate, amortizing their costs.As mentioned, we know from archaeological remains that many tribes specialized in a single large prey species. This specialization was at least seasonal; if there was extensive trade it could have been full-time. Becoming experts in the habits and migration patterns, and best methods of taking down, a tribe reaped enormous productive benefits. These benefits, however, would normally be unattainable, for specializing in a single species meant going without food most of the year. Division of labor between tribes paid off \u2013 and trade made it possible. The supply of food would nearly double from trade just between two complementary tribes. There were, however, rather than two prey species, often up to a dozen that migrated through most hunting territories in areas like the Serengeti and the European steppe. The amount of meat available to a species-specializing tribe would thus likely more than double with such trade among a handful of neighboring tribes. On top of this, the extra meat would be there when needed most \u2013 when the meat from a tribe's own species prey would already have been eaten, and without food the hunters would starve.Thus there were at least four gains, or sources of surplus, from a trade cycle as simple as two prey species and two non-simultaneous but offsetting trades. These gains are distinct but not necessarily independent:Making or saving collectibles to trade for food itself was not the only way to insure against bad times. Perhaps even more common, especially where large prey items were not available, was territoriality combined with trade in foraging rights. This can be observed even in some of the remnants of hunter-gatherer culture that exist today.The !Kung San of southern Africa, like all other modern remnants of hunter-gatherer cultures, live on marginal lands. They have no opportunity to be specialists but must take the meager remnants available. They may thus be rather uncharacteristic of many ancient hunter-gatherer cultures, and uncharacteristic of the original Homo sapien sapiens, which first seized the lushest lands and best game routes from Homo sapiens neanderthalensis and only much later drove the Neanderthals from marginal lands. Yet despite their severe ecological handicap, the !Kung use collectibles as items of trade.Like most hunter-gatherers, the !Kung spend most of the year in small, dispersed bands and a few weeks of the year in an aggregate with several other bands. Aggregation is like a fair with added features \u2013 trade is accomplished, alliances are cemented, partnerships strengthened, and marriages transacted. Preparation for aggregation is filled with the manufacture of tradeable items, partly utilitarian but mostly of a collectible nature. The exchange system, called by the !Kung hxaro, involves a substantial trade in beaded jewelry, including ostrich-shell pendants quite similar to those found in Africa 40,000 years ago.Pattern of hxaro exchanges and kinship relations among neighboring tribes of !Khung San hunter-gatherers.Necklaces used in the hxaro exchange.One of the main things the !Kung buy and sell with their collectibles are abstract rights to enter another band's territory and hunt or gather food there. Trade in these rights is especially brisk during local shortages which can be alleviated by foraging in a neighbor's territory[W77][W82] !Kung bands mark their territories with arrows; trespassing without having purchased the right to enter and forage is tantamount to a declaration of war. Like the inter-band food trade discussed above, the use of collectibles to purchase foraging rights constitutes an \"insurance policy against starvation\", to use the phrase of Stanley Ambrose[A98].Although anatomically modern humans surely had conscious thought, language, and some ability to plan, it would have required little conscious thought or language, and very little planning, to generate trades. It was not necessary that tribe members reasoned out the benefits of anything but a single trade. To create this institution it would have sufficed that people follow their instincts to make obtain collectibles with the characteristics outlined below. (as indicated by proxy observations that make approximate estimations for these characteristics). This is to various extents true of the other institutions we will study \u2013 they evolved, rather than being consciously designed. No one participating in the institution's rituals would have explained their function in terms of ultimate evolutionary function; rather they explained in terms of a wide variety of mythologies that served more as proximate motivators of behavior than as theories of ultimate purpose or origin.Direct evidence for trade in food has long since decayed. We may, in the future, find more direct evidence than is now available for this article, via comparison of hunting remains in one tribe with the consumption patterns in another tribe \u2013 the hardest part of this task likely being to identify the boundaries of different tribes or kin groups. According to our theory, such transfer of meat from one tribe to another was common in many parts of the world during the Paleolithic where large-scale and specialized big game hunting occurred.For now, we do have extensive indirect evidence of trade, via the movement of the collectibles themselves. Fortunately there is a good correlation between the durability desired for collectibles and the conditions under which an artifact has survived to be found by today's archaeologists. In the early Paleolithic, when all human movement was on foot, we have instances of perforated sea shells found up to 500 kilometers away from the nearest source[C94]. There was a similar long-distance movement of flint.Unfortunately, trade was severely restricted by high transaction costs in most times and places. The primary barrier was the antagonism between tribes. The predominant relationship between tribes was one of distrust on good days and outright violence on bad days. Only ties of marriage or kinship could bring tribes into a relationship with trust, albeit only occasionally and of limited scope. The poor ability to protect property, even collectibles worn on the person or buried in well-hidden caches, meant that collectibles had to amortize their costs in a few transactions.Trade was thus not the only kind of wealth transfer, and probably not the most important kind during the long human prehistory where high transaction costs prevented the development of the kinds of markets, firms, and other economic institutions we now take for granted[L94]. Underneath our great economic institutions are far more ancient institutions that also involved wealth transfer \u2013 in prehistoric times, the main kinds of wealth transfer. All of these institutions distinguished Homo sapiens sapiens from previous animals. We now turn to one of the most basic kinds of wealth transfer that we humans take for granted but other animals do not have \u2013 passing wealth onto the next generation.Coincidence in time and locale of supply and demand for trade was rare \u2013 so much so, that most kinds of trades and trade-based economic institutions we now take for granted could not exist. Even more unlikely was the triple coincidence of supply with demand with a major event for a kin group \u2013 the formation of a new family, death, crime, or victory or defeat in war. As we shall see, clans, and individuals greatly benefited from a timely transfer of wealth during these events. Such wealth transfer in turn was much less wasteful when it was the transfer of a store of wealth more durable and general than consumables or tools designed for other purposes. The demand for a durable and general store of wealth for use in these institutions was thus even more urgent than for trade itself. Furthermore, the institutions of marriage, inheritance, dispute resolution, and tribute may predate intertribal trade, and involved for most tribes a greater transfer of wealth than trade. These institutions thus more than trade served as the motivator and incubator of the earliest primitive money.In most hunter-gatherer tribes this wealth came in a form that strikes us preposterously wealthy moderns as trivial \u2013 a collection of wooden utensils, flint and bone tools and weapons, shells on strings, perhaps a hut and in colder climates some mangy furs. Sometimes it could all be carried on the person. Nevertheless, these motley assortments were wealth for a hunter-gatherer no less than real estate, stocks, and bonds are wealth for us. To the hunter-gatherer tools and sometimes warm clothes were necessary for survival. Many of the items were highly valued collectibles that insured against starvation, purchased mates, and could substitute for massacre or starvation in event of war and defeat. The ability to transfer the capital of survival to one's descendants was another advantage Homo sapiens sapiens had over previous animals. Furthermore, the skilled tribesman or clan could accumulate a surplus of wealth from the occasional, but cumulative over a lifetime, trade of surplus consumables for durable wealth, especially collectibles. A temporary fitness advantage could be translated into a more durable fitness advantage for one's descendants.Another form of wealth, hidden from the archaeologist, were titles to offices. Such social positions were more valuable than the tangible forms of wealth in many hunter-gatherer cultures. Examples of such positions included clan leaders, war party leaders, hunting party leaders, membership in a particular long-term trading partnership (with a particular person in a neighboring clan or tribe), midwives, and religious healers. Often collectibles not only embodied wealth, but also served as a mnemonic, representing the title to a clan position of responsibility and privilege. Upon death, to maintain order, the heirs to such positions had to be quickly and clearly determined. Delays could spawn vicious conflicts. Thus, a common event was the mortuary feast, in which the deceased was feted while both his tangible and intangible forms of wealth were distributed to descendants, as determined by custom, clan decision-makers, or the will of the deceased.Other kinds of free gifts were quite rare in pre-modern cultures, as Marcel Mauss[M50] and other anthropologists have pointed out. Seemingly free gifts in fact implicitly invoked an obligation in the recipient. Before contract law, this implicit obligation of the \"gift\", along with community dishonor and punishments ensuing if the implicit obligation was not met, was perhaps the most common motivator of reciprocation in delayed exchange, and is still common in the variety of informal favors we do for each other. Inheritance and other forms of kin altruism were the only widely practiced forms of what we moderns would call gift proper, namely a gift that imposed no obligation on the recipient.Early Western traders and missionaries, who often saw natives as childish primitives, sometimes called their tribute payments \"gifts\" and trades \"gift exchanges\", as if they bore more resemblance to the Christmas and birthday present exchanges of Western children than to the contractual and tax obligations of adults. Partly this may have reflected prejudice, and partly the fact that in the West by that time obligations were usually formalized in writing which the natives lacked. Westerners thus usually translated the rich variety of words natives had for their exchange institutions, rights, and obligations as \"gift\". Seventeenth century French settlers in America were thinly scattered among much larger populations of Indian tribes, and often found themselves paying tribute to these tribes. Calling these payments \"gifts\" was a way for them to save face with other Europeans who faced no such necessity and found it cowardly.Mauss and modern anthropologists have unfortunately kept this terminology. The uncivilized human is still like a child, but now innocent like a child, a creature of moral superiority who would not stoop to our kind of base, cold-blooded economic transactions. However in the West, especially in the official terminology used for our laws covering transactions, a \"gift\" refers to a transfer that imposes no obligation. When coming across anthropological discussions of \"gift exchange\" these caveats should be kept in mind \u2013 modern anthropologists are not at all referring to the free or informal gifts we commonly refer to in our modern use on the term \"gift\". They are rather referring to any of a wide variety of often quite sophisticated systems of rights and obligations involved in wealth transfers. The only major transactions in prehistoric cultures similar to our modern gift, in that it was neither itself a widely recognized obligation nor imposed any obligation on the recipient, were parents or maternal kin caring for their children and inheritance. (An exception was that inheriting title to a position imposed the responsibilities of the position on the heir as well as its privileges).Inheritance of some heirlooms might proceed for several generations uninterrupted, but it did not by itself form a closed loop of collectibles transfers. Heirlooms were only valuable if they eventually got used for something else. They often were used in marriage transactions between clans that could form closed loop cycles of collectibles.An early and important example of a small closed loop trade network made possible by collectibles involves the much higher investment humans make in raising offspring than our primate relatives, and the related human institution of marriage. Combining arrangements of long-term matches for mating and child-raising, negotiated between clans, with wealth transfer, marriage is a human universal and probably dates back to the first Homo sapiens sapiens.Parental investment is a long-term and almost one-shot affair \u2013 there is no time for repeated interactions. Divorce from a negligent father or unfaithful wife usually represented several years of time wasted, in genetic fitness terms, by the jilted party. Fidelity and commitment to the children were primarily enforced by in-laws \u2013 the clan. The marriage was the contract between clans that usually included such promises of fidelity and commitment as well as wealth transfer.The contributions a man and a woman will bring to a marriage are seldom equal. This was even more true in an era when mate choice was largely determined by clans and the population from which clan leaders could choose was quite small. Most commonly, the woman was considered more valuable and the groom's clan paid a bride price to the brides clan. Quite rare in comparison was dowry, a payment by the bride's clan to the new couple. Mostly this was practiced by upper classes of monogamous but highly unequal societies in medieval Europe and India, and was ultimately motivated by the far greater reproductive potential of upper class sons than upper class daughters in those societies. Since literature was mostly written about upper classes, dowry often plays a role in European traditional stories. This does not reflect its actual frequency across human cultures \u2013 it was quite rare.Marriages between clans could form a closed cycle of collectibles. Indeed, two clans exchanging partners would be sufficient to maintain a closed loop, as long as brides tended to alternate. If one clan was wealthier in collectibles from some other kind of transfer, it could marry more of its sons to better brides (in monogamous societies) or a greater number of brides (in polygamous societies). In a loop involving only marriages, primitive money would simply serve to replace the need for memory and trust between clans over a long period of delay between unbalanced transfers of reproductive resources.Like inheritance, lawsuit, and tribute, marriage requires a triple coincidence of the event, in this case the marriage, with supply and demand. Without a transferable and durable store of value, the current ability of a groom's clan to supply the current desires of the bride's clan, to a large enough degree to make up the value mismatch between bride and groom, while also satisfying the political and romantic constraints of the match, were quite unlikely to be well satisfied. One solution is imposing an ongoing service obligation from the groom or his clan to the bride's clan. This occurs in about 15% of known cultures[DW88]. In a much larger number, 67%, the groom or groom's clan pays the brides clan a substantial amount of wealth. Some of this bride price is paid in immediate consumables, in plants to be gathered harvested and animals slaughtered for the marriage feast. In herding or agricultural societies much of the bride price is paid in livestock, a long lasting form of wealth. The balance, and usually the most valuable portion of the bride-price in cultures without livestock, is paid with what are usually the most valuable family heirlooms \u2013 the rarest, costliest, and most durable pendants, rings, and so on. The Western practice of the groom giving the bride a ring \u2013 and a suitor giving a maiden other kinds of jewelry \u2013 was once a substantial transfer of wealth and was common in many other cultures. In about 23% of cultures, mostly modern ones, there is no substantial wealth exchange. In about 6% of cultures there is mutual exchange of substantial wealth between bride and groom clans. In only about 2% of cultures does the bride's clan pay the new couple a dowry.[DW88]Unfortunately, some wealth transfers were a far cry from the altruism of the inheritance gift or the joy of marriage. Quite the opposite, in the case of tribute.Death rates from violence in chimp troops and hunter-gatherer human cultures alike are far higher than in modern civilizations. This probably dates at least as far back as our common ancestor with the chimpanzees \u2013 chimp troops, as well, are constantly fighting.Warfare involved, among other things, killing, maiming, torture, kidnapping, rape, and the extortion of tribute in exchange for avoiding such fates. When two neighboring tribes were not at war, one was usually paying tribute to the other. Tribute could also serve to bind alliances, achieving economies of scale in warfare. Mostly, it was a form of exploitation more lucrative to the victor than further violence against the defeated.Victory in war was sometimes followed by an immediate payment from the losers to the winners. Often this just took the form of looting by the enthusiastic victors, while the losers desperately hid their collectibles. More often, tribute was demanded on a regular basis. In this case, the triple coincidence could and sometimes was avoided by a sophisticated schedule of payments in kind that matched the losing tribe's ability to supply a good or service with the victor's demand for it. However, even with this solution primitive money could provide a better way \u2013 a common medium of value that greatly simplified the terms of payment \u2013 very important in an era when terms of the treaty could not be recorded but had to be memorized. In some cases, as with the wampum as used in the Iriquois Confederacy, the collectibles doubled as a primitive mnemonic device that, while not verbatim, could be used as an aid to recall the terms of the treaty. For the winners, collectibles provided a way to collect tribute at closer to the Laffer optimum. For the losers, collectibles buried in caches provided a way to \"under-report\", leading the victors to believe the losers were less wealthy and thus demand less than they might. Caches of collectibles also provided insurance against overzealous tribute collectors. Much of the wealth in primitive societies escaped the notice of the missionaries and anthropologists due to its highly secretive nature. Only archeology can reveal the existence of this hidden wealth.Hiding and other strategies presented a problem that tribute collectors share with modern tax collectors \u2013 how to estimate the amount of wealth they can extract. Value measurement is a thorny problem in many kinds of transactions, but never more so than in the antagonistic collection of tax or tribute. In making these very difficult and nonintuitive trade-offs, and then executing them in a series of queries, audits, and collection actions, tribute collectors efficiently optimized their revenue, even if the results seemed quite wasteful to the tribute payer.Imagine a tribe collecting tribute from several neighbor tribes it previously defeated in war. It must estimate how much it can extract from each tribe. Bad estimates leave the wealth of some tribes understated, while forcing others to pay tribute based on estimates of wealth they don't actually have. The result: the tribes that are hurt tend to shrink. The tribes that benefit pay less tribute than could be extracted. In both cases, less revenue is generated for the victors than they might be able to get with better rules. This is an application of the Laffer curve to the fortunes of specific tribes. On this curve, applied to income taxes by the brilliant economist Arthur Laffer, as the tax rate increases, the amount of revenue increases, but at an increasingly slower rate than the tax rate, due to increased avoidance, evasion, and most of all disincentive to engage in the taxed activity. At a certain rate due to these reasons tax revenues are optimized. Hiking the tax rate beyond the Laffer optimum results in lower rather than higher revenues for the government. Ironically, the Laffer curve was used by advocates for lower taxes, even though it is a theory of tax collection optimum to government revenue, not a theory of tax collection optimal to social welfare or individual preference satisfaction.On a larger scale, the Laffer curve may be the most important economic law of political history. Charles Adams[A90] uses it to explain the rise and fall of empires. The most successful governments have been implicitly guided by their own incentives \u2013 both their short-term desire for revenue and their long-term success against other governments \u2013 to optimize their revenues according to the Laffer Curve. Governments that overburdened their taxpayers, such as the Soviet Union and later Roman Empire, ended up on the dust-heap of history, while governments that collected below the optimum were often conquered by their better-funded neighbors. Democratic governments may maintain high tax revenues over historical time by more peaceful means than conquering underfunded states. They are the first states in history with tax revenues so high relative to external threats that they have the luxury of spending most of the money in non-military areas. Their tax regimes have operated closer to the Laffer optimum than those of most previous kinds of governments. (Alternatively, this luxury may be made possible by the efficiency of nuclear weapons in deterring attack rather than the increased incentives of democracies to optimize to tax collection). When we apply the Laffer curve to examining the relative impact of treaty tributterms on various tribes, we conclude that the desire to optimize revenues causes victors to want to accurately measure the income and wealth of the vanquished. Measuring value is crucial to determining the tributaries' incentives to avoid or evade the tribute by hiding wealth, fight, or flight. For their part, tributaries can and do spoof these measurements in various ways, for example by burying collectibles in caches. Tribute collection involves a measurement game with unaligned incentives.With collectibles, one can demand tribute at strategically optimal times instead of when items can be supplied by the tributary or is in demand by the victor. The victors can then choose when they will in the future consume the wealth, rather than having to consume it at the time the tribute is extracted. Much later, well into the dawn of history, in 700 BC, though trade was widespread, money still took the form of collectibles \u2013 made out of more precious metals, but in their basic characteristics, such as lack of uniform value, similar to most of the proto-money used since the dawn of Homo sapiens sapiens. This was changed by a Greek-speaking culture in Anatolia (modern Turkey), the Lydians. Specifically, the kings of Lydia were the first major issuers of coins in the archaeological and historical record.From that day to this, government mints with self-granted monopolies, rather than private mints, have been the main issuers of coin. Why wasn't minting dominated by private interests, such as private bankers, which did exist at the time in these semi-market economies? The main explanation for government dominance of coin minting has been that only governments could enforce anti-counterfeiting measures. However, they could have enforced such measures in protection of competing private mints, just as they enforce trademarks today and at that time as well.It was far easier to estimate the value of a coin than that of a collectible \u2013 especially at low transaction values. Far more trades could be made with money instead of barter; indeed many kinds of low-value trades became possible for the first time as the small gains from trade for the first time exceeded transaction costs. Collectibles were low velocity money, involved in a small number of high value transactions. Coins were high velocity money, facilitating a large number of low value trades.Given what we have seen about the benefits of proto-money to tribute and tax collectors, as well as the critical nature of the value measurement problem in optimally coercing such payments, it is not surprising that tax collectors, specifically the kings of Lydia, were the first major issuers of coinage. The king, deriving his revenue from tax collection, had a strong incentive to measure to value of wealth held and exchanged by his subjects more accurately. That the exchange also benefited from cheaper measurement by traders of the medium of exchange, creating something closer to efficient markets, and allowing individuals to enter into the marketplace on a larger scale for the first time, was for the king a fortuitous side effect. The greater wealth flowing through markets, now available to be taxed, boosted the king's revenues even beyond the normal Laffer curve effect of reducing mis-measurement between given tax sources.This combination of more efficient tax collection with more efficient markets meant a vast increase in overall tax revenues. These tax collectors almost literally hit a gold mine, and the wealth of Lydian kings Midas, Croesus, and Giges is famous to this day.A few centuries later, the Greek king Alexander the Great conquered Egypt, Persia and much of India, funding his spectacular conquest by plundering Egyptian and Persian temples, filled with assemblages of low-velocity collectibles, and melting them down into high-velocity coins. More efficient and encompassing market economies as well as more efficient tax collection sprung up in his wake.Tribute payments did not form by themselves a closed loop of collectibles. These were only valuable if they ultimately could be used by the victors for something else, such as marriage, trade, or collateral. However, victors could coerce the vanquished into manufacturing for obtaining collectibles, even if it did not serve the vanquished's voluntary interests.Ancient hunter-gatherers did not have our modern tort or criminal law, but they did have an analogous means of settling disputes, often judged by clan or tribal leaders or vote, that covered what modern law calls crimes and torts. Settling disputes through punishments or payments sanction by the clans of the disputing parties substituted for cycles of revenge or vendetta wars. Most pre-modern cultures, ranging from the Iriquois in America to the pre-Christian Germanic peoples, decided that payment was better than punishment. Prices (e.g. the Germanic \"weregeld\" and Iriquois blood money) were assigned to all actionable offenses, ranging from petty theft to rape to murder. Where money was available, the payment took the form of money. Livestock was used in herding cultures. Otherwise, payment of collectibles were the most commonly used remedy.The payment of remedies for damages in a lawsuit or similar complaint led to the same kind of problem of triple coincidence of event, supply, and demand as occurred in inheritance, marriage, and tribute. The judgment of the case had to coincide with the ability of the plaintiff to pay the damages as well as the opportunity and desire of the defendant to benefit from them. If the remedy was a consumable the plaintiff already had plenty of, the remedy still served as a punishment but would not likely satisfy the defendant \u2013 and thus would not curb the cycle of violence. Thus, we here again the value added by collectibles \u2013 in this case, in making possible the remedy to resolve a dispute or terminate a cycle of revenge.Dispute remedies would not form a closed loop if the payments served to entirely eliminate vendettas. However, if the payments did not completely dampen the vendetta, the payments could form a cycle following the cycle of revenge. For this reason, it is possible that the institution reached an equilibrium when it had reduced but not eliminated cycles of revenge until the advent of more densely connected trading networks.Since humans evolved in small, largely self-sufficient, and mutually antagonistic tribes, the use of collectibles to reduce the need for favor-tracking, and to make possible the other human institutions of wealth transfer we have explored, was far more important than the scale problems of barter for most of the timespan of our species. Indeed, collectibles provided a fundamental improvement to the workings of reciprocal altruism, allowing humans to cooperate in ways unavailable to other species. For them, reciprocal altruism is severely limited by unreliable memory. Some other species have large brains, build their own homes, or make and use tools. No other species has produced such an improvement to the workings of reciprocal altruism. The evidence indicates this new development had matured by 40,000 B.P.Menger called this first money an \"intermediate commodity\" \u2013 what this paper calls collectibles. An artifact useful for other things, such as cutting, could also be used as a collectible. However, once institutions involving wealth transfer became valuable, collectibles would be manufactured just for their collectible properties. What are these properties? For a particular commodity to be chosen as a valuable collectible, it would have had, relative to products less valuable as collectibles, at least the following desirable qualities:Humans the world over are strongly motivated to collect items that better satisfy these properties. Some of this motivation probably includes genetically evolved instincts. Such objects are collected for the sheer pleasure of collecting them (not for any particularly good explicit and proximate reasons), and such pleasure is nearly universal across human cultures. One of the immediate proximate motivations is decoration. According to Dr. Mary C. Stiner, an archaeologist at the University of Arizona, \"Ornamentation is universal among all modern human foragers.\"[W02] For an evolutionary psychologist, such a behavior that has a good ultimate explanation, in terms of natural selection, but has no proximate rationale other than pleasure, is a prime candidate to be a genetically evolved pleasure that motivates the behavior. Such is, if the reasoning in this essay is correct, the human instinct to collect rare items, art, and especially jewelry.Point (2) requires some further explanation. At first, the production of a commodity simply because it is costly seems quite wasteful. However, the unforgeably costly commodity repeatedly adds value by enabling beneficial wealth transfers. More of the cost is recouped every time a transaction is made possible or made less expensive. The cost, initially a complete waste, is amortized over many transactions. The monetary value of precious metals is based on this principle. It also applies to collectibles, which are more prized the rarer they are and the less forgeable this rarity is. It also applies where provably skilled or unique human labor is added to the product, as with art.We have never discovered or made a product that does really well on all three scores. Art and collectibles (in the sense that word is used in modern culture, rather in the technical sense it is used in this paper) optimize (2), but not (1) or (3). Common beads satisfy (1) but not (2) or (3). Jewelry, made at first out of the most beautiful and less common shells but eventually in many cultures out of precious metals, comes closer to satisfying all three properties. It is no coincidence that precious metal jewelry usually came in thin forms such as chains and rings, allowing for inexpensive assaying at randomly chosen locations. Coins were a further improvement \u2013 substituting small standard weights and trademarks for assays greatly reduced the costs of small transactions using precious metals. Money proper was just a further step in the evolution of collectibles.The kind of mobile art also made by Paleolithic man, (small figurines and the like) also matches these characteristics well. Indeed, Paleolithic man made very few objects that were not either utilitarian, or shared characteristics (1)-(3).There are many puzzling instances of useless or at least unused flints with homo sapiens. We have mentioned the unusable flints of the Clovis people. Culiffe[C94] discusses a European Mesolithic era find of hundreds of flints, carefully crafted, but which micrograph analysis reveals were never used for cutting.Flints were quite likely the first collectibles, preceding special-purpose collectibles like jewelry. Indeed, the first flint collectibles would have been made for their cutting utility. Their added value as a medium of wealth transfer was a fortuitous side effect that enabled the institutions described in this article to blossom. These institutions, in turn, would have motivated the manufacture of special-purpose collectibles, at first flints that need have no actual use as cutting tools, then the wide variety of other kinds of collectibles that were developed by Homo sapiens sapiens.Shell money from Sumer, c. 3,000 B.C.During the Neolithic era, in many parts of the Middle East and Europe, some kinds of jewelry became more standardized \u2013 to the point where standard sizes and assayability were often valued over beauty. In commercial areas the quantity of this jewelry sometimes greatly exceeded that of traditional jewelry in hoards. This is an intermediate step between jewelry and coins, when some collectibles increasingly took a fungible form. Around 700 B.C., the Lydian kings started issuing coins, as described above. The unforgeable costliness of standard weights of precious metals could now be \"assayed\" in a marketplace, by wage earners, or by tax collectors via trademark, i.e. trust in the mint's brand, instead of chopping coiled wire at a randomly selected spot.It is no coincidence that the attributes of collectibles are shared with precious metals, coins, and the reserve commodities that have backed most non-fiat currencies. Money proper implemented these properties a purer form than the collectibles used during almost all of human prehistory.Silver ring and coil money from Sumer, c. 2,500 B.C. Note the standard size of cross-sections. Many of the pieces had a standard weight, ranging from one-twelfth of a shekel to sixty shekels. To assay a ring or coil, it could be weighed and cut at random locations. (Courtesy Oriental Institute, University of Chicago)A novelty of the 20th century was the issue of fiat currencies by governments. (\"Fiat\" means not backed by any reserve commodity, as the gold- and silver-based currencies of previous centuries were). While generally excellent as a media of exchange, fiat currencies have proven to be very poor stores of value. Inflation has destroyed many a \"nest egg\". It is no coincidence that markets in rare objects and unique artwork \u2013 usually sharing the attributes of collectibles described above \u2013 have enjoyed a renaissance during the last century. One of our most advanced high-tech marketplaces, EBay, is centered around these objects of primordial economic qualities. The collectibles market is larger than ever, even if the fraction of our wealth invested in them is smaller than when they were crucial to evolutionary success. Collectibles both satisfy our instinctive urges and remain useful in their ancient role as a secure store of value.Many kinds of wealth transfers \u2013 one-way and mutual, voluntary and coerced \u2013 face transaction costs. In voluntary trades both parties gain; a truly free gift is usually an act of kin altruism. These transactions create value for one or both parties as much as the physical act of making something. Tribute benefits the victor and a judgment of damages can prevent further violence as well as benefiting the victim. Inheritance made humans the first animals to pass wealth to their next generation kin. These heirlooms could in turn be used as collateral or payment in trade for goods, for food to stave off starvation, or to pay a marriage bride price. Whether the costs of making these transfers \u2013 transaction costs \u2013 are low enough to make the transfers worthwhile is another matter. Collectibles were crucial in making these kinds of transactions possible for the first time.Collectibles augmented our large brains and language as solutions to the Prisoner's Dilemma that keeps almost all animals from cooperating via delayed reciprocation with nonkin. Reputational beliefs can suffer from two major kinds of errors \u2013 errors of about which person did what, and errors in appraising the value or damages caused by that act. Within clans (the small and immediately local kin group, or extended family, which formed a subset of a tribe), our large brains could minimize these errors, so that public reputation and coercive sanctions superseded the limited motivation provided by the counterparty's ability to cooperate or defect in the future as the main enforcer of delayed reciprocation. In both Homo sapiens neanderthalensis and Homo sapiens sapiens, with the same large brain size, it is quite likely that every local clan member kept track of everybody other local clan member's favors. The use of collectibles for trade within the small local kin group may have been minimal. Between clans within a tribe both favor tracking and collectibles were used. Between tribes, collectibles entirely replaced reputation as the enforcer of reciprocation, although violence still played a major role in enforcing rights as well as being a high transaction cost that prevented most kinds of trade.When costliness becomes forgeable \u2013 Glass trade beads, manufactured in Venice in the 16th or 17th century, excavated from Mali, Africa. Such beads were very popular wherever European colonialists encountered Neolithic or hunter-gatherer cultures.To be useful as a general-purpose store of wealth and means of wealth transfer, a collectible had to be embedded in at least one institution with a closed-loop cycle, so that the cost of discovering and/or manufacturing the object was amortized over multiple transactions. Furthermore, a collectible was not just any kind of beautiful decorative object. It had to have certain functional properties, such as the security of being wearable on the person, compactness for hiding or burial, and unforgeable costliness. That costliness must have been verifiable by the recipient of the transfer \u2013 using many of the same skills that collectors use to appraise collectibles today.The theories presented in this paper can be tested by looking for these characteristics (or the lack of them) in the \"valuables\" often exchanged in these cultures, by examining the economic gains from the cycles through which these valuables move, and by observing preferences for objects with these characteristics in a wide variety of cultures (including modern ones).With its unprecedented technology of cooperation, humans had become the most fearsome predator ever seen on the planet. They adapted to a shifting climate, while dozens of their large herd prey were driven, by hunting and climate change in America, Europe, and Asia, to extinction. Today, most large animals on the planet are afraid of projectiles \u2013 an adaption to only one species of predator [R97]. Cultures based more on gathering than hunting also greatly benefitted. A population explosion followed \u2013 Homo sapiens sapiens was able to populate more parts of the planet and at a density over ten times that of Homo sapiens neanderthalensis [C94], despite weaker bones and no increase in brain size. Much of this increase may be attributed to the social institutions made possible by effective wealth transfer and language \u2013 trade, marriage, inheritance, tribute, collateral, and the ability to assess damages to dampen cycles of vengeance.Primitive money was not modern money as we know it. It took on some of the function modern money now performs, but its form was that of heirlooms, jewelry, and other collectibles. The use of these is so ancient that the desires to explore, collect, make, display, appraise, carefully store, and trade collectibles are human universals \u2013 to some extent instincts. This constellation of human desires might be called the collecting instinct. Searching for the raw materials, such as shells and teeth, and manufacturing of collectibles took up a considerable portion of many ancient humans' time, just as many modern humans expend substantial resources on these activities as hobbies. The results for our ancient forebears were the first secure forms of embodied value very different from concrete utility \u2013 and the forerunner of today's money.[A90] Adams, Charles, For Good and Evil: The Impact of Taxes on Civilization \u21a9[A98] Tim Appenzeller, \"Art: Evolution or Revolution?\", Science 282(Nov 20, 1998), p. 1452. See also the home page of Stanley Ambrose \u21a9 \u21a9[B04] The Blombos Cave Project \u21a9 \u21a9[C94] Culiffe, Barry, ed., The Oxford Illustrated History of Prehistoric Europe, Oxford University Press 1994. \u21a9 \u21a9 \u21a9 \u21a9 \u21a9[D89] Dawkins, Richard, The Selfish Gene, Oxford University Press 1989. \u21a9 \u21a9 \u21a9[D94] Davies, Glyn, A History of Money, From Ancient Times to the Present Day, University of Wales Press 1994. \u21a9 \u21a9 \u21a9 \u21a9[DW88] Daly, Martin and Wilson, Margo, Homicide, New York: Aldine (1998). \u21a9 \u21a9[G95] Gilead, I. 1995. \"The Foragers of the Upper Paleolithic Period,\" in Archaeology and Society in the Holy Land. Ed. by T. E. Levy. New York, Facts on File. \u21a9[G01] [ref: http://www-geology.ucdavis.edu/~GEL115/115CH1.html] \u21a9[Gr01] Graeber, David, Towards an Anthropological Theory of Value, Palgrave 2001.[I98] Ifrah, Georges, The Universal History of Numbers, John Wiley & Sons 1998, pg. 73.[K99] Kohn, M. and Mithen, S. \"Handaxes: Products of sexual selection?\", Antiquity, 73, 518-526.[K99] Kohn, M. and Mithen, S. \"Handaxes: Products of sexual selection?\", Antiquity, 73, 518-526.[L94] Landa, Janet, Trust, Ethnicity, and Identity: Beyond the New Institutional Economics of Ethnic Trading Networks, Contract Law, and Gift-Exchange, The University of Michigan Press, second edition, 1998. \u21a9 \u21a9 \u21a9[M1892] Menger, Carl, \"On the Origins of Money\" Economic Journal, volume 2,(1892) p. 239-55. translated by C.A. Foley, at http://www.socsci.mcmaster.ca/~econ/ugcm/3ll3/menger/money.txt \u21a9[M50] Mauss, Marcel, The Gift, 1950, English translation by W.D. Halls, W.W. Norton 1990. \u21a9[M93] (Morse 1993) via http://www.wac.uct.ac.za/wac4/symposia/papers/s095wht1.pdf \u21a9[R96] Riddley, Matt, The Origins of Virtue, Viking 1996.[T01] Taylor, Alan, American Colonies \u2013 The Settling of North America, Penguin 2001. \u21a9 \u21a9[P89] Plattner, Stuart, Economic Anthropology, Stanford University Press 1989.[W77] Wiessner, P. 1977. Hxaro: a regional system at reciprocity for reducing risk among the !Kung San. Unpublished PhD thesis: University of Michigan. \u21a9[W82] Wiessner, P. 1982. Risk, reciprocity and social influences on !Kung San economies. In: Leacock, H. R. & Lee, R.B. (eds) Politics and history in band societies: 61-84. London: Cambridge University Press.[W95] White, Randall, \"Ivory Personal Ornaments of Aurignacian Age: Technological, Social and Symbolic Perspectives\", Institute For Ice Age Studies, http://www.insticeagestudies.com/library/Ivory/Ivorypersonal.html \u21a9[W97] White, Randall, \"From Materials To Meaning\", Institute For Ice Age Studies, http://www.insticeagestudies.com/library/materialstomeaning/index.html \u21a9[W98] Winterhalder, Bruce, \"Intra-Group Resource Transfers: Comparative Evidence, Models, and Implications for Human Evolution\", http://www.unc.edu/depts/ecology/winterweb/intra_group.html \u21a9[W02] Wilford, John, \"Debate is Fueled on When Humans Became Human\", New York Times, February 26th, 2002  \u21a9My thanks to Jerome Barkow, Andrew Odlyzko, Bruce Smith, K. Eric Drexler, Markus Krummenacker, Mark Wiley, Norm Hardy, and others for their insightful comments.Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 2002, 2005 by Nick Szabo\nPermission to redistribute without alteration hereby grantedEditor's note: Some links may be broken."}
{"prompt": "The Ricardian Contract", "completion": "Describing digital value for payment systems is not a trivial task. Simplistic methods of using numbers or country codes to describe currencies, and ticker tape symbols to issue bonds, shares, and other financial instruments soon run into shortcomings in their ability to handle dynamic and divergent demands. The seemingly arbitrary variations in the meanings of different instruments are best captured as contracts between issuers and holders. Thus, the digital issuance of instruments can be viewed as the issuance of contracts.This paper proposes that the contract is the issue. A document form is described that encompasses the inherent contractual nature of the financial instrument yet copes with the requirements of being an integral part of a payment system.Little work has been done on classification and description of value in the field of financial cryptography. This paper presents the Ricardian Contract, a method to identify and describe issues of financial instruments as contracts[1]. It was originally developed by Ian Grigg and Gary Howland as part of the Ricardo payment system.The original application was a bond trading system[2]. For trading, a basic component is a transfer or payment system which receives and acts on transfer instructions to move instruments (cash, bonds) from one account to another. Each instruction therefore must identify the instrument.A means was required to capture, identify, and describe the traded instruments. There are thousands of bonds, and potentially millions of other instruments that could be issued and traded, and each has unique characteristics that are not amenable to compression into databases. To such a system, cash is no different to bonds, and requires the same description.When someone issues a currency (or bond or share) over the Internet, what is it? What does the recipient have?Few systems for issuance of value (payment systems) treat these questions adequately. They generally refer to existing external units of currency and tidy up loose edges in a user agreement. For example, Paypal, an issuer of dollars, relies on the familiarity of the US dollar to define much of its service offering. Gold issuers lean more heavily on their user agreements as the metal unit is not so familiar.For trading, it is not sufficient to refer to well-known familiar references, as each instrument is different in finicky ways and these differences matter to traders. Even with currencies, however, the user has difficulty in determining the security and safety of one dollar with respect to another.Classification by numbers or symbols is a starting point. Almost all systems of digital issuance identify their basic issue by allocating numbers or letters as currencies (for example, 840, \"USD\", \"AUG\" [3]). These systems runs into trouble quickly.An issuer with many currencies or many issuers with the same nominal currency raises difficult questions. Can an issuer have two or more dollar units? For example, within ISO3166-1, there are three different US dollars: 840/USD (cash), 998/USS (same day), and 997/USN (next day). Similarly, how does one Digital Gold Currency (\"DGC\") differentiate his gold over that of another issuer, when all are known as \"AUG\"?As bonds are, at their essence, contracts between issuers and users, our problem reduces to one of issuing contracts. Whereas other issues have contracts, our issues are contracts.Our innovation is to express an issued instrument as a contract, and to link that contract into every aspect of the payment system. By this process, a document of some broad utility (readable by user and program) is drafted and digitally signed by the issuer of the instrument. This document, the Ricardian Contract, forms the basis for understanding an issue and every transaction within that issue.By extension, all issues of value, such as currencies, shares, derivatives, loyalty systems and vouchers, can benefit from this approach.This paper is structured as follows. In Section 2, we discuss conventional approaches to identifying and describing issuance, and explore questions and doubts surrounding these approaches. Then, in Section 3, a design to express issuance as a contract is presented. Finally, in Section 4, concluding remarks are added.Consider the case of the pioneering digital cash scheme, eCash, as originally fielded by DigiCash BV. The first valuable currency, issued by Mark Twain Bank of the USA, was identified with the number 4. Lore has it that the early system allocated a small sequential number to each currency. Test systems had already acquired 0,1,2,3 and thus 4 was the next. DigiCash's marketing assumptions then changed to assume one issue per country. In time, this scheme was adjusted to issue currencies numbered after international dialling codes (e.g., 49 for Germany, 61 for Australia). The shortfalls of this scheme became apparent, so a new design was created [4]. One 32 bit number to describe the issue was used, on the pragmatic assumption that this would be large enough to cover foreseeable eventualities.Yet the strains of one issuer, one currency were obvious almost immediately. A more advanced scheme could use a tuple of (issuer, currency) to describe a system whereby each issuer is empowered in some sense to issue multiple competing currencies[5]. It is easy to generalise this system by adding additional elements to the tuple: (issuer, type, identifier) tuple[6]. For example, a zero coupon bond issued by the Joint Universal and Nationwide Keiretsu that pays out in January of 2100 might have a tuple of (JUNK, zero, Jan_2100).Numbers as a space for identifying digital instruments are limiting, and having tuples as an extension is not really an answer.Firstly, what do they describe? In the case of electronic cash systems, they can describe currencies and issuers. Is it one or both, and how do we generalise to other aspects? Secondly, what surety do we have that what is described is accurate? Whilst a lot can be achieved by simply relying on the reputation of the issuer, financial insiders know that the real value is expressed in the detail and the reliability of the claim. Thirdly, how are the numbers derived? Is a central registry required, or can any issuer of digital value acquire a number as per local requirements? Finally, is there a limit to the space? Integer numbers as expressed in packets are generally limited to some quantity of bits, such as 32. For practical software engineering, there need to be limits, but do these limits need to limit the business possibilities?Any successful system will be used in ways that make it appear to be broken. As software engineers, we need to present our inventions with the humility of toolmakers for future generations of builders, not as bureaucrats planning the zoning of the digital commerce space.What happens when we have gone through the early adopters, dominated the moms and pops, and competition is fiercely turning onto our elderly retired set? Imagine mints in the pockets of billions of idle game-playing senior citizens. Or, imagine a world with an issuer of digital loyalty points on every parking meter, or where students must pay for tuition with shares of future earnings. Already we have seen popular musicians selling bonds backed by their music[7], and proposals for software bug fixes financed by securitized issues to anonymous users[8].Consider the zero coupon bond, an instrument that pays a face value of a currency on a given date. The zero is perhaps the simplest general financial instrument in common use, and it formed the benchmark for our design.To describe the face value, the currency of the face value, and the expiry date of this bond, we would add additional elements to the above tuple. But this is only a beginning. In his description of Eurobonds, Noel Clarke expects dozens or hundreds of fields[9]. If we examine just one of these characteristics, for example Event-Related Put Options, we find that a bond needs to describe what happens in the event of:These items bind tightly to the instrument in question, but they represent difficulties to the software architect. We can make a number of observations.Firstly, each event is not simple. Today, one may be able to shoehorn the notion of \"a hostile or friendly takeover\" into a single name-value pair, but this would not survive the evolving scene of regulation and litigation that applies to such events.Secondly, there is no reason to believe that the above list is complete.Thirdly, not only is it going to be hard to design a single field of any sort to cope with these, they are mostly going to be full of legal text.Consider a data layout point of view. To describe the document that forms the basis of a bond we will need a tree-structured database of tuples, as a minimum. More, that layout is only going to work for one instrument, or one extremely tight, nearly fungible set of instruments.Currencies, or cash, might be that tight set. After all, a dollar is a dollar is a dollar. Can we describe money with some simple set of tuples? Even for cash, we argue that a layout of tuples is not sufficient.Take the case of a digital dollar issued by a bank. The digital dollars would be derivatives, often backed by deposits in the same amount. This may be sufficient for marketing purposes but it would not survive a serious financial analysis.Compare such derivative dollars to those issued by the US Federal Reserve Board. The Fed has yet to deny acceptance of its notes if presented with same, if only as a claim on another bunch of the same instrument, or for taxation liabilities. Radical interpretations aside, the Fed has never filed for bankruptcy and remains a pretty solid bet.The same cannot be said of just any bank issuer of derivative dollars. Its digital dollars would be backed by deposits with ... the very same institution. Such a bank can close its doors at any time, and, given the history of the banking sector in the 20th Century, an analyst should take this risk seriously. Further, in the USA at least, the FDIC has already ruled that funds so held on a user's PC are considered to be uninsured deposits[10].This is not to suggest that any given bank is about to close doors, but to ask what happens when an issuer does indeed default on its promise?Any holder of any asset will carry a risk. A holder of electronic dollars will carry the risk that the issuer fails, and the holder of another issuer's dollars carries a similar, comparable, but distinct risk. Each of those risks result in a cost, which should be subtracted from the face value of the dollar to calculate a comparative value. In this risk distinction lies the inescapable fact that any given dollar is not of constant value, even when measured against some well-known dollar such as that issued by the Federal Reserve.If there is no such thing as a single dollar, what is left? Clearly, we must describe each and every dollar for what it is. This would seem to be a task of fine print and detail, and, indeed, every distinct issued currency is a distinct contract between the issuer and the holder.A contract can encapsulate the detail. Consider the original sovereign currency contracts, in which the issuer promised to pay the bearer in ounces of precious metal. That is four datum in the contract already: which sovereign, \"pay to bearer,\" what to pay, and how much of it.So it is with every bond, every currency, and any financial instrument of any complexity. In fact, within the digital domain, the question of how to treat a financial instrument reduces in great part to how to treat a contract.Or, an issue is a contract. Issues within other payment systems have contracts but only as adjunct documents such as user agreements. Often, their role and importance is subject to battles; marketing wants them hidden, while Legal asks for them to be thrust in the user's face at all times.Once we accept that the issue is a contract, the task becomes simple: create a contract that can be linked into the payment system as the centerpiece. That is the subject of the next section.Almost all aspects of Ricardian Contracts are best seen by examining examples, and this section only briefly covers the salient details, before discussing the ramifications. Examples can be found at webfunds.org/ricardo/contracts/ .A Ricardian Contract can be defined as a single document that is a) a contract offered by an issuer to holders, b) for a valuable right held by holders, and managed by the issuer, c) easily readable by people (like a contract on paper), d) readable by programs (parsable like a database), e) digitally signed, f) carries the keys and server information, and g) allied with a unique and secure identifier.In the simplest possible terms, a Ricardian Contract is a document defining a type of value for issuance over the Internet[11]. It identifies the Issuer, being the signatory, and any terms and clauses the Issuer sees fit to add in to make the document stand as a contract.The same document has to be both readable by people and parsable by programs. The Ricardian Contract is formatted as a text file that can be easily read (displayed or printed), and programs can convert it into internal forms for searching for name-value pairs. It includes a special section for each type of contract, such as bond, share, currency, etc. Further sections within describe, in program-parsable terms, usage of decimal points, titles, and symbols.As legal signatory, the Issuer signs the document in the OpenPGP cleartext form with his contract signing key[12]. He includes the full chain of OpenPGP keys within the document to permit programs to directly verify and authenticate.To uniquely identify the contract, any user can calculate a canonical message digest over the clearsigned document. This message digest is included in all records of transactions, and provides a secure (unforgeable) link from the document to the accounting of the issue.E.g., e3b445c2a6d82df81ef46b54d386da23ce8f3775 is the full message digest for Systemics Inc's issue of prepaid services dollars. Commonly called a hash, the message digest is a cryptographic technique to create a relatively small number that is one to one with the document. That is, for each document, there is only one hash, and the hash refers uniquely to that document. The algorithm is the well-known standard, SHA1.The following observations highlight how strong the result is.Hash Limits Frog-Boiling. A gradual change in contract by the stronger party over time is known as frog-boiling. The stronger party is generally the issuer, and can be expected to change the contract if there is a benefit. This is a frequent attack. One result of the use of the hash identifier is that neither party can change the contract arbitrarily or surreptitiously.To see this is true, we need to examine the records that refer to the hash. An application can sign all important records (e.g., payments, tokens, receipts, balances), and these signed records include the hash of a Ricardian Contract. The hash within the record cannot be changed without losing its ability to pass a test of signature validity. Likewise, the contract cannot be changed without losing its relationship to records already signed and delivered. In other words, every record, held by every user, incorporates an unalterable copy of that hash. Any change to the contract creates a new hash, and that new hash is not the one which the users have or value.This crystallises the contract for both parties, stopping the stronger party from modifying the contract subtly at some later stage. To some extent, this redresses the imbalance of power between provider and customer in the offering of a form contract. The lesser party has no option to negotiate, but neither has the greater party the option to claim a distinct contract at a later time. The limitation comes at some cost as it can be a nuisance for the support team of that financial instrument.The Ricardian PKI Delivers Clarity. Ricardian Contracts carry their own Public Key Infrastructure (\"PKI\") with them. The Issuer's top level public key is included in the contract, and it signs his contract-signing key, also included. The contract-signing key signs the contract itself.This achieves several things. Firstly, client software can check the entire digital signature chain in one automated sequence.Secondly, there is no need for a complex multi-party PKI. All the keys are present, and there is no need to go looking for them on the net. This eliminates substitution attacks, whereby a key that might pass some checks could be inserted in some key lookup phase. It also reduces costs dramatically.Thirdly, the canonical hash of the contract also represents a signature on the contract. It is recorded in all relevant records, and thus entangles the contract with those activities[13]. Once the contract has been in play for a while, it establishes its provenance through presence and reliance by the user public. This provides far more persuasive evidence than the issuer's signature itself; once the issuer and the public have spent time and money relying on the contract, via the hash, it is hard for the issuer to renege on the nature of the contract or his signature.The result is a PKI that delivers strong end-to-end reliability, based on a single document. This is simply not present in other designs for PKIs[14]. This reliability pays off in the dispute resolution phase, where, we suggest, the Ricardian Contract can stand alone on its merits and requires no complex descriptions of PKI, digital signatures, or references to uncertain third parties to bolster its provenance. By including the keys, we can draw a couple of simple lines within the contract, asserting \"this key signs that key, and that latter signs the contract. The first key is the top-level key of the individual that signed this contract. That's the whole story, mi'lud.\"Validating the Issuer's Key. All good crypto protocols divide into two parts, the first of which says to the second, \"trust this key completely.\"The top-level key of the Issuer ultimately authenticates the contract. The keys and other information in the contract also permit a protocol such as SOX to bootstrap a strongly secured connection to the server[15].How then to verify that this ultimate key is really the Issuer's? This is not difficult. The business process of digital issuance involves a great deal of relationship-building between Issuers and Users. Many different interactions involve chances to establish trust. For example, from his web site, the Issuer can publish the contract, keys and hashes, and have other sites mirror them. The value so issued will be distributed via payments that include the hash. An already trusted party usually delivers these payments. The payments validly identify the contract, and derive their own validity, via the hash.Contrast this to assumptions in the x.509 PKI behind SSL/HTTPS browsing (the following is highly debatable, but is presented for comparison only). In that PKI, it was originally claimed that a user would present her credit card to sites with which she had no prior relationship and no way for her to establish the provenance of the site's key. Thus, a trusted third party, the Certificate Authority, was put in place to confirm the key.Payments, trading and matters of finance are fundamentally relationship-rich. The nature of money and finance is that participants always conduct their own due diligence, they prefer to listen to peers they already trust, and do not readily accept the word of an independent party. Thus, there is no place for a central third party to stand in and authenticate players. Before the user desires to place any value on a given payment, she has almost certainly been made aware of the contract via other means.Presumption of Possession. The use of the hash as an identifier is a compromise as it is unintelligible to humans[16]. Yet this very compromise delivers an unexpected benefit: Use of the issue leads to a presumption that the user has the contract. To use an issue of value, such as a currency, the user must have the hash in the applicable records. That is, if the user receives a payment, that payment record will include the hash. As the hash is not descriptive, this implies that the user has the contract in order to interpret the issue.To see that this is true, imagine having a record with the hash but without having the contract. The first thing the user will need is a database of parameters telling her what the hash refers to. Unlike a payment in 10 of \"GBP\", a payment of 1000 in \"972097bb...\" is not intelligible.Yet how could software predict what the user needs to know about the hash? Very quickly it becomes apparent that the software is better off storing the source of the information \u2013 the full contract itself \u2013 as it removes an unlimited degree of complexity in storing intermediate or secondary information.Software can still function with only the hash. However, it would be entirely blind to the semantics of the instrument. Such a cavalier approach might be acceptable for communications and storage, but for user software, it is equivalent to a traumatic failure. To cope with this, the client-side software takes especial care to acquire and keep contracts. Hence, we can state the presumption with some degree of confidence: in a functioning system, the user has available the full Ricardian Contract (albeit under software control).This is only a small step for the client software, but is a giant leap forward for the relationship between the issuer and the holder. Specifically, having a strong presumption that the user has the full contract available will simplify many legal aspects about the issuer's responsibilities. (We suggest and thus acknowledge the legal ramifications of the term presumption, but neither space nor expertise permits more in this paper.)The Ricardian Contract delivers a rich source of primary, complete information. The full story is right there in textual form, in parsable parameters, and in the signature chain. Thus, within a dispute, a hostile legal attack has less room to manoeuvre, and can only confirm the facts as laid out in the contract.Our intent is that the contract is the beginning and the end of the discussion; we call this principle the rule of one contract. The legal fraternity refers to \"the contract being bounded by the four corners of the page.\" By showing how we have carefully laid out a readable document, with a verifiable digital signature, and an unforgeable identifier linking to every record, we can more readily ask the judiciary to accept that the single document which is being presented is indeed the valid contract agreed to by the parties.The contract is the keystone of issuance[17]. Our innovation is to express all the salient details of an issuance as an unforgeable contract, unforgeably linked into every action within a payment system. In this way, financial innovation can develop along the lines it always has done \u2013 by means of innovation within contracts. By translating the institution of the contract into the digital domain, we build upon centuries' and even millenia' worth of experience in documenting, sharing and disputing the meaning of agreements between parties.To capture complexity, we can put documents such as contracts into electronic form and sign them using digital signature technologies such as OpenPGP. The result is a reasonable analogue of the paper and ink contracts that most people and businesses are familiar with, bolstered with cryptographic integrity.With the hash as the identifier, software can now uniquely identify a given financial arrangement and can confirm a strong chain of signatures. The hash strongly implies the user has the contract available at all times, and it cannot be changed without being noticed.The Ricardian Contract delivers one huge benefit to the issuer \u2013 clarity in many legal and customer support questions. The user benefits from lower overall costs, and better presentation of information, within a more consistent framework.The form has been in successful use since 1996. Since that time, it has delivered about 20 financial instruments without failure.Disputes. The Ricardian Contract has appeared in two distinct forums of dispute resolution to resolve claims[18]. Anecdotally, each claim was resolved directly and efficiently, and without undue fuss, simply by referring to the applicable Ricardian Contract.Automation. Relatively little has needed to be automated. In practice, fields have been inserted and standardised so that programs can extract decimalisation (dollars versus cents), labels for units (USD versus $), and titles for the issuer and the issue. In contrast to expectations, there has been no demand to parse every field.Cost. The cost of the concept has compared favourably with that incurred with other payment systems. The preparation of the contract text carries some costs, but no more so than a user agreement. OpenPGP infrastructure requirements (keys and signing) add some minor costs to issuers but they are easily offset by the benefits of risk reduction from contract distribution. Custom signing editors have helped to reduce those costs[19].Layering. Layering of contracts is an impending need. Many businesses can take a standard and defined set of terms and draw on them directly. Other contracts result from earlier contracts and need to reference them.XML. Initial efforts suggested that XML would break the rule of one contract, but it seems that we will need something better than the archaic INI format[20]. One recent proposal, the XML Voucher, stops short of presenting itself as a contract[21].Law of Contract. The treatment of the Ricardian Contract as a contract may raise more legal questions than it answers. For example, is this form indeed a contract? How do distinct jurisidictions view the concept (common law, civil law, UCC, Koranic code)? Is this a negotiated or a form contract? When did the user accept the contract? How strong, or rebuttable, is the presumption that the user has the contract?Smart Contracts. By unifying all information in a program-readable file, there is the enhanced potential of smart contracts[22]. We have not gone further in this direction than methods to handle decimals. This is partly for lack of demand, and partly because it is not clear how a court would treat a computer program presented as a contract.Originally introduced in Ian Grigg, \"Financial Cryptography in 7 Layers,\" 4th Conference on Financial Cryptography, Anguilla, 2000, Springer-Verlag LNCS 1962. All papers are at http://iang.org/papers/ \u21a9Ian Grigg, \"Digital Trading,\" Virtual Finance Report, November 1997. \u21a9Country and Currency Codes, ISO3166-1. \u21a9Bryce Wilcox, open design review, DigiCash's developer list, <ecash-dev@digicash.com>, August 1997. \u21a9Ibid, Rachel Willmer, 14 August 1997. \u21a9Robert Hettinga, \"What's a Digital Bearer Bond?\" e$ rants, 19th November, 1995 \u21a9Alex Tajirian, \"David Bowie Bonds,\" \u21a9Ian Grigg and C. Petro, \"Using Electronic Markets Achieve Efficient Task Distribution,\" 1st Conference on Financial Cryptography, Anguilla, 1997, Springer-Verlag LNCS 1318. \u21a9Noel Clarke, Guide to Eurobonds, The Economist Intelligence Unit, 1993. \u21a9FDIC General Counsel's Opinion No. 8; Stored Value Cards, Federal Register, August 2, 1996. Also see the (readable) Press Release entitled FDIC will Continue to rely on General Counsel Opinion rather than issue rules on Stored-Value Cards, 24 June 97. \u21a9Ian Grigg, Guide to Ricardian Contracts, WebFunds project. \u21a9Jon Callas, et al, \"OpenPGP Message Format,\" Internet Draft, RFC2440bis (-10 draft). \u21a9Petros Maniatis, Mary Baker \"Secure History Preservation through Timeline Entanglement\", 11th USENIX Security Symposium, San Francisco, USA. August 2002. \u21a9Jane K. Winn, \"Couriers without Luggage\" 49 South Carolina Law Review 739 (1998) \u21a9Gary Howland, \"Development of an Open and Flexible Payment System\" 1996. \u21a9Bryce Wilcox, \"Names: Decentralized, Secure, Human-Meaningful: Choose Two\", 2003 \u21a9Metaphor by Martin (Hasan) Bramwell. See \"The Contract is the Keystone of Issuance,\" Financial Cryptography blog, 19th September 2003. \u21a9DigiGold v. Systemics, before the Supreme Court of Anguilla (2001), and thereafter referred to the American Arbitration Association (2002). \u21a9Edwin Woudt, ContractSignWizard, WebFunds project. \u21a9Erwin van der Koogh, \"Ricardian Contracts in XML,\" (presented at) Edinburgh Financial Cryptography Engineering (EFCE-2), 2001. \u21a9Ko Fujimura and Masayuki Terada, XML Voucher: Generic Voucher Language, Internet Draft. \u21a9Nick Szabo, \"The Idea of Smart Contracts,\" 1997. \u21a9Ian Grigg\nSystemics, Inc.\niang@iang.org"}
{"prompt": "Triple Entry Accounting", "completion": "The digitally signed receipt, an innovation from financial cryptography, presents a challenge to classical double entry bookkeeping. Rather than compete, the two melded together form a stronger system. Expanding the usage of accounting into the wider domain of digital cash gives 3 local entries for each of 3 roles, the result of which I call triple entry accounting.This system creates bullet proof accounting systems for aggressive uses and users. It not only lowers costs by delivering reliable and supported accounting, it makes much stronger governance possible in a way that positively impacts on the future needs of corporate and public accounting.This paper brings together financial cryptography innovations such as the Signed Receipt with the standard accountancy techniques of double entry bookkeeping.The first section presents a brief backgrounder to explain the importance of double entry bookkeeping. It is aimed at the technologist, and accountancy professionals may skip this. The second section presents how the Signed Receipt arises and why it challenges double entry bookkeeping.The third section integrates the two together and the Conclusion attempts to predict wider ramifications into Governance issues.This paper benefitted from comments by Graeme Burnett and Todd Boyle[1].Accounting or accountancy is these days thought to go back to the genesis of writing; the earliest discovered texts have been deciphered as simple lists of the counts of animal and food stock. The Sumerians of Mesopotamia, around 5000 years ago, used Cuneiform or wedge shaped markings as a base-60 number form, which we still remember as seconds and minutes, and squared, as the degrees in a circle. Mathematics and writing themselves may well have been derived from the need to add, subtract and indeed account for the basic assets and stocks of early society.Single entry bookkeeping is how 'everyone' would do accounting: start a list, and add in entries that describe each asset. A more advanced arrangement would be to create many lists. Each list or 'book' would represent a category, and each entry would record a date, an amount, and perhaps a comment. To move an asset around, one would cross it off from one list and enter it onto another list.Very simple, but it was a method that was fraught with the potential for errors. Worse, the errors could be either accidental, and difficult to track down and repair, or they could be fraudulent. As each entry or each list stood alone, there was nothing to stop a bad employee from simply adding more to the list; even when discovered there was nothing to say whether it was an honest mistake, or a fraud.Accounting based on single entry bookkeeping places an important limitation on the trust of the books. Likely, only the owner's family or in times long past, his slaves could be trusted with the enterprise's books, leading to a supportive influence on extended families or slavery as economic enterprises.Double Entry bookkeeping adds an additional important property to the accounting system; that of a clear strategy to identify errors and to remove them. Even better, it has a side effect of clearly firewalling errors as either accident or fraud.This property is enabled by means of three features, being the separation of all books into two groups or sides, called assets and liabilities, the redundancy of the duplicative double entries with each entry having a match on the other side, and the balance sheet equation, which says that the sum of all entries on the asset side must equal the sum of all entries on the liabilities side.A correct entry must refer to its counterparty, and its counterpart entry must exist on the other side. An entry in error might have been created for perhaps fraudulent reasons, but to be correct at the local level, it must refer to its counterparty book. If not, it can simply be eliminated as an incomplete entry. If it does refer, the existence of the other entry can be easily confirmed, or indeed recreated depending on the sense of it, and the loop is thus closed.Previously, in single entry books, the fraudster simply added his amount to a column of choice. In double entry books, that amount has to come from somewhere. If it comes from nowhere, it is eliminated above as an accidental error, and if it comes from somewhere in particular, that place is identified. In this way, fraud leaves a trail; and its purpose is revealed in the other book because the value taken from that book must also have come from somewhere.This then leads to an audit strategy. First, ensure that all entries are complete, in that they refer to their counterpart. Second, ensure that all movements of value make sense. This simple strategy created a record of transactions that permitted an accountancy of a business, without easily hiding frauds in the books themselves.Double Entry bookkeeping is one of the greatest discoveries of commerce, and its significance is difficult to overstate. Historians think it to have been invented around the 1300s AD, although there are suggestions that it existed in some form or other as far back as the Greek empire. The earliest strong evidence is a 1494 treatise on mathematics by the Venetian Friar Luca Pacioli[2]. In his treatise, Pacioli documented many standard techniques, including a chapter on accounting. It was to become the basic text in double entry bookkeeping for many a year.Double Entry bookkeeping arose in concert with the arisal of modern forms of enterprise as pioneered by the Venetian merchants. Historians have debated whether Double Entry was invented to support the dramatically expanded demands of the newer ventures then taking place surrounding the expansion of city states such as Venice or whether Double Entry was an enabler of this expansion.Our experiences weigh in on the side of enablement. I refer to the experiences of digital money issuers. Our own first deployment of a system was with a single entry bookkeeping system. Its failure rate even though coding was tight was such that it could not sustain more than 20 accounts before errors in accounting crept in and the system lost cohesion. This occurred within weeks of initial testing and was never capable of being fielded. The replacement double entry system was fielded in early 1996 and has never lost a transaction (although there have been some close shaves[3]).Likewise, the company DigiCash BV of the Netherlands fielded an early digital cash system into a bank in the USA. During its testing period, the original single entry accounting system had to be field replaced with a double entry system for the same reason \u2013 errors crept in and rendered the accounting underneath the digital cash system unreliable.Another major digital money system lasted for many years on a single entry accounting system. Yet, the company knew it was running on luck. When a cracker managed to find a flaw in the system, an overnight attack allowed the creation of many millions of dollars worth of value. As this was more than the contractual issue of value to date, it caused dramatic contortions to the balance sheet, including putting it in breach of its user contract and at dire risk of a 'bank run'. Luckily, the cracker deposited the created value into the account of an online game that failed shortly afterwards, so the value was able to be neutralised and monetarily cleansed, without disclosure, and without scandal.In the opinion of this author at least, single entry bookkeeping is incapable of supporting any enterprise more sophisticated than a household. Given this, I suggest that evolution of complex enterprises required double entry as an enabler.Double Entry has always been the foundation of accounting systems for computers. The capability to detect, classify and correct errors is even more important to computers than it is to humans, as there is no luxury of human intervention; the distance between the user and the bits and bytes is far greater than the distance between the bookkeeper and the ink marks on his ledgers.How Double Entry is implemented is a subject in and of itself. Computer science introduces concepts such as transactions, which are defined as units of work that are atomic, consistent, isolated, and durable (or ACID for short). The core question for computer scientists is how to add an entry to the assets side, then add an entry to the liabilities side, and not crash half way through this sequence. Or even worse, have another transaction start half way through. This makes more sense when considered in the context of the millions of entries that a computer might manage, and a very small chance that something goes wrong; eventually something does, and computers cannot handle errors of that nature very well.For the most part, these concepts simply reduce to \"how do we implement double entry bookkeeping?\" As this question is well answered in the literature, we do no more than mention it here.Recent advances in financial cryptography have provided a challenge to the concept of double entry bookkeeping. The digital signature is capable of creating a record with some strong degree of reliabilty, at least in the senses expressed by ACID, above. A digital signature can be relied upon to keep a record safe, as it will fail to verify if any details in the record are changed.If we can assume that the the record was originally created correctly, then later errors are revealed, both of an accidental nature and of fraudulent intent. (Computers very rarely make accidental errors, and when they do, they are most normally done in a clumsy fashion more akin to the inkpot being spilt than a few numbers.) In this way, any change to a record that makes some sort of accounting or semantic sense is almost certainly an attempt at fraud, and a digital signature makes this obvious.A digital signature gives us a particular property, to whit:There are several variants, with softer and harder claims to that property. For example, message digests with entanglement form one simple and effective form of signature, and public key cryptosystems provide another form where signers hold a private key and verifiers hold a public key[4]. There are also many ways to attack the basic property. In this essay I avoid comparisons, and assume the basic property as a reliable mark of having been seen by a computer at some point in time.Digital signatures then represent a new way to create reliable and trustworthy entries, which can be constructed into accounting systems. At first it was suggested that a variant known as the blinded signature would enable digital cash[5]. Then, certificates would circulate as rights or contracts, in much the same way as the share certificates of old and thus replace centralised accounting systems[6]. These ideas took financial cryptography part of the way there. Although they showed how to strongly verify each transaction, they stopped short of placing the the digital signature in an overall framework of accountancy and governance. A needed step was to add in the redundancy implied in double entry bookkeeping in order to protect both the transacting agents and the system operators from fraud.Designs that derived from the characteristics of the Internet, the capabilities of cryptography and the needs of governance led to the development of the signed receipt[7]. In order to develop this concept, let us assume a simple three party payment system, wherein each party holds an authorising key which can be used to sign their instructions. We call these players Alice, Bob (two users) and Ivan (the Issuer) for convenience.When Alice wishes to transfer value to Bob in some unit or contract managed by Ivan, she writes out the payment instruction and signs it digitally, much like a cheque is dealt with in the physical world. She sends this to the server, Ivan, and he presumably agrees and does the transfer in his internal set of books. He then issues a receipt and signs it with his signing key. As an important part of the protocol, Ivan then reliably delivers the signed receipt to both Alice and Bob, and they can update their internal books accordingly.Our concept of digital value sought to eliminate as many risks as possible. This was derived simply from one of the high level requirements, that of being extremely efficient at issuance of value. Efficiency in digital issuance is primarily a function of support costs, and a major determinant of support costs is the costs of fraud and theft.One risk that consistently blew away any design for efficient digital value at reasonable cost was the risk of insider fraud. In our model of many users and a single centralised server, the issuers of the unit of digital value (as signatory to the contract) and any governance partners such as the server operators are powerful candidates for insider fraud. Events over the last few years such as the mutual funds and stockgate scandals are canonical cases of risks that we decided to address.In order to address the risk of insider fraud, the written receipt was historically introduced as being a primary source of evidence. Mostly forgotten to the buying public these days, the purpose of a written receipt in normal retail trade is not to permit returns and complaints by the customer, but rather to engage her in a protocol of documentation that binds the shop attendant into safekeeping of the monies. A good customer will notice fraud by the shop attendant and warn the owner to look out for the monies identified by the receipt; the same story applies to the invention of the cash till or register, which was originally just a box separating the owner's takings from the monies in the shop attendant's pockets. We extend this primary motive into the digital world by using a signed receipt to bind the Issuer into a governance protocol with the users.We also go several steps further forward. Firstly, to achieve a complete binding, Alice's original authorisation is also included within the record. The receipt then includes all the evidence of both the user's intention and the server's action in response, and it now becomes a dominating record of the event. This then means that the most efficient record keeping strategy is to drop all prior records and keep safe the signed receipt.This domination affects both the Issuer and the user, and allows us to state the following principle:As the signed receipt is delivered from Issuer to both users, all three parties hold the same dominating record for each event. This reduces support costs by dramatically reducing problems caused by differences in information.Secondly, we bind a signed contract of issuance known as a Ricardian Contract into the receipt[8]. This invention relates a digitally signed document securely to the signed receipt by means of a unique identifier called a message digest, again provided by cryptography. It provides strong binding for the unit of account, the nature of the issue, the terms, conditions and promises being made by the Issuer, and of course the identity of the Issuer.Finally, with these enabling steps in place, we can now introduce the principle:Within the full record of the signed receipt, the user's intention is expressed, and is fully confirmed by the server's response. Both of these are covered by digital signatures, locking these data down. A reviewer such as an auditor can confirm the two sets of data, and can verify the signatures.The principle of the Receipt as the Transaction has become sacrosact over time. In our client software, the principle has been hammered into the design consistently, resulting in a simplified accounting regime, and delivering a high reliability. Issues still remain, such as the loss of receipts and the counting of balances by the client side software, but these become reasonably tractable once the goal of receipts as transactions is placed paramount in the designer's mind.In order to calculate balances on a related set of receipts, or to present a transaction history, a book would be constructed on the fly from the set. This amounts to using the Signed Receipt as a basis for single entry bookkeeping. In effect, the bookkeeping is derived from the raw receipts, and this raises the question as to whether to keep the books in place.The principles of Relational Databases provide guidance here. The fourth normal form directs that we store the primary records, in this case the set of receipts, and we construct derivative records, the accounting books, on the fly[9].Similar issues arise for Ivan the Issuer. The server has to accept each new transaction on the basis of the available balance in the effected books; for this reason Ivan needs those books to be available efficiently. Due to the greater number of receipts and books (one for each user account), both receipts and books will tend to exist, in direct contrast to fourth normal form. A meld between relationally sound sets of receipts and double entry books comes to assist here.Alice and Bob both are granted a book each within the server's architecture. As is customary, we place those books on the liabilities side. Receipts then can be placed in a separate single book and this could be logically placed on the assets side. Each transaction from Alice to Bob now has a logical contra entry, and is then represented in 3 places within the accounts of the server. Yet, the assets side remains in fourth normal form terms as the liabilities entries are derived, each pair from one entry on the assets side.By extension, a more sophisticated client-side software agent, working for Alice or Bob, could employ the same techniques. At this extreme, entries are now in place in three separate locations, and each holding potentially three records.The digitally signed receipt, with the entire authorisation for a transaction, represents a dramatic challenge to double entry bookkeeping at least at the conceptual level. The cryptographic invention of the digital signature gives powerful evidentiary force to the receipt, and in practice reduces the accounting problem to one of the receipt's presence or its absence. This problem is solved by sharing the records \u2013 each of the agents has a good copy.In some strict sense of relational database theory, double entry book keeping is now redundant; it is normalised away by the fourth normal form. Yet this is more a statement of theory than practice, and in the software systems that we have built, the two remain together, working mostly hand in hand.Which leads to the pairs of double entries connected by the central list of receipts; three entries for each transaction. Not only is each accounting agent led to keep three entries, the natural roles of a transaction are of three parties, leading to three by three entries.We term this triple entry bookkeeping. Although the digitally signed receipt dominates in information terms, in processing terms it falls short. Double entry book keeping fills in the processing gap, and thus the two will work better together than apart. In this sense, our term of triple entry bookkeeping recommends an advance in accounting, rather than a revolution.The precise layout of the entries in software and data terms is not settled, and may ultimately become one of those ephemeral implementation issues. The signed receipts may form a natural asset-side contra account, or they may be a separate non-book list underlying the bookkeeping system and its two sides.Auditing issues arise where construction of the books derives from the receipts, and normalisation issues arise when a receipt is lost. These are issues for future research.Likewise, it is worth stating that the technique of signing receipts works both with private key signatures and also with entanglement message digest signatures; whether the security aspects of these techniques is adequate to task is dependent on the business environment.It will be noted that the above design of triple entry bookkeeping assumed that Alice and Bob were agents of some independence. This was made possible, and reflected the usage of the system as a digital cash system, and not as a classical accounting system.Far from reducing the relevance of this work to the accounting profession, it introduces digital cash as an alternate to corporate bookkeeping. If an accounting system for a corporation or other administrative entity is recast as a system of digital cash, or internal money, then experience shows that benefits accrue to the organisation.Although the core of the system looks exactly like an accounting system, each department's books are pushed out as digital cash accounts. Departments no longer work so much with budgets as have control over their own corporate money. Fundamental governance control is still held within the accounting department by dint of their operation of the system, and by the limited scope of the money as only being usable within the organisation; the accounting department might step in as a market maker, exchanging payments in internal money for payments in external money to outside suppliers.We have operated this system on a small scale. Rather than be inefficient on such a small scale, the system has generated dramatic savings in coordination. No longer are bills and salaries paid using conventional monies; many transactions are dealt with by internal money transfers and at the edges of the corporation, formal and informal agents work to exchange between internal money and external money. Paperwork reduces dramatically, as the records of the money system are reliable enough to quickly resolve questions even years after the event.The innovations present in internal money go beyond the present paper, but suffice to say that they answer the obvious question of why this design of triple entry accounting sprung from the world of digital cash, and has relevence back to the corporate world.Todd Boyle looked at a similar problem from the point of view of small business needs in an Internet age, and reached the same conclusion \u2013 triple entry accounting[10]. His starting premises were that:From those foundations, Boyle concluded that therefore what is needed is a shared access repository that provides arms-length access. Fundamentally, this repository is akin to the classic double-entry accounting ledger of transaction rows (\"GLT\" for General Ledger - Transactions), yet its entries are dynamic and shared.Simple examples will help. When Alice forms a transaction, she enters it into her software. Every GLT transaction requires naming her external counterparty, Bob. When she posts the transaction, her software stores it in her local GLT and also submits it to the shared repository service's GLT.The Shared Transaction Repository (\"STR\") then forwards the transaction on to Bob. Both Bob and Alice are now expected to store the handle to the transaction as an index or stub, and the STR then stores the entire transaction.Boyle's ideas are logically comparable to Grigg and Howland's, although they arive from different directions (the STR is Grigg's Ivan, above) and are not totally equivalent. Where the latter limited themselves to payments, the accuracy of amounts, and protection with hard cryptographic shells, Boyle looked at wider patterns of transactions, and showed that the STR could mediate these transactions, if the core shared data could be extracted and made into a single shared record. Boyle's focus was on the economic substance of the transaction.Imagine a simple invoicing procedure. Alice creates an invoice and posts it to her software (GLT). As she has named Bob, the GLT automatically posts it to Ivan, the STR, and he forwards it to Bob. At this point Bob has a decision to make, accept or reject. Assuming acceptance, his software can then respond by sending an acceptance message to Ivan. The STR now assembles an accepted invoice record to replace the earlier speculative invoice record and posts that threeways. At some related time (to do with payment policy) Bob also posts a separate transaction to pay for the invoice. This could operate in much the same way as a separate transaction, linking directly to the original invoice.Now, as the payment links back, and the invoice is a live transaction within the three entries in the three accounting systems, it is possible for a new updated invoice record to refer back to the payment activity. When the payment clears, the new record can again replace the older unpaid copy and promulgate to all three parties.Software could be written to facilitate and monitor this flow and similar flows. If the payments system is sufficiently flexible, and integrated with the needs of the users, if might be possible to merge the above invoice with the payment itself, at the Receipts level. Seen in this light, the Signed receipt of Ricardo is simply the smallest and simplest pattern within the more general set of patterns. We could then suggest that the narrow principle of the Receipt is the Transaction could be extended into The Invoice is the Transaction.A particular transaction in business almost never stands alone. They come in patterns. For example offers and acceptances form a wider transaction but seldom encapsulate the entire fulfillment and payment cycle. Even if there has been a payment accompanying a PO message, the customer then waits for fulfillment.There is a large body of science and literature built around these patterns of transactions. These have been adopted by the Business Process workgroup of ebXML and other standards bodies, where they are called \"Commercial Transactions.\" Where however the present work distinguishes itself is in breaking down these transactions into the atomic elements. It is to that we now turn.The implementation of Triple Entry Accounting will in time evolve to support patterns of transactions. What has become clear is that double entry does not sufficiently support these patterns, as it is a framework that breaks down as soon as the number of parties exceeds one. Yet, even as double entry is \"broken\" on the net and unable to support commercial demands, triple entry is not widely understood, nor are the infrastructure requirements that it imposes well recognised.Below are the list of requirements that we believed to be important[11][12].1. Strong Psuedonymity, At Least. As there are many cycles in the patterns, the system must support a clear relationship of participants. At the minimum this requires a nymous architecture of the nature of Ricardo or AADS. (This requirement is very clear, but space prevents any discussion of it.)2. Entry Signing. In order to neutralise the threats to and by the parties, a mechanism that freezes and confirms the basic data is needed. This is signing, and we require that all entries are capable of carrying digital signatures (see 1, above, which suggests public key signatures).3. Message Passing. The system is fundamentally one of message passing, in contrast to much of the net's connection based architecture. Boyle recognised early on that a critical component was the generic message passing nature, and Systemics proposed and built this into Ricardo over the period 2001-2004[13].4. Entry Enlargement and Migration. Each new version of a message coming in represents an entry that is either to be updated or added. As each message adds to a prior conversation, the stored entry needs to enlarge and absorb the new information, while preserving the other properties.5. Local Entry Storage and Reports. The persistent saving and responsive availability of entries. In practice, this is the classical accounting general ledger, at least in storage terms. It needs to bend somewhat to handle much more flexible entries, and its report capabilities become more key as they conduct instrinsic reconciliation on a demand or live basis.6. Integrated Hard Payments. Trade can only be as efficient as the payment. That means that the payment must be at least as efficient as every other part; which in practice means that a payment system should be built-in at the infrastructure level. C.f., Ricardo.7. Integrated Application-Level Messaging. As distinct to the messaging at the lower protocol levels (1 above), there is a requirement for Alice and Bob to be able to communicate. That is because the vast majority of the patterns turns around the basic communications of the agents. There is no point in establishing a better payment and invoice mechanism than the means of communication and negotiation. This concept is perhaps best seen in the SWIFT system which is a messaging system, first and foremost, to deliver instructions for payments.Double Entry bookkeeping provides evidence of intent and origin, leading to strategies for dealing with errors of accident and fraud. The financial cryptography invention of the signed receipt provides the same benefits, and thus challenges the 800 year reign of double entry. Indeed, in evidentiary terms, the signed receipt is more powerful than double entry records due to the technical qualities of its signature.There remain some weaknesses in strict comparison with double entry bookkeeping. Firstly, in the Ricardo instantiation of triple entry accounting, the receipts themselves may be lost or removed, and for this reason we stress as a principle that the entry is the transaction. This results in three active agents who are charged with securing the signed entry as their most important record of transaction.Secondly, the software ramifications of the triple entry system that are less convenient than that offered by double entry bookkeeping. For this reason, we expand the information held in the receipt into a set of double entry books; in this way we have the best of both worlds on each node: the evidentiary power of the signed entries and the convenience and local crosschecking power of the double entry concept.Both of these imperitives meld signed receipts in with double entry bookkeeping. As we end up with a logical arrangement of three by three entries, we feel the term triple entry bookkeeping is useful to describe the advance on the older form.To fully benefit from triple entry bookkeeping, we have to expand accounting systems out to agents and offer them direct capabilities to do transactions. That is, we make the agents stakeholders by giving them internal money[14]. Use of digital cash to do company accounts empowers the use of this concept as a general replacement for accounting using books and departmental budgets, and is an enabler for verifying and auditing the centralised accounts system by way of signed receipts.Once there, governance receives substantial benefits. Accounts are now much more difficult to change, and much more transparent. It is our opinion that various scandals and failures of governance would have been impossible given these techniques: the mutual funds scandal would have shown a clear audit trail of transactions and thus late timing and otherwise perverted or dropped transactions would have been clearly identified or eliminated completely[15]. The emerging scandal in the USA known as Stockgate would have been impossible as forgery of shares and value for manipulative trading purposes is revealed by signed receipts. Likewise, Barings would still be a force in investment banking if accounts had been organised around easily transparent digital cash with open and irreducible signed receipts that evidence invisible accounts (88888). Enron style scandals would have permitted more direct \"follow the money\" governance lifting the veil on various innovative but economically meaningless swaps.A draft form of this paper credited Todd Boyle as an author, but this was later withdrawn at his request due to wider differences between the views. \u21a9Friar Luca Pacioli, Summa de Arithmetica, Geometria, Proportioni et Proportionalita 1494, Venice. \u21a9Ian Grigg \"The Twilight Zone,\" Financial Cryptography blog 16th April 2005 \u21a9Entanglement is discussed in: Petros Maniatis and Mary Baker, \"Secure History Preservation through Timeline Entanglement,\" Proc. 11th USENIX Security Symposium, August 2002. \u21a9David Chaum, \"Achieving Electronic Privacy,\" Scientific American, v. 267, n. 2 Aug 1992. \u21a9Robert A. Hettinga \"The Book-Entry/Certificate Distinction\" 1995, Cypherpunks \u21a9Gary Howland \"Development of an Open and Flexible Payment System\" 1996, Amsterdam, NL. \u21a9Ian Grigg \"The Ricardian Contract,\" First IEEE International Workshop on Electronic Contracting (WEC) 6th July 2004 \u21a9E.F. Codd, \"A Relational Model of Data for Large Shared Data Banks,\" Comm. ACM 13 (6), June 1970, pp. 377-387. \u21a9Todd Boyle, \"GLT and GLR: conceptual architecture for general ledgers,\" Ledgerism.net, 1997-2005. \u21a9Todd Boyle, \"STR software specification,\" Goals, 1-5. This section adopts that numbering convention. \u21a9Ian Grigg, various design and requirements documents, Systemics, unpublished. \u21a9A substantial part of the programming and design was conducted by Edwin Woudt (first demo, SOX layers, UI) and Jeroen van Gelderen (message passing client architecture). \u21a9Using internal money instead of an accounting system is not a new idea but has only been recently experienced: Ian Grigg, How we raised capital at 0%, saved our creditors from an accounting nightmare, gave our suppliers a discount and got to bed before midnight. Informal essay (rant), 7 Jul 2003. \u21a9James Nesfield and Ian Grigg \"Mutual Funds and Financial Flaws,\" U.S. Senate Finance Subcommittee 27th January, 2004 \u21a9"}
{"prompt": "Truledger in Plain English", "completion": "Truledger is an anonymous, digitally-signed vault and trading system. Like Loom, it allows anyone to issue assets (digital currencies). Unlike Loom, which relies entirely on (very good) obscurity for security, Truledger's digital signatures allow the server and the customer to prove to each other that they agreed at a particular time on their balances. It does this while allowing destruction of transaction history for closed trades. Truledger will initially provide server-based trading. Eventually, it will provide digital checks and bearer certificates. These, however, WILL require permanent storage of transaction history (unless they expire).doc/db.txt gives a terse description of the Truledger server database and protocol. This page attempts to render the protocol in plain English.Truledger uses public key cryptography to sign all messages passed back and forth between its web interface and the Truledger server. Digital signatures are a virtually unforgeable way to ensure that a message was written by its purported author. Truledger uses OpenSSL for its public key cryptography. You probably use OpenSSL every time you visit a secure web site, https://somewhere.com/, as does the web server. I didn't roll my own. Just used the same tried and true technology that secures the web. You can read more about public key cryptography, digital signatures, and hashing here and here.I'm going to use four actors in the scenarios that follow. \"Server\" is the name of the Truledger server. \"Bob\" and \"Sue\" are two customers, who will trade with each other. \"Spammer\" is a third customer, unknown to Bob or Sue.Sue (via email or IM): Hey, Bob. Check out Truledger. Go to Truledger.com, download the client, and install it on your computer. Then create a private key, and send me your ID, and I'll give you some usage tokens so that you can create an account.Bob (via email or IM): Thanks, Sue! I installed the Truledger client and created a private key. Here's my ID.Sue (via her Truledger client): Hey server, Here's a new request number. Give me a transaction number please.\nSigned: SueServer: Here's a new transaction number.\nSigned: ServerSue: Hey server, here's that transaction number you gave me. Please spend 50 usage tokens to Bob's ID, with a message of \"Hey Bob. Welcome to Truledger!\" I'm paying 2 usage tokens as a transaction fee, which I'll get back when Bob accepts the spend. My balance after this transaction will be 1025 usage tokens. My outbox hash after this transaction will be X.\nSigned: SueServer: I processed your spend of 50 usage tokens to Bob's ID. I agree that the transaction fee at the time of this transaction is 2 usage tokens, and that your balance after this transaction is 1025 usage tokens. I agree with you on your outbox hash.\nSigned: ServerSue (via email or IM): OK, Bob. I've given you 50 usage tokens. You should now be able to create an account at Truledger.com. Send me a message via Truledger when you've registered.Bob (via his Truledger client): Hello server. Here's my ID and my public key. What's your ID and public key?\nSigned: BobServer: Here's my ID and public key.\nSigned: ServerBob: Here's my ID and my public key, please create an account for me.\nSigned: BobServer: I've registered your ID and public key. Somebody gave you enough tokens to register. Welcome to Truledger.\nSigned: ServerIn order to sign a message, you need to have a private key. In order to verify the signature on a message, you need to have the corresponding public key. Truledger identifies customers by the hash of their public key, their ID. The ID is a 40-character string of numbers and the letters A to F, the hexadecimal representation of a 160-bit number. You identify your account to the Truledger client with a passphrase, which is used to encrypt your private key on your disk. You'll only need to copy and paste your ID when you want to tell a trading partner how to send you money for the first time, or to seed your account with usage tokens, as Sue did for Bob.Usage tokens are an idea from Patrick Chkoreff's Loom system. They are a way to charge for the server's resources. You have to buy storage for your account balances, and lease temporary storage for transactions. Usage tokens are the \"currency\" used to do this. Truledger also supports fees in other asset types, for server management that wants to make more than the sale of usage tokens. Truledger uses the file system as a database. One file in the Truledger database costs one usage token. Files vary in size, but are usually about 8K, mostly signatures.Note that Bob had to send his public key to the server twice, once when he requested the server's public key, and again when he registered. Every message going to and from Truledger is digitally signed. It's only possible to verify a digital signature if you know the public key of the signer. A new customer's public key isn't in the database until after he's registered, so the first two messages, in which the new customer gets the server's public key, so that he can verify the server's signatures, and the registration request, both need to include the customers's public key, so that the signatures on those two messages can themselves be verified. After registration is complete, subsequent messages need to carry only the ID; the public key can then be looked up in the database.Actual messages sent (with the signature that goes with each parenthesized item omitted):Bob: Hello server. Here's my ID and a new request number. What's in my inbox?\nSigned: BobServer: Your inbox contains a 50 usage token spend from Sue with a message of \"Hey Bob. Welcome to Truledger!\" It also contains a 10 usage token charge from the server with a message of \"Registration Fee\". Here are two transaction numbers you can use to accept these spends and do a spend yourself.\nSigned: ServerBob: Here's my ID and the first of the transaction numbers you gave me. Accept the spend from Sue with a message of, \"Thanks, Sue. I'm excited about Truledger!\" Accept the server charge. My balance after this transaction will be 39 usage tokens.\nSigned: BobServer: I've processed the spend from Sue and the server charge. I agree that your balance after this transaction is 39 usage tokens.\nSigned: ServerOne possible attack on an electronic server can be for someone to replay an intercepted message. Unless the protocol protects against that, this can cause problems. Except for the serverid request, the registration request, and a request for a customer's last request number, every information request must be accompanied by a request number that is larger than the customer's last used request number, and every transaction must be accompanied by a transaction number that is given out by the server. The server maintains a counter, which it increments each time someone asks for a transaction number. This makes requests that reveal information or initiate transactions impossible to replay without a customer's passphrase and private key. In the Truledger world, your passphrase and your private key are your identity. Guard them well.Another possible replay attack is to intercept a message for one server and send it to another. Customers could protect against this by having different IDs, hence different public/private key pairs, for different servers. But it will be very convenient to use the same ID. Your friends will recognize you, and you'll have only one passphrase to remember. So the server's ID is included in almost every request. Requests meant for another server will not work.You're probably wondering why Bob's balance after the transaction is 39, instead of 40, usage tokens. He got 50 usage tokens from Sue, and paid the server 10 usage tokens for his registration fee. The additional usage token is the price of the new file used to store the usage token balance. Storage costs usage tokens. Loom charges 1 usage token for each 16 bytes of storage. I considered charging per byte, but decided that charging per file was easier to handle, though not quite as fair. It only makes sense if message sizes are limited, of course. If you were allowed megabyte messages, then Truledger would have to charge per byte, or per kilobyte.Actual messages sent:Sue: Hello server. Here's my ID and a new request number. What's in my inbox?\nSigned: SueServer: Your inbox contains an acceptance from Bob of your 50 usage token spend with a message of, \"Thanks Sue. I'm excited about Truledger!\" Here are two transaction numbers you can use to close that transaction and do a new spend.\nSigned: ServerSue: Here's my ID and the first of the transaction numbers you gave me. Clear the spend to Bob. My balance after this transaction will be 1027 usage tokens. My outbox hash after this transaction will be Y.\nSigned: SueServer: I've cleared the spend to Bob (and refunded the usage tokens that were leasing the outbox and inbox locations). I agree that your balance after this transaction is 1027 usage tokens. And I agree that your outbox hash after this transaction is Y.\nSigned: ServerThere are three main parts of a Truledger account: the balances, the outbox, and the inbox. Value is stored in all three places. When you do a spend, your balance for the spent asset is debited, and the spend request is stored in your outbox and in the recipients inbox. You are charged two usage tokens to lease the new outbox and inbox files. When the recipient accepts the spend, his balance for the spent asset is credited, the spend notice is removed from his inbox, and a spend acceptance notice is added to your inbox. When you acknowledge his acceptance of the spend, the spend request is removed from your outbox, the acceptance notice is removed from your inbox, and the two usage tokens you paid to lease those files is credited to your balance. This three step process is necessary, because the server can't modify your balances without your signed permission, and it can't modify the recipient's balances without his signed permission.You may be wondering what an \"outbox hash\" is. Your balances plus your outbox represent the part of your account that you and the server have agreed upon. Your inbox is changed without your knowledge, but the server needs your signed permission to change your outbox (do a spend) or your balances. Since your outbox might get large, instead of sending the entire contents back and forth every time you do a spend, or acknowledge the acceptance (or rejection) of a spend by a recipient, you compute a hash of your outbox, and send that instead, and the server responds with an acknowledgement of that outbox hash (thank you to Patrick Chkoreff for this idea).Actual messages sent:Spammer (likely via an automated client): Hey server. Here's a new request number. Give me a transaction number please.\nSigned: SpammerServer: Here's a new transaction number.\nSigned: ServerSpammer: Hey server. Here's that transaction number you gave me. Please spend 0 usage tokens to Bob's ID, with a message of, \"Go all night. Visit BuyViagra.com.\" I'm paying 2 usage tokens as a transaction fee, which I'll get back when Bob accepts the spend. My balance after this transaction will be 2425 usage tokens. My outbox hash after this transaction will be Z.\nSigned: SpammerServer: I processed your spend of 0 usage tokens to Bob's ID. I agree that the transaction fee at the time of this transaction is 2 usage tokens, and that your balance after this transaction is 2425 usage tokens. I agree with you on your outbox hash.\nSigned: ServerBob: Hello server. Here's my ID and a new request number. What's in my inbox?\nSigned: BobServer: Your inbox contains a 0 usage token spend from Spammer with a message of, \"Go all night. Visit BuyViagra.com.\" Here are two transaction numbers you can use to accept these spends and do a spend yourself.\nSigned: ServerBob: Here's my ID and the first of the transaction numbers you gave me. Reject the spend from Spammer with a message of, \"Thanks for the tokens\", and give me the two usage tokens he paid to send that spam. My balance after this transaction will be 41 usage tokens.\nSigned: BobServer: I've rejected the spend from Spammer. I agree that your balance after this transaction is 41 usage tokens.\nSigned: ServerSpends can be rejected. The amount spent goes back to the spender, but the recipient pockets the transaction fee. Zero spends use Truledger as a simple messaging service. But not a free one, unless the recipient wants the message. IMHO, spam exists largely because it is nearly free to send email. In a system where each spam message costs 2 usage tokens, cheap but not free, I doubt it will be much of a problem. Time will tell.Actual messages sent:Bob: Hey server. Here's a new request number. Give me a transaction number please.\nSigned: BobServer: Here's a new transaction number.\nSigned: ServerBob: Hey server. Here's that transaction number you gave me. Please register a new asset named \"Bob GoldGrams\". It has a scale of 7 and a precision of 3. Its ID is <bobggid>. My balance after this transaction will be 39 usage tokens and -1 <bobggid>.Server: I have registered the new \"Bob GoldGrams\" asset. I agree that your balance after this transaction is 39 usage tokens and -1 <bobggid>.Like Loom, Truledger allows customers to create their own asset types. Then, if they can convince them to do so, other customers can trade in that asset type. The ID of a Truledger asset is the sha1 hash of the creator's ID, its scale, its precision, and its name. But the message the customer signs to create the asset, and that the server signs to acknowledge creation, also contains the serverid. This allows the asset to be registered at multiple servers, with the same ID, but makes each particular registration specific to a specific server. Hence, it makes sense for an asset issuer to provide a service of transferring his holdings of his asset between servers at which he's registered; it's self-evident that Bob GoldGrams at Server A are the same asset as Bob GoldGrams at server B.I plan to support transfer of asset issuance, but I haven't figured out the intricacies yet.Like Loom, all amounts in Truledger are stored as integers. The scale value controls where the decimal point goes in the real-world representation of that value: move it left by scale places. The precision controls the minimum number of decimal places that are printed. So with a scale of 7 and a precision of 3, the value 12000000 will be printed by Truledger clients as 1.200, and the minimum value for Bob's new currency is 0.0000001, one ten-millionth of a gram of gold, or $0.000003 at $30/gram: 3 ten-thousandths of a cent. Hello micropayments.Also like Loom, the sum of all the amounts, in accounts and outboxes, for one asset type is -1. There is one negative balance, owned by the issuer, who can spend as much as he wants, and a bunch of positive balances, and outbox entries. A -1 balance in the issuer's account means there are no outstanding balances or outbox entries in that asset, so that's where Bob's Bob GoldGrams balance begins. Users of an asset have to trust the issuer when he tells them, outside of Truledger, that his asset is backed by something of real value, and that he'll never issue more of the virtual asset than he has in the backing commodity. Well, unless he wants to act like a country, and issue fiat currency that is backed by his Full Faith and Credit and nothing else. Good luck getting people to go for that.Actual messages sent:Bob: Hey server. Here's a new request number. Give me a transaction number please.\nSigned: BobServer: Here's a new transaction number.\nSigned: ServerBob: Hey server. Here's that transaction number you gave me. Make a zero spend to myself. My balance after the transaction will be 38 usage tokens, -311.0347681 Bob GoldGrams in my default sub-account, and 311.034768 Bob GoldGrams in my \"Gun Safe\" sub-account.Server: I did that spend. I agree with you that after the transaction, your balance is 38 usages tokens, -311.0347681 Bob GoldGrams in your default account, and 311.034768 Bob GoldGrams in your \"Gun Safe\" sub-account.Bob: Hey server. Here's a new request number. Give me a transaction number please.\nSigned: BobServer: Here's a new transaction number.\nSigned: ServerBob: Hey server. Here's that transaction number you gave me. Please spend 2.4056304 Bob GoldGrams to Sue, with a message of, \"Well, I finally issued my new currency, backed by Krugerands in my gun safe. I'm giving you a gram in thanks for turning me on to Truledger, and 1.4056304 grams for 36 Capulin Coffee Units, which you said you'd sell me, so I can buy more of Daniel Fourwinds' fine coffee that we relished at your house the other day. I used a gold price of $796.60/ounce, Kitco's bid price this morning.\" My transaction fee will be 2 usage tokens. My balance after this transaction will be 36 usage tokens, and 309.6291376 Bob GoldGrams in my \"Gun Safe\" sub-account. My outbox hash after this transaction will be A.\nSigned: BobServer: I have done your spend of 2.4056304 Bob GoldGrams to Sue, with your message, and a transaction fee of 2 usage tokens. I agree that your balance after this transaction is 36 usage tokens, and 309.6291376 Bob GoldGrams in your \"Gun Safe\" sub-account. I agree on the outbox hash.\nSigned: ServerTruledger supports splitting up your balances into multiple \"sub-accounts\". Much like a conventional server gives you a checking account and a savings account, you can use these sub-accounts to help manage your assets. You can have as many of them as you wish, limited only by having usage tokens to pay for the files.Bob has decided to keep track of his Bob GoldGrams assets with a \"Gun Safe\" sub-account, with a balance recording how many grams of the gold in his safe have not yet been put into circulation. He seeds it with 10 ounces of gold, the part of his holdings that he's willing to sell. Then he spends some of it to Sue, asking for enough Capulin Coffee Units for two pounds of Capulin Coffee ($17.95 per pound, shipped).Note that you don't have to mention all of your balances with every spend. You only mention the balances that change. Also notice that there's no transaction fee for spends to yourself. Moving assets between your sub-accounts costs only tokens for new files. No need for the outbox and inbox stuff.Actual messages sent:To be doneTo be doneCopyright \u00a9 2008 Bill St. Clair, All Rights Reserved."}
{"prompt": "A Cypherpunk's Manifesto", "completion": "Privacy is necessary for an open society in the electronic age. Privacy is not secrecy. A private matter is something one doesn't want the whole world to know, but a secret matter is something one doesn't want anybody to know. Privacy is the power to selectively reveal oneself to the world.If two parties have some sort of dealings, then each has a memory of their interaction. Each party can speak about their own memory of this; how could anyone prevent it? One could pass laws against it, but the freedom of speech, even more than privacy, is fundamental to an open society; we seek not to restrict any speech at all. If many parties speak together in the same forum, each can speak to all the others and aggregate together knowledge about individuals and other parties. The power of electronic communications has enabled such group speech, and it will not go away merely because we might want it to.Since we desire privacy, we must ensure that each party to a transaction have knowledge only of that which is directly necessary for that transaction. Since any information can be spoken of, we must ensure that we reveal as little as possible. In most cases personal identity is not salient. When I purchase a magazine at a store and hand cash to the clerk, there is no need to know who I am. When I ask my electronic mail provider to send and receive messages, my provider need not know to whom I am speaking or what I am saying or what others are saying to me; my provider only need know how to get the message there and how much I owe them in fees. When my identity is revealed by the underlying mechanism of the transaction, I have no privacy. I cannot here selectively reveal myself; I must _always_ reveal myself.Therefore, privacy in an open society requires anonymous transaction systems. Until now, cash has been the primary such system. An anonymous transaction system is not a secret transaction system. An anonymous system empowers individuals to reveal their identity when desired and only when desired; this is the essence of privacy.Privacy in an open society also requires cryptography. If I say something, I want it heard only by those for whom I intend it. If the content of my speech is available to the world, I have no privacy. To encrypt is to indicate the desire for privacy, and to encrypt with weak cryptography is to indicate not too much desire for privacy. Furthermore, to reveal one's identity with assurance when the default is anonymity requires the cryptographic signature.We cannot expect governments, corporations, or other large, faceless organizations to grant us privacy out of their beneficence. It is to their advantage to speak of us, and we should expect that they will speak. To try to prevent their speech is to fight against the realities of information. Information does not just want to be free, it longs to be free. Information expands to fill the available storage space. Information is Rumor's younger, stronger cousin; Information is fleeter of foot, has more eyes, knows more, and understands less than Rumor.We must defend our own privacy if we expect to have any. We must come together and create systems which allow anonymous transactions to take place. People have been defending their own privacy for centuries with whispers, darkness, envelopes, closed doors, secret handshakes, and couriers. The technologies of the past did not allow for strong privacy, but electronic technologies do.We the Cypherpunks are dedicated to building anonymous systems. We are defending our privacy with cryptography, with anonymous mail forwarding systems, with digital signatures, and with electronic money.Cypherpunks write code. We know that someone has to write software to defend privacy, and since we can't get privacy unless we all do, we're going to write it. We publish our code so that our fellow Cypherpunks may practice and play with it. Our code is free for all to use, worldwide. We don't much care if you don't approve of the software we write. We know that software can't be destroyed and that a widely dispersed system can't be shut down.Cypherpunks deplore regulations on cryptography, for encryption is fundamentally a private act. The act of encryption, in fact, removes information from the public realm. Even laws against cryptography reach only so far as a nation's border and the arm of its violence. Cryptography will ineluctably spread over the whole globe, and with it the anonymous transactions systems that it makes possible.For privacy to be widespread it must be part of a social contract. People must come and together deploy these systems for the common good. Privacy only extends so far as the cooperation of one's fellows in society. We the Cypherpunks seek your questions and your concerns and hope we may engage you so that we do not deceive ourselves. We will not, however, be moved out of our course because some may disagree with our goals.The Cypherpunks are actively engaged in making the networks safer for privacy. Let us proceed together apace.Onward.Eric Hughes"}
{"prompt": "The Right to Read: A Dystopian Short Story", "completion": "From The Road to Tycho, a collection of articles about the antecedents of the Lunarian Revolution, published in Luna City in 2096.For Dan Halbert, the road to Tycho began in college\u2014when Lissa Lenz asked to borrow his computer. Hers had broken down, and unless she could borrow another, she would fail her midterm project. There was no one she dared ask, except Dan.This put Dan in a dilemma. He had to help her\u2014but if he lent her his computer, she might read his books. Aside from the fact that you could go to prison for many years for letting someone else read your books, the very idea shocked him at first. Like everyone, he had been taught since elementary school that sharing books was nasty and wrong\u2014something that only pirates would do.And there wasn't much chance that the SPA\u2014the Software Protection Authority\u2014would fail to catch him. In his software class, Dan had learned that each book had a copyright monitor that reported when and where it was read, and by whom, to Central Licensing. (They used this information to catch reading pirates, but also to sell personal interest profiles to retailers.) The next time his computer was networked, Central Licensing would find out. He, as computer owner, would receive the harshest punishment\u2014for not taking pains to prevent the crime.Of course, Lissa did not necessarily intend to read his books. She might want the computer only to write her midterm. But Dan knew she came from a middle-class family and could hardly afford the tuition, let alone her reading fees. Reading his books might be the only way she could graduate. He understood this situation; he himself had had to borrow to pay for all the research papers he read. (Ten percent of those fees went to the researchers who wrote the papers; since Dan aimed for an academic career, he could hope that his own research papers, if frequently referenced, would bring in enough to repay this loan.)Later on, Dan would learn there was a time when anyone could go to the library and read journal articles, and even books, without having to pay. There were independent scholars who read thousands of pages without government library grants. But in the 1990s, both commercial and nonprofit journal publishers had begun charging fees for access. By 2047, libraries offering free public access to scholarly literature were a dim memory.There were ways, of course, to get around the SPA and Central Licensing. They were themselves illegal. Dan had had a classmate in software, Frank Martucci, who had obtained an illicit debugging tool, and used it to skip over the copyright monitor code when reading books. But he had told too many friends about it, and one of them turned him in to the SPA for a reward (students deep in debt were easily tempted into betrayal). In 2047, Frank was in prison, not for pirate reading, but for possessing a debugger.Dan would later learn that there was a time when anyone could have debugging tools. There were even free debugging tools available on CD or downloadable over the net. But ordinary users started using them to bypass copyright monitors, and eventually a judge ruled that this had become their principal use in actual practice. This meant they were illegal; the debuggers' developers were sent to prison.Programmers still needed debugging tools, of course, but debugger vendors in 2047 distributed numbered copies only, and only to officially licensed and bonded programmers. The debugger Dan used in software class was kept behind a special firewall so that it could be used only for class exercises.It was also possible to bypass the copyright monitors by installing a modified system kernel. Dan would eventually find out about the free kernels, even entire free operating systems, that had existed around the turn of the century. But not only were they illegal, like debuggers\u2014you could not install one if you had one, without knowing your computer's root password. And neither the FBI nor Microsoft Support would tell you that.Dan concluded that he couldn't simply lend Lissa his computer. But he couldn't refuse to help her, because he loved her. Every chance to speak with her filled him with delight. And that she chose him to ask for help, that could mean she loved him too.Dan resolved the dilemma by doing something even more unthinkable\u2014he lent her the computer, and told her his password. This way, if Lissa read his books, Central Licensing would think he was reading them. It was still a crime, but the SPA would not automatically find out about it. They would only find out if Lissa reported him.Of course, if the school ever found out that he had given Lissa his own password, it would be curtains for both of them as students, regardless of what she had used it for. School policy was that any interference with their means of monitoring students' computer use was grounds for disciplinary action. It didn't matter whether you did anything harmful\u2014the offense was making it hard for the administrators to check on you. They assumed this meant you were doing something else forbidden, and they did not need to know what it was.Students were not usually expelled for this\u2014not directly. Instead they were banned from the school computer systems, and would inevitably fail all their classes.Later, Dan would learn that this kind of university policy started only in the 1980s, when university students in large numbers began using computers. Previously, universities maintained a different approach to student discipline; they punished activities that were harmful, not those that merely raised suspicion.Lissa did not report Dan to the SPA. His decision to help her led to their marriage, and also led them to question what they had been taught about piracy as children. The couple began reading about the history of copyright, about the Soviet Union and its restrictions on copying, and even the original United States Constitution. They moved to Luna, where they found others who had likewise gravitated away from the long arm of the SPA. When the Tycho Uprising began in 2062, the universal right to read soon became one of its central aims.This note has been updated several times since the first publication of the story.The right to read is a battle being fought today. Although it may take 50 years for our present way of life to fade into obscurity, most of the specific laws and practices described above have already been proposed; many have been enacted into law in the US and elsewhere. In the US, the 1998 Digital Millennium Copyright Act (DMCA) established the legal basis to restrict the reading and lending of computerized books (and other works as well). The European Union imposed similar restrictions in a 2001 copyright directive. In France, under the DADVSI law adopted in 2006, mere possession of a copy of DeCSS, the free program to decrypt video on a DVD, is a crime.In 2001, Disney-funded Senator Hollings proposed a bill called the SSSCA that would require every new computer to have mandatory copy-restriction facilities that the user cannot bypass. Following the Clipper chip and similar US government key-escrow proposals, this shows a long-term trend: computer systems are increasingly set up to give absentees with clout control over the people actually using the computer system. The SSSCA was later renamed to the unpronounceable CBDTPA, which was glossed as the \"Consume But Don't Try Programming Act.\"The Republicans took control of the US senate shortly thereafter. They are less tied to Hollywood than the Democrats, so they did not press these proposals. Now that the Democrats are back in control, the danger is once again higher.In 2001 the US began attempting to use the proposed Free Trade Area of the Americas (FTAA) treaty to impose the same rules on all the countries in the Western Hemisphere. The FTAA is one of the so-called free trade treaties, which are actually designed to give business increased power over democratic governments; imposing laws like the DMCA is typical of this spirit. The FTAA was effectively killed by Lula, President of Brazil, who rejected the DMCA requirement and others.Since then, the US has imposed similar requirements on countries such as Australia and Mexico through bilateral \"free trade\" agreements, and on countries such as Costa Rica through another treaty, CAFTA. Ecuador's President Correa refused to sign a \"free trade\" agreement with the US, but I've heard Ecuador had adopted something like the DMCA in 2003.One of the ideas in the story was not proposed in reality until 2002. This is the idea that the FBI and Microsoft will keep the root passwords for your personal computers, and not let you have them.The proponents of this scheme have given it names such as \"trusted computing\" and \"Palladium.\" We call it treacherous computing\" because the effect is to make your computer obey companies even to the extent of disobeying and defying you. This was implemented in 2007 as part of Windows Vista; we expect Apple to do something similar. In this scheme, it is the manufacturer that keeps the secret code, but the FBI would have little trouble getting it.What Microsoft keeps is not exactly a password in the traditional sense; no person ever types it on a terminal. Rather, it is a signature and encryption key that corresponds to a second key stored in your computer. This enables Microsoft, and potentially any web sites that cooperate with Microsoft, the ultimate control over what the user can do on his own computer.Vista also gives Microsoft additional powers; for instance, Microsoft can forcibly install upgrades, and it can order all machines running Vista to refuse to run a certain device driver. The main purpose of Vista's many restrictions is to impose DRM (Digital Restrictions Management) that users can't overcome. The threat of DRM is why we have established the Defective by Design campaign.When this story was first written, the SPA was threatening small Internet service providers, demanding they permit the SPA to monitor all users. Most ISPs surrendered when threatened, because they cannot afford to fight back in court. One ISP, Community ConneXion in Oakland, California, refused the demand and was actually sued. The SPA later dropped the suit, but obtained the DMCA, which gave them the power they sought.The SPA, which actually stands for Software Publishers Association, has been replaced in its police-like role by the Business Software Alliance. The BSA is not, today, an official police force; unofficially, it acts like one. Using methods reminiscent of the erstwhile Soviet Union, it invites people to inform on their coworkers and friends. A BSA terror campaign in Argentina in 2001 made slightly veiled threats that people sharing software would be raped.The university security policies described above are not imaginary. For example, a computer at one Chicago-area university displayed this message upon login:This is an interesting approach to the Fourth Amendment: pressure most everyone to agree, in advance, to waive their rights under it.The battle for the right to read is already in progress. The enemy is organized, while we are not, so it is going against us. Here are articles about bad things that have happened since the original publication of this article.If we want to stop the bad news and create some good news, we need to organize and fight. The FSF's Defective by Design campaign has made a start \u2014 subscribe to the campaign's mailing list to lend a hand. And join the FSF to help fund our work.The Free Software Foundation is the principal organizational sponsor of the GNU Operating System. Their mission is to preserve, protect and promote the freedom to use, study, copy, modify, and redistribute computer software, and to defend the rights of Free Software users.Copyright \u00a9 1996, 2002, 2007, 2009, 2010 Richard Stallman\nThis essay was written in 1996 and was published in Communications of the ACM, vol. 40, n. 2, February 1997."}
{"prompt": "Areopagitica;\nA Speech of Mr. John Milton\nFor the Liberty of Unlicens'd Printing,\nto the Parliament of England", "completion": "This is true liberty, when free-born men,\nHaving to advise the public, may speak free,\nWhich he who can, and will, deserves high praise;\nWho neither can, nor will, may hold his peace:\nWhat can be juster in a state than this?They, who to states and governors of the Commonwealth direct their speech, High Court of Parliament, or, wanting such accesse in a private condition, write that which they foresee may advance the publick good; I suppose them, as at the beginning of no mean endeavour, not a little alter'd and mov'd inwardly in their mindes: some with doubt of what will be the successe, others with fear of what will be the censure; some with hope, others with confidence of what they have to speake. And me perhaps each of these dispositions, as the subject was whereon I enter'd, may have at other times variously affected; and likely might in these foremost expressions now also disclose which of them sway'd most, but that the very attempt of this address thus made, and the thought of whom it hath recourse to, hath got the power within me to a passion, farre more welcome than incidental to a preface.Which though I stay not to confesse ere any aske, I shall be blamelesse, if it be no other than the joy and gratulation which it brings to all who wish and promote their country's liberty; whereof this whole discourse proposed will be a certain testimony, if not a trophy. For this is not the liberty which we can hope, that no grievance ever should arise in the Commonwealth--that let no man in this world expect; but when complaints are freely heard, deeply considered and speedily reformed, then is the utmost bound of civil liberty attained that wise men look for. To which if I now manifest by the very sound of this which I shall utter, that we are already in good part arrived, and yet from such a steep disadvantage of tyranny and superstition grounded into our principles as was beyond the manhood of a Roman recovery, it will be attributed first, as is most due, to the strong assistance of God our deliverer, next to your faithful guidance and undaunted wisdom, Lords and Commons of England. Neither is it in God's esteem the diminution of his glory, when honourable things are spoken of good men and worthy magistrates; which if I now first should begin to do, after so fair a progress of your laudable deeds, and such a long obligement upon the whole realm to your indefatigable virtues, I might be justly reckoned among the tardiest, and the unwillingest of them that praise ye.Nevertheless there being three principal things, without which all praising is but courtship and flattery: First, when that only is praised which is solidly worth praise: next, when greatest likelihoods are brought that such things are truly and really in those persons to whom they are ascribed: the other, when he who praises, by showing that such his actual persuasion is of whom he writes, can demonstrate that he flatters not; the former two of these I have heretofore endeavour'd, rescuing the employment from him who went about to impair your merits with a trivial and malignant encomium; the latter as belonging chiefly to mine own acquittal, that whom I so extolled I did not flatter, hath been reserved opportunely to this occasion.For he who freely magnifies what hath been nobly done, and fears not to declare as freely what might be done better, gives ye the best covenant of his fidelity; and that his loyalest affection and his hope waits on your proceedings. His highest praising is not flattery, and his plainest advice is a kind of praising. For though I should affirm and hold by argument, that it would fare better with truth, with learning and the Commonwealth, if one of your published Orders, which I should name, were called in; yet at the same time it could not but much redound to the lustre of your mild and equal government, whenas private persons are hereby animated to think ye better pleased with public advice, than other statists have been delighted heretofore with public flattery. And men will then see what difference there is between the magnanimity of a triennial Parliament, and that jealous haughtiness of prelates and cabin counsellors that usurped of late, whenas they shall observe ye in the midst of your victories and successes more gently brooking written exceptions against a voted Order than other courts, which had produced nothing worth memory but the weak ostentation of wealth, would have endured the least signified dislike at any sudden proclamation.If I should thus far presume upon the meek demeanour of your civil and gentle greatness, Lords and Commons, as what your published Order hath directly said, that to gainsay, I might defend myself with ease, if any should accuse me of being new or insolent, did they but know how much better I find ye esteem it to imitate the old and elegant humanity of Greece, than the barbaric pride of a Hunnish and Norwegian stateliness. And out of those ages, to whose polite wisdom and letters we owe that we are not yet Goths and Jutlanders, I could name him who from his private house wrote that discourse to the Parliament of Athens, that persuades them to change the form of democracy which was then established. Such honour was done in those days to men who professed the study of wisdom and eloquence, not only in their own country, but in other lands, that cities and signiories heard them gladly, and with great respect, if they had aught in public to admonish the state. Thus did Dion Prusaeus, a stranger and a private orator, counsel the Rhodians against a former edict; and I abound with other like examples, which to set here would be superfluous.But if from the industry of a life wholly dedicated to studious labours, and those natural endowments haply not the worst for two and fifty degrees of northern latitude, so much must be derogated, as to count me not equal to any of those who had this privilege, I would obtain to be thought not so inferior, as yourselves are superior to the most of them who received their counsel: and how far you excel them, be assured, Lords and Commons, there can no greater testimony appear, than when your prudent spirit acknowledges and obeys the voice of reason from what quarter soever it be heard speaking; and renders ye as willing to repeal any Act of your own setting forth, as any set forth by your predecessors.If ye be thus resolved, as it were injury to think ye were not, I know not what should withhold me from presenting ye with a fit instance wherein to show both that love of truth which ye eminently profess, and that uprightness of your judgment which is not wont to be partial to yourselves; by judging over again that Order which ye have ordained to regulate printing:--that no book, pamphlet, or paper shall be henceforth printed, unless the same be first approved and licensed by such, or at least one of such, as shall be thereto appointed. For that part which preserves justly every man's copy to himself, or provides for the poor, I touch not, only wish they be not made pretences to abuse and persecute honest and painful men, who offend not in either of these particulars. But that other clause of licensing books, which we thought had died with his brother quadragesimal and matrimonial when the prelates expired, I shall now attend with such a homily, as shall lay before ye, first the inventors of it to be those whom ye will be loath to own; next what is to be thought in general of reading, whatever sort the books be; and that this Order avails nothing to the suppressing of scandalous, seditious, and libellous books, which were mainly intended to be suppressed. Last, that it will be primely to the discouragement of all learning, and the stop of truth, not only by disexercising and blunting our abilities in what we know already, but by hindering and cropping the discovery that might be yet further made both in religious and civil wisdom.I deny not, but that it is of greatest concernment in the Church and Commonwealth, to have a vigilant eye how books demean themselves as well as men; and thereafter to confine, imprison, and do sharpest justice on them as malefactors. For books are not absolutely dead things, but do contain a potency of life in them to be as active as that soul was whose progeny they are; nay, they do preserve as in a vial the purest efficacy and extraction of that living intellect that bred them. I know they are as lively, and as vigorously productive, as those fabulous dragon's teeth; and being sown up and down, may chance to spring up armed men. And yet, on the other hand, unless wariness be used, as good almost kill a man as kill a good book. Who kills a man kills a reasonable creature, God's image; but he who destroys a good book, kills reason itself, kills the image of God, as it were in the eye. Many a man lives a burden to the earth; but a good book is the precious life-blood of a master spirit, embalmed and treasured up on purpose to a life beyond life. 'Tis true, no age can restore a life, whereof perhaps there is no great loss; and revolutions of ages do not oft recover the loss of a rejected truth, for the want of which whole nations fare the worse.We should be wary therefore what persecution we raise against the living labours of public men, how we spill that seasoned life of man, preserved and stored up in books; since we see a kind of homicide may be thus committed, sometimes a martyrdom, and if it extend to the whole impression, a kind of massacre; whereof the execution ends not in the slaying of an elemental life, but strikes at that ethereal and fifth essence, the breath of reason itself, slays an immortality rather than a life. But lest I should be condemned of introducing license, while I oppose licensing, I refuse not the pains to be so much historical, as will serve to show what hath been done by ancient and famous commonwealths against this disorder, till the very time that this project of licensing crept out of the Inquisition, was catched up by our prelates, and hath caught some of our presbyters.In Athens, where books and wits were ever busier than in any other part of Greece, I find but only two sorts of writings which the magistrate cared to take notice of; those either blasphemous and atheistical, or libellous. Thus the books of Protagoras were by the judges of Areopagus commanded to be burnt, and himself banished the territory for a discourse begun with his confessing not to know WHETHER THERE WERE GODS, OR WHETHER NOT. And against defaming, it was decreed that none should be traduced by name, as was the manner of Vetus Comoedia, whereby we may guess how they censured libelling. And this course was quick enough, as Cicero writes, to quell both the desperate wits of other atheists, and the open way of defaming, as the event showed. Of other sects and opinions, though tending to voluptuousness, and the denying of divine Providence, they took no heed.Therefore we do not read that either Epicurus, or that libertine school of Cyrene, or what the Cynic impudence uttered, was ever questioned by the laws. Neither is it recorded that the writings of those old comedians were suppressed, though the acting of them were forbid; and that Plato commended the reading of Aristophanes, the loosest of them all, to his royal scholar Dionysius, is commonly known, and may be excused, if holy Chrysostom, as is reported, nightly studied so much the same author and had the art to cleanse a scurrilous vehemence into the style of a rousing sermon.That other leading city of Greece, Lacedaemon, considering that Lycurgus their lawgiver was so addicted to elegant learning, as to have been the first that brought out of Ionia the scattered works of Homer, and sent the poet Thales from Crete to prepare and mollify the Spartan surliness with his smooth songs and odes, the better to plant among them law and civility, it is to be wondered how museless and unbookish they were, minding nought but the feats of war. There needed no licensing of books among them, for they disliked all but their own laconic apophthegms, and took a slight occasion to chase Archilochus out of their city, perhaps for composing in a higher strain than their own soldierly ballads and roundels could reach to. Or if it were for his broad verses, they were not therein so cautious but they were as dissolute in their promiscuous conversing; whence Euripides affirms in Andromache, that their women were all unchaste. Thus much may give us light after what sort of books were prohibited among the Greeks.The Romans also, for many ages trained up only to a military roughness resembling most the Lacedaemonian guise, knew of learning little but what their twelve Tables, and the Pontific College with their augurs and flamens taught them in religion and law; so unacquainted with other learning, that when Carneades and Critolaus, with the Stoic Diogenes, coming ambassadors to Rome, took thereby occasion to give the city a taste of their philosophy, they were suspected for seducers by no less a man than Cato the Censor, who moved it in the Senate to dismiss them speedily, and to banish all such Attic babblers out of Italy. But Scipio and others of the noblest senators withstood him and his old Sabine austerity; honoured and admired the men; and the censor himself at last, in his old age, fell to the study of that whereof before he was so scrupulous. And yet at the same time Naevius and Plautus, the first Latin comedians, had filled the city with all the borrowed scenes of Menander and Philemon. Then began to be considered there also what was to be done to libellous books and authors; for Naevius was quickly cast into prison for his unbridled pen, and released by the tribunes upon his recantation; we read also that libels were burnt, and the makers punished by Augustus. The like severity, no doubt, was used, if aught were impiously written against their esteemed gods. Except in these two points, how the world went in books, the magistrate kept no reckoning.And therefore Lucretius without impeachment versifies his Epicurism to Memmius, and had the honour to be set forth the second time by Cicero, so great a father of the Commonwealth; although himself disputes against that opinion in his own writings. Nor was the satirical sharpness or naked plainness of Lucilius, or Catullus, or Flaccus, by any order prohibited. And for matters of state, the story of Titus Livius, though it extolled that part which Pompey held, was not therefore suppressed by Octavius Caesar of the other faction. But that Naso was by him banished in his old age, for the wanton poems of his youth, was but a mere covert of state over some secret cause: and besides, the books were neither banished nor called in. From hence we shall meet with little else but tyranny in the Roman empire, that we may not marvel, if not so often bad as good books were silenced. I shall therefore deem to have been large enough, in producing what among the ancients was punishable to write; save only which, all other arguments were free to treat on.By this time the emperors were become Christians, whose discipline in this point I do not find to have been more severe than what was formerly in practice. The books of those whom they took to be grand heretics were examined, refuted, and condemned in the general Councils; and not till then were prohibited, or burnt, by authority of the emperor. As for the writings of heathen authors, unless they were plain invectives against Christianity, as those of Porphyrius and Proclus, they met with no interdict that can be cited, till about the year 400, in a Carthaginian Council, wherein bishops themselves were forbid to read the books of Gentiles, but heresies they might read: while others long before them, on the contrary, scrupled more the books of heretics than of Gentiles. And that the primitive Councils and bishops were wont only to declare what books were not commendable, passing no further, but leaving it to each one's conscience to read or to lay by, till after the year 800, is observed already by Padre Paolo, the great unmasker of the Trentine Council.After which time the Popes of Rome, engrossing what they pleased of political rule into their own hands, extended their dominion over men's eyes, as they had before over their judgments, burning and prohibiting to be read what they fancied not; yet sparing in their censures, and the books not many which they so dealt with: till Martin V., by his bull, not only prohibited, but was the first that excommunicated the reading of heretical books; for about that time Wickliffe and Huss, growing terrible, were they who first drove the Papal Court to a stricter policy of prohibiting. Which course Leo X. and his successors followed, until the Council of Trent and the Spanish Inquisition engendering together brought forth, or perfected, those Catalogues and expurging Indexes, that rake through the entrails of many an old good author, with a violation worse than any could be offered to his tomb. Nor did they stay in matters heretical, but any subject that was not to their palate, they either condemned in a Prohibition, or had it straight into the new purgatory of an index.To fill up the measure of encroachment, their last invention was to ordain that no book, pamphlet, or paper should be printed (as if St. Peter had bequeathed them the keys of the press also out of Paradise) unless it were approved and licensed under the hands of two or three glutton friars. For example:Let the Chancellor Cini be pleased to see if in this present work be contained aught that may withstand the printing.I have seen this present work, and find nothing athwart the Catholic faith and good manners: in witness whereof I have given, etc.Attending the precedent relation, it is allowed that this present work of Davanzati may be printed.It may be printed, July 15.Sure they have a conceit, if he of the bottomless pit had not long since broke prison, that this quadruple exorcism would bar him down. I fear their next design will be to get into their custody the licensing of that which they say Claudius intended, but went not through with. Vouchsafe to see another of their forms, the Roman stamp:Imprimatur, If it seem good to the reverend Master of the Holy Palace.ImprimaturasdfasdfSometimes five Imprimaturs are seen together dialogue-wise in the piazza of one title-page, complimenting and ducking each to other with their shaven reverences, whether the author, who stands by in perplexity at the foot of his epistle, shall to the press or to the sponge. These are the pretty responsories, these are the dear antiphonies, that so bewitched of late our prelates and their chaplains with the goodly echo they made; and besotted us to the gay imitation of a lordly Imprimatur, one from Lambeth House, another from the west end of Paul's; so apishly Romanizing, that the word of command still was set down in Latin; as if the learned grammatical pen that wrote it would cast no ink without Latin; or perhaps, as they thought, because no vulgar tongue was worthy to express the pure conceit of an Imprimatur, but rather, as I hope, for that our English, the language of men ever famous and foremost in the achievements of liberty, will not easily find servile letters enow to spell such a dictatory presumption English.And thus ye have the inventors and the original of book-licensing ripped up and drawn as lineally as any pedigree. We have it not, that can be heard of, from any ancient state, or polity or church; nor by any statute left us by our ancestors elder or later; nor from the modern custom of any reformed city or church abroad, but from the most anti-christian council and the most tyrannous inquisition that ever inquired. Till then books were ever as freely admitted into the world as any other birth; the issue of the brain was no more stifled than the issue of the womb: no envious Juno sat cross-legged over the nativity of any man's intellectual offspring; but if it proved a monster, who denies, but that it was justly burnt, or sunk into the sea? But that a book, in worse condition than a peccant soul, should be to stand before a jury ere it be born to the world, and undergo yet in darkness the judgment of Radamanth and his colleagues, ere it can pass the ferry backward into light, was never heard before, till that mysterious iniquity, provoked and troubled at the first entrance of Reformation, sought out new limbos and new hells wherein they might include our books also within the number of their damned. And this was the rare morsel so officiously snatched up, and so ill-favouredly imitated by our inquisiturient bishops, and the attendant minorites their chaplains. That ye like not now these most certain authors of this licensing order, and that all sinister intention was far distant from your thoughts, when ye were importuned the passing it, all men who know the integrity of your actions, and how ye honour truth, will clear ye readily.But some will say, what though the inventors were bad, the thing for all that may be good? It may so; yet if that thing be no such deep invention, but obvious, and easy for any man to light on, and yet best and wisest commonwealths through all ages and occasions have forborne to use it, and falsest seducers and oppressors of men were the first who took it up, and to no other purpose but to obstruct and hinder the first approach of Reformation; I am of those who believe it will be a harder alchemy than Lullius ever knew, to sublimate any good use out of such an invention. Yet this only is what I request to gain from this reason, that it may be held a dangerous and suspicious fruit, as certainly it deserves, for the tree that bore it, until I can dissect one by one the properties it has. But I have first to finish, as was propounded, what is to be thought in general of reading books, whatever sort they be, and whether be more the benefit or the harm that thence proceeds.Not to insist upon the examples of Moses, Daniel, and Paul, who were skilful in all the learning of the Egyptians, Chaldeans, and Greeks, which could not probably be without reading their books of all sorts; in Paul especially, who thought it no defilement to insert into Holy Scripture the sentences of three Greek poets, and one of them a tragedian; the question was notwithstanding sometimes controverted among the primitive doctors, but with great odds on that side which affirmed it both lawful and profitable; as was then evidently perceived, when Julian the Apostate and subtlest enemy to our faith made a decree forbidding Christians the study of heathen learning: for, said he, they wound us with our own weapons, and with our own arts and sciences they overcome us. And indeed the Christians were put so to their shifts by this crafty means, and so much in danger to decline into all ignorance, that the two Apollinarii were fain, as a man may say, to coin all the seven liberal sciences out of the Bible, reducing it into divers forms of orations, poems, dialogues, even to the calculating of a new Christian grammar. But, saith the historian Socrates, the providence of God provided better than the industry of Apollinarius and his son, by taking away that illiterate law with the life of him who devised it. So great an injury they then held it to be deprived of Hellenic learning; and thought it a persecution more undermining, and secretly decaying the Church, than the open cruelty of Decius or Diocletian.And perhaps it was the same politic drift that the devil whipped St. Jerome in a lenten dream, for reading Cicero; or else it was a phantasm bred by the fever which had then seized him. For had an angel been his discipliner, unless it were for dwelling too much upon Ciceronianisms, and had chastised the reading, not the vanity, it had been plainly partial; first to correct him for grave Cicero, and not for scurril Plautus, whom he confesses to have been reading, not long before; next to correct him only, and let so many more ancient fathers wax old in those pleasant and florid studies without the lash of such a tutoring apparition; insomuch that Basil teaches how some good use may be made of Margites, a sportful poem, not now extant, writ by Homer; and why not then of Morgante, an Italian romance much to the same purpose?But if it be agreed we shall be tried by visions, there is a vision recorded by Eusebius, far ancienter than this tale of Jerome, to the nun Eustochium, and, besides, has nothing of a fever in it. Dionysius Alexandrinus was about the year 240 a person of great name in the Church for piety and learning, who had wont to avail himself much against heretics by being conversant in their books; until a certain presbyter laid it scrupulously to his conscience, how he durst venture himself among those defiling volumes. The worthy man, loath to give offence, fell into a new debate with himself what was to be thought; when suddenly a vision sent from God (it is his own epistle that so avers it) confirmed him in these words: READ ANY BOOKS WHATEVER COME TO THY HANDS, FOR THOU ART SUFFICIENT BOTH TO JUDGE ARIGHT AND TO EXAMINE EACH MATTER. To this revelation he assented the sooner, as he confesses, because it was answerable to that of the Apostle to the Thessalonians, PROVE ALL THINGS, HOLD FAST THAT WHICH IS GOOD. And he might have added another remarkable saying of the same author: TO THE PURE, ALL THINGS ARE PURE; not only meats and drinks, but all kind of knowledge whether of good or evil; the knowledge cannot defile, nor consequently the books, if the will and conscience be not defiled.For books are as meats and viands are; some of good, some of evil substance; and yet God, in that unapocryphal vision, said without exception, RISE, PETER, KILL AND EAT, leaving the choice to each man's discretion. Wholesome meats to a vitiated stomach differ little or nothing from unwholesome; and best books to a naughty mind are not unappliable to occasions of evil. Bad meats will scarce breed good nourishment in the healthiest concoction; but herein the difference is of bad books, that they to a discreet and judicious reader serve in many respects to discover, to confute, to forewarn, and to illustrate. Whereof what better witness can ye expect I should produce, than one of your own now sitting in Parliament, the chief of learned men reputed in this land, Mr. Selden; whose volume of natural and national laws proves, not only by great authorities brought together, but by exquisite reasons and theorems almost mathematically demonstrative, that all opinions, yea errors, known, read, and collated, are of main service and assistance toward the speedy attainment of what is truest. I conceive, therefore, that when God did enlarge the universal diet of man's body, saving ever the rules of temperance, he then also, as before, left arbitrary the dieting and repasting of our minds; as wherein every mature man might have to exercise his own leading capacity.How great a virtue is temperance, how much of moment through the whole life of man! Yet God commits the managing so great a trust, without particular law or prescription, wholly to the demeanour of every grown man. And therefore when he himself tabled the Jews from heaven, that omer, which was every man's daily portion of manna, is computed to have been more than might have well sufficed the heartiest feeder thrice as many meals. For those actions which enter into a man, rather than issue out of him, and therefore defile not, God uses not to captivate under a perpetual childhood of prescription, but trusts him with the gift of reason to be his own chooser; there were but little work left for preaching, if law and compulsion should grow so fast upon those things which heretofore were governed only by exhortation. Solomon informs us, that much reading is a weariness to the flesh; but neither he nor other inspired author tells us that such or such reading is unlawful: yet certainly had God thought good to limit us herein, it had been much more expedient to have told us what was unlawful than what was wearisome. As for the burning of those Ephesian books by St. Paul's converts; 'tis replied the books were magic, the Syriac so renders them. It was a private act, a voluntary act, and leaves us to a voluntary imitation: the men in remorse burnt those books which were their own; the magistrate by this example is not appointed; these men practised the books, another might perhaps have read them in some sort usefully.Good and evil we know in the field of this world grow up together almost inseparably; and the knowledge of good is so involved and interwoven with the knowledge of evil, and in so many cunning resemblances hardly to be discerned, that those confused seeds which were imposed upon Psyche as an incessant labour to cull out, and sort asunder, were not more intermixed. It was from out the rind of one apple tasted, that the knowledge of good and evil, as two twins cleaving together, leaped forth into the world. And perhaps this is that doom which Adam fell into of knowing good and evil, that is to say of knowing good by evil. As therefore the state of man now is; what wisdom can there be to choose, what continence to forbear without the knowledge of evil? He that can apprehend and consider vice with all her baits and seeming pleasures, and yet abstain, and yet distinguish, and yet prefer that which is truly better, he is the true warfaring Christian.I cannot praise a fugitive and cloistered virtue, unexercised and unbreathed, that never sallies out and sees her adversary but slinks out of the race, where that immortal garland is to be run for, not without dust and heat. Assuredly we bring not innocence into the world, we bring impurity much rather; that which purifies us is trial, and trial is by what is contrary. That virtue therefore which is but a youngling in the contemplation of evil, and knows not the utmost that vice promises to her followers, and rejects it, is but a blank virtue, not a pure; her whiteness is but an excremental whiteness. Which was the reason why our sage and serious poet Spenser, whom I dare be known to think a better teacher than Scotus or Aquinas, describing true temperance under the person of Guion, brings him in with his palmer through the cave of Mammon, and the bower of earthly bliss, that he might see and know, and yet abstain. Since therefore the knowledge and survey of vice is in this world so necessary to the constituting of human virtue, and the scanning of error to the confirmation of truth, how can we more safely, and with less danger, scout into the regions of sin and falsity than by reading all manner of tractates and hearing all manner of reason? And this is the benefit which may be had of books promiscuously read.But of the harm that may result hence three kinds are usually reckoned. First, is feared the infection that may spread; but then all human learning and controversy in religious points must remove out of the world, yea the Bible itself; for that ofttimes relates blasphemy not nicely, it describes the carnal sense of wicked men not unelegantly, it brings in holiest men passionately murmuring against Providence through all the arguments of Epicurus: in other great disputes it answers dubiously and darkly to the common reader. And ask a Talmudist what ails the modesty of his marginal Keri, that Moses and all the prophets cannot persuade him to pronounce the textual Chetiv. For these causes we all know the Bible itself put by the Papist must be next removed, as Clement of Alexandria, and that Eusebian book of Evangelic preparation, transmitting our ears through a hoard of heathenish obscenities to receive the Gospel. Who finds not that Irenaeus, Epiphanius, Jerome, and others discover more heresies than they well confute, and that oft for heresy which is the truer opinion?Nor boots it to say for these, and all the heathen writers of greatest infection, if it must be thought so, with whom is bound up the life of human learning, that they writ in an unknown tongue, so long as we are sure those languages are known as well to the worst of men, who are both most able and most diligent to instil the poison they suck, first into the courts of princes, acquainting them with the choicest delights and criticisms of sin. As perhaps did that Petronius whom Nero called his Arbiter, the master of his revels; and the notorious ribald of Arezzo, dreaded and yet dear to the Italian courtiers. I name not him for posterity's sake, whom Henry VIII. named in merriment his vicar of hell. By which compendious way all the contagion that foreign books can infuse will find a passage to the people far easier and shorter than an Indian voyage, though it could be sailed either by the north of Cataio eastward, or of Canada westward, while our Spanish licensing gags the English press never so severely.But on the other side that infection which is from books of controversy in religion is more doubtful and dangerous to the learned than to the ignorant; and yet those books must be permitted untouched by the licenser. It will be hard to instance where any ignorant man hath been ever seduced by papistical book in English, unless it were commended and expounded to him by some of that clergy: and indeed all such tractates, whether false or true, are as the prophecy of Isaiah was to the eunuch, not to be UNDERSTOOD WITHOUT A GUIDE. But of our priests and doctors how many have been corrupted by studying the comments of Jesuits and Sorbonists, and how fast they could transfuse that corruption into the people, our experience is both late and sad. It is not forgot, since the acute and distinct Arminius was perverted merely by the perusing of a nameless discourse written at Delft, which at first he took in hand to confute.Seeing, therefore, that those books, and those in great abundance, which are likeliest to taint both life and doctrine, cannot be suppressed without the fall of learning and of all ability in disputation, and that these books of either sort are most and soonest catching to the learned, from whom to the common people whatever is heretical or dissolute may quickly be conveyed, and that evil manners are as perfectly learnt without books a thousand other ways which cannot be stopped, and evil doctrine not with books can propagate, except a teacher guide, which he might also do without writing, and so beyond prohibiting, I am not able to unfold, how this cautelous enterprise of licensing can be exempted from the number of vain and impossible attempts. And he who were pleasantly disposed could not well avoid to liken it to the exploit of that gallant man who thought to pound up the crows by shutting his park gate.Besides another inconvenience, if learned men be the first receivers out of books and dispreaders both of vice and error, how shall the licensers themselves be confided in, unless we can confer upon them, or they assume to themselves above all others in the land, the grace of infallibility and uncorruptedness? And again, if it be true that a wise man, like a good refiner, can gather gold out of the drossiest volume, and that a fool will be a fool with the best book, yea or without book; there is no reason that we should deprive a wise man of any advantage to his wisdom, while we seek to restrain from a fool, that which being restrained will be no hindrance to his folly. For if there should be so much exactness always used to keep that from him which is unfit for his reading, we should in the judgment of Aristotle not only, but of Solomon and of our Saviour, not vouchsafe him good precepts, and by consequence not willingly admit him to good books; as being certain that a wise man will make better use of an idle pamphlet, than a fool will do of sacred Scripture.'Tis next alleged we must not expose ourselves to temptations without necessity, and next to that, not employ our time in vain things. To both these objections one answer will serve, out of the grounds already laid, that to all men such books are not temptations, nor vanities, but useful drugs and materials wherewith to temper and compose effective and strong medicines, which man's life cannot want. The rest, as children and childish men, who have not the art to qualify and prepare these working minerals, well may be exhorted to forbear, but hindered forcibly they cannot be by all the licensing that Sainted Inquisition could ever yet contrive. Which is what I promised to deliver next: that this order of licensing conduces nothing to the end for which it was framed; and hath almost prevented me by being clear already while thus much hath been explaining. See the ingenuity of Truth, who, when she gets a free and willing hand, opens herself faster than the pace of method and discourse can overtake her.It was the task which I began with, to show that no nation, or well-instituted state, if they valued books at all, did ever use this way of licensing; and it might be answered, that this is a piece of prudence lately discovered. To which I return, that as it was a thing slight and obvious to think on, so if it had been difficult to find out, there wanted not among them long since who suggested such a course; which they not following, leave us a pattern of their judgment that it was not the rest knowing, but the not approving, which was the cause of their not using it.Plato, a man of high authority, indeed, but least of all for his Commonwealth, in the book of his Laws, which no city ever yet received, fed his fancy by making many edicts to his airy burgomasters, which they who otherwise admire him wish had been rather buried and excused in the genial cups of an Academic night sitting. By which laws he seems to tolerate no kind of learning but by unalterable decree, consisting most of practical traditions, to the attainment whereof a library of smaller bulk than his own Dialogues would be abundant. And there also enacts, that no poet should so much as read to any private man what he had written, until the judges and law-keepers had seen it, and allowed it. But that Plato meant this law peculiarly to that commonwealth which he had imagined, and to no other, is evident. Why was he not else a lawgiver to himself, but a transgressor, and to be expelled by his own magistrates; both for the wanton epigrams and dialogues which he made, and his perpetual reading of Sophron Mimus and Aristophanes, books of grossest infamy, and also for commending the latter of them, though he were the malicious libeller of his chief friends, to be read by the tyrant Dionysius, who had little need of such trash to spend his time on? But that he knew this licensing of poems had reference and dependence to many other provisos there set down in his fancied republic, which in this world could have no place: and so neither he himself, nor any magistrate or city, ever imitated that course, which, taken apart from those other collateral injunctions, must needs be vain and fruitless. For if they fell upon one kind of strictness, unless their care were equal to regulate all other things of like aptness to corrupt the mind, that single endeavour they knew would be but a fond labour; to shut and fortify one gate against corruption, and be necessitated to leave others round about wide open.If we think to regulate printing, thereby to rectify manners, we must regulate all recreation and pastimes, all that is delightful to man. No music must be heard, no song be set or sung, but what is grave and Doric. There must be licensing dancers, that no gesture, motion, or deportment be taught our youth but what by their allowance shall be thought honest; for such Plato was provided of. It will ask more than the work of twenty licensers to examine all the lutes, the violins, and the guitars in every house; they must not be suffered to prattle as they do, but must be licensed what they may say. And who shall silence all the airs and madrigals that whisper softness in chambers? The windows also, and the balconies must be thought on; there are shrewd books, with dangerous frontispieces, set to sale; who shall prohibit them, shall twenty licensers? The villages also must have their visitors to inquire what lectures the bagpipe and the rebeck reads, even to the ballatry and the gamut of every municipal fiddler, for these are the countryman's Arcadias, and his Monte Mayors.Next, what more national corruption, for which England hears ill abroad, than household gluttony: who shall be the rectors of our daily rioting? And what shall be done to inhibit the multitudes that frequent those houses where drunkenness is sold and harboured? Our garments also should be referred to the licensing of some more sober workmasters to see them cut into a less wanton garb. Who shall regulate all the mixed conversation of our youth, male and female together, as is the fashion of this country? Who shall still appoint what shall be discoursed, what presumed, and no further? Lastly, who shall forbid and separate all idle resort, all evil company? These things will be, and must be; but how they shall be least hurtful, how least enticing, herein consists the grave and governing wisdom of a state.To sequester out of the world into Atlantic and Utopian polities, which never can be drawn into use, will not mend our condition; but to ordain wisely as in this world of evil, in the midst whereof God hath placed us unavoidably. Nor is it Plato's licensing of books will do this, which necessarily pulls along with it so many other kinds of licensing, as will make us all both ridiculous and weary, and yet frustrate; but those unwritten, or at least unconstraining, laws of virtuous education, religious and civil nurture, which Plato there mentions as the bonds and ligaments of the commonwealth, the pillars and the sustainers of every written statute; these they be which will bear chief sway in such matters as these, when all licensing will be easily eluded. Impunity and remissness, for certain, are the bane of a commonwealth; but here the great art lies, to discern in what the law is to bid restraint and punishment, and in what things persuasion only is to work.If every action, which is good or evil in man at ripe years, were to be under pittance and prescription and compulsion, what were virtue but a name, what praise could be then due to well-doing, what gramercy to be sober, just, or continent? Many there be that complain of divine Providence for suffering Adam to transgress; foolish tongues! When God gave him reason, he gave him freedom to choose, for reason is but choosing; he had been else a mere artificial Adam, such an Adam as he is in the motions. We ourselves esteem not of that obedience, or love, or gift, which is of force: God therefore left him free, set before him a provoking object, ever almost in his eyes; herein consisted his merit, herein the right of his reward, the praise of his abstinence. Wherefore did he create passions within us, pleasures round about us, but that these rightly tempered are the very ingredients of virtue?They are not skilful considerers of human things, who imagine to remove sin by removing the matter of sin; for, besides that it is a huge heap increasing under the very act of diminishing, though some part of it may for a time be withdrawn from some persons, it cannot from all, in such a universal thing as books are; and when this is done, yet the sin remains entire. Though ye take from a covetous man all his treasure, he has yet one jewel left, ye cannot bereave him of his covetousness. Banish all objects of lust, shut up all youth into the severest discipline that can be exercised in any hermitage, ye cannot make them chaste, that came not hither so; such great care and wisdom is required to the right managing of this point. Suppose we could expel sin by this means; look how much we thus expel of sin, so much we expel of virtue: for the matter of them both is the same; remove that, and ye remove them both alike.This justifies the high providence of God, who, though he command us temperance, justice, continence, yet pours out before us, even to a profuseness, all desirable things, and gives us minds that can wander beyond all limit and satiety. Why should we then affect a rigour contrary to the manner of God and of nature, by abridging or scanting those means, which books freely permitted are, both to the trial of virtue and the exercise of truth? It would be better done, to learn that the law must needs be frivolous, which goes to restrain things, uncertainly and yet equally working to good and to evil. And were I the chooser, a dream of well-doing should be preferred before many times as much the forcible hindrance of evil-doing. For God sure esteems the growth and completing of one virtuous person more than the restraint of ten vicious.And albeit whatever thing we hear or see, sitting, walking, travelling, or conversing, may be fitly called our book, and is of the same effect that writings are, yet grant the thing to be prohibited were only books, it appears that this Order hitherto is far insufficient to the end which it intends. Do we not see, not once or oftener, but weekly, that continued court-libel against the Parliament and City, printed, as the wet sheets can witness, and dispersed among us, for all that licensing can do? Yet this is the prime service a man would think, wherein this Order should give proof of itself. If it were executed, you'll say. But certain, if execution be remiss or blindfold now, and in this particular, what will it be hereafter and in other books? If then the Order shall not be vain and frustrate, behold a new labour, Lords and Commons, ye must repeal and proscribe all scandalous and unlicensed books already printed and divulged; after ye have drawn them up into a list, that all may know which are condemned, and which not; and ordain that no foreign books be delivered out of custody, till they have been read over. This office will require the whole time of not a few overseers, and those no vulgar men. There be also books which are partly useful and excellent, partly culpable and pernicious; this work will ask as many more officials, to make expurgations and expunctions, that the commonwealth of learning be not damnified. In fine, when the multitude of books increase upon their hands, ye must be fain to catalogue all those printers who are found frequently offending, and forbid the importation of their whole suspected typography. In a word, that this your Order may be exact and not deficient, ye must reform it perfectly according to the model of Trent and Seville, which I know ye abhor to do.Yet though ye should condescend to this, which God forbid, the Order still would be but fruitless and defective to that end whereto ye meant it. If to prevent sects and schisms, who is so unread or so uncatechized in story, that hath not heard of many sects refusing books as a hindrance, and preserving their doctrine unmixed for many ages, only by unwritten traditions? The Christian faith, for that was once a schism, is not unknown to have spread all over Asia, ere any Gospel or Epistle was seen in writing. If the amendment of manners be aimed at, look into Italy and Spain, whether those places be one scruple the better, the honester, the wiser, the chaster, since all the inquisitional rigour that hath been executed upon books.Another reason, whereby to make it plain that this Order will miss the end it seeks, consider by the quality which ought to be in every licenser. It cannot be denied but that he who is made judge to sit upon the birth or death of books, whether they may be wafted into this world or not, had need to be a man above the common measure, both studious, learned, and judicious; there may be else no mean mistakes in the censure of what is passable or not; which is also no mean injury. If he be of such worth as behooves him, there cannot be a more tedious and unpleasing journey-work, a greater loss of time levied upon his head, than to be made the perpetual reader of unchosen books and pamphlets, ofttimes huge volumes. There is no book that is acceptable unless at certain seasons; but to be enjoined the reading of that at all times, and in a hand scarce legible, whereof three pages would not down at any time in the fairest print, is an imposition which I cannot believe how he that values time and his own studies, or is but of a sensible nostril, should be able to endure. In this one thing I crave leave of the present licensers to be pardoned for so thinking; who doubtless took this office up, looking on it through their obedience to the Parliament, whose command perhaps made all things seem easy and unlaborious to them; but that this short trial hath wearied them out already, their own expressions and excuses to them who make so many journeys to solicit their licence are testimony enough. Seeing therefore those who now possess the employment by all evident signs wish themselves well rid of it; and that no man of worth, none that is not a plain unthrift of his own hours, is ever likely to succeed them, except he mean to put himself to the salary of a press corrector; we may easily foresee what kind of licensers we are to expect hereafter, either ignorant, imperious, and remiss, or basely pecuniary. This is what I had to show, wherein this Order cannot conduce to that end whereof it bears the intention.I lastly proceed from the no good it can do, to the manifest hurt it causes, in being first the greatest discouragement and affront that can be offered to learning, and to learned men.It was the complaint and lamentation of prelates, upon every least breath of a motion to remove pluralities, and distribute more equally Church revenues, that then all learning would be for ever dashed and discouraged. But as for that opinion, I never found cause to think that the tenth part of learning stood or fell with the clergy: nor could I ever but hold it for a sordid and unworthy speech of any churchman who had a competency left him. If therefore ye be loath to dishearten utterly and discontent, not the mercenary crew of false pretenders to learning, but the free and ingenuous sort of such as evidently were born to study, and love learning for itself, not for lucre or any other end but the service of God and of truth, and perhaps that lasting fame and perpetuity of praise which God and good men have consented shall be the reward of those whose published labours advance the good of mankind; then know that, so far to distrust the judgment and the honesty of one who hath but a common repute in learning, and never yet offended, as not to count him fit to print his mind without a tutor and examiner, lest he should drop a schism, or something of corruption, is the greatest displeasure and indignity to a free and knowing spirit that can be put upon him.What advantage is it to be a man, over it is to be a boy at school, if we have only escaped the ferula to come under the fescue of an Imprimatur; if serious and elaborate writings, as if they were no more than the theme of a grammar-lad under his pedagogue, must not be uttered without the cursory eyes of a temporizing and extemporizing licenser? He who is not trusted with his own actions, his drift not being known to be evil, and standing to the hazard of law and penalty, has no great argument to think himself reputed in the Commonwealth wherein he was born for other than a fool or a foreigner. When a man writes to the world, he summons up all his reason and deliberation to assist him; he searches, meditates, is industrious, and likely consults and confers with his judicious friends; after all which done he takes himself to be informed in what he writes, as well as any that writ before him. If, in this the most consummate act of his fidelity and ripeness, no years, no industry, no former proof of his abilities can bring him to that state of maturity, as not to be still mistrusted and suspected, unless he carry all his considerate diligence, all his midnight watchings and expense of Palladian oil, to the hasty view of an unleisured licenser, perhaps much his younger, perhaps his inferior in judgment, perhaps one who never knew the labour of bookwriting, and if he be not repulsed or slighted, must appear in print like a puny with his guardian, and his censor's hand on the back of his title to be his bail and surety that he is no idiot or seducer, it cannot be but a dishonour and derogation to the author, to the book, to the privilege and dignity of learning.And what if the author shall be one so copious of fancy, as to have many things well worth the adding come into his mind after licensing, while the book is yet under the press, which not seldom happens to the best and diligentest writers; and that perhaps a dozen times in one book? The printer dares not go beyond his licensed copy; so often then must the author trudge to his leave-giver, that those his new insertions may be viewed; and many a jaunt will be made, ere that licenser, for it must be the same man, can either be found, or found at leisure; meanwhile either the press must stand still, which is no small damage, or the author lose his accuratest thoughts, and send the book forth worse than he had made it, which to a diligent writer is the greatest melancholy and vexation that can befall.And how can a man teach with authority, which is the life of teaching; how can he be a doctor in his book as he ought to be, or else had better be silent, whenas all he teaches, all he delivers, is but under the tuition, under the correction of his patriarchal licenser to blot or alter what precisely accords not with the hidebound humour which he calls his judgment? When every acute reader, upon the first sight of a pedantic licence, will be ready with these like words to ding the book a quoit's distance from him: I hate a pupil teacher, I endure not an instructor that comes to me under the wardship of an overseeing fist. I know nothing of the licenser, but that I have his own hand here for his arrogance; who shall warrant me his judgment? The State, sir, replies the stationer, but has a quick return: The State shall be my governors, but not my critics; they may be mistaken in the choice of a licenser, as easily as this licenser may be mistaken in an author; this is some common stuff; and he might add from Sir Francis Bacon, THAT SUCH AUTHORIZED BOOKS ARE BUT THE LANGUAGE OF THE TIMES. For though a licenser should happen to be judicious more than ordinary, which will be a great jeopardy of the next succession, yet his very office and his commission enjoins him to let pass nothing but what is vulgarly received already.Nay, which is more lamentable, if the work of any deceased author, though never so famous in his lifetime and even to this day, come to their hands for licence to be printed, or reprinted, if there be found in his book one sentence of a venturous edge, uttered in the height of zeal (and who knows whether it might not be the dictate of a divine spirit?) yet not suiting with every low decrepit humour of their own, though it were Knox himself, the reformer of a kingdom, that spake it, they will not pardon him their dash: the sense of that great man shall to all posterity be lost, for the fearfulness or the presumptuous rashness of a perfunctory licenser. And to what an author this violence hath been lately done, and in what book of greatest consequence to be faithfully published, I could now instance, but shall forbear till a more convenient season.Yet if these things be not resented seriously and timely by them who have the remedy in their power, but that such iron-moulds as these shall have authority to gnaw out the choicest periods of exquisitest books, and to commit such a treacherous fraud against the orphan remainders of worthiest men after death, the more sorrow will belong to that hapless race of men, whose misfortune it is to have understanding. Henceforth let no man care to learn, or care to be more than worldly-wise; for certainly in higher matters to be ignorant and slothful, to be a common steadfast dunce, will be the only pleasant life, and only in request.And it is a particular disesteem of every knowing person alive, and most injurious to the written labours and monuments of the dead, so to me it seems an undervaluing and vilifying of the whole nation. I cannot set so light by all the invention, the art, the wit, the grave and solid judgment which is in England, as that it can be comprehended in any twenty capacities how good soever, much less that it should not pass except their superintendence be over it, except it be sifted and strained with their strainers, that it should be uncurrent without their manual stamp. Truth and understanding are not such wares as to be monopolized and traded in by tickets and statutes and standards. We must not think to make a staple commodity of all the knowledge in the land, to mark and licence it like our broadcloth and our woolpacks. What is it but a servitude like that imposed by the Philistines, not to be allowed the sharpening of our own axes and coulters, but we must repair from all quarters to twenty licensing forges? Had anyone written and divulged erroneous things and scandalous to honest life, misusing and forfeiting the esteem had of his reason among men, if after conviction this only censure were adjudged him that he should never henceforth write but what were first examined by an appointed officer, whose hand should be annexed to pass his credit for him that now he might be safely read; it could not be apprehended less than a disgraceful punishment. Whence to include the whole nation, and those that never yet thus offended, under such a diffident and suspectful prohibition, may plainly be understood what a disparagement it is. So much the more, whenas debtors and delinquents may walk abroad without a keeper, but unoffensive books must not stir forth without a visible jailer in their title.Nor is it to the common people less than a reproach; for if we be so jealous over them, as that we dare not trust them with an English pamphlet, what do we but censure them for a giddy, vicious, and ungrounded people; in such a sick and weak state of faith and discretion, as to be able to take nothing down but through the pipe of a licenser? That this is care or love of them, we cannot pretend, whenas, in those popish places where the laity are most hated and despised, the same strictness is used over them. Wisdom we cannot call it, because it stops but one breach of licence, nor that neither: whenas those corruptions, which it seeks to prevent, break in faster at other doors which cannot be shut.And in conclusion it reflects to the disrepute of our ministers also, of whose labours we should hope better, and of the proficiency which their flock reaps by them, than that after all this light of the Gospel which is, and is to be, and all this continual preaching, they should still be frequented with such an unprincipled, unedified and laic rabble, as that the whiff of every new pamphlet should stagger them out of their catechism and Christian walking. This may have much reason to discourage the ministers when such a low conceit is had of all their exhortations, and the benefiting of their hearers, as that they are not thought fit to be turned loose to three sheets of paper without a licenser; that all the sermons, all the lectures preached, printed, vented in such numbers, and such volumes, as have now well nigh made all other books unsaleable, should not be armour enough against one single Enchiridion, without the castle of St. Angelo of an Imprimatur.And lest some should persuade ye, Lords and Commons, that these arguments of learned men's discouragement at this your Order are mere flourishes, and not real, I could recount what I have seen and heard in other countries, where this kind of inquisition tyrannizes; when I have sat among their learned men, for that honour I had, and been counted happy to be born in such a place of philosophic freedom, as they supposed England was, while themselves did nothing but bemoan the servile condition into which learning amongst them was brought; that this was it which had damped the glory of Italian wits; that nothing had been there written now these many years but flattery and fustian. There it was that I found and visited the famous Galileo, grown old, a prisoner to the Inquisition, for thinking in astronomy otherwise than the Franciscan and Dominican licensers thought. And though I knew that England then was groaning loudest under the prelatical yoke, nevertheless I took it as a pledge of future happiness, that other nations were so persuaded of her liberty. Yet was it beyond my hope that those worthies were then breathing in her air, who should be her leaders to such a deliverance, as shall never be forgotten by any revolution of time that this world hath to finish. When that was once begun, it was as little in my fear that what words of complaint I heard among learned men of other parts uttered against the Inquisition, the same I should hear by as learned men at home, uttered in time of Parliament against an order of licensing; and that so generally that, when I had disclosed myself a companion of their discontent, I might say, if without envy, that he whom an honest quaestorship had endeared to the Sicilians was not more by them importuned against Verres, than the favourable opinion which I had among many who honour ye, and are known and respected by ye, loaded me with entreaties and persuasions, that I would not despair to lay together that which just reason should bring into my mind, toward the removal of an undeserved thraldom upon learning. That this is not therefore the disburdening of a particular fancy, but the common grievance of all those who had prepared their minds and studies above the vulgar pitch to advance truth in others, and from others to entertain it, thus much may satisfy.And in their name I shall for neither friend nor foe conceal what the general murmur is; that if it come to inquisitioning again and licensing, and that we are so timorous of ourselves, and so suspicious of all men, as to fear each book and the shaking of every leaf, before we know what the contents are; if some who but of late were little better than silenced from preaching shall come now to silence us from reading, except what they please, it cannot be guessed what is intended by some but a second tyranny over learning: and will soon put it out of controversy, that bishops and presbyters are the same to us, both name and thing. That those evils of prelaty, which before from five or six and twenty sees were distributively charged upon the whole people, will now light wholly upon learning, is not obscure to us: whenas now the pastor of a small unlearned parish on the sudden shall be exalted archbishop over a large diocese of books, and yet not remove, but keep his other cure too, a mystical pluralist. He who but of late cried down the sole ordination of every novice Bachelor of Art, and denied sole jurisdiction over the simplest parishioner, shall now at home in his private chair assume both these over worthiest and excellentest books and ablest authors that write them.This is not, ye Covenants and Protestations that we have made! this is not to put down prelaty; this is but to chop an episcopacy; this is but to translate the Palace Metropolitan from one kind of dominion into another; this is but an old canonical sleight of commuting our penance. To startle thus betimes at a mere unlicensed pamphlet will after a while be afraid of every conventicle, and a while after will make a conventicle of every Christian meeting. But I am certain that a State governed by the rules of justice and fortitude, or a Church built and founded upon the rock of faith and true knowledge, cannot be so pusillanimous. While things are yet not constituted in religion, that freedom of writing should be restrained by a discipline imitated from the prelates and learnt by them from the Inquisition, to shut us up all again into the breast of a licenser, must needs give cause of doubt and discouragement to all learned and religious men.Who cannot but discern the fineness of this politic drift, and who are the contrivers; that while bishops were to be baited down, then all presses might be open; it was the people's birthright and privilege in time of Parliament, it was the breaking forth of light. But now, the bishops abrogated and voided out of the Church, as if our Reformation sought no more but to make room for others into their seats under another name, the episcopal arts begin to bud again, the cruse of truth must run no more oil, liberty of printing must be enthralled again under a prelatical commission of twenty, the privilege of the people nullified, and, which is worse, the freedom of learning must groan again, and to her old fetters: all this the Parliament yet sitting. Although their own late arguments and defences against the prelates might remember them, that this obstructing violence meets for the most part with an event utterly opposite to the end which it drives at: instead of suppressing sects and schisms, it raises them and invests them with a reputation. The punishing of wits enhances their authority, saith the Viscount St. Albans; and a forbidden writing is thought to be a certain spark of truth that flies up in the faces of them who seek to tread it out. This Order, therefore, may prove a nursing-mother to sects, but I shall easily show how it will be a step-dame to Truth: and first by disenabling us to the maintenance of what is known already.Well knows he who uses to consider, that our faith and knowledge thrives by exercise, as well as our limbs and complexion. Truth is compared in Scripture to a streaming fountain; if her waters flow not in a perpetual progression, they sicken into a muddy pool of conformity and tradition. A man may be a heretic in the truth; and if he believe things only because his pastor says so, or the Assembly so determines, without knowing other reason, though his belief be true, yet the very truth he holds becomes his heresy.There is not any burden that some would gladlier post off to another than the charge and care of their religion. There be--who knows not that there be?--of Protestants and professors who live and die in as arrant an implicit faith as any lay Papist of Loretto. A wealthy man, addicted to his pleasure and to his profits, finds religion to be a traffic so entangled, and of so many piddling accounts, that of all mysteries he cannot skill to keep a stock going upon that trade. What should he do? fain he would have the name to be religious, fain he would bear up with his neighbours in that. What does he therefore, but resolves to give over toiling, and to find himself out some factor, to whose care and credit he may commit the whole managing of his religious affairs; some divine of note and estimation that must be. To him he adheres, resigns the whole warehouse of his religion, with all the locks and keys, into his custody; and indeed makes the very person of that man his religion; esteems his associating with him a sufficient evidence and commendatory of his own piety. So that a man may say his religion is now no more within himself, but is become a dividual movable, and goes and comes near him, according as that good man frequents the house. He entertains him, gives him gifts, feasts him, lodges him; his religion comes home at night, prays, is liberally supped, and sumptuously laid to sleep; rises, is saluted, and after the malmsey, or some well-spiced brewage, and better breakfasted than he whose morning appetite would have gladly fed on green figs between Bethany and Jerusalem, his religion walks abroad at eight, and leaves his kind entertainer in the shop trading all day without his religion.Another sort there be who, when they hear that all things shall be ordered, all things regulated and settled, nothing written but what passes through the custom-house of certain publicans that have the tonnaging and poundaging of all free-spoken truth, will straight give themselves up into your hands, make 'em and cut 'em out what religion ye please: there be delights, there be recreations and jolly pastimes that will fetch the day about from sun to sun, and rock the tedious year as in a delightful dream. What need they torture their heads with that which others have taken so strictly and so unalterably into their own purveying? These are the fruits which a dull ease and cessation of our knowledge will bring forth among the people. How goodly and how to be wished were such an obedient unanimity as this, what a fine conformity would it starch us all into! Doubtless a staunch and solid piece of framework, as any January could freeze together.Nor much better will be the consequence even among the clergy themselves. It is no new thing never heard of before, for a parochial minister, who has his reward and is at his Hercules' pillars in a warm benefice, to be easily inclinable, if he have nothing else that may rouse up his studies, to finish his circuit in an English Concordance and a topic folio, the gatherings and savings of a sober graduateship, a Harmony and a Catena; treading the constant round of certain common doctrinal heads, attended with their uses, motives, marks, and means, out of which, as out of an alphabet, or sol-fa, by forming and transforming, joining and disjoining variously, a little bookcraft, and two hours' meditation, might furnish him unspeakably to the performance of more than a weekly charge of sermoning: not to reckon up the infinite helps of interlinearies, breviaries, synopses, and other loitering gear. But as for the multitude of sermons ready printed and piled up, on every text that is not difficult, our London trading St. Thomas in his vestry, and add to boot St. Martin and St. Hugh, have not within their hallowed limits more vendible ware of all sorts ready made: so that penury he never need fear of pulpit provision, having where so plenteously to refresh his magazine. But if his rear and flanks be not impaled, if his back door be not secured by the rigid licenser, but that a bold book may now and then issue forth and give the assault to some of his old collections in their trenches, it will concern him then to keep waking, to stand in watch, to set good guards and sentinels about his received opinions, to walk the round and counter-round with his fellow inspectors, fearing lest any of his flock be seduced, who also then would be better instructed, better exercised and disciplined. And God send that the fear of this diligence, which must then be used, do not make us affect the laziness of a licensing Church.For if we be sure we are in the right, and do not hold the truth guiltily, which becomes not, if we ourselves condemn not our own weak and frivolous teaching, and the people for an untaught and irreligious gadding rout, what can be more fair than when a man judicious, learned, and of a conscience, for aught we know, as good as theirs that taught us what we know, shall not privily from house to house, which is more dangerous, but openly by writing publish to the world what his opinion is, what his reasons, and wherefore that which is now thought cannot be sound? Christ urged it as wherewith to justify himself, that he preached in public; yet writing is more public than preaching; and more easy to refutation, if need be, there being so many whose business and profession merely it is to be the champions of truth; which if they neglect, what can be imputed but their sloth, or unability?Thus much we are hindered and disinured by this course of licensing, toward the true knowledge of what we seem to know. For how much it hurts and hinders the licensers themselves in the calling of their ministry, more than any secular employment, if they will discharge that office as they ought, so that of necessity they must neglect either the one duty or the other, I insist not, because it is a particular, but leave it to their own conscience, how they will decide it there.There is yet behind of what I purposed to lay open, the incredible loss and detriment that this plot of licensing puts us to; more than if some enemy at sea should stop up all our havens and ports and creeks, it hinders and retards the importation of our richest merchandise, truth; nay, it was first established and put in practice by Antichristian malice and mystery on set purpose to extinguish, if it were possible, the light of Reformation, and to settle falsehood; little differing from that policy wherewith the Turk upholds his Alcoran, by the prohibition of printing. 'Tis not denied, but gladly confessed, we are to send our thanks and vows to Heaven louder than most of nations, for that great measure of truth which we enjoy, especially in those main points between us and the Pope, with his appurtenances the prelates: but he who thinks we are to pitch our tent here, and have attained the utmost prospect of reformation that the mortal glass wherein we contemplate can show us, till we come to beatific vision, that man by this very opinion declares that he is yet far short of truth.Truth indeed came once into the world with her divine Master, and was a perfect shape most glorious to look on: but when he ascended, and his Apostles after him were laid asleep, then straight arose a wicked race of deceivers, who, as that story goes of the Egyptian Typhon with his conspirators, how they dealt with the good Osiris, took the virgin Truth, hewed her lovely form into a thousand pieces, and scattered them to the four winds. From that time ever since, the sad friends of Truth, such as durst appear, imitating the careful search that Isis made for the mangled body of Osiris, went up and down gathering up limb by limb, still as they could find them. We have not yet found them all, Lords and Commons, nor ever shall do, till her Master's second coming; he shall bring together every joint and member, and shall mould them into an immortal feature of loveliness and perfection. Suffer not these licensing prohibitions to stand at every place of opportunity, forbidding and disturbing them that continue seeking, that continue to do our obsequies to the torn body of our martyred saint.We boast our light; but if we look not wisely on the sun itself, it smites us into darkness. Who can discern those planets that are oft combust, and those stars of brightest magnitude that rise and set with the sun, until the opposite motion of their orbs bring them to such a place in the firmament, where they may be seen evening or morning? The light which we have gained was given us, not to be ever staring on, but by it to discover onward things more remote from our knowledge. It is not the unfrocking of a priest, the unmitring of a bishop, and the removing him from off the presbyterian shoulders, that will make us a happy nation. No, if other things as great in the Church, and in the rule of life both economical and political, be not looked into and reformed, we have looked so long upon the blaze that Zuinglius and Calvin hath beaconed up to us, that we are stark blind. There be who perpetually complain of schisms and sects, and make it such a calamity that any man dissents from their maxims. 'Tis their own pride and ignorance which causes the disturbing, who neither will hear with meekness, nor can convince; yet all must be suppressed which is not found in their Syntagma. They are the troublers, they are the dividers of unity, who neglect and permit not others to unite those dissevered pieces which are yet wanting to the body of Truth. To be still searching what we know not by what we know, still closing up truth to truth as we find it (for all her body is homogeneal and proportional), this is the golden rule in theology as well as in arithmetic, and makes up the best harmony in a Church; not the forced and outward union of cold, and neutral, and inwardly divided minds.Lords and Commons of England! consider what nation it is whereof ye are, and whereof ye are the governors: a nation not slow and dull, but of a quick, ingenious and piercing spirit, acute to invent, subtle and sinewy to discourse, not beneath the reach of any point the highest that human capacity can soar to. Therefore the studies of learning in her deepest sciences have been so ancient and so eminent among us, that writers of good antiquity and ablest judgment have been persuaded that even the school of Pythagoras and the Persian wisdom took beginning from the old philosophy of this island. And that wise and civil Roman, Julius Agricola, who governed once here for Caesar, preferred the natural wits of Britain before the laboured studies of the French. Nor is it for nothing that the grave and frugal Transylvanian sends out yearly from as far as the mountainous borders of Russia, and beyond the Hercynian wilderness, not their youth, but their staid men, to learn our language and our theologic arts.Yet that which is above all this, the favour and the love of Heaven, we have great argument to think in a peculiar manner propitious and propending towards us. Why else was this nation chosen before any other, that out of her, as out of Sion, should be proclaimed and sounded forth the first tidings and trumpet of Reformation to all Europe? And had it not been the obstinate perverseness of our prelates against the divine and admirable spirit of Wickliff, to suppress him as a schismatic and innovator, perhaps neither the Bohemian Huns and Jerome, no nor the name of Luther or of Calvin, had been ever known: the glory of reforming all our neighbours had been completely ours. But now, as our obdurate clergy have with violence demeaned the matter, we are become hitherto the latest and the backwardest scholars, of whom God offered to have made us the teachers. Now once again by all concurrence of signs, and by the general instinct of holy and devout men, as they daily and solemnly express their thoughts, God is decreeing to begin some new and great period in his Church, even to the reforming of Reformation itself: what does he then but reveal himself to his servants, and as his manner is, first to his Englishmen? I say, as his manner is, first to us, though we mark not the method of his counsels, and are unworthy.Behold now this vast city: a city of refuge, the mansion house of liberty, encompassed and surrounded with his protection; the shop of war hath not there more anvils and hammers waking, to fashion out the plates and instruments of armed justice in defence of beleaguered truth, than there be pens and heads there, sitting by their studious lamps, musing, searching, revolving new notions and ideas wherewith to present, as with their homage and their fealty, the approaching Reformation: others as fast reading, trying all things, assenting to the force of reason and convincement. What could a man require more from a nation so pliant and so prone to seek after knowledge? What wants there to such a towardly and pregnant soil, but wise and faithful labourers, to make a knowing people, a nation of prophets, of sages, and of worthies? We reckon more than five months yet to harvest; there need not be five weeks; had we but eyes to lift up, the fields are white already.Where there is much desire to learn, there of necessity will be much arguing, much writing, many opinions; for opinion in good men is but knowledge in the making. Under these fantastic terrors of sect and schism, we wrong the earnest and zealous thirst after knowledge and understanding which God hath stirred up in this city. What some lament of, we rather should rejoice at, should rather praise this pious forwardness among men, to reassume the ill-deputed care of their religion into their own hands again. A little generous prudence, a little forbearance of one another, and some grain of charity might win all these diligences to join, and unite in one general and brotherly search after truth; could we but forgo this prelatical tradition of crowding free consciences and Christian liberties into canons and precepts of men. I doubt not, if some great and worthy stranger should come among us, wise to discern the mould and temper of a people, and how to govern it, observing the high hopes and aims, the diligent alacrity of our extended thoughts and reasonings in the pursuance of truth and freedom, but that he would cry out as Pyrrhus did, admiring the Roman docility and courage: If such were my Epirots, I would not despair the greatest design that could be attempted, to make a Church or kingdom happy.Yet these are the men cried out against for schismatics and sectaries; as if, while the temple of the Lord was building, some cutting, some squaring the marble, others hewing the cedars, there should be a sort of irrational men who could not consider there must be many schisms and many dissections made in the quarry and in the timber, ere the house of God can be built. And when every stone is laid artfully together, it cannot be united into a continuity, it can but be contiguous in this world; neither can every piece of the building be of one form; nay rather the perfection consists in this, that, out of many moderate varieties and brotherly dissimilitudes that are not vastly disproportional, arises the goodly and the graceful symmetry that commends the whole pile and structure.Let us therefore be more considerate builders, more wise in spiritual architecture, when great reformation is expected. For now the time seems come, wherein Moses the great prophet may sit in heaven rejoicing to see that memorable and glorious wish of his fulfilled, when not only our seventy elders, but all the Lord's people, are become prophets. No marvel then though some men, and some good men too perhaps, but young in goodness, as Joshua then was, envy them. They fret, and out of their own weakness are in agony, lest these divisions and subdivisions will undo us. The adversary again applauds, and waits the hour: when they have branched themselves out, saith he, small enough into parties and partitions, then will be our time. Fool! he sees not the firm root, out of which we all grow, though into branches: nor will beware until he see our small divided maniples cutting through at every angle of his ill-united and unwieldy brigade. And that we are to hope better of all these supposed sects and schisms, and that we shall not need that solicitude, honest perhaps, though over-timorous, of them that vex in this behalf, but shall laugh in the end at those malicious applauders of our differences, I have these reasons to persuade me.First, when a city shall be as it were besieged and blocked about, her navigable river infested, inroads and incursions round, defiance and battle oft rumoured to be marching up even to her walls and suburb trenches, that then the people, or the greater part, more than at other times, wholly taken up with the study of highest and most important matters to be reformed, should be disputing, reasoning, reading, inventing, discoursing, even to a rarity and admiration, things not before discoursed or written of, argues first a singular goodwill, contentedness and confidence in your prudent foresight and safe government, Lords and Commons; and from thence derives itself to a gallant bravery and well-grounded contempt of their enemies, as if there were no small number of as great spirits among us, as his was, who when Rome was nigh besieged by Hannibal, being in the city, bought that piece of ground at no cheap rate, whereon Hannibal himself encamped his own regiment.Next, it is a lively and cheerful presage of our happy success and victory. For as in a body, when the blood is fresh, the spirits pure and vigorous, not only to vital but to rational faculties, and those in the acutest and the pertest operations of wit and subtlety, it argues in what good plight and constitution the body is; so when the cheerfulness of the people is so sprightly up, as that it has not only wherewith to guard well its own freedom and safety, but to spare, and to bestow upon the solidest and sublimest points of controversy and new invention, it betokens us not degenerated, nor drooping to a fatal decay, but casting off the old and wrinkled skin of corruption to outlive these pangs and wax young again, entering the glorious ways of truth and prosperous virtue, destined to become great and honourable in these latter ages. Methinks I see in my mind a noble and puissant nation rousing herself like a strong man after sleep, and shaking her invincible locks: methinks I see her as an eagle mewing her mighty youth, and kindling her undazzled eyes at the full midday beam; purging and unscaling her long-abused sight at the fountain itself of heavenly radiance; while the whole noise of timorous and flocking birds, with those also that love the twilight, flutter about, amazed at what she means, and in their envious gabble would prognosticate a year of sects and schisms.What would ye do then? should ye suppress all this flowery crop of knowledge and new light sprung up and yet springing daily in this city? Should ye set an oligarchy of twenty engrossers over it, to bring a famine upon our minds again, when we shall know nothing but what is measured to us by their bushel? Believe it, Lords and Commons, they who counsel ye to such a suppressing do as good as bid ye suppress yourselves; and I will soon show how. If it be desired to know the immediate cause of all this free writing and free speaking, there cannot be assigned a truer than your own mild and free and humane government. It is the liberty, Lords and Commons, which your own valorous and happy counsels have purchased us, liberty which is the nurse of all great wits; this is that which hath rarefied and enlightened our spirits like the influence of heaven; this is that which hath enfranchised, enlarged and lifted up our apprehensions, degrees above themselves.Ye cannot make us now less capable, less knowing, less eagerly pursuing of the truth, unless ye first make yourselves, that made us so, less the lovers, less the founders of our true liberty. We can grow ignorant again, brutish, formal and slavish, as ye found us; but you then must first become that which ye cannot be, oppressive, arbitrary and tyrannous, as they were from whom ye have freed us. That our hearts are now more capacious, our thoughts more erected to the search and expectation of greatest and exactest things, is the issue of your own virtue propagated in us; ye cannot suppress that, unless ye reinforce an abrogated and merciless law, that fathers may dispatch at will their own children. And who shall then stick closest to ye, and excite others? not he who takes up arms for coat and conduct, and his four nobles of Danegelt. Although I dispraise not the defence of just immunities, yet love my peace better, if that were all. Give me the liberty to know, to utter, and to argue freely according to conscience, above all liberties.What would be best advised, then, if it be found so hurtful and so unequal to suppress opinions for the newness or the unsuitableness to a customary acceptance, will not be my task to say. I only shall repeat what I have learned from one of your own honourable number, a right noble and pious lord, who, had he not sacrificed his life and fortunes to the Church and Commonwealth, we had not now missed and bewailed a worthy and undoubted patron of this argument. Ye know him, I am sure; yet I for honour's sake, and may it be eternal to him, shall name him, the Lord Brook. He writing of episcopacy, and by the way treating of sects and schisms, left ye his vote, or rather now the last words of his dying charge, which I know will ever be of dear and honoured regard with ye, so full of meekness and breathing charity, that next to his last testament, who bequeathed love and peace to his disciples, I cannot call to mind where I have read or heard words more mild and peaceful. He there exhorts us to hear with patience and humility those, however they be miscalled, that desire to live purely, in such a use of God's ordinances, as the best guidance of their conscience gives them, and to tolerate them, though in some disconformity to ourselves. The book itself will tell us more at large, being published to the world, and dedicated to the Parliament by him who, both for his life and for his death, deserves that what advice he left be not laid by without perusal.And now the time in special is, by privilege to write and speak what may help to the further discussing of matters in agitation. The temple of Janus with his two controversial faces might now not unsignificantly be set open. And though all the winds of doctrine were let loose to play upon the earth, so Truth be in the field, we do injuriously, by licensing and prohibiting, to misdoubt her strength. Let her and Falsehood grapple; who ever knew Truth put to the worse, in a free and open encounter? Her confuting is the best and surest suppressing. He who hears what praying there is for light and clearer knowledge to be sent down among us, would think of other matters to be constituted beyond the discipline of Geneva, framed and fabricked already to our hands. Yet when the new light which we beg for shines in upon us, there be who envy and oppose, if it come not first in at their casements. What a collusion is this, whenas we are exhorted by the wise man to use diligence, to seek for wisdom as for hidden treasures early and late, that another order shall enjoin us to know nothing but by statute? When a man hath been labouring the hardest labour in the deep mines of knowledge, hath furnished out his findings in all their equipage: drawn forth his reasons as it were a battle ranged: scattered and defeated all objections in his way; calls out his adversary into the plain, offers him the advantage of wind and sun, if he please, only that he may try the matter by dint of argument: for his opponents then to skulk, to lay ambushments, to keep a narrow bridge of licensing where the challenger should pass, though it be valour enough in soldiership, is but weakness and cowardice in the wars of Truth.For who knows not that Truth is strong, next to the Almighty? She needs no policies, nor stratagems, nor licensings to make her victorious; those are the shifts and the defences that error uses against her power. Give her but room, and do not bind her when she sleeps, for then she speaks not true, as the old Proteus did, who spake oracles only when he was caught and bound, but then rather she turns herself into all shapes, except her own, and perhaps tunes her voice according to the time, as Micaiah did before Ahab, until she be adjured into her own likeness. Yet is it not impossible that she may have more shapes than one. What else is all that rank of things indifferent, wherein Truth may be on this side or on the other, without being unlike herself? What but a vain shadow else is the abolition of those ordinances, that hand-writing nailed to the cross? What great purchase is this Christian liberty which Paul so often boasts of? His doctrine is, that he who eats or eats not, regards a day or regards it not, may do either to the Lord. How many other things might be tolerated in peace, and left to conscience, had we but charity, and were it not the chief stronghold of our hypocrisy to be ever judging one another?I fear yet this iron yoke of outward conformity hath left a slavish print upon our necks; the ghost of a linen decency yet haunts us. We stumble and are impatient at the least dividing of one visible congregation from another, though it be not in fundamentals; and through our forwardness to suppress, and our backwardness to recover any enthralled piece of truth out of the gripe of custom, we care not to keep truth separated from truth, which is the fiercest rent and disunion of all. We do not see that, while we still affect by all means a rigid external formality, we may as soon fall again into a gross conforming stupidity, a stark and dead congealment of wood and hay and stubble, forced and frozen together, which is more to the sudden degenerating of a Church than many subdichotomies of petty schisms.Not that I can think well of every light separation, or that all in a Church is to be expected gold and silver and precious stones: it is not possible for man to sever the wheat from the tares, the good fish from the other fry; that must be the Angels' ministry at the end of mortal things. Yet if all cannot be of one mind--as who looks they should be?--this doubtless is more wholesome, more prudent, and more Christian, that many be tolerated, rather than all compelled. I mean not tolerated popery, and open superstition, which, as it extirpates all religions and civil supremacies, so itself should be extirpate, provided first that all charitable and compassionate means be used to win and regain the weak and the misled: that also which is impious or evil absolutely either against faith or manners no law can possibly permit, that intends not to unlaw itself: but those neighbouring differences, or rather indifferences, are what I speak of, whether in some point of doctrine or of discipline, which, though they may be many, yet need not interrupt THE UNITY OF SPIRIT, if we could but find among us THE BOND OF PEACE.In the meanwhile if any one would write, and bring his helpful hand to the slow-moving Reformation which we labour under, if Truth have spoken to him before others, or but seemed at least to speak, who hath so bejesuited us that we should trouble that man with asking license to do so worthy a deed? and not consider this, that if it come to prohibiting, there is not aught more likely to be prohibited than truth itself; whose first appearance to our eyes, bleared and dimmed with prejudice and custom, is more unsightly and unplausible than many errors, even as the person is of many a great man slight and contemptuous to see to. And what do they tell us vainly of new opinions, when this very opinion of theirs, that none must be heard but whom they like, is the worst and newest opinion of all others; and is the chief cause why sects and schisms do so much abound, and true knowledge is kept at distance from us; besides yet a greater danger which is in it.For when God shakes a kingdom with strong and healthful commotions to a general reforming, 'tis not untrue that many sectaries and false teachers are then busiest in seducing; but yet more true it is, that God then raises to his own work men of rare abilities, and more than common industry, not only to look back and revise what hath been taught heretofore, but to gain further and go on some new enlightened steps in the discovery of truth. For such is the order of God's enlightening his Church, to dispense and deal out by degrees his beam, so as our earthly eyes may best sustain it.Neither is God appointed and confined, where and out of what place these his chosen shall be first heard to speak; for he sees not as man sees, chooses not as man chooses, lest we should devote ourselves again to set places, and assemblies, and outward callings of men; planting our faith one while in the old Convocation house, and another while in the Chapel at Westminster; when all the faith and religion that shall be there canonized is not sufficient without plain convincement, and the charity of patient instruction to supple the least bruise of conscience, to edify the meanest Christian, who desires to walk in the Spirit, and not in the letter of human trust, for all the number of voices that can be there made; no, though Harry VII himself there, with all his liege tombs about him, should lend them voices from the dead, to swell their number.And if the men be erroneous who appear to be the leading schismatics, what withholds us but our sloth, our self-will, and distrust in the right cause, that we do not give them gentle meetings and gentle dismissions, that we debate not and examine the matter thoroughly with liberal and frequent audience; if not for their sakes, yet for our own? seeing no man who hath tasted learning, but will confess the many ways of profiting by those who, not contented with stale receipts, are able to manage and set forth new positions to the world. And were they but as the dust and cinders of our feet, so long as in that notion they may yet serve to polish and brighten the armoury of Truth, even for that respect they were not utterly to be cast away. But if they be of those whom God hath fitted for the special use of these times with eminent and ample gifts, and those perhaps neither among the priests nor among the Pharisees, and we in the haste of a precipitant zeal shall make no distinction, but resolve to stop their mouths, because we fear they come with new and dangerous opinions, as we commonly forejudge them ere we understand them; no less than woe to us, while, thinking thus to defend the Gospel, we are found the persecutors.There have been not a few since the beginning of this Parliament, both of the presbytery and others, who by their unlicensed books, to the contempt of an Imprimatur, first broke that triple ice clung about our hearts, and taught the people to see day: I hope that none of those were the persuaders to renew upon us this bondage which they themselves have wrought so much good by contemning. But if neither the check that Moses gave to young Joshua, nor the countermand which our Saviour gave to young John, who was so ready to prohibit those whom he thought unlicensed, be not enough to admonish our elders how unacceptable to God their testy mood of prohibiting is; if neither their own remembrance what evil hath abounded in the Church by this set of licensing, and what good they themselves have begun by transgressing it, be not enough, but that they will persuade and execute the most Dominican part of the Inquisition over us, and are already with one foot in the stirrup so active at suppressing, it would be no unequal distribution in the first place to suppress the suppressors themselves: whom the change of their condition hath puffed up, more than their late experience of harder times hath made wise.And as for regulating the press, let no man think to have the honour of advising ye better than yourselves have done in that Order published next before this, \"that no book be printed, unless the printer's and the author's name, or at least the printer's, be registered.\" Those which otherwise come forth, if they be found mischievous and libellous, the fire and the executioner will be the timeliest and the most effectual remedy that man's prevention can use. For this authentic Spanish policy of licensing books, if I have said aught, will prove the most unlicensed book itself within a short while; and was the immediate image of a Star Chamber decree to that purpose made in those very times when that Court did the rest of those her pious works, for which she is now fallen from the stars with Lucifer. Whereby ye may guess what kind of state prudence, what love of the people, what care of religion or good manners there was at the contriving, although with singular hypocrisy it pretended to bind books to their good behaviour. And how it got the upper hand of your precedent Order so well constituted before, if we may believe those men whose profession gives them cause to inquire most, it may be doubted there was in it the fraud of some old patentees and monopolizers in the trade of bookselling; who under pretence of the poor in their Company not to be defrauded, and the just retaining of each man his several copy, which God forbid should be gainsaid, brought divers glossing colours to the House, which were indeed but colours, and serving to no end except it be to exercise a superiority over their neighbours; men who do not therefore labour in an honest profession to which learning is indebted, that they should be made other men's vassals. Another end is thought was aimed at by some of them in procuring by petition this Order, that, having power in their hands, malignant books might the easier scape abroad, as the event shows.But of these sophisms and elenchs of merchandise I skill not. This I know, that errors in a good government and in a bad are equally almost incident; for what magistrate may not be misinformed, and much the sooner, if liberty of printing be reduced into the power of a few? But to redress willingly and speedily what hath been erred, and in highest authority to esteem a plain advertisement more than others have done a sumptuous bride, is a virtue (honoured Lords and Commons) answerable to your highest actions, and whereof none can participate but greatest and wisest men.Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. See original source at Wikisource."}
{"prompt": "The libbitcoin Manifesto", "completion": "\u201cTools for The People\u201dAs humans, we share little in common. But that little we do share is the deep core of our being. We search for purpose. We are curious. And we thrive on new information. Our self-awareness, rationality and sapience are the high level features that make up a person. They are our capacity for good or evil.As people, we need to ask ourselves whether we act with purpose, intent and ambition, ask how are we defining ourselves, and what are the values that our lives are promoting.Are you taking concrete steps now to achieve your objective?It's important we ask ourselves these questions, and decide which end of the spectrum between liberty and security we fixate on. A safe life of luxury, and comfort closed in by 4 walls. Or a life of freedom. Freedom to make love, play loud music, create art, wrestle naked, and raise confident kids that think.In criticising the world we're born into, it's easy to point the finger at this or that politician or resign problems to circumstance. And with the perceived lack of power to concede the situation is unfixable and utterly broken. But if we want to know who to blame, we need only to look into a mirror. We support the situation. It is people, not rulers, who create the world of today.Some of us conclude that the situation is just a normal state of affairs, and simply human nature. As if there were one human nature! And disregarding that we all evolve and grow as people in different directions during our lives.Think of the values we are taught as children. How we are taught to behave as civic citizens. The phrases we are told by our parents, teachers and friends. The system is not just the state and corporations, it is a machine encompassing all spheres of life.You might hear for example:I was told all of these sentences in my life. That learning to accept authority is an inevitable part of growing up. That my character is defined by how I look, not how I act. That my single purpose is to be a work-slave. To avoid interaction with random unknowns outside my circle. And that responsibility starts and stops with myself.All of them are bad values.We are not born with these values. They are hard-wired into us from a young age. Luckily knowledge feeds the unlearning process and the internet is an unlearning tool.Have you ever questioned the 15 years of our precious childhood from kindergarten to highschool. We attend a prison with fixed schedules and dinner at an allocated time. We're forced to wear uniforms. If you want to speak, you need to raise your hand. If you need the toilet, you must ask permission. And the lessons amount to little more than drilling information with the given promise of honours and qualifications.The reward for faithfully jumping through all these hoops for 15 years is a worthless piece of paper that isn't even required for a job at McDonalds. And the workers still need training. Our children aren't taught how to cook a healthy meal, grow a garden or even a rudimentary concept of how to organise or lead groups of people without even a glimmer of understanding on how to resolve conflicts without violence. Or the principles of logic, and how to question an ideology. Kids are taught to sit at a desk and listen obediently as the world is packaged into neat boxes.School is little more than a training camp for salaried drones designed to format young minds for a life of subservience, too stupid to question the system itself or the authority of those running it. We are not born with bad values. They are wired into us from a young age.Lets talk about good values.Responsibility is about fulfilling your needs to have a dignified existence, and then expanding that circle to the people around you. To help bring up and out the potential of other free people so that together we thrive. Community and collective action is absolutely essential if we want to rise up. The system thrives by separating people into isolated pockets who get their information from TV and their culture from corporations. United together, we are stronger.\u201cVires in numeris\u201dIndependence and autonomy is the ability to act. If we always need third parties and central organisations to resolve disputes, solve our problems and coordinate us then we are doomed as a species. Central authorities are always a magnet for corruption and that will never change. Learn to be self reliant and make things happen.Understanding is not an easy skill to develop, but it is very powerful. Being able to get into people's minds, to listen and be able to meet their needs is leadership. A leader serves and inspires people into action, whereas a ruler uses coercion. For all their grandeur and force, rulers cannot harness the real potential of people. Nobody thinks under duress.We need assertive individuals who stand unyielding for what they believe in. If you know something is right, then fight for your vision. It will happen. The system feeds off passivity, and giving consent to its exclusive hold of force feeds the machine.Lastly lets approach the world as artists, and bring creativity to our work. The world is diverse, colourful and vibrant. Humans are not meant to live in little boxes and grey concrete jungles. Live art and be creative. Your work is art. Good art makes people think and feel.The role of good people is the vanguard of tomorrow.The penalty good men pay for indifference to public affairs is to be ruled by evil men.It's an old story. David vs Goliath. Starfleet rebels vs galactic deathstar. Anarchist revolutionaries vs the fascist empire. Both sides have existed for centuries and the struggle continues. However in recent decades with the unique political situation, the internet and a dawning awareness among people, the balance of power is shifting in our favour this time around.Humans can look to a future less dominated by the command hierarchies of the past, and more by thriving marketplaces of knowledge and merit.I remember an amateur blue webpage in the summer of 2010 describing a p2p currency that \u201ccannot be controlled by governments or central banks\u201d. Extremely skeptical, I dived into the code and discovered an idea which burnt itself in my memory. My mind latched onto Bitcoin. I realised this unknown project is the future of money.Bitcoin is a tool of resistance gifted to us by Satoshi. The idea has escaped and the idea of cryptocurrency will not be stopped. Bitcoin or some other cryptocurrency will succeed.Bitcoin is about direct trade from peer to peer. The purest value transfer possible between 2 or more people. A direct and personal interaction over digital infrastructure. Welcome to the future of the black market. Real values, real people and uncorrupted markets.The internet is a tool of freedom and self-determination. Meddling in its mechanics is destructive. Whenever a website is blocked, a protocol is corrupted at some low level or undesirable traffic shaping occurs then seismic ripples of censorship and destruction lead to degradation of the network. The internet is fundamental to humanity, and must be protected at all costs.Bitcoin is no different, and must be kept pure. There are real risks to Bitcoin.The protocol is not an axiomatic system fixed by Satoshi. It's been constantly changing, rapidly evolving and the pace is accelerating. The risks are more subtle and probable than a government demanding changes to the fundamentals of Bitcoin's protocol. The chilling effect of self censorship.We don't even need to touch the protocol.As Bitcoin grows, the inevitable specialisation is kicking in. The blockchain is moving towards specialised services, and the future of full Bitcoin nodes is on the server, not personal computers. We have to wake up, adapt and work with the reality rather than persisting in self denial.If development is too centralised, with a small core infrastructure, then businesses will put real pressure to have features that destroy the integrity of the Bitcoin network. The excuse will be to protect themselves from liability. Self-censorship.And what they demand does not have to be protocol changes. They will demand features in the software they use. Software which remains compatible with the network, but works against the interests of individuals, small businesses and the black market.The possible malicious scenarios are endless. Stuff like p2p blacklists to create a 'legitimate' walled garden, or tracking technologies like large databases of IP addresses to triangulate where transactions came from. At the other end of the spectrum, is putting development effort into diversifying the ecosystem to protect against censorship and proxy relay nodes, anonymising mixers, small privacy tweaks and other technologies. That's where developers who believe in Bitcoin should devote time to. Corporations are powerful enough. To developers: serve your community.A diversified Bitcoin of many wallets and implementations is a strong and pure Bitcoin. To protect the integrity of the network, we need to eliminate single points of failure. An inbred Bitcoin with the same software code everywhere shares the same weaknesses, and is susceptible to the same attacks. A single pathogen can wipe out a genetically homogenous population. And centralised software is vulnerable to the dictates of whoever controls development of that software code, and any dictates pressured onto them.The implications of a diversified Bitcoin is a Bitcoin difficult to control. It also sets the protocol in stone, as nobody has sole power over the standard. Consensus from many parties is the way forwards.The proper way to develop a standard is by having many different competing parties that require mutual interest and agreement to pass through changes. History is rife with abuse like when Internet Explorer dominated the browser market, and constantly broke the web standard by introducing proprietary extensions. Their motive was to swallow the market and lock users into Internet Explorer. The result was a broken web. A monopoly likes to dominate the market, shut out competitors and erect high barriers to entry.A diversified ecosystem protects against feature-creep or bloat of the standard. Extra features go beyond the basic function of Bitcoin and so can result in over-complication rather than simple design. Viewed over a longer time period, extra or unnecessary features seem to creep into the system beyond the initial goals and the small code of 15,000 lines set by Satoshi. The result will be a Bitcoin that becomes increasingly difficult to understand or implement without a huge initial investment of resources, time and people. No single person will fully understand Bitcoin anymore, and development monopolies will be further enforced.Linux is the most secure operating system because of its diversity. There is no single exploit that is universal across all versions of Linux. Bitcoin must evolve in the same way to become a resilient and tough system able to serve a global audience.A massive standard is difficult to reimplement. Satoshi Nakamoto gifted us a small, focused and pure Bitcoin.There is no need for compromise. Lets push for our complete vision. Bitcoin is here. We have the initiative and we make our stand now. We have the power and now is the time. Not later. Now.Within a century of the printing press being invented, wars, social strife and revolutions erupted across Europe. Old kings, revered religious leaders and tyrannical rulers were removed from power. People could now read what was being written in their bibles. Mass printing of the bible was subversive. And what was written in their bibles, is not what they were being fed. In the face of hard evidence, people dispelled old notions of what their religion was saying.Our economy will change. Bitcoin will rise as a fundamental technology. Seeking approval from the halls of Washington, and consent from the status quo is mere pandering as lapdogs at the feet of the system. Why would you willingly give your power away? Are you stupid?Some people make the argument that throwing Bitcoin under the bus and corrupting the core of this technology is needed to help businesses which specialise in the exchange of failing government fiat paper-money with Bitcoins. Are we willing to sacrifice the purity of this tool for a few short term gains that primarily benefit US corporations? Do they serve the need of Bitcoin?Others even go further, arguing we need the masses. That being a majority protects people from assaults. Typical herd mentality.And that regulation (and the measures to implement them) are a typical process of acceptance. I have news for you: majorities have been slaughtered like pigs all throughout history. Being \u201cpragmatic\u201d is code speak for obedience and cowardice.Bitcoin is the future. Act like you believe it. Act to prevent corruption of the system. Act to prevent Bitcoin becoming coopted in any way. We must preserve the principles of Satoshi Nakamoto.We have the initiative and the power. You know the truth of the world. Stop supporting your own enemies. We don't need them. They need us. You are the one empowering them. Withdraw your consent. Withdraw your support. Don't accept their terms or try to win a game where they set the rules. Don't try to win your ruler's favour. Don't bother to beg for welfare or good treatment. Worst of all, don't help them hunt down your neighbour.Time we stick our flag in the ground, and make our stand.Our task force will offer balanced, effective solutions for policy makers, law enforcement, regulators and the public.[...]The Task Force, which launched in August, is not solely focussed on child exploitation.[...]The report detailed how criminal and terrorist organisations have turned to digital currency to reap profits from drug trafficking, prostitution and the dissemination of child abuse images.One day master told slave: \u201cDo this small thing and everything is fine. Keep up the good work.\u201d. The slave was happy because not much was asked so he started to create something cool. The master walked in a week later, and said \u201cdo this as well\u201d. The slave was shocked. \u201cBut master, we had an agreement, you said I only needed to do this?\u201d. Master responded \u201cI changed my mind. You need to do this as well.\u201d. The slave reluctantly agreed. At least it wasn't that bad.Over time, the master more and more increased his demands on the slave. By now the slave had created something totally wonderful and was dependant on it, but the master controlled his work and owned him.The task of an activist is not to negotiate systems of power with as much personal integrity as possible- it's to dismantle those systems.The road is long, and real work is needed. Less talk, more action. There are too few people in this world working on worthwhile things for the people. But eventhough the work-load is immense and daunting, there are concrete steps to achieve the global objective.Truth happens. We will succeed. Don't wait around for others to take action. We must dive head first without regard for consequences, and break the inertia of passivity. When enough people do this, the real change will occur.Fight for what you believe in. If you believe, and uphold a truth, then all your energy should be devoted to your objectives. Anytime you are accepting compromise, you are acting against your objective. None of us are pure. We are flawed and imperfect. But as good people we must strive for uncomplicated directness in our actions. Our actions must be transparent in motive and pure in reasoning.The power is within us. It always has been."}
{"prompt": "Bit Gold", "completion": "A long time ago I hit upon the idea of bit gold. The problem, in a nutshell, is that our money currently depends on trust in a third party for its value. As many inflationary and hyperinflationary episodes during the 20th century demonstrated, this is not an ideal state of affairs. Similarly, private bank note issue, while it had various advantages as well as disadvantages, similarly depended on a trusted third party.Precious metals and collectibles have an unforgeable scarcity due to the costliness of their creation. This once provided money the value of which was largely independent of any trusted third party. Precious metals have problems, however. It's too costly to assay metals repeatedly for common transactions. Thus a trusted third party (usually associated with a tax collector who accepted the coins as payment) was invoked to stamp a standard amount of the metal into a coin. Transporting large values of metal can be a rather insecure affair, as the British found when transporting gold across a U-boat infested Atlantic to Canada during World War I to support their gold standard. What's worse, you can't pay online with metal.Thus, it would be very nice if there were a protocol whereby unforgeably costly bits could be created online with minimal dependence on trusted third parties, and then securely stored, transferred, and assayed with similar minimal trust. Bit gold.My proposal for bit gold is based on computing a string of bits from a string of challenge bits, using functions called variously \"client puzzle function,\" \"proof of work function,\" or \"secure benchmark function.\" The resulting string of bits is the proof of work. Where a one-way function is prohibitively difficult to compute backwards, a secure benchmark function ideally comes with a specific cost, measured in compute cycles, to compute backwards.Here are the main steps of the bit gold system that I envision:Note that Alice's control over her bit gold does not depend on her sole possession of the bits, but rather on her lead position in the unforgeable chain of title (chain of digital signatures) in the title registry.All of this can be automated by software. The main limits to the security of the scheme are how well trust can be distributed in steps (3) and (4), and the problem of machine architecture which will be discussed below.Hal Finney has implemented a variant of bit gold called RPOW (Reusable Proofs of Work). This relies on publishing the computer code for the \"mint,\" which runs on a remote tamper-evident computer. The purchaser of of bit gold can then use remote attestation, which Finney calls the transparent server technique, to verify that a particular number of cycles were actually performed.The main problem with all these schemes is that proof of work schemes depend on computer architecture, not just an abstract mathematics based on an abstract \"compute cycle.\" (I wrote about this obscurely several years ago.) Thus, it might be possible to be a very low cost producer (by several orders of magnitude) and swamp the market with bit gold. However, since bit gold is timestamped, the time created as well as the mathematical difficulty of the work can be automatically proven. From this, it can usually be inferred what the cost of producing during that time period was.Unlike fungible atoms of gold, but as with collector's items, a large supply during a given time period will drive down the value of those particular items. In this respect \"bit gold\" acts more like collector's items than like gold. However, the match between this ex post market and the auction determining the initial value might create a very substantial profit for the \"bit gold miner\" who invents and deploys an optimized computer architecture.Thus, bit gold will not be fungible based on a simple function of, for example, the length of the string. Instead, to create fungible units dealers will have to combine different-valued pieces of bit gold into larger units of approximately equal value. This is analogous to what many commodity dealers do today to make commodity markets possible. Trust is still distributed because the estimated values of such bundles can be independently verified by many other parties in a largely or entirely automated fashion.In summary, all money mankind has ever used has been insecure in one way or another. This insecurity has been manifested in a wide variety of ways, from counterfeiting to theft, but the most pernicious of which has probably been inflation. Bit gold may provide us with a money of unprecedented security from these dangers. The potential for initially hidden supply gluts due to hidden innovations in machine architecture is a potential flaw in bit gold, or at least an imperfection which the initial auctions and ex post exchanges of bit gold will have to address."}
{"prompt": "Libertaria in Cyberspace", "completion": "Here are a few points about why \"cyberspace,\" or a computer-mediated network, is more hospitable than physical locations for the kind of \"crypto anarchy\" libertarian system I've been describing.Several folks have commented recently about ocean-going libertarian havens, supertankers used as data havens, and so forth. In the 1970s, especially, there were several unsuccessful attempts to acquire islands in the Pacific for the site of what some called \"Libertaria.\" (Some keywords: Vanuatu, Minerva, Mike Oliver, Tonga)Obtaining an entire island is problematic. Getting the consent of the residents is one issue (familiar to those on the this list who weathered the Hurrican Andrew diversion debate). Being allowed to operate by the leading world powers is another....the U.S. has enforced trade embargoes and blockades against many nations in the past several decades, including Cuba, North Korea, Libya, Iran, Iraq, andothers. Further, the U.S. has invaded some countries---Panama is a good example---whose government it disliked. How long would a supertanker \"data haven\" or libertarian regime last in such an environment? (Stephenson's fascinating Snow Crash didn't address tthe issue of why the \"Raft\" wasn't simply sunk by the remaining military forces.)I should note that the recent splintering of countries may provide opportunities for libertarian (or PPL, if your prefer to think of it in this way) regions. Some have speculated that Russia itself is a candidate, given that it has little vested in the previous system and may be willing to abandon statism. If several dozen new countries are formed, some opportunities exist.The basic problem is that physical space is too small, too exposed to the view of others. \"Libertaria\" in the form of, say, an island, is too exposed to the retaliatation of world powers. (I won't go into the \"private nukes\" strategy, which I need to think about further.)A floating private nation (or whatever it's called) is too vulnerable to a single well-placed torpedo. Even if it serves as a kind of Swiss bank, and thus gets some of the same protection Switzerland got (to wit, many leaders kept their loot there), it is too vulnerable to a single attacker or invader. Piracy will be just one of the problems.Finally, how many of us want to move to a South Pacific island? Or a North Sea oil rig? Or even to Russia?Cyberspace looks more promising. There is more \"space\" in cyberspace, thus allowing more security and more colonizable space. And this space is coterminous with our physical space, accessible with proper terminals from any place in the world (though there may be attempts in physical space to block access, to restrict access to necessay cryptographic methods, etc.).I won't go into the various cryptographic methods here (see my earlier posting on the \"Dining Cryptographers\" protocol and various other postings on public key systems, digital mixes, electronic cash, etc.). Interested readers have many sources. (I have just read a superb survey of these new techniques, the 1992 Ph.D. thesis of Jurgen Bos, \"Practical Privacy,\" which deals with these various protocols in a nice little book.)Alice and Bob, our favorite cryptographic stand-ins, can communicate and transact business without ever meeting or even knowing who the other is. This can be extended to create virtual communities subject only to rules they themselves reach agreement on, much like this very Extropians list. Private law is the only law, as there is no appeal to some higher authority like the Pope or police. (This is why I said in several of my postings on the Hurricane Andrew debate that I am sympathetic to the PPL view.)And this is the most compelling advantage of \"Crypto Libertaria\": an arbitrarily large number of separate \"nations\" can simultaneously exist. This allows for rapid experimentation, self-selection, and evolution. If folks get tired of some virtual community, they can leave. The cryptographic aspects mean their membership in some community is unknown to others (vis-a-vis the physical or outside world, i.e., their \"true names\") and physical coercion is reduced.Communalists are free to create a communal environment, Creative Anachronists are free to create their own idea of a space, and so on. I'm not even getting into the virtual reality-photorealistic images-Jaron Lanier sort of thing, as even current text-based systems are demonstrably enough to allow the kind of virtual communities I'm describing here (and described in Vinge's \"True Names,\" in Gibson's Neuromancer, in Sterling's Islands in the Net, and in Stephenson's Snow Crash...though all of them missed out on some of the most exciting aspects...perhaps my novel will hit the mark?).But will the government allow these sorts of things? Won't they just torpedo it, just as they'd torpedo an offshore ooirig data haven?The key is that distributed systems have no nexus which can be knocked out. Neither Usenet norFidoNet can be disabled by any single government, as they are worldwide. Shutting them down would mean banning computer-to-computer communication. And despite the talk of mandatory \"trap doors\" in encryption systems, encryption is fundamentally easy to do and hard to detect. (For those who doubt this, let me describe a simple system I posted to sci.crypt several years ago. An ordinary digital audio tape (DAT) carries more than a gigabyte of data. This means that thhe least significant bit (LSB) of an audio DAT recordingng carries about 8megabytes of data! So Alice is stopped by the Data Police. They ask if she's carrying illegal data. She smiles inocently and say \"No. I know you'll search me.\" They find her Sony DATman and ask about her collection of tapes and live recordings. Alice is carrying 80 MB of data---about 3 entire days worth of Usenet feeds!---on each and every tape. The data are stored in the LSBs, completely indistinguishable from microphone and quantization noise...unless you know the key. Similar methods allow data to be undetectably packed into LSBs of the PICT and GIF pictures now flooding the Net, into sampled sounds, and even into messages like this...the \"whitespace\" on the right margin of this message carries a hidden message readable only to a few chosen Extropians.)I've already described using religions and role-playing games as a kind of legal cover for the development and deployment of these techniques. If a church decides to offer \"digital confessionals\" for its far-flung members, by what argument will the U.S. government justify insisting that encryption not be used? (I should note that psychiatrists and similar professionals have a responsibility to their clients and to their licensing agencies to ensure the privacy of patient records. Friends of mine are using encryption to protect patient records. This is just one little example of how encryption is getting woven into the fabric of our electronic society. There are many other examples.)In future discussions, I hope we can hit on some of the many approaches to deploying these methods. I've spent several years thinking about this, but I've surely missed some good ideas. The \"crypto anarchy game\" being planned is an attempt to get some of the best hackers in the Bay Area thinking along these lines and thinking of new wrinkles. Several have already offered to help further.Some have commented that this list is not an appropriate place to discuss these ideas. I think it is. We are not discussing anything that is actually illegal, even under the broad powers of RICO (Racketeer-Influenced and Corrupt Organizations Act, used to go after \"conspiracies\" of porn dealers and gun dealers, amongst others). What we are discussing are long-range implications of these ideas.In conclusion, it will be easier to form certain types of libertarian societies in cyberspace than in the real world of nations and physical locations. The electronic world is by no means complete, as we will still live much of our lives in the physical world. But economic activity is sharply increasing in the Net domain and these \"crypto anarchy\" ideas will further erode the power of physical states to tax and coerce residents.-- Tim May"}
{"prompt": "Crypto Glossary", "completion": "From: tcmay@netcom.com (Timothy C. May)\nSubject: Crypto Glossary\nDate: Sun, 22 Nov 92 11:50:55 PSTHere's the glossary of crypto terms we passed out in printed form at the first Cypherpunks meeting in September 1992. Some compromises had to be made in going from the printed form to the ASCII of this transmission, so I hope you'll bear with me.I'm sending it to the entire list because nearly everyone who hears about it says \"Is it online?\" and wants a copy. If you don't want it, discard it.I'm not going to be maintaining the \"Cypherpunks FAQ,\" so don't send me corrections or additions.EnjoyTim May(these sections will introduce the terms in context, though complete definitions will not be given)privacy of messages\nusing ciphers and codes to protect the secrecy of messages\nDES is the most common symmetric cipher (same key for encryption and decryption)\nRSA is the most common asymmetric cipher (different keys for encryption and decryption)proving who you are\nproving you signed a document (and not someone else)untraceable sending and receiving of mail and messages\nfocus: defeating eavesdroppers and traffic analysis\nDC protocol (dining cryptographers)focus: ballot box anonymity\ncredentials for voting\nissues of double voting, security, robustness, efficiencyfocus: privacy in transactions, purchases\nunlinkable credentials\nblinded notes\n\"digital coins\" may not be possibleusing the above to evade government, to bypass tax collection, etc.\na technological solution to the problem of too much governmentopen, free market systems in which voluntary transactions are central.cryptographic protocols are often made clearer by considering parties A and B, or Alice and Bob, performing some protocol. Eve the eavesdropper, Paul the prover, and Vic the verifier are other common stand-in names.all or nothing disclosure of secrets.a credential which asserts some right or privilege or fact without revealing the identity of the holder. This is unlike CA driver's licenses.same as public key cryptosystem.the process of verifying an identity or credential, to ensure you are who you said you were.a type of authentication using fingerprints, retinal scans, palm prints, or other physical/biological signatures of an individual.e.g., tossing a coin and then committing to the value without being able to change the outcome. The blob is a cryptographic primitive for this.A signature that the signer does not remember having made. A blind signature is always a cooperative protocol and the receiver of the signature provides the signer with the blinding information.the crypto equivalent of a locked box. A cryptographic primitive for bit commitment, with the properties that a blobs can represent a 0 or a 1, that others cannot tell be looking whether itUs a 0 or a 1, that the creator of the blob can \"open\" the blob to reveal the contents, and that no blob can be both a 1 and a 0. An example of this is a flipped coin covered by a hand.the path over which messages are transmitted. Channels may be secure or insecure, and may have eavesdroppers (or enemies, or disrupters, etc.) who alter messages, insert and delete messages, etc. Cryptography is the means by which communications over insecure channels are protected.an attack where the cryptanalyst gets to choose the plaintext to be enciphered, e.g., when possession of an enciphering machine or algorithm is in the possession of the cryptanalyst.a secret form of writing, using substitution or transposition of characters or symbols.the plaintext after it has been encrypted.a restricted cryptosystem where words or letters of a message are replaced by other words chosen from a codebook. Not part of modern cryptology, but still useful.an important crypto primitive, or protocol, in which the equivalent of flipping a fair coin is possible. Implemented with blobs.wherein several participants cooperate to deduce the identity of a sender or receiver, or to break a cipher. Most cryptosystems are sensitive to some forms of collusion. Much of the work on implementing DC Nets, for example, involves ensuring that colluders cannot isolate message senders and thereby trace origins and destinations of mail.where a cipher cannot be broken with available computer resources, but in theory can be broken with enough computer resources. Contrast with unconditionally secure.something you do to thwart an attacker.facts or assertions about some entity. For example, credit ratings, passports, reputations, tax status, insurance records, etc. Under the current system, these credentials are increasingly being cross-linked. Blind signatures may be used to create anonymous credentials.banks, credit agencies, insurance companies, police departments, etc., that correlate records and decide the status of records.methods for attacking and breaking ciphers and related cryptographic systems. Ciphers may be broken, traffic may be analyzed, and passwords may be cracked. Computers are of course essential.the economic and political system after the deployment of encryption, untraceable e-mail, digital pseudonyms, cryptographic voting, and digital cash. A pun on \"crypto,\" meaning \"hipen,\" and as when Gore Vidal called William F. Buckley a \"crypto fascist.\"another name for cryptology.the science and study of writing, sending, receiving, and deciphering secret messages. Includes authentication, digital signatures, the hiding of messages (steganography), cryptanalysis, and several other fields.the electronic domain, the Nets, and computer-generated spaces. Some say it is the \"consensual reality\" described in \"Neuromancer.\" Others say it is the phone system. Others have work to do.the dining cryptographers protocol. DC-Nets use multiple participants communicating with the DC protocol.the Data Encryption Standard, proposed in 1977 by the National Bureau of Standards (now NIST), with assistance from the National Security Agency. Based on the \"Lucifer\" cipher developed by Horst Feistel at IBM, DES is a secret key cryptosystem that cycles 64-bit blocks of data through multiple permutations with a 56-bit key controlling the routing. \"Diffusion\" and \"confusion\" are combined to form a cipher that has not yet been cryptanalyzed (see \"DES, Security of\"). DES is in use for interbank transfers, as a cipher inside of several RSA-based systems, and is available for PCs.many have speculated that the NSA placed a trapdoor (or back door) in DES to allow it to read DES-encrypted messages. This has not been proved. It is known that the original Lucifer algorithm used a 128-bit key and that this key length was shortened to 64 bits (56 bits plus 8 parity bits), thus making exhaustive search much easier (so far as is known, brute-force search has not been done, though it should be feasible today). Shamir and Bihan have used a technique called \"differential cryptanalysis\" to reduce the exhaustive search needed for chosen plaintext attacks (but with no import for ordinary DES).technique for cryptanalyzing DES. With a chosen plaintext attack, they've reduced the number of DES keys that must be tried from about 2^56 to about 2^47 or less. Note, however, that rarely can an attacker mount a chosen plaintext attack on DES systems.Protocols for transferring value, monetary or otherwise, electronically. Digital cash usually refers to systems that are anonymous. Digital money systems can be used to implement any quantity that is conserved, such as points, mass, dollars, etc. There are many variations of digital money systems, ranging from VISA numbers to blinded signed digital coins. A topic too large for a single glossary entry.basically, a \"crypto identity.\" A way for individuals to set up accounts with various organizations without revealing more information than they wish. Users may have several digital pseudonyms, some used only once, some used over the course of many years. Ideally, the pseudonyms can be linked only at the will of the holder. In the simplest form, a public key can serve as a digital pseudonym and need not be linked to a physical identity.Analogous to a written signature on a document. A modification to a message that only the signer can make but that everyone can recognize. Can be used legally to contract at a distance.one function of a digital notary public, in which some message (a song, screenplay, lab notebook, contract, etc.) is stamped with a time that cannot (easily) be forged.the untraceable message sending system invented by David Chaum. Named after the \"dining philosophers\" problem in computer science, participants form circuits and pass messages in such a way that the origin cannot be deduced, barring collusion. At the simplest level, two participants share a key between them. One of them sends some actual message by bitwise exclusive-ORing the message with the key, while the other one just sends the key itself. The actual message from this pair of participants is obtained by XORing the two outputs. However, since nobody but the pair knows the original key, the actual message cannot be traced to either one of the participants.given integers a, n, and x, find some integer m such that a^m mod n = x, if m exists. Modular exponentiation, the a^m mod n part, is straightforward (and special purpose chips are available), but the inverse problem is believed to be very hard, in general. Thus it is conjectured that modular exponentiation is a one-way function.the latest NIST (National Institute of Standards and Technology, successor to NBS) standard for digital signatures. Based on the El Gamal cipher, some consider it weak and poor substitute for RSA-based signature schemes.intercepting messages without detection. Radio waves may be intercepted, phone lines may be tapped, and computers may have RF emissions detected. Even fiber optic lines can be tapped.Some large numbers are difficult to factor. It is conjectured that there are no feasible--i.e.\"easy,\" less than exponential in size of number-- factoring methods. It is also an open problem whether RSA may be broken more easily than by factoring the modulus (e.g., the public key might reveal information which simplifies the problem). Interestingly, though factoring is believed to be \"hard\", it is not known to be in the class of NP-hard problems. Professor Janek invented a factoring device, but he is believed to be fictional.security, in which no amount of cryptanalysis can break a cipher or system. One time pads are an example (providing the pads are not lost nor stolen nor used more than once, of course). Same as unconditionally secure.a piece of information needed to encipher or decipher a message. Keys may be stolen, bought, lost, etc., just as with physical keys.the process of sharing a key with some other party, in the case of symmetric ciphers, or of distributing a public key in an asymmetric cipher. A major issue is that the keys be exchanged reliably and without compromise. Diffie and Hellman devised one such scheme, based on the discrete logarithm problem.a cryptanalysis of a cipher where plaintext-ciphertext pairs are known. This attack searches for an unknown key. Contrast with the chosen plaintext attack, where the cryptanalyst can also choose the plaintext to be enciphered.a system for sending and receiving mail without traceability or observability. Receiving mail anonymously can be done with broadcast of the mail in encrypted form. Only the intended recipient (whose identity, or true name, may be unknown to the sender) may able to decipher the message. Sending mail anonymously apparently requires mixes or use of the dining cryptographers (DC) protocol.another name for zero knowledge proofs, favored by Chaum.David Chaum's term for a box which performs the function of mixing, or decorrelating, incoming and outgoing electronic mail messages. The box also strips off the outer envelope (i.e., decrypts with its private key) and remails the message to the apress on the inner envelope. Tamper-resistant modules may be used to prevent cheating and forced disclosure of the mapping between incoming and outgoing mail. A sequence of many remailings effectively makes tracing sending and receiving impossible. Contrast this with the software version, the DC protocol.raising an integer to the power of another integer, modulo some integer. For integers a, n, and m, a^m mod n. For example, 5^3 mod 100 = 25. Modular exponentiation can be done fairly quickly with a sequence of bit shifts and aps, and special purpose chips have been designed. See also discrete logarithm.the largest intelligence agency, responsible for making and breaking ciphers, for intercepting communications, and for ensuring the security of U.S. computers. Headquartered in Fort Meade, Maryland, with many listening posts around the world. The NSA funds cryptographic research and advises other agencies about cryptographic matters. The NSA once obviously had the world's leading cryptologists, but this may no longer be the case.a credential that you possess that you don't want any one else to know, for example, a bankruptcy filing. A formal version of a negative reputation.a large class of difficult problems. \"NP\" stands for nondeterministic polynomial time, a class of problems thought in general not to have feasible algorithms for their solution. A problem is \"complete\" if any other NP problem may be reduced to that problem. Many important combinatorial and algebraic problems are NP-complete: the traveling salesman problem, the Hamiltonian cycle problem, the word problem, and on and on.a cryptographic primitive that involves the probabilistic transmission of bits. The sender does not know if the bits were received.a string of randomly-selected bits or symbols which is combined with a plaintext message to produce the ciphertext. This combination may be shifting letters some amount, bitwise exclusive-ORed, etc.). The recipient, who also has a copy of the one time pad, can easily recover the plaintext. Provided the pad is only used once and then destroyed, and is not available to an eavesdropper, the system is perfectly secure, i.e., it is information-theoretically secure. Key distribution (the pad) is obviously a practical concern, but consider CD-ROM's.a function which is easy to compute in one direction but hard to find any inverse for, e.g. modular exponentiation, where the inverse problem is known as the discrete logarithm problem. Compare the special case of trap door one-way functions. An example of a one-way operation is multiplication: it is easy to multiply two prime numbers of 100 digits to produce a 200-digit number, but hard to factor that 200-digit number.Certainly the most important unsolved problem in complexity theory. If P = NP, then cryptography as we know it today does not exist. If P = NP, all NP problems are \"easy.\"sending extra messages to confuse eavesdroppers and to defeat traffic analysis. Also aping random bits to a message to be enciphered.also called cleartext, the text that is to be enciphered.Phillip Zimmerman's implementation of RSA, recently upgraded to version 2.0, with more robust components and several new features. RSA Data Security has threatened PZ so he no longer works on it. Version 2.0 was written by a consortium of non-U.S. hackers.integers with no factors other than themselves and 1. The number of primes is unbounded. About 1% of the 100 decimal digit numbers are prime. Since there are about 10^70 particles in the universe, there are about 10^23 100 digit primes for each and every particle in the universe!a scheme by Goldwasser, Micali, and Blum that allows multiple ciphertexts for the same plaintext, i.e., any given plaintext may have many ciphertexts if the ciphering is repeated. This protects against certain types of known ciphertext attacks on RSA.proving who you are, either your true name, or your digital identity. Generally, possession of the right key is sufficient proof (guard your key!). Some work has been done on \"is-a-person\" credentialling agencies, using the so-called Fiat-Shamir protocol...think of this as a way to issue unforgeable digital passports. Physical proof of identity may be done with biometric security methods. Zero knowledge proofs of identity reveal nothing beyond the fact that the identity is as claimed. This has obvious uses for computer access, passwords, etc.a formal procedure for solving some problem. Modern cryptology is mostly about the study of protocols for many problems, such as coin-flipping, bit commitment (blobs), zero knowledge proofs, dining cryptographers, and so on.the key distributed publicly to potential message-senders. It may be published in a phonebook-like directory or otherwise sent. A major concern is the validity of this public key to guard against spoofing or impersonation.the modern breakthrough in cryptology, designed by Diffie and Hellman, with contributions from several others. Uses trap door one-way functions so that encryption may be done by anyone with access to the \"public key\" but decryption may be done only by the holder of the \"private key.\" Encompasses public key encryption, digital signatures, digital cash, and many other protocols and applications.the use of modern cryptologic methods to provided message security and authentication. The RSA algorithm is the most widely used form of public key encryption, although other systems exist. A public key may be freely published, e.g., in phonebook-like directories, while the corresponding private key is closely guarded.M.I.T. and Stanford, due to the work of Rivest, Shamir, Adleman, Diffie, Hellman, and Merkle, formed Public Key Partners to license the various public key, digital signature, and RSA patents. These patents, granted in the early 1980s, expire in the between 1998 and 2002. PKP has licensed RSA Data Security Inc., of Redwood City, CA, which handles the sales, etc.a system based on quantum-mechanical principles. Eavesdroppers alter the quantum state of the system and so are detected. Developed by Brassard and Bennett, only small laboratory demonstrations have been made.the trail of positive and negative associations and judgments that some entity accrues. Credit ratings, academic credentials, and trustworthiness are all examples. A digital pseudonym will accrue these reputation credentials based on actions, opinions of others, etc. In crypto anarchy, reputations and agoric systems will be of paramount importance. There are many fascinating issues of how reputation-based systems work, how credentials can be bought and sold, and so forth.the main public key encryption algorithm, developed by Ron Rivest, Adi Shamir, and Kenneth Adleman. It exploits the difficulty of factoring large numbers to create a private key and public key. First invented in 1978, it remains the core of modern public key systems. It is usually much slower than DES, but special-purpose modular exponentiation chips will likely speed it up. A popular scheme for speed is to use RSA to transmit session keys and then a high-speed cipher like DES for the actual message text.Let p and q be large primes, typically with more than 100 digits. Let n = pq and find some e such that e is relatively prime to (p - 1)(q - 1). The set of numbers p, q, and e is the private key for RSA. The set of numbers n and e forms the public key (recall that knowing n is not sufficient to easily find p and q...the factoring problem). A message M is encrypted by computing M^e mod n. The owner of the private key can decrypt the encrypted message by exploiting number theory results, as follows. An integer d is computed such that ed =1 (mod (p - 1)(q - 1)). Euler proved a theorem that M^(ed) = M mod n and so M^(ed) mod n = M. This means that in some sense the integers e and d are \"inverses\" of each other. [If this is unclear, please see one of the many texts and articles on public key encryption.]A system which uses the same key to encrypt and decrypt traffic at each end of a communication link. Also called a symmetric or one-key system. Contrast with public key cryptosystem.a computer chip embeped in credit card. They can hold cash, credentials, cryptographic keys, etc. Usually these are built with some degree of tamper-resistance. Smart cards may perform part of a crypto transaction, or all of it. Performing part of it may mean checking the computations of a more powerful computer, e.g., one in an ATM.posing as another user. Used for stealing passwords, modifying files, and stealing cash. Digital signatures and other authentication methods are useful to prevent this. Public keys must be validated and protected to ensure that others don't substitute their own public keys which users may then unwittingly use.a part of cryptology dealing with hiding messages and obscuring who is sending and receiving messages. Message traffic is often paped to reduce the signals that would otherwise come from a supen beginning of messages.same as private key cryptosystem.sealed boxes or modules which are hard to open, requiring extensive probing and usually leaving ample evidence that the tampering has occurred. Various protective techniques are used, such as special metal or oxide layers on chips, armored coatings, embeped optical fibers, and other measures to thwart analysis. Popularly called \"tamper-proof boxes.\" Uses include: smart cards, nuclear weapon initiators, cryptographic key holders, ATMs, etc.interfering with messages and possibly modifying them. This may compromise data security, help to break ciphers, etc. See also spoofing.some representation, such as ID cards, subway tokens, money, etc., that indicates possession of some property or value.determining who is sending or receiving messages by analyzing packets, frequency of packets, etc. A part of steganography. Usually handled with traffic paping.the protocols for determining who can send messages in a DC protocol, and when. These rules are needed to prevent collision and deliberate jamming of the channels.dummy messages in DC Nets which are used to catch jammers and disrupters. The messages contain no private information and are published in a blob beforehand so that the trap message can later be opened to reveal the disrupter. (There are many strategies to explore here.)In cryptography, a piece of secret information that allows the holder of a private key to invert a normally hard to invert function.functions which are easy to compute in both the forward and reverse direction but for which the disclosure of an algorithm to compute the function in the forward direction does not provide information on how to compute the function in the reverse direction. More simply put, trap-door one way functions are one way for all but the holder of the secret information. The RSA algorithm is the best-known example of such a function.same as information-theoretic security, that is, unbreakable except by loss or theft of the key.where no amount of intercepted ciphertext is enough to allow the cipher to be broken, as with the use of a one-time pad cipher. Contrast with computationally secure.Various schemes have been devised for anonymous, untraceable voting. Voting schemes should have several properties: privacy of the vote, security of the vote (no multiple votes), robustness against disruption by jammers or disrupters, verifiability (voter has confidence in the results), and efficiency.proofs in which no knowledge of the actual proof is conveyed. Peggy the Prover demonstrates to Sid the Skeptic that she is indeed in possession of some piece of knowledge without actually revealing any of that knowledge. This is useful for access to computers, because eavesdroppers or dishonest sysops cannot steal the knowledge given. Also called minimum disclosure proofs. Useful for proving possession of some property, or credential, such as age or voting status, without revealing personal information."}
{"prompt": "Detecting Double Spending", "completion": "Here is an attempt to describe Chaum's digital cash from his paper, Untraceable Electronic Cash, by Chaum, Fiat, and Naor, from the Crypto 88 proceedings. This cash has the property that the user of the cash can remain anonymous so long as she does not spend it more than once, but if she does double-spend then her identity is revealed.This is how it works in general terms: Alice opens an account with a bank non-anonymously. She shows ID so that the bank knows who she is; both she and the bank know her account number. When she withdraws cash, she goes to the bank or contacts them electronically and presents some proof of who she is and what her account number is, and the bank gives her some digital cash. The digital cash is an information pattern, perhaps stored in a computer file on a smart card or magnetic disk. Later, she spends the digital cash by sending or giving it to Bob, a merchant. Bob can check and verify that the cash must have come from the bank. He accepts the cash if it is valid, giving Alice the merchandise. Later, he sends the cash to the bank to be added to his own account.Note that this much could basically be done with a simple RSA signature. The bank could give Alice a statement saying, \"this is worth $1\", signed by the bank's secret key. Bob could verify that the statement was in fact signed by the bank, and know therefore that no one else than the bank could have created that statement. He accepts it and sends it to the bank, which honors it since it recognizes its own signature.One problem with this trivial money is that double-spending can not be detected or prevented since all the cash looks alike. This can be remedied by having the cash include a unique serial number. Now when Bob goes to accept the cash from Alice, he can call the bank and say, has anyone else deposited serial number 123456? If not, he accepts the cash and deposits it. This is called on-line electronic money; the merchant must check with the bank for each transaction.This improved simple system does not deserve to be called cash, though, because it lacks the distinguishing characteristic of digital cash: it is not anonymous. When the bank sees money with serial number 123456 being deposited, the bank recognizes that this was the same bill that Alice withdrew. The bank can therefore deduce that Alice spent the money at Bob's, and from this kind of information a dossier could be built up with all kinds of privacy-destroying information about her.To allow anonymity, we have to get into the mathematics. What we want is for Alice and the bank collectively to create an RSA signature from the bank that could not be forged, but one which the bank will not recognize as coming from Alice. This is the first thing Chaum's paper discusses.The money in this system is of the form (x, f(x)^(1/3)) mod n, where n is the bank's public modulus. f() (and, below, g()) is a one-way function, one which can be calculated easily but for which it is infeasible to calculate the inverse. It should also be infeasible to come up with two different y,z such that f(y) = f(z). Today there are several suitable choices for one-way functions, the most common being the MD5 algorithm from RSA, and the US government's Secure Hash Algorithm (SHA).The reason the expression above would be accepted as cash is two-fold. First, only the bank can calculate anything ^ (1/3) mod n. This is basically the RSA signing operation for the exponent of 3. Nobody else can find cube roots. The reason f(x) is used is this. Suppose we proposed that (x, x^(1/3)) should be the cash, for some random x, reasoning that only the bank could find the cube root of x. Can you see how to forge cash like this? (Take a few moments and try to see how you could construct a pair like this even if you can't take cube roots.)The answer is that it is easy to forge this by first choosing a random y, and exhibiting the pair (y^3, y). Now we have a number and then its cube root. Yet we didn't have to take any cube roots to find it. That's why this kind of money would be no good.Chaum's system avoids this by taking the cube root of a one-way function of x. To forge it without taking a cube root you'd have to produce (finv(y^3), y), which would match the above pattern, but you can't invert the one-way function like that. So only the bank can create money of the proper form. This can be thought of as the formal, mathematical form of my informal \"money\" above which was a digitally signed note with a serial number. Here, x is the serial number, and it's digitally signed in this special way. Nothing more is needed.The nice thing about this money is that it allows for blinding, a method of having the bank sign the value without knowing what value it is signing. It works like this. Alice chooses x, which will be the x in the cash. She calculates f(x), but instead of sending it to the bank to be signed (raised to the 1/3 power) she first chooses a random number r, and sends f(x)*r^3 to the bank. The bank takes this number to the 1/3 power, getting r * f(x)^(1/3). Remember, though, that the bank doesn't see r or f(x) separately, but just their product. It doesn't know what r or f(x) is. They could each be anything, actually.The bank sends this r * f(x)^(1/3) back to Alice, and she divides it by r, which she knows. This gives her f(x)^(1/3), and she puts that together with x to get her digital cash: (x, f(x)^(1/3)). She has a piece of money which could only have been signed by the bank, yet the bank won't recognize it when it is deposited.Other, non-mathematical, things take place as this withdrawal goes on. Alice must prove her identity to the bank, as mentioned above. And the bank will debit her account by the value of the cash. In this system, we are assuming for simplicity that all cash has the same value. In a real system, different values might be encoded by different exponents than 3.When Alice deposits the money, Bob must call the bank to make sure that it hasn't been deposited before, this being an \"on-line\" system. Although the bank won't recognize x (it's never heard of it) it will remember all the x's which have been deposited and so can alert Bob if the money has been spent before. Both Bob and the bank can verify the digital signature on the money and so will honor it.All the material above takes up less than one page of Chaum's nine-page paper. For Chaum, this much is trivial. Now we get to the interesting part. Now we will see the scheme that allows double-spenders to lose their anonymity. This will allow for \"off-line\" electronic cash; Bob will no longer have to check with the bank to see if the money has already been spent. He accepts it from Alice knowing that if she does cheat, the bank will honor the cash and sue Alice to make up the loss.(To make this explanation easier to follow, I will describe a slightly simplified version of Chaum's off-line cash. The version I describe requires the use of a non-invertable one-way function as in the f() used above. Chaum's version does not require as strong an assumption and provides \"unconditional\" untraceability even if the one-way function is broken.)Let's start with the form of the cash itself. It is the product of k/2 numbers, where k is a \"security parameter\" that affects the chance of a cheater succeeding. Each number is of the form g(xi,yi)^(1/3), where g is a two-argument one-way function similar to the f above. (The \"xi\", \"yi\", \"ai\", etc. here are separate values for each i from 0 to k/2.)xi and yi are like this: xi = f(ai), where ai is a random number, and f is another one-way function. yi is kind of complicated. It is f(ai xor <info>), where <info>, the key to this whole operation, is identifying information about Alice's account! It is her account number concatenated with a serial number for the cash.Now, why go through all this? Here's why. If you could find out both ai and (ai xor <info>), for some i, you would know Alice's identity. (Xor'ing them would produce <info>.) When Alice double-spends, both ai and ai xor <info>will be revealed.What happens when Alice spends the coin is this. For each i from 0 to k/2 Bob chooses 0 or 1 at random. If he chooses 1 he gets told ai and yi. If he chooses 0 he gets told (ai xor <info>) and xi. This will let him check the signature on the money, as described in more detail below.Notice that when Bob gets this information, he'll know a bunch of ai's, and he'll know a bunch of (ai xor <info>)'s, but they are for different i's. He doesn't know both ai and (ai xor <info>) for any one i. So he can't break Alice's anonymity.When Bob deposits the money at the bank, he passes along the information he got from Alice regarding the ai's and such.Now, suppose Alice cheats. She spends the money again somewhere else, at Charlie's. Charlie goes through the same procedure as Bob, choosing 0 or 1 at random for each value of i. Here is the catch. Since he is choosing at random, it would be very unlikely that he will choose exactly the same 0's and 1's that Bob chose. (Here is where the size of k matters \u2013 making it bigger makes it less likely that Charlie and Bob will choose the same pattern of 0's and 1's. But it makes the calculations take longer.) That means for one or more values of i, Charlie will probably choose a 0 where Bob chose a 1, or vice versa.Because of this, if Bob got ai for that i, Charlie will get ai xor <info>. Or if Bob got ai xor <info>, Charlie will get ai. Either way, when Charlie sends his record of this information to the bank, the bank will put Bob's and Charlie's information together and get both ai and ai xor <info>. Xor'ing these together reveals <info>, and Alice is caught! This is the main idea.(Chaum suggests not just relying on random chance to make sure Bob and Charlie use different sets of 1's and 0's. At least some of the bits might be assigned to Bob and Charlie by the bank in such a way that everybody gets a different number. This way it would be guaranteed that Bob and Charlie would choose opposite values for some i.)The reason for the money to have the form it does is so that Bob can check that it is signed by the bank. For each value of i Alice has to give him enough information to calculate xi and yi. If Bob choses a 1, she gives him ai and yi. Given ai Bob can calculate xi (=f(ai)), and with this and yi he can calculate g(xi,yi). If Bob chooses a 0, she gives him (ai xor <info>), as described before, and also xi. Given (ai xor <info>), Bob calculates yi (=f(ai xor <info>)), and with this and xi he can calculate g(xi,yi).So for each i, whether Bob gives a 0 or a 1 he gets enough information to calculate g(xi,yi). He multiplies these all together and confirms that they are equal to Alice's original \"money\" value when it is taken to the 3rd power (recall the money was product of g(xi,yi)^(1/3) for all i). Only the bank could have produced a signature on this one-way function f whose arguments take this special form.One more complication exists. (Well, actually, an almost infinite number of complications exist if you look hard enough. But we'll just focus on one more.) Alice needs to get this special form of money from the bank in such a way that the bank won't recognize it. That means she has to blind it. But in this case the bank wants to be sure that the money is of the proper form when it signs it; in particular, it wants to make darned sure that Alice's <info> which is buried deep in all of those f's of g's is actually the right one for her. But since the bank can't see what it is signing, this is hard to do.Chaum uses cut-and-choose for this. He has Alice prepare all these f's and g's according to the form above, carefully embedding her own incriminating <info> in each one. Then she multiplies each g(xi,yi) by a blinding factor ri^3 just like in the first cash. These are what she sends to the bank to be signed.The trick, though, is that she sends twice as many as will be used. She sends k of them, but only k/2 will be used. (That's why the loop above used k/2 as the limit.) The bank chooses k/2 at random out of the k she sent as the ones which will actually be used. Alice then has to send the blinding ri values for the ones which the bank didn't pick.The idea is that if Alice tries to cheat, embedding \"Bozo\" instead of \"Alice\" in that <info> field, she's taking a chance. First, to be useful, she's going to have to embed it in a lot of <info> fields for different values of i. When Bob and Charlie compare notes after she double-spends, every value of i for which they chose different 0's and 1's, which will be on the average half of them, will reveal an <info> field. If she only fakes a few, chances are her real identity will still be revealed.But if she falsifies a great many of them, then when the bank chooses half, chances are at least some of the fake ones will be in the set the bank didn't choose. Then when Alice has to reveal her blinding r's, the jig will be up. The bank will un-blind all those g(xi,yi)'s which aren't being used, and see the fake <info> fields.This cut-and-choose methodology has the disadvantage that Alice has to do twice as much work in preparing the money, half of which will just be thrown away. But it is a simple, \"brute force\" way to make sure that blinding signatures are actually being done on properly-formed data.So, there you have it. Anonymity as long as you don't cheat, and double-spenders get caught. It's a little complicated but that's what computers are for; Bob and Alice wouldn't do all this stuff by hand. Alice would push the \"generate a money candidate\" button and get something to be sent to the bank (lots of the new PDA's have infrared wireless communications that would be perfect for face-to-face transactions). Bob would push the \"check money\" button when Alice spent it and it would flash red or green. As long as the calculations don't actually take too much time, which they really wouldn't in this case despite this long-winded explanation, the people involved can ignore the details.Hal Finney\nhal@rain.orgHal Finney Home Page"}
{"prompt": "The Cathedral and the Bazaar", "completion": "I anatomize a successful open-source project, fetchmail, that was run as a deliberate test of the surprising theories about software engineering suggested by the history of Linux. I discuss these theories in terms of two fundamentally different development styles, the \"cathedral\" model of most of the commercial world versus the \"bazaar\" model of the Linux world. I show that these models derive from opposing assumptions about the nature of the software-debugging task. I then make a sustained argument from the Linux experience for the proposition that \"Given enough eyeballs, all bugs are shallow\", suggest productive analogies with other self-correcting systems of selfish agents, and conclude with some exploration of the implications of this insight for the future of software.Linux is subversive. Who would have thought even five years ago (1991) that a world-class operating system could coalesce as if by magic out of part-time hacking by several thousand developers scattered all over the planet, connected only by the tenuous strands of the Internet?Certainly not I. By the time Linux swam onto my radar screen in early 1993, I had already been involved in Unix and open-source development for ten years. I was one of the first GNU contributors in the mid-1980s. I had released a good deal of open-source software onto the net, developing or co-developing several programs (nethack, Emacs's VC and GUD modes, xlife, and others) that are still in wide use today. I thought I knew how it was done.Linux overturned much of what I thought I knew. I had been preaching the Unix gospel of small tools, rapid prototyping and evolutionary programming for years. But I also believed there was a certain critical complexity above which a more centralized, a priori approach was required. I believed that the most important software (operating systems and really large tools like the Emacs programming editor) needed to be built like cathedrals, carefully crafted by individual wizards or small bands of mages working in splendid isolation, with no beta to be released before its time.Linus Torvalds's style of development\u2014release early and often, delegate everything you can, be open to the point of promiscuity\u2014came as a surprise. No quiet, reverent cathedral-building here\u2014rather, the Linux community seemed to resemble a great babbling bazaar of differing agendas and approaches (aptly symbolized by the Linux archive sites, who'd take submissions from anyone) out of which a coherent and stable system could seemingly emerge only by a succession of miracles.The fact that this bazaar style seemed to work, and work well, came as a distinct shock. As I learned my way around, I worked hard not just at individual projects, but also at trying to understand why the Linux world not only didn't fly apart in confusion but seemed to go from strength to strength at a speed barely imaginable to cathedral-builders.By mid-1996 I thought I was beginning to understand. Chance handed me a perfect way to test my theory, in the form of an open-source project that I could consciously try to run in the bazaar style. So I did\u2014and it was a significant success.This is the story of that project. I'll use it to propose some aphorisms about effective open-source development. Not all of these are things I first learned in the Linux world, but we'll see how the Linux world gives them particular point. If I'm correct, they'll help you understand exactly what it is that makes the Linux community such a fountain of good software\u2014and, perhaps, they will help you become more productive yourself.Since 1993 I'd been running the technical side of a small free-access Internet service provider called Chester County InterLink (CCIL) in West Chester, Pennsylvania. I co-founded CCIL and wrote our unique multiuser bulletin-board software\u2014you can check it out by telnetting to locke.ccil.org. Today it supports almost three thousand users on thirty lines. The job allowed me 24-hour-a-day access to the net through CCIL's 56K line\u2014in fact, the job practically demanded it!I had gotten quite used to instant Internet email. I found having to periodically telnet over to locke to check my mail annoying. What I wanted was for my mail to be delivered on snark (my home system) so that I would be notified when it arrived and could handle it using all my local tools.The Internet's native mail forwarding protocol, SMTP (Simple Mail Transfer Protocol), wouldn't suit, because it works best when machines are connected full-time, while my personal machine isn't always on the Internet, and doesn't have a static IP address. What I needed was a program that would reach out over my intermittent dialup connection and pull across my mail to be delivered locally. I knew such things existed, and that most of them used a simple application protocol called POP (Post Office Protocol). POP is now widely supported by most common mail clients, but at the time, it wasn't built in to the mail reader I was using.I needed a POP3 client. So I went out on the Internet and found one. Actually, I found three or four. I used one of them for a while, but it was missing what seemed an obvious feature, the ability to hack the addresses on fetched mail so replies would work properly.The problem was this: suppose someone named 'joe' on locke sent me mail. If I fetched the mail to snark and then tried to reply to it, my mailer would cheerfully try to ship it to a nonexistent 'joe' on snark. Hand-editing reply addresses to tack on <@ccil.org> quickly got to be a serious pain.This was clearly something the computer ought to be doing for me. But none of the existing POP clients knew how! And this brings us to the first lesson:Perhaps this should have been obvious (it's long been proverbial that \"Necessity is the mother of invention\") but too often software developers spend their days grinding away for pay at programs they neither need nor love. But not in the Linux world\u2014which may explain why the average quality of software originated in the Linux community is so high.So, did I immediately launch into a furious whirl of coding up a brand-new POP3 client to compete with the existing ones? Not on your life! I looked carefully at the POP utilities I had in hand, asking myself \"Which one is closest to what I want?\" Because:While I don't claim to be a great programmer, I try to imitate one. An important trait of the great ones is constructive laziness. They know that you get an A not for effort but for results, and that it's almost always easier to start from a good partial solution than from nothing at all.Linus Torvalds, for example, didn't actually try to write Linux from scratch. Instead, he started by reusing code and ideas from Minix, a tiny Unix-like operating system for PC clones. Eventually all the Minix code went away or was completely rewritten\u2014but while it was there, it provided scaffolding for the infant that would eventually become Linux.In the same spirit, I went looking for an existing POP utility that was reasonably well coded, to use as a development base.The source-sharing tradition of the Unix world has always been friendly to code reuse (this is why the GNU project chose Unix as a base OS, in spite of serious reservations about the OS itself). The Linux world has taken this tradition nearly to its technological limit; it has terabytes of open sources generally available. So spending time looking for some else's almost-good-enough is more likely to give you good results in the Linux world than anywhere else.And it did for me. With those I'd found earlier, my second search made up a total of nine candidates\u2014fetchpop, PopTart, get-mail, gwpop, pimp, pop-perl, popc, popmail and upop. The one I first settled on was 'fetchpop' by Seung-Hong Oh. I put my header-rewrite feature in it, and made various other improvements which the author accepted into his 1.9 release.A few weeks later, though, I stumbled across the code for popclient by Carl Harris, and found I had a problem. Though fetchpop had some good original ideas in it (such as its background-daemon mode), it could only handle POP3 and was rather amateurishly coded (Seung-Hong was at that time a bright but inexperienced programmer, and both traits showed). Carl's code was better, quite professional and solid, but his program lacked several important and rather tricky-to-implement fetchpop features (including those I'd coded myself).Stay or switch? If I switched, I'd be throwing away the coding I'd already done in exchange for a better development base.A practical motive to switch was the presence of multiple-protocol support. POP3 is the most commonly used of the post-office server protocols, but not the only one. Fetchpop and the other competition didn't do POP2, RPOP, or APOP, and I was already having vague thoughts of perhaps adding IMAP (Internet Message Access Protocol, the most recently designed and most powerful post-office protocol) just for fun.But I had a more theoretical reason to think switching might be as good an idea as well, something I learned long before Linux.Or, to put it another way, you often don't really understand the problem until after the first time you implement a solution. The second time, maybe you know enough to do it right. So if you want to get it right, be ready to start over at least once[JB].Well (I told myself) the changes to fetchpop had been my first try. So I switched.After I sent my first set of popclient patches to Carl Harris on 25 June 1996, I found out that he had basically lost interest in popclient some time before. The code was a bit dusty, with minor bugs hanging out. I had many changes to make, and we quickly agreed that the logical thing for me to do was take over the program.Without my actually noticing, the project had escalated. No longer was I just contemplating minor patches to an existing POP client. I took on maintaining an entire one, and there were ideas bubbling in my head that I knew would probably lead to major changes.In a software culture that encourages code-sharing, this is a natural way for a project to evolve. I was acting out this principle:But Carl Harris's attitude was even more important. He understood thatWithout ever having to discuss it, Carl and I knew we had a common goal of having the best solution out there. The only question for either of us was whether I could establish that I was a safe pair of hands. Once I did that, he acted with grace and dispatch. I hope I will do as well when it comes my turn.And so I inherited popclient. Just as importantly, I inherited popclient's user base. Users are wonderful things to have, and not just because they demonstrate that you're serving a need, that you've done something right. Properly cultivated, they can become co-developers.Another strength of the Unix tradition, one that Linux pushes to a happy extreme, is that a lot of users are hackers too. Because source code is available, they can be effective hackers. This can be tremendously useful for shortening debugging time. Given a bit of encouragement, your users will diagnose problems, suggest fixes, and help improve the code far more quickly than you could unaided.The power of this effect is easy to underestimate. In fact, pretty well all of us in the open-source world drastically underestimated how well it would scale up with number of users and against system complexity, until Linus Torvalds showed us differently.In fact, I think Linus's cleverest and most consequential hack was not the construction of the Linux kernel itself, but rather his invention of the Linux development model. When I expressed this opinion in his presence once, he smiled and quietly repeated something he has often said: \"I'm basically a very lazy person who likes to get credit for things other people actually do.\" Lazy like a fox. Or, as Robert Heinlein famously wrote of one of his characters, too lazy to fail.In retrospect, one precedent for the methods and success of Linux can be seen in the development of the GNU Emacs Lisp library and Lisp code archives. In contrast to the cathedral-building style of the Emacs C core and most other GNU tools, the evolution of the Lisp code pool was fluid and very user-driven. Ideas and prototype modes were often rewritten three or four times before reaching a stable final form. And loosely-coupled collaborations enabled by the Internet, a la Linux, were frequent.Indeed, my own most successful single hack previous to fetchmail was probably Emacs VC (version control) mode, a Linux-like collaboration by email with three other people, only one of whom (Richard Stallman, the author of Emacs and founder of the Free Software Foundation) I have met to this day. It was a front-end for SCCS, RCS and later CVS from within Emacs that offered \"one-touch\" version control operations. It evolved from a tiny, crude sccs.el mode somebody else had written. And the development of VC succeeded because, unlike Emacs itself, Emacs Lisp code could go through release/test/improve generations very quickly.The Emacs story is not unique. There have been other software products with a two-level architecture and a two-tier user community that combined a cathedral-mode core and a bazaar-mode toolbox. One such is MATLAB, a commercial data-analysis and visualization tool. Users of MATLAB and other products with a similar structure invariably report that the action, the ferment, the innovation mostly takes place in the open part of the tool where a large and varied community can tinker with it.Early and frequent releases are a critical part of the Linux development model. Most developers (including me) used to believe this was bad policy for larger than trivial projects, because early versions are almost by definition buggy versions and you don't want to wear out the patience of your users.This belief reinforced the general commitment to a cathedral-building style of development. If the overriding objective was for users to see as few bugs as possible, why then you'd only release a version every six months (or less often), and work like a dog on debugging between releases. The Emacs C core was developed this way. The Lisp library, in effect, was not\u2014because there were active Lisp archives outside the FSF's control, where you could go to find new and development code versions independently of Emacs's release cycle[QR].The most important of these, the Ohio State Emacs Lisp archive, anticipated the spirit and many of the features of today's big Linux archives. But few of us really thought very hard about what we were doing, or about what the very existence of that archive suggested about problems in the FSF's cathedral-building development model. I made one serious attempt around 1992 to get a lot of the Ohio code formally merged into the official Emacs Lisp library. I ran into political trouble and was largely unsuccessful.But by a year later, as Linux became widely visible, it was clear that something different and much healthier was going on there. Linus's open development policy was the very opposite of cathedral-building. Linux's Internet archives were burgeoning, multiple distributions were being floated. And all of this was driven by an unheard-of frequency of core system releases.Linus was treating his users as co-developers in the most effective possible way:Linus's innovation wasn't so much in doing quick-turnaround releases incorporating lots of user feedback (something like this had been Unix-world tradition for a long time), but in scaling it up to a level of intensity that matched the complexity of what he was developing. In those early times (around 1991) it wasn't unknown for him to release a new kernel more than once a day! Because he cultivated his base of co-developers and leveraged the Internet for collaboration harder than anyone else, this worked.But how did it work? And was it something I could duplicate, or did it rely on some unique genius of Linus Torvalds?I didn't think so. Granted, Linus is a damn fine hacker. How many of us could engineer an entire production-quality operating system kernel from scratch? But Linux didn't represent any awesome conceptual leap forward. Linus is not (or at least, not yet) an innovative genius of design in the way that, say, Richard Stallman or James Gosling (of NeWS and Java) are. Rather, Linus seems to me to be a genius of engineering and implementation, with a sixth sense for avoiding bugs and development dead-ends and a true knack for finding the minimum-effort path from point A to point B. Indeed, the whole design of Linux breathes this quality and mirrors Linus's essentially conservative and simplifying design approach.So, if rapid releases and leveraging the Internet medium to the hilt were not accidents but integral parts of Linus's engineering-genius insight into the minimum-effort path, what was he maximizing? What was he cranking out of the machinery?Put that way, the question answers itself. Linus was keeping his hacker/users constantly stimulated and rewarded\u2014stimulated by the prospect of having an ego-satisfying piece of the action, rewarded by the sight of constant (even daily) improvement in their work.Linus was directly aiming to maximize the number of person-hours thrown at debugging and development, even at the possible cost of instability in the code and user-base burnout if any serious bug proved intractable. Linus was behaving as though he believed something like this:Or, less formally, \"Given enough eyeballs, all bugs are shallow.\" I dub this: \"Linus's Law\".My original formulation was that every problem \"will be transparent to somebody\". Linus demurred that the person who understands and fixes the problem is not necessarily or even usually the person who first characterizes it. \"Somebody finds the problem,\" he says, \"and somebody else understands it. And I'll go on record as saying that finding it is the bigger challenge.\" That correction is important; we'll see how in the next section, when we examine the practice of debugging in more detail. But the key point is that both parts of the process (finding and fixing) tend to happen rapidly.In Linus's Law, I think, lies the core difference underlying the cathedral-builder and bazaar styles. In the cathedral-builder view of programming, bugs and development problems are tricky, insidious, deep phenomena. It takes months of scrutiny by a dedicated few to develop confidence that you've winkled them all out. Thus the long release intervals, and the inevitable disappointment when long-awaited releases are not perfect.In the bazaar view, on the other hand, you assume that bugs are generally shallow phenomena\u2014or, at least, that they turn shallow pretty quickly when exposed to a thousand eager co-developers pounding on every single new release. Accordingly you release often in order to get more corrections, and as a beneficial side effect you have less to lose if an occasional botch gets out the door.And that's it. That's enough. If \"Linus's Law\" is false, then any system as complex as the Linux kernel, being hacked over by as many hands as the that kernel was, should at some point have collapsed under the weight of unforseen bad interactions and undiscovered \"deep\" bugs. If it's true, on the other hand, it is sufficient to explain Linux's relative lack of bugginess and its continuous uptimes spanning months or even years.Maybe it shouldn't have been such a surprise, at that. Sociologists years ago discovered that the averaged opinion of a mass of equally expert (or equally ignorant) observers is quite a bit more reliable a predictor than the opinion of a single randomly-chosen one of the observers. They called this the Delphi effect. It appears that what Linus has shown is that this applies even to debugging an operating system\u2014that the Delphi effect can tame development complexity even at the complexity level of an OS kernel.[CV]One special feature of the Linux situation that clearly helps along the Delphi effect is the fact that the contributors for any given project are self-selected. An early respondent pointed out that contributions are received not from a random sample, but from people who are interested enough to use the software, learn about how it works, attempt to find solutions to problems they encounter, and actually produce an apparently reasonable fix. Anyone who passes all these filters is highly likely to have something useful to contribute.Linus's Law can be rephrased as \"Debugging is parallelizable\". Although debugging requires debuggers to communicate with some coordinating developer, it doesn't require significant coordination between debuggers. Thus it doesn't fall prey to the same quadratic complexity and management costs that make adding developers problematic.In practice, the theoretical loss of efficiency due to duplication of work by debuggers almost never seems to be an issue in the Linux world. One effect of a \"release early and often\" policy is to minimize such duplication by propagating fed-back fixes quickly[JH].Brooks (the author of The Mythical Man-Month) even made an off-hand observation related to this: \"The total cost of maintaining a widely used program is typically 40 percent or more of the cost of developing it. Surprisingly this cost is strongly affected by the number of users. More users find more bugs.\" [emphasis added].More users find more bugs because adding more users adds more different ways of stressing the program. This effect is amplified when the users are co-developers. Each one approaches the task of bug characterization with a slightly different perceptual set and analytical toolkit, a different angle on the problem. The \"Delphi effect\" seems to work precisely because of this variation. In the specific context of debugging, the variation also tends to reduce duplication of effort.So adding more beta-testers may not reduce the complexity of the current \"deepest\" bug from the developer's point of view, but it increases the probability that someone's toolkit will be matched to the problem in such a way that the bug is shallow to that person.Linus coppers his bets, too. In case there are serious bugs, Linux kernel version are numbered in such a way that potential users can make a choice either to run the last version designated \"stable\" or to ride the cutting edge and risk bugs in order to get new features. This tactic is not yet systematically imitated by most Linux hackers, but perhaps it should be; the fact that either choice is available makes both more attractive.[HBS]It's one thing to observe in the large that the bazaar style greatly accelerates debugging and code evolution. It's another to understand exactly how and why it does so at the micro-level of day-to-day developer and tester behavior. In this section (written three years after the original paper, using insights by developers who read it and re-examined their own behavior) we'll take a hard look at the actual mechanisms. Non-technically inclined readers can safely skip to the next section.One key to understanding is to realize exactly why it is that the kind of bug report non\u2013source-aware users normally turn in tends not to be very useful. Non\u2013source-aware users tend to report only surface symptoms; they take their environment for granted, so they (a) omit critical background data, and (b) seldom include a reliable recipe for reproducing the bug.The underlying problem here is a mismatch between the tester's and the developer's mental models of the program; the tester, on the outside looking in, and the developer on the inside looking out. In closed-source development they're both stuck in these roles, and tend to talk past each other and find each other deeply frustrating.Open-source development breaks this bind, making it far easier for tester and developer to develop a shared representation grounded in the actual source code and to communicate effectively about it. Practically, there is a huge difference in leverage for the developer between the kind of bug report that just reports externally-visible symptoms and the kind that hooks directly to the developer's source-code\u2013based mental representation of the program.Most bugs, most of the time, are easily nailed given even an incomplete but suggestive characterization of their error conditions at source-code level. When someone among your beta-testers can point out, \"there's a boundary problem in line nnn\", or even just \"under conditions X, Y, and Z, this variable rolls over\", a quick look at the offending code often suffices to pin down the exact mode of failure and generate a fix.Thus, source-code awareness by both parties greatly enhances both good communication and the synergy between what a beta-tester reports and what the core developer(s) know. In turn, this means that the core developers' time tends to be well conserved, even with many collaborators.Another characteristic of the open-source method that conserves developer time is the communication structure of typical open-source projects. Above I used the term \"core developer\"; this reflects a distinction between the project core (typically quite small; a single core developer is common, and one to three is typical) and the project halo of beta-testers and available contributors (which often numbers in the hundreds).The fundamental problem that traditional software-development organization addresses is Brook's Law: \"Adding more programmers to a late project makes it later.\" More generally, Brooks's Law predicts that the complexity and communication costs of a project rise with the square of the number of developers, while work done only rises linearly.Brooks's Law is founded on experience that bugs tend strongly to cluster at the interfaces between code written by different people, and that communications/coordination overhead on a project tends to rise with the number of interfaces between human beings. Thus, problems scale with the number of communications paths between developers, which scales as the square of the humber of developers (more precisely, according to the formula N*(N - 1)/2 where N is the number of developers).The Brooks's Law analysis (and the resulting fear of large numbers in development groups) rests on a hidden assummption: that the communications structure of the project is necessarily a complete graph, that everybody talks to everybody else. But on open-source projects, the halo developers work on what are in effect separable parallel subtasks and interact with each other very little; code changes and bug reports stream through the core group, and only within that small core group do we pay the full Brooksian overhead.[SU]There are are still more reasons that source-code\u2013level bug reporting tends to be very efficient. They center around the fact that a single error can often have multiple possible symptoms, manifesting differently depending on details of the user's usage pattern and environment. Such errors tend to be exactly the sort of complex and subtle bugs (such as dynamic-memory-management errors or nondeterministic interrupt-window artifacts) that are hardest to reproduce at will or to pin down by static analysis, and which do the most to create long-term problems in software.A tester who sends in a tentative source-code\u2013level characterization of such a multi-symptom bug (e.g. \"It looks to me like there's a window in the signal handling near line 1250\" or \"Where are you zeroing that buffer?\") may give a developer, otherwise too close to the code to see it, the critical clue to a half-dozen disparate symptoms. In cases like this, it may be hard or even impossible to know which externally-visible misbehaviour was caused by precisely which bug\u2014but with frequent releases, it's unnecessary to know. Other collaborators will be likely to find out quickly whether their bug has been fixed or not. In many cases, source-level bug reports will cause misbehaviours to drop out without ever having been attributed to any specific fix.Complex multi-symptom errors also tend to have multiple trace paths from surface symptoms back to the actual bug. Which of the trace paths a given developer or tester can chase may depend on subtleties of that person's environment, and may well change in a not obviously deterministic way over time. In effect, each developer and tester samples a semi-random set of the program's state space when looking for the etiology of a symptom. The more subtle and complex the bug, the less likely that skill will be able to guarantee the relevance of that sample.For simple and easily reproducible bugs, then, the accent will be on the \"semi\" rather than the \"random\"; debugging skill and intimacy with the code and its architecture will matter a lot. But for complex bugs, the accent will be on the \"random\". Under these circumstances many people running traces will be much more effective than a few people running traces sequentially\u2014even if the few have a much higher average skill level.This effect will be greatly amplified if the difficulty of following trace paths from different surface symptoms back to a bug varies significantly in a way that can't be predicted by looking at the symptoms. A single developer sampling those paths sequentially will be as likely to pick a difficult trace path on the first try as an easy one. On the other hand, suppose many people are trying trace paths in parallel while doing rapid releases. Then it is likely one of them will find the easiest path immediately, and nail the bug in a much shorter time. The project maintainer will see that, ship a new release, and the other people running traces on the same bug will be able to stop before having spent too much time on their more difficult traces[RJ].Having studied Linus's behavior and formed a theory about why it was successful, I made a conscious decision to test this theory on my new (admittedly much less complex and ambitious) project.But the first thing I did was reorganize and simplify popclient a lot. Carl Harris's implementation was very sound, but exhibited a kind of unnecessary complexity common to many C programmers. He treated the code as central and the data structures as support for the code. As a result, the code was beautiful but the data structure design ad-hoc and rather ugly (at least by the high standards of this veteran LISP hacker).I had another purpose for rewriting besides improving the code and the data structure design, however. That was to evolve it into something I understood completely. It's no fun to be responsible for fixing bugs in a program you don't understand.For the first month or so, then, I was simply following out the implications of Carl's basic design. The first serious change I made was to add IMAP support. I did this by reorganizing the protocol machines into a generic driver and three method tables (for POP2, POP3, and IMAP). This and the previous changes illustrate a general principle that's good for programmers to keep in mind, especially in languages like C that don't naturally do dynamic typing:Brooks, Chapter 9: \"Show me your flowchart and conceal your tables, and I shall continue to be mystified. Show me your tables, and I won't usually need your flowchart; it'll be obvious.\"\" Allowing for thirty years of terminological/cultural shift, it's the same point.At this point (early September 1996, about six weeks from zero) I started thinking that a name change might be in order\u2014after all, it wasn't just a POP client any more. But I hesitated, because there was as yet nothing genuinely new in the design. My version of popclient had yet to develop an identity of its own.That changed, radically, when popclient learned how to forward fetched mail to the SMTP port. I'll get to that in a moment. But first: I said earlier that I'd decided to use this project to test my theory about what Linus Torvalds had done right. How (you may well ask) did I do that? In these ways:The payoff from these simple measures was immediate. From the beginning of the project, I got bug reports of a quality most developers would kill for, often with good fixes attached. I got thoughtful criticism, I got fan mail, I got intelligent feature suggestions. Which leads to:One interesting measure of fetchmail's success is the sheer size of the project beta list, fetchmail-friends. At the time of latest revision of this paper (November 2000) it has 287 members and is adding two or three a week.Actually, when I revised in late May 1997 I found the list was beginning to lose members from its high of close to 300 for an interesting reason. Several people have asked me to unsubscribe them because fetchmail is working so well for them that they no longer need to see the list traffic! Perhaps this is part of the normal life-cycle of a mature bazaar-style project.The real turning point in the project was when Harry Hochheiser sent me his scratch code for forwarding mail to the client machine's SMTP port. I realized almost immediately that a reliable implementation of this feature would make all the other mail delivery modes next to obsolete.For many weeks I had been tweaking fetchmail rather incrementally while feeling like the interface design was serviceable but grubby\u2014inelegant and with too many exiguous options hanging out all over. The options to dump fetched mail to a mailbox file or standard output particularly bothered me, but I couldn't figure out why.(If you don't care about the technicalia of Internet mail, the next two paragraphs can be safely skipped.)What I saw when I thought about SMTP forwarding was that popclient had been trying to do too many things. It had been designed to be both a mail transport agent (MTA) and a local delivery agent (MDA). With SMTP forwarding, it could get out of the MDA business and be a pure MTA, handing off mail to other programs for local delivery just as sendmail does.Why mess with all the complexity of configuring a mail delivery agent or setting up lock-and-append on a mailbox when port 25 is almost guaranteed to be there on any platform with TCP/IP support in the first place? Especially when this means retrieved mail is guaranteed to look like normal sender-initiated SMTP mail, which is really what we want anyway.(Back to a higher level....)Even if you didn't follow the preceding technical jargon, there are several important lessons here. First, this SMTP-forwarding concept was the biggest single payoff I got from consciously trying to emulate Linus's methods. A user gave me this terrific idea\u2014all I had to do was understand the implications.Interestingly enough, you will quickly find that if you are completely and self-deprecatingly truthful about how much you owe other people, the world at large will treat you as though you did every bit of the invention yourself and are just being becomingly modest about your innate genius. We can all see how well this worked for Linus!(When I gave my talk at the first Perl Conference in August 1997, hacker extraordinaire Larry Wall was in the front row. As I got to the last line above he called out, religious-revival style, \"Tell it, tell it, brother!\". The whole audience laughed, because they knew this had worked for the inventor of Perl, too.)After a very few weeks of running the project in the same spirit, I began to get similar praise not just from my users but from other people to whom the word leaked out. I stashed away some of that email; I'll look at it again sometime if I ever start wondering whether my life has been worthwhile :-).But there are two more fundamental, non-political lessons here that are general to all kinds of design.I had been trying to solve the wrong problem by continuing to develop popclient as a combined MTA/MDA with all kinds of funky local delivery modes. Fetchmail's design needed to be rethought from the ground up as a pure MTA, a part of the normal SMTP-speaking Internet mail path.When you hit a wall in development\u2014when you find yourself hard put to think past the next patch\u2014it's often time to ask not whether you've got the right answer, but whether you're asking the right question. Perhaps the problem needs to be reframed.Well, I had reframed my problem. Clearly, the right thing to do was (1) hack SMTP forwarding support into the generic driver, (2) make it the default mode, and (3) eventually throw out all the other delivery modes, especially the deliver-to-file and deliver-to-standard-output options.I hesitated over step 3 for some time, fearing to upset long-time popclient users dependent on the alternate delivery mechanisms. In theory, they could immediately switch to .forward files or their non-sendmail equivalents to get the same effects. In practice the transition might have been messy.But when I did it, the benefits proved huge. The cruftiest parts of the driver code vanished. Configuration got radically simpler\u2014no more grovelling around for the system MDA and user's mailbox, no more worries about whether the underlying OS supports file locking.Also, the only way to lose mail vanished. If you specified delivery to a file and the disk got full, your mail got lost. This can't happen with SMTP forwarding because your SMTP listener won't return OK unless the message can be delivered or at least spooled for later delivery.Also, performance improved (though not so you'd notice it in a single run). Another not insignificant benefit of this change was that the manual page got a lot simpler.Later, I had to bring delivery via a user-specified local MDA back in order to allow handling of some obscure situations involving dynamic SLIP. But I found a much simpler way to do it.The moral? Don't hesitate to throw away superannuated features when you can do it without loss of effectiveness. Antoine de Saint-Exup\u00e9ry (who was an aviator and aircraft designer when he wasn't authoring classic children's books) said:When your code is getting both better and simpler, that is when you know it's right. And in the process, the fetchmail design acquired an identity of its own, different from the ancestral popclient.It was time for the name change. The new design looked much more like a dual of sendmail than the old popclient had; both are MTAs, but where sendmail pushes then delivers, the new popclient pulls then delivers. So, two months off the blocks, I renamed it fetchmail.There is a more general lesson in this story about how SMTP delivery came to fetchmail. It is not only debugging that is parallelizable; development and (to a perhaps surprising extent) exploration of design space is, too. When your development mode is rapidly iterative, development and enhancement may become special cases of debugging\u2014fixing 'bugs of omission' in the original capabilities or concept of the software.Even at a higher level of design, it can be very valuable to have lots of co-developers random-walking through the design space near your product. Consider the way a puddle of water finds a drain, or better yet how ants find food: exploration essentially by diffusion, followed by exploitation mediated by a scalable communication mechanism. This works very well; as with Harry Hochheiser and me, one of your outriders may well find a huge win nearby that you were just a little too close-focused to see.There I was with a neat and innovative design, code that I knew worked well because I used it every day, and a burgeoning beta list. It gradually dawned on me that I was no longer engaged in a trivial personal hack that might happen to be useful to few other people. I had my hands on a program that every hacker with a Unix box and a SLIP/PPP mail connection really needs.With the SMTP forwarding feature, it pulled far enough in front of the competition to potentially become a \"category killer\", one of those classic programs that fills its niche so competently that the alternatives are not just discarded but almost forgotten.I think you can't really aim or plan for a result like this. You have to get pulled into it by design ideas so powerful that afterward the results just seem inevitable, natural, even foreordained. The only way to try for ideas like that is by having lots of ideas\u2014or by having the engineering judgment to take other peoples' good ideas beyond where the originators thought they could go.Andy Tanenbaum had the original idea to build a simple native Unix for IBM PCs, for use as a teaching tool (he called it Minix). Linus Torvalds pushed the Minix concept further than Andrew probably thought it could go\u2014and it grew into something wonderful. In the same way (though on a smaller scale), I took some ideas by Carl Harris and Harry Hochheiser and pushed them hard. Neither of us was 'original' in the romantic way people think is genius. But then, most science and engineering and software development isn't done by original genius, hacker mythology to the contrary.The results were pretty heady stuff all the same\u2014in fact, just the kind of success every hacker lives for! And they meant I would have to set my standards even higher. To make fetchmail as good as I now saw it could be, I'd have to write not just for my own needs, but also include and support features necessary to others but outside my orbit. And do that while keeping the program simple and robust.The first and overwhelmingly most important feature I wrote after realizing this was multidrop support\u2014the ability to fetch mail from mailboxes that had accumulated all mail for a group of users, and then route each piece of mail to its individual recipients.I decided to add the multidrop support partly because some users were clamoring for it, but mostly because I thought it would shake bugs out of the single-drop code by forcing me to deal with addressing in full generality. And so it proved. Getting RFC 822 address parsing right took me a remarkably long time, not because any individual piece of it is hard but because it involved a pile of interdependent and fussy details.But multidrop addressing turned out to be an excellent design decision as well. Here's how I knew:The unexpected use for multidrop fetchmail is to run mailing lists with the list kept, and alias expansion done, on the client side of the Internet connection. This means someone running a personal machine through an ISP account can manage a mailing list without continuing access to the ISP's alias files.Another important change demanded by my beta-testers was support for 8-bit MIME (Multipurpose Internet Mail Extensions) operation. This was pretty easy to do, because I had been careful to keep the code 8-bit clean (that is, to not press the 8th bit, unused in the ASCII character set, into service to carry information within the program). Not because I anticipated the demand for this feature, but rather in obedience to another rule:Had I not obeyed this rule, 8-bit MIME support would have been difficult and buggy. As it was, all I had to do is read the MIME standard (RFC 1652) and add a trivial bit of header-generation logic.Some European users bugged me into adding an option to limit the number of messages retrieved per session (so they can control costs from their expensive phone networks). I resisted this for a long time, and I'm still not entirely happy about it. But if you're writing for the world, you have to listen to your customers\u2014this doesn't change just because they're not paying you in money.Before we go back to general software-engineering issues, there are a couple more specific lessons from the fetchmail experience to ponder. Nontechnical readers can safely skip this section.The rc (control) file syntax includes optional 'noise' keywords that are entirely ignored by the parser. The English-like syntax they allow is considerably more readable than the traditional terse keyword-value pairs you get when you strip them all out.These started out as a late-night experiment when I noticed how much the rc file declarations were beginning to resemble an imperative minilanguage. (This is also why I changed the original popclient \"server\" keyword to \"poll\").It seemed to me that trying to make that imperative minilanguage more like English might make it easier to use. Now, although I'm a convinced partisan of the \"make it a language\" school of design as exemplified by Emacs and HTML and many database engines, I am not normally a big fan of \"English-like\" syntaxes.Traditionally programmers have tended to favor control syntaxes that are very precise and compact and have no redundancy at all. This is a cultural legacy from when computing resources were expensive, so parsing stages had to be as cheap and simple as possible. English, with about 50% redundancy, looked like a very inappropriate model then.This is not my reason for normally avoiding English-like syntaxes; I mention it here only to demolish it. With cheap cycles and core, terseness should not be an end in itself. Nowadays it's more important for a language to be convenient for humans than to be cheap for the computer.There remain, however, good reasons to be wary. One is the complexity cost of the parsing stage\u2014you don't want to raise that to the point where it's a significant source of bugs and user confusion in itself. Another is that trying to make a language syntax English-like often demands that the \"English\" it speaks be bent seriously out of shape, so much so that the superficial resemblance to natural language is as confusing as a traditional syntax would have been. (You see this bad effect in a lot of so-called \"fourth generation\" and commercial database-query languages.)The fetchmail control syntax seems to avoid these problems because the language domain is extremely restricted. It's nowhere near a general-purpose language; the things it says simply are not very complicated, so there's little potential for confusion in moving mentally between a tiny subset of English and the actual control language. I think there may be a broader lesson here:Another lesson is about security by obscurity. Some fetchmail users asked me to change the software to store passwords encrypted in the rc file, so snoopers wouldn't be able to casually see them.I didn't do it, because this doesn't actually add protection. Anyone who's acquired permissions to read your rc file will be able to run fetchmail as you anyway\u2014and if it's your password they're after, they'd be able to rip the necessary decoder out of the fetchmail code itself to get it.All .fetchmailrc password encryption would have done is give a false sense of security to people who don't think very hard. The general rule here is:Early reviewers and test audiences for this essay consistently raised questions about the preconditions for successful bazaar-style development, including both the qualifications of the project leader and the state of code at the time one goes public and starts to try to build a co-developer community.It's fairly clear that one cannot code from the ground up in bazaar style[IN]. One can test, debug and improve in bazaar style, but it would be very hard to originate a project in bazaar mode. Linus didn't try it. I didn't either. Your nascent developer community needs to have something runnable and testable to play with.When you start community-building, what you need to be able to present is a plausible promise. Your program doesn't have to work particularly well. It can be crude, buggy, incomplete, and poorly documented. What it must not fail to do is (a) run, and (b) convince potential co-developers that it can be evolved into something really neat in the foreseeable future.Linux and fetchmail both went public with strong, attractive basic designs. Many people thinking about the bazaar model as I have presented it have correctly considered this critical, then jumped from that to the conclusion that a high degree of design intuition and cleverness in the project leader is indispensable.But Linus got his design from Unix. I got mine initially from the ancestral popclient (though it would later change a great deal, much more proportionately speaking than has Linux). So does the leader/coordinator for a bazaar-style effort really have to have exceptional design talent, or can he get by through leveraging the design talent of others?I think it is not critical that the coordinator be able to originate designs of exceptional brilliance, but it is absolutely critical that the coordinator be able to recognize good design ideas from others.Both the Linux and fetchmail projects show evidence of this. Linus, while not (as previously discussed) a spectacularly original designer, has displayed a powerful knack for recognizing good design and integrating it into the Linux kernel. And I have already described how the single most powerful design idea in fetchmail (SMTP forwarding) came from somebody else.Early audiences of this essay complimented me by suggesting that I am prone to undervalue design originality in bazaar projects because I have a lot of it myself, and therefore take it for granted. There may be some truth to this; design (as opposed to coding or debugging) is certainly my strongest skill.But the problem with being clever and original in software design is that it gets to be a habit\u2014you start reflexively making things cute and complicated when you should be keeping them robust and simple. I have had projects crash on me because I made this mistake, but I managed to avoid this with fetchmail.So I believe the fetchmail project succeeded partly because I restrained my tendency to be clever; this argues (at least) against design originality being essential for successful bazaar projects. And consider Linux. Suppose Linus Torvalds had been trying to pull off fundamental innovations in operating system design during the development; does it seem at all likely that the resulting kernel would be as stable and successful as what we have?A certain base level of design and coding skill is required, of course, but I expect almost anybody seriously thinking of launching a bazaar effort will already be above that minimum. The open-source community's internal market in reputation exerts subtle pressure on people not to launch development efforts they're not competent to follow through on. So far this seems to have worked pretty well.There is another kind of skill not normally associated with software development which I think is as important as design cleverness to bazaar projects\u2014and it may be more important. A bazaar project coordinator or leader must have good people and communications skills.This should be obvious. In order to build a development community, you need to attract people, interest them in what you're doing, and keep them happy about the amount of work they're doing. Technical sizzle will go a long way towards accomplishing this, but it's far from the whole story. The personality you project matters, too.It is not a coincidence that Linus is a nice guy who makes people like him and want to help him. It's not a coincidence that I'm an energetic extrovert who enjoys working a crowd and has some of the delivery and instincts of a stand-up comic. To make the bazaar model work, it helps enormously if you have at least a little skill at charming people.It is truly written: the best hacks start out as personal solutions to the author's everyday problems, and spread because the problem turns out to be typical for a large class of users. This takes us back to the matter of rule 1, restated in a perhaps more useful way:So it was with Carl Harris and the ancestral popclient, and so with me and fetchmail. But this has been understood for a long time. The interesting point, the point that the histories of Linux and fetchmail seem to demand we focus on, is the next stage\u2014the evolution of software in the presence of a large and active community of users and co-developers.In The Mythical Man-Month, Fred Brooks observed that programmer time is not fungible; adding developers to a late software project makes it later. As we've seen previously, he argued that the complexity and communication costs of a project rise with the square of the number of developers, while work done only rises linearly. Brooks's Law has been widely regarded as a truism. But we've examined in this essay an number of ways in which the process of open-source development falsifies the assumptionms behind it\u2014and, empirically, if Brooks's Law were the whole picture Linux would be impossible.Gerald Weinberg's classic The Psychology of Computer Programming supplied what, in hindsight, we can see as a vital correction to Brooks. In his discussion of \"egoless programming\", Weinberg observed that in shops where developers are not territorial about their code, and encourage other people to look for bugs and potential improvements in it, improvement happens dramatically faster than elsewhere. (Recently, Kent Beck's 'extreme programming' technique of deploying coders in pairs looking over one anothers' shoulders might be seen as an attempt to force this effect.)Weinberg's choice of terminology has perhaps prevented his analysis from gaining the acceptance it deserved\u2014one has to smile at the thought of describing Internet hackers as \"egoless\". But I think his argument looks more compelling today than ever.The bazaar method, by harnessing the full power of the \"egoless programming\" effect, strongly mitigates the effect of Brooks's Law. The principle behind Brooks's Law is not repealed, but given a large developer population and cheap communications its effects can be swamped by competing nonlinearities that are not otherwise visible. This resembles the relationship between Newtonian and Einsteinian physics\u2014the older system is still valid at low energies, but if you push mass and velocity high enough you get surprises like nuclear explosions or Linux.The history of Unix should have prepared us for what we're learning from Linux (and what I've verified experimentally on a smaller scale by deliberately copying Linus's methods[EGCS]). That is, while coding remains an essentially solitary activity, the really great hacks come from harnessing the attention and brainpower of entire communities. The developer who uses only his or her own brain in a closed project is going to fall behind the developer who knows how to create an open, evolutionary context in which feedback exploring the design space, code contributions, bug-spotting, and other improvements come from from hundreds (perhaps thousands) of people.But the traditional Unix world was prevented from pushing this approach to the ultimate by several factors. One was the legal contraints of various licenses, trade secrets, and commercial interests. Another (in hindsight) was that the Internet wasn't yet good enough.Before cheap Internet, there were some geographically compact communities where the culture encouraged Weinberg's \"egoless\" programming, and a developer could easily attract a lot of skilled kibitzers and co-developers. Bell Labs, the MIT AI and LCS labs, UC Berkeley\u2014these became the home of innovations that are legendary and still potent.Linux was the first project for which a conscious and successful effort to use the entire world as its talent pool was made. I don't think it's a coincidence that the gestation period of Linux coincided with the birth of the World Wide Web, and that Linux left its infancy during the same period in 1993\u20141994 that saw the takeoff of the ISP industry and the explosion of mainstream interest in the Internet. Linus was the first person who learned how to play by the new rules that pervasive Internet access made possible.While cheap Internet was a necessary condition for the Linux model to evolve, I think it was not by itself a sufficient condition. Another vital factor was the development of a leadership style and set of cooperative customs that could allow developers to attract co-developers and get maximum leverage out of the medium.But what is this leadership style and what are these customs? They cannot be based on power relationships\u2014and even if they could be, leadership by coercion would not produce the results we see. Weinberg quotes the autobiography of the 19th-century Russian anarchist Pyotr Alexeyvich Kropotkin's Memoirs of a Revolutionist to good effect on this subject:Having been brought up in a serf-owner's family, I entered active life, like all young men of my time, with a great deal of confidence in the necessity of commanding, ordering, scolding, punishing and the like. But when, at an early stage, I had to manage serious enterprises and to deal with [free] men, and when each mistake would lead at once to heavy consequences, I began to appreciate the difference between acting on the principle of command and discipline and acting on the principle of common understanding. The former works admirably in a military parade, but it is worth nothing where real life is concerned, and the aim can be achieved only through the severe effort of many converging wills.The \"severe effort of many converging wills\" is precisely what a project like Linux requires\u2014and the \"principle of command\" is effectively impossible to apply among volunteers in the anarchist's paradise we call the Internet. To operate and compete effectively, hackers who want to lead collaborative projects have to learn how to recruit and energize effective communities of interest in the mode vaguely suggested by Kropotkin's \"principle of understanding\". They must learn to use Linus's Law.[SP]Earlier I referred to the \"Delphi effect\" as a possible explanation for Linus's Law. But more powerful analogies to adaptive systems in biology and economics also irresistably suggest themselves. The Linux world behaves in many respects like a free market or an ecology, a collection of selfish agents attempting to maximize utility which in the process produces a self-correcting spontaneous order more elaborate and efficient than any amount of central planning could have achieved. Here, then, is the place to seek the \"principle of understanding\".The \"utility function\" Linux hackers are maximizing is not classically economic, but is the intangible of their own ego satisfaction and reputation among other hackers. (One may call their motivation \"altruistic\", but this ignores the fact that altruism is itself a form of ego satisfaction for the altruist). Voluntary cultures that work this way are not actually uncommon; one other in which I have long participated is science fiction fandom, which unlike hackerdom has long explicitly recognized \"egoboo\" (ego-boosting, or the enhancement of one's reputation among other fans) as the basic drive behind volunteer activity.Linus, by successfully positioning himself as the gatekeeper of a project in which the development is mostly done by others, and nurturing interest in the project until it became self-sustaining, has shown an acute grasp of Kropotkin's \"principle of shared understanding\". This quasi-economic view of the Linux world enables us to see how that understanding is applied.We may view Linus's method as a way to create an efficient market in \"egoboo\"\u2014to connect the selfishness of individual hackers as firmly as possible to difficult ends that can only be achieved by sustained cooperation. With the fetchmail project I have shown (albeit on a smaller scale) that his methods can be duplicated with good results. Perhaps I have even done it a bit more consciously and systematically than he.Many people (especially those who politically distrust free markets) would expect a culture of self-directed egoists to be fragmented, territorial, wasteful, secretive, and hostile. But this expectation is clearly falsified by (to give just one example) the stunning variety, quality, and depth of Linux documentation. It is a hallowed given that programmers hate documenting; how is it, then, that Linux hackers generate so much documentation? Evidently Linux's free market in egoboo works better to produce virtuous, other-directed behavior than the massively-funded documentation shops of commercial software producers.Both the fetchmail and Linux kernel projects show that by properly rewarding the egos of many other hackers, a strong developer/coordinator can use the Internet to capture the benefits of having lots of co-developers without having a project collapse into a chaotic mess. So to Brooks's Law I counter-propose the following:I think the future of open-source software will increasingly belong to people who know how to play Linus's game, people who leave behind the cathedral and embrace the bazaar. This is not to say that individual vision and brilliance will no longer matter; rather, I think that the cutting edge of open-source software will belong to people who start from individual vision and brilliance, then amplify it through the effective construction of voluntary communities of interest.Perhaps this is not only the future of open-source software. No closed-source developer can match the pool of talent the Linux community can bring to bear on a problem. Very few could afford even to hire the more than 200 (1999: 600, 2000: 800) people who have contributed to fetchmail!Perhaps in the end the open-source culture will triumph not because cooperation is morally right or software \"hoarding\" is morally wrong (assuming you believe the latter, which neither Linus nor I do), but simply because the closed-source world cannot win an evolutionary arms race with open-source communities that can put orders of magnitude more skilled time into a problem.The original Cathedral and Bazaar paper of 1997 ended with the vision above\u2014that of happy networked hordes of programmer/anarchists outcompeting and overwhelming the hierarchical world of conventional closed software.A good many skeptics weren't convinced, however; and the questions they raise deserve a fair engagement. Most of the objections to the bazaar argument come down to the claim that its proponents have underestimated the productivity-multiplying effect of conventional management.Traditionally-minded software-development managers often object that the casualness with which project groups form and change and dissolve in the open-source world negates a significant part of the apparent advantage of numbers that the open-source community has over any single closed-source developer. They would observe that in software development it is really sustained effort over time and the degree to which customers can expect continuing investment in the product that matters, not just how many people have thrown a bone in the pot and left it to simmer.There is something to this argument, to be sure; in fact, I have developed the idea that expected future service value is the key to the economics of software production in the essay The Magic Cauldron.But this argument also has a major hidden problem; its implicit assumption that open-source development cannot deliver such sustained effort. In fact, there have been open-source projects that maintained a coherent direction and an effective maintainer community over quite long periods of time without the kinds of incentive structures or institutional controls that conventional management finds essential. The development of the GNU Emacs editor is an extreme and instructive example; it has absorbed the efforts of hundreds of contributors over 15 years into a unified architectural vision, despite high turnover and the fact that only one person (its author) has been continuously active during all that time. No closed-source editor has ever matched this longevity record.This suggests a reason for questioning the advantages of conventionally-managed software development that is independent of the rest of the arguments over cathedral vs. bazaar mode. If it's possible for GNU Emacs to express a consistent architectural vision over 15 years, or for an operating system like Linux to do the same over 8 years of rapidly changing hardware and platform technology; and if (as is indeed the case) there have been many well-architected open-source projects of more than 5 years duration\u2014then we are entitled to wonder what, if anything, the tremendous overhead of conventionally-managed development is actually buying us.Whatever it is certainly doesn't include reliable execution by deadline, or on budget, or to all features of the specification; it's a rare 'managed' project that meets even one of these goals, let alone all three. It also does not appear to be ability to adapt to changes in technology and economic context during the project lifetime, either; the open-source community has proven far more effective on that score (as one can readily verify, for example, by comparing the 30-year history of the Internet with the short half-lives of proprietary networking technologies\u2014or the cost of the 16-bit to 32-bit transition in Microsoft Windows with the nearly effortless upward migration of Linux during the same period, not only along the Intel line of development but to more than a dozen other hardware platforms, including the 64-bit Alpha as well).One thing many people think the traditional mode buys you is somebody to hold legally liable and potentially recover compensation from if the project goes wrong. But this is an illusion; most software licenses are written to disclaim even warranty of merchantability, let alone performance\u2014and cases of successful recovery for software nonperformance are vanishingly rare. Even if they were common, feeling comforted by having somebody to sue would be missing the point. You didn't want to be in a lawsuit; you wanted working software.So what is all that management overhead buying?In order to understand that, we need to understand what software development managers believe they do. A woman I know who seems to be very good at this job says software project management has five functions:Apparently worthy goals, all of these; but under the open-source model, and in its surrounding social context, they can begin to seem strangely irrelevant. We'll take them in reverse order.My friend reports that a lot of resource marshalling is basically defensive; once you have your people and machines and office space, you have to defend them from peer managers competing for the same resources, and from higher-ups trying to allocate the most efficient use of a limited pool.But open-source developers are volunteers, self-selected for both interest and ability to contribute to the projects they work on (and this remains generally true even when they are being paid a salary to hack open source.) The volunteer ethos tends to take care of the 'attack' side of resource-marshalling automatically; people bring their own resources to the table. And there is little or no need for a manager to 'play defense' in the conventional sense.Anyway, in a world of cheap PCs and fast Internet links, we find pretty consistently that the only really limiting resource is skilled attention. Open-source projects, when they founder, essentially never do so for want of machines or links or office space; they die only when the developers themselves lose interest.That being the case, it's doubly important that open-source hackers organize themselves for maximum productivity by self-selection\u2014and the social milieu selects ruthlessly for competence. My friend, familiar with both the open-source world and large closed projects, believes that open source has been successful partly because its culture only accepts the most talented 5% or so of the programming population. She spends most of her time organizing the deployment of the other 95%, and has thus observed first-hand the well-known variance of a factor of one hundred in productivity between the most able programmers and the merely competent.The size of that variance has always raised an awkward question: would individual projects, and the field as a whole, be better off without more than 50% of the least able in it? Thoughtful managers have understood for a long time that if conventional software management's only function were to convert the least able from a net loss to a marginal win, the game might not be worth the candle.The success of the open-source community sharpens this question considerably, by providing hard evidence that it is often cheaper and more effective to recruit self-selected volunteers from the Internet than it is to manage buildings full of people who would rather be doing something else.Which brings us neatly to the question of motivation. An equivalent and often-heard way to state my friend's point is that traditional development management is a necessary compensation for poorly motivated programmers who would not otherwise turn out good work.This answer usually travels with a claim that the open-source community can only be relied on only to do work that is `sexy' or technically sweet; anything else will be left undone (or done only poorly) unless it's churned out by money-motivated cubicle peons with managers cracking whips over them. I address the psychological and social reasons for being skeptical of this claim in Homesteading the Noosphere. For present purposes, however, I think it's more interesting to point out the implications of accepting it as true.If the conventional, closed-source, heavily-managed style of software development is really defended only by a sort of Maginot Line of problems conducive to boredom, then it's going to remain viable in each individual application area for only so long as nobody finds those problems really interesting and nobody else finds any way to route around them. Because the moment there is open-source competition for a 'boring' piece of software, customers are going to know that it was finally tackled by someone who chose that problem to solve because of a fascination with the problem itself\u2014which, in software as in other kinds of creative work, is a far more effective motivator than money alone.Having a conventional management structure solely in order to motivate, then, is probably good tactics but bad strategy; a short-term win, but in the longer term a surer loss.So far, conventional development management looks like a bad bet now against open source on two points (resource marshalling, organization), and like it's living on borrowed time with respect to a third (motivation). And the poor beleaguered conventional manager is not going to get any succour from the monitoring issue; the strongest argument the open-source community has is that decentralized peer review trumps all the conventional methods for trying to ensure that details don't get slipped.Can we save defining goals as a justification for the overhead of conventional software project management? Perhaps; but to do so, we'll need good reason to believe that management committees and corporate roadmaps are more successful at defining worthy and widely shared goals than the project leaders and tribal elders who fill the analogous role in the open-source world.That is on the face of it a pretty hard case to make. And it's not so much the open-source side of the balance (the longevity of Emacs, or Linus Torvalds's ability to mobilize hordes of developers with talk of \"world domination\") that makes it tough. Rather, it's the demonstrated awfulness of conventional mechanisms for defining the goals of software projects.One of the best-known folk theorems of software engineering is that 60% to 75% of conventional software projects either are never completed or are rejected by their intended users. If that range is anywhere near true (and I've never met a manager of any experience who disputes it) then more projects than not are being aimed at goals that are either (a) not realistically attainable, or (b) just plain wrong.This, more than any other problem, is the reason that in today's software engineering world the very phrase \"management committee\" is likely to send chills down the hearer's spine\u2014even (or perhaps especially) if the hearer is a manager. The days when only programmers griped about this pattern are long past; Dilbert cartoons hang over executives' desks now.Our reply, then, to the traditional software development manager, is simple\u2014if the open-source community has really underestimated the value of conventional management, why do so many of you display contempt for your own process?Once again the example of the open-source community sharpens this question considerably\u2014because we have fun doing what we do. Our creative play has been racking up technical, market-share, and mind-share successes at an astounding rate. We're proving not only that we can do better software, but that joy is an asset.Two and a half years after the first version of this essay, the most radical thought I can offer to close with is no longer a vision of an open-source\u2013dominated software world; that, after all, looks plausible to a lot of sober people in suits these days.Rather, I want to suggest what may be a wider lesson about software, (and probably about every kind of creative or professional work). Human beings generally take pleasure in a task when it falls in a sort of optimal-challenge zone; not so easy as to be boring, not too hard to achieve. A happy programmer is one who is neither underutilized nor weighed down with ill-formulated goals and stressful process friction. Enjoyment predicts efficiency.Relating to your own work process with fear and loathing (even in the displaced, ironic way suggested by hanging up Dilbert cartoons) should therefore be regarded in itself as a sign that the process has failed. Joy, humor, and playfulness are indeed assets; it was not mainly for the alliteration that I wrote of \"happy hordes\" above, and it is no mere joke that the Linux mascot is a cuddly, neotenous penguin.It may well turn out that one of the most important effects of open source's success will be to teach us that play is the most economically efficient mode of creative work.It's a strange feeling to realize you're helping make history....On January 22 1998, approximately seven months after I first published The Cathedral and the Bazaar, Netscape Communications, Inc. announced plans to give away the source for Netscape Communicator. I had had no clue this was going to happen before the day of the announcement.Eric Hahn, executive vice president and chief technology officer at Netscape, emailed me shortly afterwards as follows: \"On behalf of everyone at Netscape, I want to thank you for helping us get to this point in the first place. Your thinking and writings were fundamental inspirations to our decision.\"\"The following week I flew out to Silicon Valley at Netscape's invitation for a day-long strategy conference (on 4 Feb 1998) with some of their top executives and technical people. We designed Netscape's source-release strategy and license together.A few days later I wrote the following:Netscape is about to provide us with a large-scale, real-world test of the bazaar model in the commercial world. The open-source culture now faces a danger; if Netscape's execution doesn't work, the open-source concept may be so discredited that the commercial world won't touch it again for another decade.On the other hand, this is also a spectacular opportunity. Initial reaction to the move on Wall Street and elsewhere has been cautiously positive. We're being given a chance to prove ourselves, too. If Netscape regains substantial market share through this move, it just may set off a long-overdue revolution in the software industry.The next year should be a very instructive and interesting time.And indeed it was. As I write in mid-2000, the development of what was later named Mozilla has been only a qualified success. It achieved Netscape's original goal, which was to deny Microsoft a monopoly lock on the browser market. It has also achieved some dramatic successes (notably the release of the next-generation Gecko rendering engine).However, it has not yet garnered the massive development effort from outside Netscape that the Mozilla founders had originally hoped for. The problem here seems to be that for a long time the Mozilla distribution actually broke one of the basic rules of the bazaar model; it didn't ship with something potential contributors could easily run and see working. (Until more than a year after release, building Mozilla from source required a license for the proprietary Motif library.)Most negatively (from the point of view of the outside world) the Mozilla group didn't ship a production-quality browser for two and a half years after the project launch\u2014and in 1999 one of the project's principals caused a bit of a sensation by resigning, complaining of poor management and missed opportunities. \"Open source,\" he correctly observed, \"is not magic pixie dust.\"And indeed it is not. The long-term prognosis for Mozilla looks dramatically better now (in November 2000) than it did at the time of Jamie Zawinski's resignation letter\u2014in the last few weeks the nightly releases have finally passed the critical threshold to production usability. But Jamie was right to point out that going open will not necessarily save an existing project that suffers from ill-defined goals or spaghetti code or any of the software engineering's other chronic ills. Mozilla has managed to provide an example simultaneously of how open source can succeed and how it could fail.In the mean time, however, the open-source idea has scored successes and found backers elsewhere. Since the Netscape release we've seen a tremendous explosion of interest in the open-source development model, a trend both driven by and driving the continuing success of the Linux operating system. The trend Mozilla touched off is continuing at an accelerating rate.[JB] In Programing Pearls, the noted computer-science aphorist Jon Bentley comments on Brooks's observation with \"If you plan to throw one away, you will throw away two.\" He is almost certainly right. The point of Brooks's observation, and Bentley's, isn't merely that you should expect first attempt to be wrong, it's that starting over with the right idea is usually more effective than trying to salvage a mess. \u21a9[QR] Examples of successful open-source, bazaar development predating the Internet explosion and unrelated to the Unix and Internet traditions have existed. The development of the info-Zip compression utility during 1990\u2013x1992, primarily for DOS machines, was one such example. Another was the RBBS bulletin board system (again for DOS), which began in 1983 and developed a sufficiently strong community that there have been fairly regular releases up to the present (mid-1999) despite the huge technical advantages of Internet mail and file-sharing over local BBSs. While the info-Zip community relied to some extent on Internet mail, the RBBS developer culture was actually able to base a substantial on-line community on RBBS that was completely independent of the TCP/IP infrastructure. \u21a9[CV] That transparency and peer review are valuable for taming the complexity of OS development turns out, after all, not to be a new concept. In 1965, very early in the history of time-sharing operating systems, Corbat\u00f3 and Vyssotsky, co-designers of the Multics operating system, wroteIt is expected that the Multics system will be published when it is operating substantially... Such publication is desirable for two reasons: First, the system should withstand public scrutiny and criticism volunteered by interested readers; second, in an age of increasing complexity, it is an obligation to present and future system designers to make the inner operating system as lucid as possible so as to reveal the basic system issues. \u21a9[JH] John Hasler has suggested an interesting explanation for the fact that duplication of effort doesn't seem to be a net drag on open-source development. He proposes what I'll dub \"Hasler's Law\": the costs of duplicated work tend to scale sub-qadratically with team size\u2014that is, more slowly than the planning and management overhead that would be needed to eliminate them.This claim actually does not contradict Brooks's Law. It may be the case that total complexity overhead and vulnerability to bugs scales with the square of team size, but that the costs from duplicated work are nevertheless a special case that scales more slowly. It's not hard to develop plausible reasons for this, starting with the undoubted fact that it is much easier to agree on functional boundaries between different developers' code that will prevent duplication of effort than it is to prevent the kinds of unplanned bad interactions across the whole system that underly most bugs.The combination of Linus's Law and Hasler's Law suggests that there are actually three critical size regimes in software projects. On small projects (I would say one to at most three developers) no management structure more elaborate than picking a lead programmer is needed. And there is some intermediate range above that in which the cost of traditional management is relatively low, so its benefits from avoiding duplication of effort, bug-tracking, and pushing to see that details are not overlooked actually net out positive.Above that, however, the combination of Linus's Law and Hasler's Law suggests there is a large-project range in which the costs and problems of traditional management rise much faster than the expected cost from duplication of effort. Not the least of these costs is a structural inability to harness the many-eyeballs effect, which (as we've seen) seems to do a much better job than traditional management at making sure bugs and details are not overlooked. Thus, in the large-project case, the combination of these laws effectively drives the net payoff of traditional management to zero. \u21a9[HBS] The split between Linux's experimental and stable versions has another function related to, but distinct from, hedging risk. The split attacks another problem: the deadliness of deadlines. When programmers are held both to an immutable feature list and a fixed drop-dead date, quality goes out the window and there is likely a colossal mess in the making. I am indebted to Marco Iansiti and Alan MacCormack of the Harvard Business School for showing me me evidence that relaxing either one of these constraints can make scheduling workable.One way to do this is to fix the deadline but leave the feature list flexible, allowing features to drop off if not completed by deadline. This is essentially the strategy of the \"stable\" kernel branch; Alan Cox (the stable-kernel maintainer) puts out releases at fairly regular intervals, but makes no guarantees about when particular bugs will be fixed or what features will beback-ported from the experimental branch.The other way to do this is to set a desired feature list and deliver only when it is done. This is essentially the strategy of the \"experimental\" kernel branch. De Marco and Lister cited research showing that this scheduling policy (\"wake me up when it's done\") produces not only the highest quality but, on average, shorter delivery times than either \"realistic\" or \"aggressive\" scheduling.I have come to suspect (as of early 2000) that in earlier versions of this essay I severely underestimated the importance of the \"wake me up when it's done\" anti-deadline policy to the open-source community's productivity and quality. General experience with the rushed GNOME 1.0 release in 1999 suggests that pressure for a premature release can neutralize many of the quality benefits open source normally confers.It may well turn out to be that the process transparency of open source is one of three co-equal drivers of its quality, along with \"wake me up when it's done\" scheduling and developer self-selection. \u21a9[SU] It's tempting, and not entirely inaccurate, to see the core-plus-halo organization characteristic of open-source projects as an Internet-enabled spin on Brooks's own recommendation for solving the N-squared complexity problem, the \"surgical-team\" organization\u2014but the differences are significant. The constellation of specialist roles such as \"code librarian\" that Brooks envisioned around the team leader doesn't really exist; those roles are executed instead by generalists aided by toolsets quite a bit more powerful than those of Brooks's day. Also, the open-source culture leans heavily on strong Unix traditions of modularity, APIs, and information hiding\u2014none of which were elements of Brooks's prescription. \u21a9[RJ] The respondent who pointed out to me the effect of widely varying trace path lengths on the difficulty of characterizing a bug speculated that trace-path difficulty for multiple symptoms of the same bug varies \"exponentially\" (which I take to mean on a Gaussian or Poisson distribution, and agree seems very plausible). If it is experimentally possible to get a handle on the shape of this distribution, that would be extremely valuable data. Large departures from a flat equal-probability distribution of trace difficulty would suggest that even solo developers should emulate the bazaar strategy by bounding the time they spend on tracing a given symptom before they switch to another. Persistence may not always be a virtue... \u21a9[IN] An issue related to whether one can start projects from zero in the bazaar style is whether the bazaar style is capable of supporting truly innovative work. Some claim that, lacking strong leadership, the bazaar can only handle the cloning and improvement of ideas already present at the engineering state of the art, but is unable to push the state of the art. This argument was perhaps most infamously made by the Halloween Documents, two embarrassing internal Microsoft memoranda written about the open-source phenomenon. The authors compared Linux's development of a Unix-like operating system to \"chasing taillights\", and opined \"(once a project has achieved \"parity\" with the state-of-the-art), the level of management necessary to push towards new frontiers becomes massive.\"There are serious errors of fact implied in this argument. One is exposed when the Halloween authors themseselves later observe that \"often [...] new research ideas are first implemented and available on Linux before they are available / incorporated into other platforms.\"If we read \"open source\" for \"Linux\", we see that this is far from a new phenomenon. Historically, the open-source community did not invent Emacs or the World Wide Web or the Internet itself by chasing taillights or being massively managed\u2014and in the present, there is so much innovative work going on in open source that one is spoiled for choice. The GNOME project (to pick one of many) is pushing the state of the art in GUIs and object technology hard enough to have attracted considerable notice in the computer trade press well outside the Linux community. Other examples are legion, as a visit to Freshmeat on any given day will quickly prove.But there is a more fundamental error in the implicit assumption that the cathedral model (or the bazaar model, or any other kind of management structure) can somehow make innovation happen reliably. This is nonsense. Gangs don't have breakthrough insights\u2014even volunteer groups of bazaar anarchists are usually incapable of genuine originality, let alone corporate committees of people with a survival stake in some status quo ante. Insight comes from individuals. The most their surrounding social machinery can ever hope to do is to be responsive to breakthrough insights\u2014to nourish and reward and rigorously test them instead of squashing them.Some will characterize this as a romantic view, a reversion to outmoded lone-inventor stereotypes. Not so; I am not asserting that groups are incapable of developing breakthrough insights once they have been hatched; indeed, we learn from the peer-review process that such development groups are essential to producing a high-quality result. Rather I am pointing out that every such group development starts from\u2014is necessarily sparked by\u2014one good idea in one person's head. Cathedrals and bazaars and other social structures can catch that lightning and refine it, but they cannot make it on demand.Therefore the root problem of innovation (in software, or anywhere else) is indeed how not to squash it\u2014but, even more fundamentally, it is how to grow lots of people who can have insights in the first place.To suppose that cathedral-style development could manage this trick but the low entry barriers and process fluidity of the bazaar cannot would be absurd. If what it takes is one person with one good idea, then a social milieu in which one person can rapidly attract the cooperation of hundreds or thousands of others with that good idea is going inevitably to out-innovate any in which the person has to do a political sales job to a hierarchy before he can work on his idea without risk of getting fired.And, indeed, if we look at the history of software innovation by organizations using the cathedral model, we quickly find it is rather rare. Large corporations rely on university research for new ideas (thus the Halloween Documents authors' unease about Linux's facility at coopting that research more rapidly). Or they buy out small companies built around some innovator's brain. In neither case is the innovation native to the cathedral culture; indeed, many innovations so imported end up being quietly suffocated under the \"massive level of management\" the Halloween Documents' authors so extol.That, however, is a negative point. The reader would be better served by a positive one. I suggest, as an experiment, the following:Pick a criterion for originality that you believe you can apply consistently. If your definition is \"I know it when I see it\", that's not a problem for purposes of this test.Pick any closed-source operating system competing with Linux, and a best source for accounts of current development work on it.Watch that source and Freshmeat for one month. Every day, count the number of release announcements on Freshmeat that you consider 'original' work. Apply the same definition of 'original' to announcements for that other OS and count them.Thirty days later, total up both figures.The day I wrote this, Freshmeat carried twenty-two release announcements, of which three appear they might push state of the art in some respect, This was a slow day for Freshmeat, but I will be astonished if any reader reports as many as three likely innovations a month in any closed-source channel. \u21a9[EGCS] We now have history on a project that, in several ways, may provide a more indicative test of the bazaar premise than fetchmail; EGCS, the Experimental GNU Compiler System.This project was announced in mid-August of 1997 as a conscious attempt to apply the ideas in the early public versions of The Cathedral and the Bazaar. The project founders felt that the development of GCC, the Gnu C Compiler, had been stagnating. For about twenty months afterwards, GCC and EGCS continued as parallel products\u2014both drawing from the same Internet developer population, both starting from the same GCC source base, both using pretty much the same Unix toolsets and development environment. The projects differed only in that EGCS consciously tried to apply the bazaar tactics I have previously described, while GCC retained a more cathedral-like organization with a closed developer group and infrequent releases.This was about as close to a controlled experiment as one could ask for, and the results were dramatic. Within months, the EGCS versions had pulled substantially ahead in features; better optimization, better support for FORTRAN and C++. Many people found the EGCS development snapshots to be more reliable than the most recent stable version of GCC, and major Linux distributions began to switch to EGCS.In April of 1999, the Free Software Foundation (the official sponsors of GCC) dissolved the original GCC development group and officially handed control of the project to the the EGCS steering team. \u21a9[SP] Of course, Kropotkin's critique and Linus's Law raise some wider issues about the cybernetics of social organizations. Another folk theorem of software engineering suggests one of them; Conway's Law\u2014commonly stated as \"If you have four groups working on a compiler, you'll get a 4-pass compiler\". The original statement was more general: \"Organizations which design systems are constrained to produce designs which are copies of the communication structures of these organizations.\" We might put it more succinctly as \"The means determine the ends\", or even \"Process becomes product\".It is accordingly worth noting that in the open-source community organizational form and function match on many levels. The network is everything and everywhere: not just the Internet, but the people doing the work form a distributed, loosely coupled, peer-to-peer network that provides multiple redundancy and degrades very gracefully. In both networks, each node is important only to the extent that other nodes want to cooperate with it.The peer-to-peer part is essential to the community's astonishing productivity. The point Kropotkin was trying to make about power relationships is developed further by the 'SNAFU Principle': \"True communication is possible only between equals, because inferiors are more consistently rewarded for telling their superiors pleasant lies than for telling the truth.\" Creative teamwork utterly depends on true communication and is thus very seriously hindered by the presence of power relationships. The open-source community, effectively free of such power relationships, is teaching us by contrast how dreadfully much they cost in bugs, in lowered productivity, and in lost opportunities.Further, the SNAFU principle predicts in authoritarian organizations a progressive disconnect between decision-makers and reality, as more and more of the input to those who decide tends to become pleasant lies. The way this plays out in conventional software development is easy to see; there are strong incentives for the inferiors to hide, ignore, and minimize problems. When this process becomes product, software is a disaster. \u21a9I quoted several bits from Frederick P. Brooks's classic The Mythical Man-Month because, in many respects, his insights have yet to be improved upon. I heartily recommend the 25th Anniversary edition from Addison-Wesley (ISBN 0-201-83595-9), which adds his 1986 \"No Silver Bullet\" paper.The new edition is wrapped up by an invaluable 20-years-later retrospective in which Brooks forthrightly admits to the few judgements in the original text which have not stood the test of time. I first read the retrospective after the first public version of this essay was substantially complete, and was surprised to discover that Brooks attributed bazaar-like practices to Microsoft! (In fact, however, this attribution turned out to be mistaken. In 1998 we learned from the Halloween Documents that Microsoft's internal developer community is heavily balkanized, with the kind of general source access needed to support a bazaar not even truly possible.)Gerald M. Weinberg's The Psychology Of Computer Programming (New York, Van Nostrand Reinhold 1971) introduced the rather unfortunately-labeled concept of \"egoless programming\". While he was nowhere near the first person to realize the futility of the \"principle of command\", he was probably the first to recognize and argue the point in particular connection with software development.Richard P. Gabriel, contemplating the Unix culture of the pre-Linux era, reluctantly argued for the superiority of a primitive bazaar-like model in his 1989 paper \"LISP: Good News, Bad News, and How To Win Big\". Though dated in some respects, this essay is still rightly celebrated among LISP fans (including me). A correspondent reminded me that the section titled \"Worse Is Better\" reads almost as an anticipation of Linux. The paper is accessible on the World Wide Web at http://www.naggum.no/worse-is-better.html.De Marco and Lister's Peopleware: Productive Projects and Teams (New York; Dorset House, 1987; ISBN 0-932633-05-6) is an underappreciated gem which I was delighted to see Fred Brooks cite in his retrospective. While little of what the authors have to say is directly applicable to the Linux or open-source communities, the authors' insight into the conditions necessary for creative work is acute and worthwhile for anyone attempting to import some of the bazaar model's virtues into a commercial context.Finally, I must admit that I very nearly called this essay \"The Cathedral and the Agora\", the latter term being the Greek for an open market or public meeting place. The seminal \"agoric systems\" papers by Mark Miller and Eric Drexler, by describing the emergent properties of market-like computational ecologies, helped prepare me to think clearly about analogous phenomena in the open-source culture when Linux rubbed my nose in them five years later. These papers are available on the Web at http://www.agorics.com/agorpapers.html.This essay was improved by conversations with a large number of people who helped debug it. Particular thanks to Jeff Dutky <dutky@wam.umd.edu>, who suggested the \"debugging is parallelizable\" formulation, and helped develop the analysis that proceeds from it. Also to Nancy Lebovitz <nancyl@universe.digex.net> for her suggestion that I emulate Weinberg by quoting Kropotkin. Perceptive criticisms also came from Joan Eslinger <wombat@kilimanjaro.engr.sgi.com> and Marty Franz <marty@net-link.net> of the General Technics list. Glen Vandenburg <glv@vanderburg.org> pointeed out the importance of self-selection in contributor populations and suggested the fruitful idea that much development rectifies 'bugs of omission'; Daniel Upper <upper@peak.org> suggested the natural analogies for this. I'm grateful to the members of PLUG, the Philadelphia Linux User's group, for providing the first test audience for the first public version of this essay. Paula Matuszek <matusp00@mh.us.sbphrd.com> enlightened me about the practice of software management. Phil Hudson <phil.hudson@iname.com> reminded me that the social organization of the hacker culture mirrors the organization of its software, and vice-versa. John Buck <johnbuck@sea.ece.umassd.edu> pointed out that MATLAB makes an instructive parallel to Emacs. Russell Johnston <russjj@mail.com> brought me to consciousness about some of the mechanisms discussed in \"How Many Eyeballs Tame Complexity.\" Finally, Linus Torvalds's comments were helpful and his early endorsement very encouraging."}
{"prompt": "Advances in Distributed Security", "completion": "The last decade has witnessed a revolution in distributed security. Old, pessimistic proofs that security and fault tolerance were \"impossible\", based on assumptions that protocols had to be deterministic and security and fault tolerance properties had to be absolutely certain, have given way to new proofs and implementations of provable security based on the assumption of cryptography and other randomized protocols that achieving security with very high probability is sufficient. The old view \"proved\" that the integrity properties of a wide variety of services on which civilization depends, whether synchronized clocks, public directories, censorship-proof file sharing and publication, or issuing money or securities were \"impossible\" on asynchronous networks like the Internet unless we put unlimited faith in a third party to enforce many of the rules of the service. We now know how to provide such services with a high degree of integrity and availability, yet far more resilient to the possibility that any party might act in a malicious manner.As a result of these new possibilities, we are witnessing a shift in the way we view trust. The old view in computer and network security was that trust was all-or-nothing \u2013 either we must place an essentially blind faith in a third party (for example a certificate authority or an issuer of digital cash) or we must protect against a particular mode of attack completely (as, for example, encryption protects against wiretappers). The old view could not handle most real-life situations which don't fall into either of these extremes. Among knowledgeable distributed security designers, unconditionally trusted third parties are now viewed as a cheat \u2013 \"here we pray for heavenly benevolence\", analogous to the comic-strip mathematician whose proof contains the crucial step, \"here a miracle occurs\". A third party fully trusted with a security property means that property in fact remains fully insecure \u2013 it means the protocol designer has fobbed off security on somebody else rather than actually solved a security problem.The new view reiterates the desirability of complete protection against attack where it is available, but it adds protection against vast new classes of attacks, and protection of a wide variety of other desirable properties of distributed system, that are impossible to protect without at least some trust assumptions. The new trust assumptions are that participants in a critical public service are partially, usually, or more often than not trustworthy, and often only under certain conditions. The set of parties that make up a critical distributed service is never either completely trustworthy nor all malicious.Modern protocols for critical services such as public directories construct, out of all possible subsets of all participants, attack structures consisting of the worst combination of malicious parties that be tolerated, and their complement, access structures, the minimal set of parties that need to act correctly during this operation to perform the function. (Note that access structures have nothing to do with access control lists, a traditional security method that assumes a fully trusted third party and consists of a static list of persons or classes of persons and the resources or classes of resources they have access to).One particular simple example of such an attack and access structure is a threshold structure where the malicious behavior of up to t out of n participants can be tolerated. Although we will describe the protocols below in terms of threshold structures, it will usually be possible to substitute other partitions of the power set of participants into minimum access and maximum attack structures.A given property of a system has perfect security if its access structure is any participant and its attack structure is the empty set. An example of a property with perfect security is the use of a spinning neutron star called a pulsar as a clock. Its access structure is any party that can receive its natural broadcasts, and its attack structure is the empty set \u2013 given the reasonable presumption that there are no aliens out there who can and want to manipulate the very high energy outputs of pulsars in pursuit of some human ends they have learned about.Another perfect security property is that of encryption against third parties, assuming the encryption is unbreakable. However, if we take into account the receiver of a message as a possible attacker, the broader privacy property is not secure \u2013 the receiver is an attack structure of one who can compromise privacy of the entire message encrypted to him.A security property is almost perfect if its attack structure must contain T-1 out of N participants. For example, in the digital mix of Chaum[C81], for a single message, it would take collusion of N-1 out of N of the mix servers to trace a message. The untraceability property of this system has almost perfect security for a single message. On the other hand, the reliability property of the digital mix is almost perfectly insecure, since any one of the n mix servers can block a message from getting through. Often we must trade off two different properties like this. Since reliability is an error reversible by the end user and a privacy breach is not, the tradeoff made here by Chaum makes sense.Alas, for many desirable properties we cannot achieve either perfect or almost perfect security. For some properties of replicated services \u2013 for some kinds of rules they advertise as following \u2013 we can achieve almost perfect security through, for example, the use of cryptography.For any other properties, the maximum attack structure of malicious and colluding servers that can be tolerated is the set complement of the access structure. For the threshold case, this means that T, the maximum number of malicious and colluding servers that can be tolerated, is a certain fraction of the total number of servers, such as 1/3 or 1/2, of the total number of servers comprising the service, N. That is to say, if T+1 out of N of the servers jointly decide to violate the service's rules and thereby corrupt the system, they can do so. Those who wish to stick to the rules must back out of the corrupted transaction and restart the service out-of-band. For this large class of service properties where the access structure is the set complement of the attack structure, the security of a property is neither perfect or almost perfect at one extreme, nor fully depends on a single trusted party at the other extreme. We say that this class of service properties can be implemented with distributed security.Three of the properties we most often want to protect are privacy, liveness (a.k.a. availability) and integrity. For a replicated service, the main focus of this article, we focus on the security of the integrity and liveness of a single operation of a service. The goal is to create attack structures that are very highly unlikely to fail. If or when such failures of widespread collusion do occur, relying parties, i.e. parties who depend on the properties being secured, must go \"out-of-band\" and use supplementary systems to repair the system. These supplementary systems might include a wide variety of interparty integrity constraints, audits, blacklisting, and other schemes involving auditing, reputation, and/or cryptography by participants, relying parties, or third parties. These can further motivate servers to preserve the integrity and liveness of these services, and help users to recover after a (now much rarer) successful attack.Since a wide variety of trust assumptions can now be made by a security protocol and this variety can for the first time be described mathematically \u2013 as attack and access structures \u2013 these supplementary systems can focus on keeping the actual attack structures smaller than the maximally tolerated attack structure, rather than on vastly more difficult task of plugging wide-open security holes called \"trusted third parties\" with these more loosely defined or traditional supplementary institutions.A basic issue of security and fault tolerance that must be resolved is the secure determination of which order events occured in. If a contract specifies a deadline and it goes down to the wire, how can a relying party or third party adjudicator determine whether the deadline was met? The outcome itself, and its fairness, may rest on fairly deciding who came first. If Alice tries to double-spend a piece of digital cash[C82], only the recipient who checks with the bank first is entitled to its value. But if the bank servers are replicated, which of the two recipients Bob or Charles checked with the bank first? In the case of a replicated property title service[S98] we have a similar problem \u2013 if Alice transfers her title to two other owners, which new owner actually received the deed? If property is homesteaded on a first-come first-serve basis, which of two or more \"land rushers\" competing for a lucrative parcel is entitled to the land?Imagine a network where computers don't know how to keep time very well \u2013 they are always getting out of synchronization. (Alas, all you have to really think of here is the actual Internet with PCs). Such a network, called an asynchronous network, lacks an accurate and secure global clock time by which computers can determine the order in which events, which might be messages sent or instructions executed on a particular local machine, have happened. Lamport[L78] was among the first to tackle the problem of how to determine the order of events in such a network.A partial order means that we know in what order some of the elements are, but we aren't sure about some of the others, or some of the others may be equal. An example is the \"less than or equal to\" relationship among a group of integers, some of which can repeat. Some of the integers we know are less than some others, but an integer paired with itself is equal. A total order, on the other hand, is like the \"less than\" relationship among unique integers \u2013 we can always tell when one integer is less than another \u2013 there is no ambiguity left. In the case of events, a partial order means for some pairs of events we know whether one occured before another, and for some others we don't know. We use the same symbols as we would use for the analogous case of the integers, so that \"x <= y\" means \"x either occured before y or we don't know whether it occured before or after y\". In a total of events, we know for any two events which one happened first. We write \"x < y\" meaning \"x occured before y.\"Lamport's answer to the event ordering problem was to show that parties (or, we use the terms equivalently here, nodes on the network) can agree on a partial order of events based on causal relationships between these events \u2013 or at least the subset of events where we can determine that causation could occur. On a network, parties influence each other by talking to each other \u2013 in other words, by sending each other messages. Lamport used these messages as the basic building block for constructing his partial order, according to the following rules:The partial order leaves us with the need to agree on how to break ties \u2013 how to resolve the ambiguities where we can't agree which event took place first \u2013 and thus create a total order of events. We want to do so in a way that is fair, in other words, in a way that cannot be manipulated to the advantage of any particular party.An unfair way to create a total order would be to impose a certain predictable rule for breaking ties. For example, we could decide on a total order for the processes and break ties in the causal order by referring to this total order.However, such a procedure creates a bias that may, depending on the application, favor certain servers over others, and therefore allow those servers to favor certain clients over others.One way to break ties fairly is have the participants toss fair coins \u2013 in other words, generate random numbers in a way that cannot be manipulated and then assign those random numbers to events. There are several ways to toss fair coins over a network and we describe one such way below.Another way to break ties fairly is to have the participants agree to a global clock time that is more accurate than the message delays faced by those who would manipulate timing in favor of some party. This entails using a network with very predictable message lag for the clock synchronization protocol and a less predictable one for the other services. We will describe how to do this below.Certain cryptographic primitives play a crucial role in the recent breakthroughs in distributed security that we will discuss here.Oblivious transfer is an important building block of multiparty secure computations and related protocols. Rather than describing it here, we recommend this good introduction.Alice wants to prove that she can predict the stock market. But she doesn't want to actually reveal her choice to Bob or anybody else until she's actually had a chance to trade on her prediction. But after the fact, she could just read the closing price and pretend to Bob that she predicted it. How can Alice prove to Bob that she actually predicted the market? Using bit commitments.Bit commitments are ways to commit to a string of numbers or data, in such a way that if or when one later publishes the data, it cannot be forged \u2013 it must be the same as the data you earlier committed to.Alice can commit to her data using one-way functions \u2013 functions that are much harder to compute one way than another. (One-way functions are the most basic building block of cryptography). A common kind of a one-way function is a cryptographic hash function.To create a bit commitment, Alice first generates two random numbers. Then she computes the bit commitment by hashing the two random numbers and the data to be committed to. Append on of the random numbers to the end of the hash and sends it to Bob. The next day when Bob wants to examine the data, and prove that it matches the data Alice originally committed to, Alice provides the data along with the second random number. Bob can verify that it is astronomically unlikely that Alice was able to commit to one predication and then later tell Bob she predicted something else.This protocol is called \"bit commitment\" because one can commit to even an individual bit this way. If the data has enough entropy one can commit to that data simply by using a hash function and dispense with the random numbers. We will see below how with secure timestamping other parties can determine when the data was committed to.The ideal protocol would have most trustworthy third party imaginable \u2013 a diety who is on everybody's side. All the parties would send their inputs to God. God would reliably determine the results and return the outputs. God being the ultimate in confessional discretion, no party would learn anything more about the other parties' inputs than they could learn from their own inputs and the output.Network security theorists have recently solved this problem to an astonishing extent. They have developed protocols which create virtual machines between two or more parties. Multiparty secure computation allows any number of parties to share a computation, each learning only what can be inferred from their own inputs and the output of the computation. These virtual machines have the exciting property that each party's input is strongly confidential from the other parties. The program and the output are shared by the parties.For example, we could run a spreadsheet across the Internet on this virtual computer. We would agree on a set of formulas and set up the virtual computer with these formulas. Each participant would have their own input cells, which remain blank on the other participants' computers. The participants share output cell(s). Each input our own private data into our input cells. Alice could only learn only as much about the other participants' input cells as she could infer from her own inputs and the output cells.More information on this exciting breakthrough can be found in the accompanying article \"The God Protocols\". Often, as in the spreadsheet example above, the resulting protocol would be very slow. We will now discuss a special efficient kind of multiparty secure computation \u2013 threshold cryptography.Threshold cryptography has been used to help achieve Byzantine-resilient replication in Rampart, Fleet, SITRA, and several other distributed service or filesystem architectures. Threshold cryptography is an optimized special case of a more general technique called multiparty secure computationIn a threshold public-key cryptosystem there is a single key for encryption, but each party holds a key share for decryption. A threshold scheme implements the threshold case of distributed security as described above. Any T+1 key share holders are needed to jointly perform a decryption, and any N-T key share holders can collude to prevent a decryption from being performed. The parameter T can be set at any positive integer between 1 and N. Often a more general access structure, under the distributed security constraint that the access structure is the set complement of the attack structure, can be implemented as well.For some algorithms one must assume a trusted dealer to generate a private key and distribute shares; for some other algorithms a mutually confidential generation of key shares is possible. During the decryption protocol, each party processes a decryption request for a particular ciphertext and output a decryption share together with a proof of its validity. When a party obtains the ciphertext and at least T+1 valid encryption shares, it can recover the message. In the case of threshold signatures, when at least T+1 signature shares have been obtained, a valid signature can be constructed. [C01]Joe Killian introduces this problem as follows[K90]:Alice and Bob wanted to flip a fair coin, but had no physical coin to flip. Alice offered a simple way of flipping a fair coin mentally.First, you think up a random bit, then I'll think up a random bit. We'll then exclusive-or the two bits together,\" she suggested.\"But what if one of us doesn't flip a coin at random?\" Bob asked.\"It doesn't matter. As long as one of the bits is truly random, the exclusive-or of the bits should be truly random,\" Alice replied, and after a moment's reflection, Bob agreed.A short while later, Alice and Bob happened upon a book on artificial intelligence, lying abandoned by the roadside. A good citizen, Alice said, \"One of us must pick up this book and find a suitable waste receptacle.\" Bob agreed, and suggested they use their coin-flipping protocol to determine who would have to throw the book away.If the final bit is a 0, then you will pick the book up, and if it is a 1, then I will,\" said Alice. \"What is your bit?\"Bob replied, \"1.\"\"Why, so is mine,\" Alice said slyly. \"I guess this isn't your lucky day.\"Bruce Schneier[Sh96] goes on to describe what is wrong with this protocol:Needless to say, this coin-flipping protocol has a serious bug. While it is true that a truly random bit, x, exclusive-ORed with any independently distributed bit, y, will yield a truly random bit, Alice's protocol did not ensure that the two bits were distributed independently. In fact, it is not hard to verify that no mental protocol can allow can allow two infinitely powerful parties to flip a fair coin. Alice and Bob were in trouble until they received a letter from an obscure graduate student in cryptography. The information in the letter ws too theoretical to be of any earthly use to anyone, but the envelope the letter came in was extremely handy.The next time Alice and Bob wished to flip a coin, they played a modified version of the original protocol. First, Bob decided on a bit, but instead of announcing it immediately, he wrote it down on a piece of paper and placed the paper in the envelope. Next, Alice announced her bit. Finally, Alice and Bob took Bob's bit out of the envelope and computed the random bit. This bit was indeed truly random whenever at least one of them played honestly. Alice and Bob had a working protocol, the cryptographer's dream of social irrelevance was fulfilled, and they all lived happily ever after.On a computer, those \"envelopes\" are committed bits \u2013 see the protocol for bit commitment above. Also see Manuel Blum's landmark paper \"Coin Flipping By Telephone\"[B82] for more details. He subtitled the paper \"A Protocol for Solving Impossible Problems\", which was more prescient than he knew.Fair coin tosses can be used to create a fair total order of events out of a partial order of events, defined by sending and receiving times for messages, in an asynchronous distributed system. They can similarly be used to achieve atomic broadcast, and thus Byzantine agreement and replication[C01][CP02].The threshold coin-tossing system developed by Cachin, Kursawe, and Shoup [C01] solves the fair coin tossing problem by implmenting a cryptographic pseudorandom number generator (PRNG) is a distributed manner using threshold cryptography. They use their protocol to solve the Byzantine generals problem for asynchronous networks. We will describe the Byzantine generals problem and its solution on asynchronous networks further below.There are a wide variety of other cryptographic primitives and protocols, beyond the well-known symmetric and asymmetric cryptosystems, that give us security properties not otherwise in distributed systems, including and mixing and channel padding[C81] and blind signatures[C82] to combat traffice analysis.In our time, the tallest and most expensive buildings belong to some of our most important economic institutions \u2013 multinational corporations. The size and expense of our skyscrapers will provide future archaeologists an important clue that these institutions played a big role in our economy. In the high and late Middle Ages, the tallest structures in Europe were bell towers \u2013 larger and more numerous in that region than on any other continent. Chartres in the year 1169 boasted a 437 foot tower, the world\u2019s tallest. These towers, besides the churches they were built upon, were also the most expensive structures in town.Some historians claim that the size and expense of Europe\u2019s steeples and public clocks, like the size and expense of the churches they were built upon, reflected the predominant role of religion in medieval life, as opposed to business in ours. Given that the churches and cathedrals themselves were expensive, this is a plausible claim. However, the Church also played a leading role in the economy, both by its own economic activities and by its role in commercial law. The church bells and their clocks also played a major economic role.Telling time was not the only, and perhaps not even initially the main, function of church towers and their bells. An important early function of the bell tower was as an alarm, to inform the town of emergencies such as a fire or attacking army. The towers also sometimes made a good vantage point to detect such events. They tolled for events such as baptisms and funerals. Timekeeping became its primary function, first in order to call people to mass, but soon as a general service the Church provided to the surrounding Catholic community that supported it. Long before the mechanical clock, residents within a few miles of a church started working their schedules around the canonical hours \u2013 sundial-based unequal hours \u2013 tolled on its bells. Thus in many European cities, long before the invention of the mechanical clock, the local church was trusted to ring the hours. Churches, funded mainly by the nearby parishioners, but often also by the city or directly by a guild of merchants, lavished enormous resources to build, operate, and maintain the towers as well as the bells, and later for the clocks that were installed in those towers. The productive synchronization of human relationships funded the bell towers; the bell towers would provide a ready market for public clocks. Thus did in Europe emerge a \"virtuous circle\" that would advance both its timekeeping technologies and time-dependent institutions beyond those of the other continents.The time rung on the bells was mainly read from a sundial. By the 11th century these were often supplemented by water clocks. By the end of the 14th century most were using the new mechanical clock, backed up by another new technology of that century, the more reliable and personally secure sandglass.In the larger and more important belfries were present at least two bell-ringers. They lived up there full-time[D96]. This arrangement is an example of the pattern of dual control \u2013 each ringer served as a check for the other; neither could spoof the time or other bell signals without the collusion of both.The heaviest and most expensive elements of the towers were the bells. Bells smiths competed to produce the most distantly hearable ringing. The \"Maria Angola\" bell, cast in 1659 and installed in a cathedral in Cusco, Peru could be heard up to 25 miles away[G95]. In Cordova in the 16th century, a cathedral boasted a one-ton bell that could be heard 8 miles away. At the cathedral at Rouen, in 1321, a carillon was installed that played on an array of bells a hymn audible 5 miles away[D96]. The typical range of a parish church\u2019s bells was 3-5 miles. These bells would primarily be heard and in the surrounding town; larger bells could also be heard by peasants working in the fields miles away.The most valuable property of the bell tower time was not its accuracy, but its fairness. Even if it broadcast the wrong time, it broadcast the same wrong time to everybody. An employer, even if he was colluding with the Church to bias the sometimes subjective ringing of the canonical hours, couldn\u2019t tell his favorite employees that it was time to go home, while making other employees work extra, and pretend that it was the same time. (In contrast, on our computer networks such \"Byzantine\" attacks are possible, without advanced safeguards, when \"broadcasting\" time or other information).While nearby churches or monasteries provided the public, standard time, workers and employers both often employed their own timekeeping devices as a check. Peasants could tell the time by observing their own shadow against some standard sized object. In Germany and Flanders, even the smallest peasant villages had \"quadrants to indicate the hours without the sun\". Miners, working underground, followed work bells, operated by the employers, and passed their signal on through the tunnels by workers banging on tools. As a check, the miners had their own marked tallow candles[D96]. Despite the public broadcast of authoritative time, few dispensed with the option to check their own independent sources.See the accompanying article \"On Time\" for more of the fascinating history of Europe's development of clocks and accompanying economic institutions.Broadcasts using sound or radiation, from sources such as bell towers, radio towers, satellites, and pulsars, must send out the same value to every receiver. A remote beacon such as a pulsar has perfect security: the access structure is any party, and its complement, the attack structure, is the empty set. For human controlled broadcasts, the attack structure consists only of the broadcaster and the access structure is any receiver.Natural broadcasts are thus immune to the problem, described in the discussion of the Byzantine Generals problem below, of a transmitter sending different values to different receivers. Indeed, as we will see below, distributed researchers have gone to great lengths just to recreate this simple property on the Internet with logical broadcast protocols.Nature provides clocks that are oblivious to the malicious intentions of any outside parties. In the case of a remote high-energy system such as a pulsar, this means anybody. and many orders of magnitude more accurate than random delays that face attackers on the Internet. If critical Internet servers were synchronized to natural clocks in a secure and timely fashion, they would be immune to attacks that relied on uncertainties in timing. Here are some comparisons of the stability (error creep) in good natural clocks:Pulsars overtake atomic clocks in accuracy after about 4 months.The Internet with its wide and unpredictable variances in message delays makes for an extremely poor method of distributing time. Some clock synchronization protocols for an asynchronous network are described in [C??][CF94]. Unfortunately, their accuracy is limited to the same order of magnitude of uncertainty as that would face an attacker. So they don't clearly eliminate the possibility that an attacker could take advantage of the different servers hosting a critical service disagreeing on the time.Far more accurate are the distribution methods, especially radio broadcast, described in this excellent survey of timekeeping techniques.This article also contains an excellent discussion of the highly distributed system used for reaching agreement on the global standard UTC time. Over 200 centers use their own atomic clocks to update UTC time. This recalibration uses a sophisticated averaging formula that throws out extreme values. There are also 50 centers in 30 different countries that can be queried at any time during the month for the current recalibration according to their own atomic clocks. In addition, there are a variety of services that broadcast UTC time, with varying levels of delay uncertainty and cost that the article describes in detail. The security and tolerance to extreme faults of the entire system from atomic clock to delivery of time updates to relying parties is not clear but probably high. The jurisdictional diversity of the atomic clock sources is far higher than that of common delivery systems such as GPS, but the results of the latter can after the fact be easily checked against the former, keeping the latter honest, so that the resulting end-to-end system is almost universally trusted (taking into account certain well-known adjustments such as selective availability in GPS).Secure time-stamping is a way for a party with a confidential document, or two or more parties sending private messages, to commit to each other and third parties an unforgeable, non-repudiable time-stamp. This time-stamp consists of a place in a total order consisting of this message, other parties' messages, and clock ticks. This commitment is accomplished without the parties having to reveal the actual contents of those messages, unless or until challenged for proof, to any third parties. (Even then, there exist zero-knowledge proofs that allow the party to prove he has a document corresponding to the time-stamp without revealing the document).These protocols work by users sending a cryptographic hash (a.k.a. message digest) of their document to the time-tstamping servers. The servers chain messages and click ticks together by order of arrival. Replicated servers can break ambiguities in order of arrival with a protocol such as fair coin tossing to achieve a fair total order.Lamport created a theoretical structure for security and fault tolerance in a distributed service with the Byzantine generals problem. These generals might be loyal, following orders and passing them on faithfully, or they may be traitors. The worst-case behavior of traitorous generals is modelled by the nasty trick of sending out contradictory orders \u2013 for example, telling one general that the order is to march and another general that the order is to retreat.(Lamport just meant the Byzantine generals story as an interesting, cartoonish illustration of the theory of fault tolerance against corruption by malicious adverseries, but this kind of problem has actually sometimes occurred among generals. The actual generals of the Byzantine Empire were no more prone to such treachery than any of their enemies, such as the Persians or Turks. If one is partial towards the Byzantines, one can think instead of the Iraqi generals in the current war there \u2013 the Coalition generals hope that some of the Iraqi generals will defect and are trying to insert forged messages into their communications network. They hope some generals will be duped into following these specious orders).There are N generals; one of them is the commanding general or field marshall. They can send and receive messages between each other. The Byzantine generals problem is to develop a protocol for the commanding general to send messages to his N-1 subordinates so thatThe protocol should be able to resist up to T traitorous generals. In the case of a fully deterministic protocol (no random choices or cryptography allowed) the best we can do is tolerate T = floor(N/3) - 1 generals for a synchronous network. For an asynchronous and deterministic network no traitors at all can be tolerated.[FLP85]However, the Byzantine general's problem is easily solved by unjammable physical broadcast. Not coincidentally, solving the logical broadcast problem on network where physical broadcast is absent is very similar to, and as hard as, solving the Byzantine generals problem.The above pessimistic results regarding T on deterministic networks \u2013 and the inefficiency of protocols that could provide these weak solutions to the Byzantine generals problem \u2013 until recently has discouraged researchers and engineers from finding practical solutions to securing distributed services. However, under only slightly weaker assumptions \u2013 those of cryptography, that we need only achieve security with a very high probability \u2013 agreement between the Byzantine generals has not only been achieved [Ben-Or] but achieved efficiently [Cachin]. The basic insight in these solutions is that we can break ties in a Lamport partial order in a an unbiased way with random numbers.Point-to-point communications is sufficient for many applications. For many others, nodes need to send a message to many other nodes, or multicast. We call the simple case where a node sends messages to all other nodes participating in a system broadcast.As we've seen, broadcast can be implemented directly in physical media such as sound and radio. We will discuss the problem of implementing logical broadcast over an asynchronous network that directly supports only point-to-point communications. Such broadcasting protocols are subject to node and communications failures, including malicious attacks.Four important design criteria of such a logical network are reliability, consistent ordering, causality preservation, and fairness. Reliability means that a message once broadcast be received by all the functional nodes. Consistent ordering means that different messages sent by different nodes are delivered to all the nodes in the same order. Causality is preserved if this order is consistent with with the causal order in which messages were sent and received. Fairness means that no node can breach the rules or properties of the system we want to protect, particular to some parties advantage or disadvantage, by manipulating this order.Note that physical broadcasts, if they cannot be jammed, easily have these properties. Since the broadcast medium has a finite velocity, messages might not all be received in the same order as sent. However, the receiving nodes can deduce from the physical properties of the medium the expected time lag at their distance and thereby deduce sending times. We say in this case that messages are received in a certain order, queued, and then delivered in a possibly different order.The basic issue here is message delays \u2013 some servers receive messages in different order from others. Clock synchronization can reduce the scope of this problem \u2013 even eliminate it if done over a network where unpredictability in message lag times are much less than in the network over which we run the other services we wish to secure. In such cases clocks can be synchronized with sufficient accuracy that global clock time cannot be spoofed to reorder messages with significant probability. Where we choose not to implement such a global clock (because, for example, the price of retrofitting services with a radio time synchronization service as described above), we have another option for creating a fair total order \u2013 the fair coin flipping methods described above. The result is a logical broadcast with the same basic security properties as an unjammable physical broadcast.The theory of the Byzantine generals has a practical equivalent \u2013 the problem of replicating a serivce \u2013 or, equivalently, a distributed object \u2013 in such as way as to provide distributed security, or fault tolerance against arbitrary behavior of up to T malicious and colluding servers.These services or distributed objects are sometimes called \"intrusion tolerant\", because the replicated service can resist attack and corruption of up to T servers. However, in the real world more perpetrated by insiders rather than intruders. Byzantine-resilient replication of a service across administrative domains or jurisdictions solves both problems.Several Byzantine-resilient replicated service infrastructures have been implemented . They use techniques such as threshold cryptography and fair coin tossing to achieve logical broadcast on asynchronous networks like the Internet, protected against attack structures of colluding and malicious servers, such that the attack structure is the set complement of the access structure. See Appendix A below for sources of more information. A wide variety of Byzantine-resilient services can be built on top of logical broadcast. A high bandwidth, many-to-many unjammable physical broadcast network might provide similar but more efficient solutions in the future. A Byzantine-resilient replicated object library, for implementing online services with distributed trust in the CORBA distributed object system is described in this presentation and this paper.The basic system has the ability to replicate stateful objects resilient to up to 1/3 Byzantine (arbitrarily malicious) failures.In other words, object replication is used to distribute trust in the integrity of data and computations. Instead of obtaining a critical service from a single trusted server \u2013 which may be innately malicious or may get cracked by an outsider \u2013 one obtains the service from N different servers, and the service maintains its integrity as long as less than N/3 of the Vats are malicious.Note that the \"voting\" implicit in Byzantine resilient protocols like that used here protects the integrity of a particular remote method call. Between such invocations, clients can update their own blacklists of servers they have found to be unreliable. With such a blacklist the attacker must manifest their faulty behavior in over N/3 servers during the same call in order to corrupt the call. Once this is discovered the client can blacklist them, removing them from the list of trusted Vats for subsequent calls.Integrity techniques such as cryptographic hashes, digital signatures, secret sharing, and threshold cryptography can be layered on top of this basic Byzantine-resilient replication system to further increase the integrity of certain properties of the replicated state. Which of these techniques are used, and how, depends on what the critical functionality is that one is protecting.Replication of course does not distribute trust in the privacy of the data \u2013 quite the opposite, it magnifies the exposure. However, where this problem is relevant it can easily be overcome with encryption and/or multiparty secure computation, described above.A necessary part of any good distributed security toolkit is a diverse cryptographic library, implementing not only symmetric and assymetric primitives but also those described or referred to in this article.A wide variety of other applications once thought \"impossible\" to secure can now be implemented securely.On a public network a wide variety of values must be agreed upon across trust boundaries, such as mappings of names or addresses to keys (as in a public key infrastructure) or of names to addresses (as in the Domain Name System). Such agreements across trust boundaries can best be thought of as simple kinds of private property to be controlled by their owner, within constrains enforced by the rules followed by the replicated service, a public property titles system.Whether thought of as property rights or not, a wide variety of such currently centralized services can be re-implemented with much greater ensurable integrity and availability by distributing their trust with techniques such as Byzantine-resilient replication.Another large class of potential services that can be distributed are issuers of digital bearer instruments, such as digital cash.This author's design for a secure property title service uses cryptographic hash functions and digital signatures (without the need for a PKI) on top of a Byzantine-resilient replicated object service to maintain the integrity of chains of property titles. It's also suitable for property-like directories such as the Internet's Domain Name System (DNS).The old pessimism has been overturned. Old proofs of \"impossibility\", based on strict insistence in perfect certainty, have given way to new proofs demonstrating how to do the \"impossible\" by being satisfied with extremely high probability against a sophisticated but computationally bounded opponent \u2013 the assumption of cryptography \u2013 rather than of absolute certainty. This overturning of the old view has led to a raft of new possibilities for securing distributed applications. The simple protocol of the bell tower, which broadcast to every resident of a medieval town the same time, can now be implemented on a network \u2013 either through logical broadcast on the Internet or physical broadcast with radio. For the first time we can implement on the Internet the integrity properties on which civilization depends \u2013 including synchronized clocks, unforgeable transactions, and censorship-proof publishing. Where today's Internet, lacking this technology, fails to provide many of these properties, we now know how to provide them with a greater degree of integrity and availability than either the Internet or any previous media was capable of.[A01] Agilent Application Note AN 1289, \"The Science of Timekeeping\"[AMPR00] L. Alvisi, D. Malkhi, L. Pierce, and M. Reiter, \"Fault detection for Byzantine quorum systems.\"[AMPW00] L. Alvisi, D. Malkhi, L. Pierce, M. Reiter, and R. Wright, \"Dynamic Byzantine Quorum Systems\"[B83] M. Ben-Or, \"Another advantage of free choice: Completely asynchronous agreement protocols\", in Proc. 2nd ACM Symposium on Principles of Distributed Computing (PODC), 1983[B82] M. Blum, \"Coin Flipping by Telephone: A Protocol for Solving Impossible Problems\", Proceedings of the 24th IEEE Computer Conference (CompCon), 1982, pp. 133-137. \u21a9[BT85] G. Bracha and S. Toueg, \"Asynchronous consensus and broadcast protocols\", Journal of the ACM, vol. 32, pp. 824-840, Oct. 1985[CP02] C. Cachin, J. Poritz, \"Secure Intrusion-tolerant Replication on the Internet\" \u21a9[C01] C. Cachin, \"Distributing Trust on the Internet\" Conference on dependable systems and networks (DSN-2001). This is an excellent survey of the state of the art in Byzantine-resililient replication as well as presenting his own Byzantine-resilient replication system that uses fair toin cossing. \u21a9[C98] C. Cachin , \"On the foundations of oblivious transfer\", Advances in Cryptology: EUROCRYPT '98, Lecture Notes in Computer Science v. 1403, Kaisa Nyberg, ed., pp. 361-374. Springer-Verlag, 1998.[CT96] T.D. Chandra and S. Toueg, \"Unreliable failure detectors for reliable distributed systems\", Journal of the ACM, vol. 43, no. 2, pp. 225-267, 1996.[C81] \"Untraceable Electronic Mail, Return Addresses, and Digital Pseudonyms,\" D. Chaum, Communications of the ACM, vol. 24 no. 2, February, 1981. \u21a9 \u21a9[C82] \"Blind Signatures for Untraceable Payments,\" D. Chaum, Advances in Cryptology Proceedings of Crypto 82, D. Chaum, R.L. Rivest, & A.T. Sherman (Eds.), Plenum, pp. 199-203. \u21a9 \u21a9[C85] \"Online Cash Checks\", D. Chaum[CE86] \"A Secure and Privacy-Protecting Protocol for Transmitting Personal Information Between Organizations,\" D. Chaum & J.-H. Evertse, Advances in Cryptology CRYPTO '86, A.M. Odlyzko (Ed.), Springer-Verlag, pp. 118-167.[C89] \"Showing Credentials Without Identification: Signatures Transferred Between Unconditionally Unlinkable Pseudonyms,\" D. Chaum, Accepted but not Presented Auscrypt '89.[C89b] \"Privacy Protected Payments: Unconditional Payer and/or Payee Untraceability,\" D. Chaum, Smart Card 2000, D. Chaum & I. Schaumuller-Bichl (Eds.), North Holland, 1989, pp. 69-93.[CV] \"Group Signatures,\" D. Chaum & E van Heyst, Advances in Cryptology EUROCRYPT '91, D.W. Davies (Ed.), Springer-Verlag, pp. 257-265.[C97] C. Cocks. \"Split knowledge generation of RSA paremeters.\" Presented at the 6th IMA Conference on Coding and Cryptography, Cirencester, England, to appear in the proceedings, December 17\u201319, 1997.[CGT95] C. Cr\u00e9peau , J. van de Graaf , and A. Tapp , \"Committed Oblivious Transfer and Private Multi-Party Computations\"; Advances in Cryptology: Proceedings of Crypto '95, Springer-Verlag, pages 110-123, 1995.[C??] F. Cristian [et. al?] on external clock synchronization \u21a9[CF94] F. Cristian and C. Fetzer, \"Probabilistic Internal Clock Synchronization\", 13th Symposium on Reliable Distributed Systems\", 1994 \u21a9[D96] Dohrn-van Rossum, History of the Hour \u2013 Clocks and Modern Temporal Orders, University of Chicago Press, 1996. \u21a9 \u21a9 \u21a9[DA01] W. Du, M. Atallah, \"Secure Multi-Party Computation Problems and Their Applications: A Review And Open Problems\" (2001), New Security Paradigms Workshop \u21a9[FLP85] M.J. Fischer, N.A. Lynch,, and M.S. Peterson, \"Impossibility of distributed consensus with one faulty process\", Journal of the ACM, vol 32, pp. 374-382, April 1985. \u21a9[G95] Vicente Goyzueta, \"Cathedral of Qosco City\" \u21a9[HM97] M. Hirt and U. Maurer, \"Complete characterization of adversaries tolerable in secure multi-party computation\", 16th ACM PODC J. Kilian, Uses of Randomness in Algorithms and Protocols, MIT Press 1990.[ISN93] M. Ito, A. Saito and T. Nishizeki. Secret Sharing Scheme Realizing General Access Structure. J. Cryptology, 6 (1993) 15--20.[K90] J. Kilian, The Use of Randomness in Algorithms and Protocols, MIT Press 1990 \u21a9[L78] L. Lamport, \"Time, Clocks, and the Ordering of Events in a Distributed System\", Communications of the ACM 21(7):558-565, July 1978 \u21a9[L95] Susan K. Langford. \"Threshold DSS signatures without a trusted party.\" In D. Coppersmith, editor, Advances in Cryptology Crypto '95 proceedings, number 963 in LNCS, pages 397 409. Springer-Verlag, 1995. (some context online at http://citeseer.nj.nec.com/context/478327/0)[MR97] D. Maklhi & M. Reiter, \"Byzantine Quorum Systems\", also in 21st ACM STOC, 1979[MM95] L. E. Moser and P. M. Melliar-Smith, \"Total ordering algorithms for asynchronous Byzantine systems.\" In Proceedings of the 9th International Workshop on Distributed Algorithms, Springer-Verlag, September 1995.[MMA99] L. Moser, P.M. Melliar-Smith, V. Agrawala, \"Total ordering algorithms\", Proceedings of the 19th annual conference on Computer Science 1991 , San Antonio, Texas, United States, Pages: 375 - 380 Series-Proceeding-Article Year of Publication: 1999 ISBN:0-89791-382-5 ACM Press New York, NY, USA[MM99] L.E. Moser and P.M. Mellar-Smith, \"Byzantine-resistant total ordering algorithms\", Information and Computation, vol. 150, pp. 75-111, 1999.[NW96] M. Naor and A. Wool, \"Access control and signatures via quorum secret sharing\", 3rd ACM Conf. on Computer and Communications Security[MB94] M. Reiter and K. P. Birman. \"How to securely replicate services.\"\" ACM Transactions on Programming Languages and Systems, 16(3):986\u20131009, May 1994.[P91] T.P. Pedersen. \"A Threshold Cryptosystem without a Trusted Party.\"\" In Eurocrypt'91, LNCS 547, pages 522--526. Springer-Verlag, 1991.[PSL80] M. Pease, R. Shostak, and L. Lamport, \"Reaching Agreement in the Presence of Faults\", Journal of the ACM 27(2):228-234, April 1980[Rab83] M. Rabin, \"Randomized Byzantine Generals,\" Proceedings of the IEEE Symposium on the Foundations of Computer Science, pp. 403-409, IEEE, 1983[SMNTWB02] David Sames, Brian Matt, Brian Niebuhr, Gregg Tally, Brent Whitmore, and David Bakken, \"Developing a Heterogeneous Intrusion Tolerant CORBA System\", Proceedings of the 2002 International Conference on Dependable Systems & Networks, Washington, D.C., June 23-26, 2002.[Sh79] A. Shamir. \"How to share a secret.\"\" In Com. of the ACM, 22(11):612613, 1979. (online at secret.html)[Sh96] B. Schneier, Applied Cryptography, 2nd edition, John Wiley & Sons 1996 \u21a9[SG98] V. Shoup and R. Gennaro. \"Securing Threshold Cryptosystems against Chosen Ciphertext Attack\", in Eurocrypt '98, LNCS 1403, pages 1\u201316. SpringerVerlag, 1998. cf. the extended version for the Journal of Cryptology, available at http://www.shoup.net/papers/[Sh00] V. Shoup, \"Practical threshold signatures\", in Advances in Cryptology: EUROCRYPT 2000 (B. Preneel, ed.) vol. 1087 of Lecture Notes in Computer Science, pp. 207-220, Springer, 2000[S97] N. Szabo, \"Contracts With Bearer\"[S97b] N. Szabo, \"The God Protocols\"[S98] N. Szabo, \"Secure Property Titles with Owner Authority\" \u21a9[S00] N. Szabo, \"Trusted Third Parties are Security Holes\"Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 2003 by Nick Szabo\nrough draft \u2013 quoting or redistribution without permission of the author prohibitedEditor's note: Some links may be broken."}
{"prompt": "Online Cash Checks", "completion": "Savings of roughly an order of magnitude in space, storage, and bandwidth over previously published online electronic cash protocols are achieved by the techniques introduced here. In addition, these techniques can increase convenience, make more efficient use of funds, and improve privacy.\"Offline\" electronic money[CFN88] is suitable for low value transactions where \"accountability after the fact\" is sufficient to deter abuse; online payment[C89], however, remains necessary for transactions that require \"prior restraint\" against persons spending beyond their available funds.Three online schemes are presented here. Each relies on the same techniques for encoding denominations in signatures and for \"devaluing\" signatures to the exact amount chosen at the time of payment. They differ in how the unspent value is returned to the payer. In the first, all change is accumulated by the payer in a single \"cookie jar,\" which might be deposited at the bank during the next withdrawal transaction. The second and third schemes allow change to be distributed among unspent notes, which can themselves later be spent. The second scheme reveals to the shop and bank the maximum amount for which a note can be spent; the third does not disclose this information.For simplicity and concreteness, but without loss of generality, a particular denomination scheme will be used here. It assigns the value of 1 cent to public exponent 3 in an RSA system, the value of 2 cents to exponent 5, 4 cents to exponent 7, and so on; each successive power-of-two value is represented by the corresponding odd prime public exponent, all with the same modulus. Much as in [C89], a third root of an image under the one-way function f (together with the pre-image modulo the bank's RSA composite) is worth 1 cent, a 7th root is worth 4 cents, and a 21st root 5 cents. In other words, a distinct public prime exponent is associated with each digit of the binary integer representation of an amount of payment; for a particular amount of payment, the product of all those prime exponents corresponding to 1 's in the binary representation of the amount is the public exponent of the signature.A signature on an image under f is \"devalued\" by raising it to the public powers corresponding to the coin values that should be removed. For instance, a note having a 21st root could be devalued from its 5 cent value, to 1 cent, simply by raising it to the 7th power.In earlier online payment systems[C89], the number of separate signatures needed for a payment was in general the Hamming weight of the binary representation of the amount. Since online systems would be used for higher-value payments (as mentioned above), and extra resolution may be desired to provide interest for unspent funds[C89], an average of roughly an order of magnitude is saved here.In this first scheme the payer periodically withdraws a supply of notes from the bank, each with the system-wide maximum value. Consider an example, shown in Figure 1.1, in which two notes are withdrawn. The n and ri are random. The ri \"blind\" (from the bank) the images under the public, one-way function f. The bank's signature corresponds to taking the h-th root, where h = 3*5*7*11. As in all the figures, the payer sends messages from the left and the bank sends from the right.In preparing the first payment, the payer divides r1 out. The signature is then raised to the 55th power to devalue it from 15 cents to 5 cents. Figure 1.2 shows this first payment. Of course the shop is an intermediary between the payer (left) and the bank (right) in every online payment, but this is not indicated explicitly. Also not shown in the figures are messages used to agree on the amounts of payment.The first two residues sent in paying, n1 and its signed image under f, are easily verified by the bank to be worth 5 cents. The third residue is a blinded \"cookie jar,\" a blinded image under f of a randomly chosen value j. This cookie jar is modulo a second RSA composite that is only used for cookie jars. Once the bank verifies the funds received, and that n1 has not been spent previously, it signs and returns the blinded cookie jar (under the cookie jar modulus) with public exponents corresponding to the change due.The second payment, shown in figure 1.3, is essentially the same as the first, except that the amount is 3 cents and the cookie jar now has some roots already on it. If more payments were to be made using the same cookie jar, all resulting signatures for change would accumulate.The cookie jar might conveniently be deposited, as shown in figure 1.4, during the withdrawal of the next batch of notes. It is verified by the bank much as a payment note would be: the roots must be present in the claimed multiplicity and the pre-image under f must not have been deposited before.The cookie jar approach gives the effect of an online form of \"offline checks\"[C89], in that notes of a fixed value are withdrawn and the unspent parts later credited to the payer during a refund transaction.Figure 2 depicts a somewhat different scheme, which allows change to be spent without an intervening withdrawal transaction. Withdrawals can be just as in the cookie-jar scheme, but here a single modulus is used for everything in the system. The products of public exponents representing the various amounts are as follows: d is the amount paid, g is the note value, the \"change\" c is g/d, and h is again the maximal amount, where d | g | h. A payment (still to the bank through a shop) includes first and second components that are the same as in the cookie-jar scheme. The third component is the amount of change c the payer claims should be returned. The fourth is a (blinded) number m, which could be an image under f used in a later payment just as n is used in this one.The signature returned contains a \"protection\" factor (shown inside the padlock). This factor ensures that the payer actually has the c-th root of f(n), by requiring that the payer apply f to it before dividing the result out of the signature. Without such protection, a payer could get the systemwide maximum change, regardless of how much change is actually due; with it, the change claimed can only be recovered if the corresponding roots on n are in fact known to the payer.The change returned in a payment can be divided into parts that fill in missing denominations in notes not yet spent. Suppose, for example, that the last payment is spent with d = 5*11, c = 3*7, and that m is formed by the payer as shown in the first line of Figure 3.1. Then unblinding after the payment yields the a shown in the second line.(Use === for \"is equivalent to\")From a, the two roots shown in the last two lines of Figure 3.2 are readily computed. (This technique is easily extended to include any number of separate roots.) Thus the values unused in the last payment fill in roots missing in notes n1 and n2.Because overpayment allows change to be returned in any chosen denominations (not shown), the payer has extra flexibility and is able to use all funds held. This also increases convenience by reducing the need for withdrawals.Although the combination of the previous two subsections is quite workable, it may be desirable for the payer not to have to reveal c to the shop or the bank. Figure 4 shows a system allowing this. The payment message is just as in the declared note value protocol above, except that c is not sent. The protection factor (shown again in a lock) is also placed under the signature, but it is missing the extra f and is raised to a random power z chosen by the bankIf z were known to the payer before payment, then the payer could cheat by including f(n) in the third component; this would yield the payer the system-wide maximum change, even if none were due. Consider a single change exponent q. If z mod q is guessed correctly by a cheating payer, then the payer improperly gets the corresponding coin value. Thus the chance of successful cheating is 1/q. If, however, the divisors of h are chosen sufficiently large, quite practical security can be achieved. When the possibilities of distributing change and refunding are included, this scheme's privacy surpasses that of a coin system.Combining online coins improves efficiency, use of funds, convenience, and privacy.Chaum, D., \"Privacy Protected Payments: Unconditional Payer and/or Payee Anonymity,\" in Smart Card 2000, North-Holland, 1989, pp. 69-92. \u21a9 \u21a9 \u21a9 \u21a9Chaum, D., A. Fiat, & M. Naor, \"Offline Electronic Cash,\" Proceedings of Crypto '88. \u21a9"}
{"prompt": "Why I Wrote PGP", "completion": "Whatever you do will be insignificant, but it is very important that you do it.It's personal. It's private. And it's no one's business but yours. You may be planning a political campaign, discussing your taxes, or having a secret romance. Or you may be communicating with a political dissident in a repressive country. Whatever it is, you don't want your private electronic mail (email) or confidential documents read by anyone else. There's nothing wrong with asserting your privacy. Privacy is as apple-pie as the Constitution.The right to privacy is spread implicitly throughout the Bill of Rights. But when the United States Constitution was framed, the Founding Fathers saw no need to explicitly spell out the right to a private conversation. That would have been silly. Two hundred years ago, all conversations were private. If someone else was within earshot, you could just go out behind the barn and have your conversation there. No one could listen in without your knowledge. The right to a private conversation was a natural right, not just in a philosophical sense, but in a law-of-physics sense, given the technology of the time.But with the coming of the information age, starting with the invention of the telephone, all that has changed. Now most of our conversations are conducted electronically. This allows our most intimate conversations to be exposed without our knowledge. Cellular phone calls may be monitored by anyone with a radio. Electronic mail, sent across the Internet, is no more secure than cellular phone calls. Email is rapidly replacing postal mail, becoming the norm for everyone, not the novelty it was in the past.Until recently, if the government wanted to violate the privacy of ordinary citizens, they had to expend a certain amount of expense and labor to intercept and steam open and read paper mail. Or they had to listen to and possibly transcribe spoken telephone conversation, at least before automatic voice recognition technology became available. This kind of labor-intensive monitoring was not practical on a large scale. It was only done in important cases when it seemed worthwhile. This is like catching one fish at a time, with a hook and line. Today, email can be routinely and automatically scanned for interesting keywords, on a vast scale, without detection. This is like driftnet fishing. And exponential growth in computer power is making the same thing possible with voice traffic.Perhaps you think your email is legitimate enough that encryption is unwarranted. If you really are a law-abiding citizen with nothing to hide, then why don't you always send your paper mail on postcards? Why not submit to drug testing on demand? Why require a warrant for police searches of your house? Are you trying to hide something? If you hide your mail inside envelopes, does that mean you must be a subversive or a drug dealer, or maybe a paranoid nut? Do law-abiding citizens have any need to encrypt their email?What if everyone believed that law-abiding citizens should use postcards for their mail? If a nonconformist tried to assert his privacy by using an envelope for his mail, it would draw suspicion. Perhaps the authorities would open his mail to see what he's hiding. Fortunately, we don't live in that kind of world, because everyone protects most of their mail with envelopes. So no one draws suspicion by asserting their privacy with an envelope. There's safety in numbers. Analogously, it would be nice if everyone routinely used encryption for all their email, innocent or not, so that no one drew suspicion by asserting their email privacy with encryption. Think of it as a form of solidarity.Senate Bill 266, a 1991 omnibus anticrime bill, had an unsettling measure buried in it. If this non-binding resolution had become real law, it would have forced manufacturers of secure communications equipment to insert special \"trap doors\" in their products, so that the government could read anyone's encrypted messages. It reads, \"It is the sense of Congress that providers of electronic communications services and manufacturers of electronic communications service equipment shall ensure that communications systems permit the government to obtain the plain text contents of voice, data, and other communications when appropriately authorized by law.\" It was this bill that led me to publish PGP electronically for free that year, shortly before the measure was defeated after vigorous protest by civil libertarians and industry groups.The 1994 Communications Assistance for Law Enforcement Act (CALEA) mandated that phone companies install remote wiretapping ports into their central office digital switches, creating a new technology infrastructure for \"point-and-click\" wiretapping, so that federal agents no longer have to go out and attach alligator clips to phone lines. Now they will be able to sit in their headquarters in Washington and listen in on your phone calls. Of course, the law still requires a court order for a wiretap. But while technology infrastructures can persist for generations, laws and policies can change overnight. Once a communications infrastructure optimized for surveillance becomes entrenched, a shift in political conditions may lead to abuse of this new-found power. Political conditions may shift with the election of a new government, or perhaps more abruptly from the bombing of a federal building.A year after the CALEA passed, the FBI disclosed plans to require the phone companies to build into their infrastructure the capacity to simultaneously wiretap 1 percent of all phone calls in all major U.S. cities. This would represent more than a thousandfold increase over previous levels in the number of phones that could be wiretapped. In previous years, there were only about a thousand court-ordered wiretaps in the United States per year, at the federal, state, and local levels combined. It's hard to see how the government could even employ enough judges to sign enough wiretap orders to wiretap 1 percent of all our phone calls, much less hire enough federal agents to sit and listen to all that traffic in real time. The only plausible way of processing that amount of traffic is a massive Orwellian application of automated voice recognition technology to sift through it all, searching for interesting keywords or searching for a particular speaker's voice. If the government doesn't find the target in the first 1 percent sample, the wiretaps can be shifted over to a different 1 percent until the target is found, or until everyone's phone line has been checked for subversive traffic. The FBI said they need this capacity to plan for the future. This plan sparked such outrage that it was defeated in Congress. But the mere fact that the FBI even asked for these broad powers is revealing of their agenda.Advances in technology will not permit the maintenance of the status quo, as far as privacy is concerned. The status quo is unstable. If we do nothing, new technologies will give the government new automatic surveillance capabilities that Stalin could never have dreamed of. The only way to hold the line on privacy in the information age is strong cryptography.You don't have to distrust the government to want to use cryptography. Your business can be wiretapped by business rivals, organized crime, or foreign governments. Several foreign governments, for example, admit to using their signals intelligence against companies from other countries to give their own corporations a competitive edge. Ironically, the United States government's restrictions on cryptography in the 1990's have weakened U.S. corporate defenses against foreign intelligence and organized crime.The government knows what a pivotal role cryptography is destined to play in the power relationship with its people. In April 1993, the Clinton administration unveiled a bold new encryption policy initiative, which had been under development at the National Security Agency (NSA) since the start of the Bush administration. The centerpiece of this initiative was a government-built encryption device, called the Clipper chip, containing a new classified NSA encryption algorithm. The government tried to encourage private industry to design it into all their secure communication products, such as secure phones, secure faxes, and so on. AT&T put Clipper into its secure voice products. The catch: At the time of manufacture, each Clipper chip is loaded with its own unique key, and the government gets to keep a copy, placed in escrow. Not to worry, though\u2014the government promises that they will use these keys to read your traffic only \"when duly authorized by law.\" Of course, to make Clipper completely effective, the next logical step would be to outlaw other forms of cryptography.The government initially claimed that using Clipper would be voluntary, that no one would be forced to use it instead of other types of cryptography. But the public reaction against the Clipper chip was strong, stronger than the government anticipated. The computer industry monolithically proclaimed its opposition to using Clipper. FBI director Louis Freeh responded to a question in a press conference in 1994 by saying that if Clipper failed to gain public support, and FBI wiretaps were shut out by non-government-controlled cryptography, his office would have no choice but to seek legislative relief. Later, in the aftermath of the Oklahoma City tragedy, Mr. Freeh testified before the Senate Judiciary Committee that public availability of strong cryptography must be curtailed by the government (although no one had suggested that cryptography was used by the bombers).The government has a track record that does not inspire confidence that they will never abuse our civil liberties. The FBI's COINTELPRO program targeted groups that opposed government policies. They spied on the antiwar movement and the civil rights movement. They wiretapped the phone of Martin Luther King. Nixon had his enemies list. Then there was the Watergate mess. More recently, Congress has either attempted to or succeeded in passing laws curtailing our civil liberties on the Internet. Some elements of the Clinton White House collected confidential FBI files on Republican civil servants, conceivably for political exploitation. And some overzealous prosecutors have shown a willingness to go to the ends of the Earth in pursuit of exposing sexual indiscretions of political enemies. At no time in the past century has public distrust of the government been so broadly distributed across the political spectrum, as it is today.Throughout the 1990s, I figured that if we want to resist this unsettling trend in the government to outlaw cryptography, one measure we can apply is to use cryptography as much as we can now while it's still legal. When use of strong cryptography becomes popular, it's harder for the government to criminalize it. Therefore, using PGP is good for preserving democracy. If privacy is outlawed, only outlaws will have privacy.It appears that the deployment of PGP must have worked, along with years of steady public outcry and industry pressure to relax the export controls. In the closing months of 1999, the Clinton administration announced a radical shift in export policy for crypto technology. They essentially threw out the whole export control regime. Now, we are finally able to export strong cryptography, with no upper limits on strength. It has been a long struggle, but we have finally won, at least on the export control front in the US. Now we must continue our efforts to deploy strong crypto, to blunt the effects increasing surveillance efforts on the Internet by various governments. And we still need to entrench our right to use it domestically over the objections of the FBI.PGP empowers people to take their privacy into their own hands. There has been a growing social need for it. That's why I wrote it.Philip R. Zimmermann\nBoulder, Colorado\nJune 1991 (updated 1999)"}
{"prompt": "Measuring Value", "completion": "A crucial issue in transaction costs economicsAn acquaintance does you a favor. How can you pay her back and deepen the relationship? An investor examines the balance sheet of a company. What do the numbers mean? Are they even trustworthy? A judge must decide on an award for damages done to a plaintiff. What amount of money, if any, fairly compensates for the plaintiff's suffering?A wide variety of human relationships and institutions, from the most friendly to the most antagonistic, must tackle the thorny problem of value: how can we securely distinguish, using the inputs of our fallible senses, that which we value from that which we do not? How can we figure out what another person values? Money, wage labor, markets, and many other economic institutions take the forms they do primarily because they solve problems of measuring value. Such questions also lie at the heart of the current crisis in accounting.Questions of value are inherently subjective and personal. Value is very different from the objective phenomena of physics, chemistry, and the like. Societies have evolved institutions such as firms and competitive markets to set prices, legal precedents and judicial proceedings to make judgments, and so forth. These institutions in turn often rely on answering the second question, the topic of our essay \u2013 how can we securely determine value from what we observe? We will examine tax collection as an antagonistic instance of the measurement problem. The last section of this essay will focus on a particular institution developed to measure value \u2013 accounting \u2013 and suggest how it might rise to challenge the radical changes underway in our services and information economies.In the nineteenth century economists developed a theory of perfectly competitive commodity markets (often now called the \"neoclassical model\"). This is the source of supply and demand curves, for example. In the ideal market, supply balances demand resulting in a price that incorporates all the relevant skills and preferences of the market's participants. In such a market, this balance between skills needed to create a commodity and the preferences for that commodity constitute the value of that commodity \u2013 we can measure value by the equilibrium market price. Some modern markets, especially well known ones such as the commodity futures markets, approach this ideal in practice. However, many other institutions, such as the hierarchical firm, operate in very different ways. And modern markets are mostly quite recent in origin. Even today most human economic relationships, such as those that occur within a firm, are far from this ideal.In the competitive market, one commodity is traded for another. (Money is just a particularly interesting kind of commodity). In order for this market to work \u2013 in order for prices to accurately communicate value \u2013 first the participants must be able to measure the value of the two commodities traded. Indeed, that's the main property that distinguishes a commodity from a less economically tractable good or service \u2013 the ability of parties to measure its value \u2013 the ability of parties to observe properties of a good or service, matching what they observe against their private preferences, and making sure this process isn't spoofed by wily traders.The competitive market model was so successful that modern economists are now approaching other economic institutions that we take for granted \u2013 such as the firm \u2013 and asking why they exist at all! They are working backwards from a very clear theory of competitive markets to explain the wide variety of other kinds of economic relationships, usually formalized by property rights and contracts, that we enter into. This school is most widely known as the \"transaction cost\" school of economics. Often it is referred to as \"new institutional\", or \"property rights school.\" The idea of transaction costs was developed by Nobel prize winning economist Ronald Coase. His brilliant heirs include Oliver Hart and Oliver Williamson, along with Steve Cheung, Yoram Barzel, Armen Alchian, Harold Demsetz, Janet Landa, Robert Ellickson, and many others.By comparing a wide variety of contractual forms to the ideal commodity market, and by re-using many of the same assumptions used by neoclassical economists \u2013 individuals with rational self-interest, unique preferences, and unique skills \u2013 we are better understanding these other economic institutions. Modern economies contain a wide variety of commercial institutions, from hierarchically commanded firms on the one hand to freely competitive commodity markets on the other. In between are a wide variety of institutions and the contracts that formalize them.When somebody starts a new company rather than hiring on as an employee at a current one, we can think of this decision as a \"vote\" that the economy needs more market relationships and less employee-employer relationships. Contrariwise, when one firm buys out another, they are implicitly betting that the economy needs less market and more firm. Socialists, seeing the trends of integration and economies of scale in industrial capitalism, thought the world would end up as one big firm, and decided this firm should be run by the government. That worked out horribly. Others have idealized a world in which there are no firms \u2013 everybody is a private contractor, selling their services to other individuals. In many industries that's a non-starter as well. Oliver Williamson and other economists have studied many of these forms and come up with some criteria that make competitive commodity markets less than perfect, causing other contractual forms to be used. (Here \"contractual form\" is shorthand for a certain kind business relationship \u2013 employment, franchising, commodity exchange, etc. The contract used by the parties is usually the most formal and complete description of their relationship, as well as the \"security protocol\" that defines the basic rules of the relationship).These economists have identified a number of limitations of ideal commodity exchange that often cause other contractual forms to be used instead. These include:Security costs. Other kinds of transaction costs are incurred from parties that are opportunistic \u2013 they are self-interested, but they follow the letter if not necessarily the spirit of the rules of a relationship (whether these rules are legal, contractual, or informal). Security costs are incurred from, or to protect a relationship against, parties that are outright malicious \u2013 they might break any of the rules, use threats of force, or actually carry out acts of trespass, theft, or violence, in order to satisfy their (alas, not so rare) coercive kinds of preferences.Rule incompleteness \u2013 the difficulty for parties to anticipate all contingencies that might occur in a relationship, and thus the inability to plan for them with rules (for example, by terms in a contract). Most disputes that go to court, and most interesting new legal precedents, occur over situations that the parties entering into a relationship didn't foresee well enough to deal with up front.Exit costs and/or investments that are specific to a particular relationship. For example, when you take a class to learn how to use Windows or Word, you are investing in a relationship with Microsoft. Another example is when a railroad is built to a coal mine \u2013 the railroad now depends on the mine for business, and the mine operator depends on the railroad to ship his coal. A third example is the layout on a factory floor, where the results of one machine's operation feed into another specific machine. The most common examples are employees developing relationships and learning skills that are specific to a particular job. In these kinds relationships with high investments or exit costs, without good contractual safeguards you can end up stuck in a bad relationship \u2013 even if it goes sour, the other guy cheats on you, it may be too expensive to exit the relationship, or you may lose your investment.When there is both lack of ability to specify rules and relationship specific investments, the result is often vertical integration into a single firm. The coal mine might buy the railroad, the machine operations occur on a factory floor owned by a single company, and so on. On the other hand, a firm has diseconomies of scale due to the increasing inability to match preferences to skills in larger firms. As Friedrich Hayek pointed out, diseconomies of scale in the distribution of knowledge about skills and preferences are a big reason why socialism works so much more poorly than market economies. More generally, these diseconomies limit firm size. Certain innovations (such as in accounting at the beginning of the industrial revolution, or in supply chain management in the last two decades) have improved the reliable distribution of knowledge within a firm and thereby allowed firms to grow larger.Innovations that better cover contingencies or reduce the need for relationship specific investments and exit costs can disadvantage larger firms and advantage a larger number of smaller firms. Rather than an commodity market often a contractual form intermediate between a market and a firm, such as a franchise, is used. A franchise is a long term contract that, roughly speaking, specifies many basic rules for operating a business but leaves temporary or unique problems to the discretion of the local operator.We will shortly turn to perhaps the most important kind of transaction cost, the measurement of value, the main subject of our essay.Before we do that, however, let us note that these kinds of transaction costs, while first studied in the context of markets, are not confined to markets or even market-embedded institutions. They occur any time a good is transferred or a service rendered according to a set of rules or customs, however simple or complicated. Not only do these transaction costs provide a basis for comparing non-market or extra-market institutions such as the firm to the market; they also apply to a wide variety of other institutions, including many we may not typically think of as economic institutions. So, for example, the ancient institutions of inheritance, marriage, tribute, tax collection, and tort law all involved an important component of wealth transfer. All are subject to the main kinds of transaction costs outlined here \u2013 including that of our main topic.The measurement problem is very broad. It comes into play in any system of exchange \u2013 reciprocation of favors, barter, money, credit, employment, or purchase in a market. It is important in extortion, taxation, tribute, and the setting of judicial penalties. It is even important in reciprocal altruism in animals. Consider monkeys exchanging favors \u2013 say pieces of fruit for back scratches. Mutual grooming can remove ticks and fleas that an individual can't see or reach. But just how much grooming versus how many pieces of fruit constitutes a reciprocation that both sides will consider to be \"fair\", or in other words not a defection? Is twenty minutes of back-scratching worth one piece of fruit or two? And how big a piece? And just how long is twenty minutes anyway? In some cases this is relatively easy to solve, as with the delayed barter of blood for blood in vampire bats. These bats can come home from a hunting mission either overstuffed or starving. Overstuffed bats can regurgitate blood to feed hungry ones. The grateful recipient can remember the favor an return it in a future hunting trip when the tables might be turned. And indeed, some degree of reciprocal trade takes place between vampire bats, even among non-kin.Even this simple case of trading blood for blood, is, however, far more complicated then it seems. Just how do the bats estimate the value of blood they have received? Do they estimate the value of a favor by weight, by bulk, by taste, by its ability to satiate hunger, or other variables? Just the same, measurement complications arise even in the simple monkey exchange of \"you scratch my back and I'll scratch yours\".For the vast majority of potential exchanges, the measurement problem is intractable for animals. Even more than the easier problem of remembering faces and matching them to favors, the ability of both parties to agree with sufficient accuracy on an estimate of the value of a favor in the first place is probably the main barrier to reciprocal altruism among animals.It is also likely the most important barrier to exchange among humans. Many kinds of exchange, probably many more than most economists perceive, are rendered infeasible by the inability of one or both parties to the exchange to estimate its value. For most of human history, most kinds of markets that are possible today were not then feasible, in large part due to the inability of potential market participants to measure value: to estimate the value of the transaction to themselves and then use these estimates to discover and agree on a common objective measurement. Measurement of value was and is also important to the development of many economic institutions related to markets. Accounting, which we will examine below, was crucial to the development of large companies and modern systems of taxation.The process of determining the value of a product from observations is necessarily incomplete and costly. For example, a shopper can see that an apple is shiny red. This has some correlation to its tastiness (the quality a typical shopper actually wants from an apple), but it's hardly perfect. The apple's appearance is not a complete indicator \u2013 an apple sometimes has a rotten spot down inside even if the surface is perfectly shiny and red. We call an indirect measure of value \u2013 for example the shininess, redness, or weight of the apple \u2013 a proxy measure. In fact, all measures of value, besides prices in an ideal market, are proxy measures \u2013 real value is subjective and largely tacit.Such observations also come at a cost. It may take some time to sort through apples to find the shiniest and reddest ones, and meanwhile the shopper bruises the other apples. It costs the vendor to put on a fake shiny gloss of wax, and it costs the shopper because he may be fooled by the wax, and because he has to eat wax with his apple. Sometimes these measurement costs comes about just from the imperfection of honest communication. In other cases, such as waxing the apple, the cost occurs because rationally self-interested parties play games with the observable.Measures are critical components of institutions \u2013 such as auctions, contracts, accounting systems, legal damage rules, tax rules, etc. \u2013 that align incentives between parties who, prior to participating in the institution, have incompatible incentives. We can divide the measurement problem into two components \u2013 the first, choosing the phenomena and units that will be measured, and second, measuring those attributes in a way that minimizes spoofing of the measure between parties whose incentives with respect to the value are misaligned.Cost can usually be measured far more objectively than value. As a result, the most common proxy measures are various kinds of costs. Examples include:We now look at a particularly challenging set of measurement problems \u2013 those faced by a tax collector. Taxation being the least cooperative kind of economic relationship \u2013 the incentives between the parties being the most misaligned \u2013 the measurement game played between the parties takes its most serious form.Tax collection is the most efficient department of government. Its efficiency rivals that of many private sector institutions.From the point of view of many taxpayers this is an incredible claim, given that tax collectors take money we ourselves know how to spend quite well, thank you, and often spend it on amazingly wasteful activities. And the rules by which they take it often seem quite arbitrary. Tax rules are usually complex but nevertheless fail to let us account for many events important to the earning of our incomes that differentiate us from other taxpayers.How the money gets spent is outside the scope of the claim that tax collectors are uncommonly efficient. It is the collection process itself that is the subject of that claim, and the tax collection rules. This essay will demonstrate the efficiency of tax collector's rules by two arguments:The tax collector's incentives are aligned with the other branches of their government in a task that benefits all associated with the government, namely the collection of their revenue. No organization of any type collects more revenue with fewer expenditures than tax collection agencies. Of course, they have the advantage of coercion, but they must overcome measurement problems that are often the same as other users of accounting systems, such as owners of large companies. It is not surprising, then, that tax collectors have sometimes pioneered value measurement techniques, and often have been the first to bring them into large scale use.Like other kinds of auditors, the tax collector's measurement problem is tougher than it looks. Investment manager Terry Coxon has described it well[6]. Bad measures or inaccurate measurements allow some industries to understate their income, while forcing others to pay taxes on income they haven't really earned. Coxon describes the result: the industries that are hurt tend to shrink. The industries that benefit pay fewer taxes than could be extracted. In both cases, less revenue is generated for the tax man than he might be able to get with better rules.This is an application of the Laffer curve to the fortunes of specific industries. On this curve, developed by the brilliant economist Arthur Laffer, as the tax rate increases, the amount of revenue increases, but at an increasingly slower rate than the tax rate, due to increased avoidance, evasion, and most of all disincentive to engage in the taxed activity. At a certain rate due to these reasons tax revenues are optimized. Hiking the tax rate beyond the Laffer optimum results in lower rather than higher revenues for the government. Ironically, the Laffer curve was used by advocates for lower taxes, even though it is a theory of tax collection optimum to government revenue, not a theory of tax collection optimal to social welfare or individual preference satisfaction.On a larger scale, the Laffer curve may be the most important economic law of political history. Adams[1] uses it to explain the rise and fall of empires. The most successful governments have been implicitly guided by their own incentives \u2013 both their short-term desire for revenue and their long-term success against other governments \u2013 to optimize their revenues according to the Laffer Curve. Governments that overburdened their taxpayers, such as the Soviet Union and later Roman Empire, ended up on the dust-heap of history, while governments that collected below the optimum were often conquered by their better-funded neighbors. Democratic governments may maintain high tax revenues over historical time by more peaceful means than conquering underfunded states. They are the first states in history with tax revenues so high relative to external threats that they have the luxury of spending most of the money in non-military areas. Their tax regimes have operated closer to the Laffer optimum than those of most previous kinds of governments. (Alternatively, this luxury may be made possible by the efficiency of nuclear weapons in deterring attack rather than the increased incentives of democracies to optimize to tax collection).When we apply the Laffer curve to examining the relative impact of tax rules on various industries, we conclude that the desire to optimize tax revenues causes tax collectors to want to accurately measure the income or wealth being taxed. Measuring value is crucial to determining the taxpayer's incentives to avoid or evade the tax or opt out of the taxed activity. For their part, taxpayers can and do spoof these measurements in various ways. Most tax shelter schemes, for example, are based on the taxpayer minimizing reported value while optimizing actual, private value. Tax collection involves a measurement game with unaligned incentives, similar to but even more severe than measurement games between owner and employee, investor and management, store and shopper, and plaintiff-defendant (or judge-guilty party).As with accounting rules, legal damage rules, or contractual terms, the choice of tax rules involves trading off complexity (or, more generally, the costs of measurement) for more accurate measures of value. And worst of all, as with the other rule-making problems, rule choices ultimately ground out on subjective measures of value. Thus a vast number of cases are left where the tax code is unfair or can be avoided. Since tax collectors are not mind readers, tax rules and judgments must substitute for actual subjective values its judgments of what the \u201creasonable\u201d or \u201caverage\u201d person's preferences would be in the situation. Coxon provides the following example. Imagine that we wanted to optimize the personal income tax rules to measure income as accurately as possible. We might start reasoning along these lines:... look a little closer and you find that an individual incurs costs and expenses in earning a salary. He has to pay for transportation to and from work. He may spend money on clothes he wouldn't otherwise buy and on lunches that would cost less at home. And he may have spent thousands of dollars acquiring the skills and knowledge he uses in this work.Ideal, precise rules for measuring his income would, somehow, take all these and other costs into account. The rules would deduct the cost of commuting (unless he enjoys traveling about town early in the morning and later in the afternoon). They would deduct the cost of the clothes he wouldn't otherwise pay (to the extent it exceeds the cost of the clothes he would buy anyway). They would deduct the difference between the cost of eating lunch at work and the cost of lunch at home (unless he would eat lunch out anyway). And each year these ideal rules would deduct a portion of the cost of his education (unless he didn't learn anything useful in school or had enough fun to offset the cost).Because there are limits to complexity, andbecause tax agents can't read minds, the government gives them arbitrary rules to follow: no deductions are allowed for commuting expenses, for clothing that is suitable for wearing outside of work, for lunches that aren't part of the \u201cbusiness entertainment\u201d or for the cost of acquiring the skills a job requires (although you can deduct the cost of improving your skills).The resulting rules often seem arbitrary, but they are not. They are trade-offs, often non-obvious but brilliant, between the costs of measuring more value with greater accuracy and extra revenue extracted thereby. However, the value measurement problem is hardly unique to tax collection. It is endemic when assessing damages in contract and tort law, and when devising fines punishments in administrative and criminal law. Many private sector rules found in contracts, accounting, and other institutions also have the quality that they use highly non-obvious measures of value that turn out, upon close examination, to be brilliant solutions to seemingly intractable problems of mind-reading and the unacceptable complexity of covering all cases or contingencies. Such measurement problems occur in every kind of economic system or relationship. The best solutions civilization has developed to solve them are in most institutions brilliant but highly imperfect. There is vast room for improvement, but failed large-scale experiments in attempts to improve these measures can be devastating.The Laffer curve and measurement costs can also be used to analyze the relative benefits of various tax collection schemes to government. Prior to the industrial revolution, for example, the income tax was infeasible. Most taxes were on the prices of commodities sold, or on various ad-hoc measures of wealth such as the frontage of one's house. (This measurement game resulted in the very tall and deep but narrow houses that can still be found in some European cities such as Amsterdam. The stairs are so narrow that even normal furniture has to be hauled up to the upper story and then through a window with a small crane, itself a common feature on these houses).Taxes distorted the economy of the Netherlands \u2013 quite literally. Here are some houses in Amsterdam built in the 17th and 18th centuries, and a typical narrow staircase. Furniture and other large objects must be hauled up by the small cranes seen above the top-story windows.Prior to the industrial revolution, incomes were often a very private matter. However, starting in England in the early nineteenth century, large firms grew to an increasing proportion of the economy. Broadly speaking, large firms and joint-stock companies were made possible by two phases of accounting advances. The first phase, double-entry bookkeeping, was developed for the trading banks and \"super companies\" of early fourteenth century Italy. The second phase were accounting and reporting techniques developed for the larger joint stock companies of the Netherlands and England, starting with the India companies in the seventeenth century. Accounting allowed manager-owners to keep track of employees and (in the second phase) for non-management owners to keep track of managers. These accounting techniques, along with the rise of literacy and numeracy among the workers, provided a new way for tax collectors to measure value. Once these larger companies came to handle a sufficient fraction of an jurisdiction's value of transactions, it was rational for governments to take advantage of their measurement techniques, and they did so \u2013 the result being the most lucrative tax scheme ever, the income tax.While the incentives between investors and managers of public companies are not as badly misaligned as that between tax collector and taxpayer, the incentives to play games with measurements are still quite substantial. Let's now look at the challenges that investors, playing an accounting game with management, face as we move beyond the industrial era.Intangible assets \u2013 in the form of trade secrets, intellectual property, brands, human resources, and so on \u2013 have become more valuable than tangible assets to many of today's businesses. In business in general, and accounting in particular, it is common to use cost as a proxy measure for value. Indeed, while the actual economic value of an asset is the discounted value of expected future cash flows, most assets are assigned a value based on their costs rather than their expected future cash flow stream.This usually works because (a) costs are usually based on verifiable events which can be signed off on and audited, whereas predictions of cash flow are mere speculations about the future, (b) under most conditions we expect that managers have acted rationally, expending money only where they expect, on average, an eventual greater return, and (c) skilled readers of financial statements have learned from experience what games can be played by managers (because their incentives differ from other stakeholders), and to detect signs that managers have acted irrationally (e.g. over or under investment in particular assets).Thus, accounting numbers for tangible assets have never been take too literally or in isolation by skilled readers of financial statements. Indeed, the seeming concreteness of tangibles can be quite misleading. A skilled reader knows that most accounting numbers represent costs not value, and apply their knowledge of the industry to determine for themselves how well value may actually be estimated by these costs. For example, a naive reader will take current assets at face value, whereas a skilled reader will look for conditions such as abnormal growth of inventory or receivables. The actual function of a financial statement is to provide clues for analysts based on well-verified facts, not to provide pat final answers for those seeking to evaluate a company.Some objections to including intangibles on the balance sheet are invalid. For example, it is argued that internally generated intangibles cannot be valued because they have not been purchased on the market. However, this is also often the case for unique industrial investments and inventories. We have developed methods such as specific identification to value internally generated assets, and these could be applied to internally generated intangibles as well. Allocation of costs common to several intangible assets (e.g. a software library used in two different software products) can be based on long experience allocating costs common to multiple tangible assets.Another more valid objection is that the actual value, in expected cash flow, of intangibles is far more uncertain than for most physical assets. Thus, the mapping from cost to value is far more uncertain. This mapping can be done with greater certainty only over an aggregate of diverse investments. However, there are certain kinds of physical assets whose value is also highly uncertain, yet are assigned a value based on costs. Rational managers discounted their original investments to take into account such risks. The same is true for intangible assets. Skilled readers of financial statements know when to expect high uncertainty. Often they will demand further details from management about the specific investments. Providing greater detail where intangibles are involved is highly advisable, a point I return to below.On the other hand, many proposed measures of intangible value are non-starters for the purposes of accounting or financial statements. For example, various measures have been put forth allegedly related to expected cash flows (e.g. measuring web site hits, customer retention rates, etc. to try to estimate the value of a brand). The only time expected value rather than cost is used on a balance sheet for tangibles is when the asset can be currently priced on an efficient, competitive, and public market. (For example, inventories of publically traded commodities can be valued in this manner). Otherwise, it is far better to use cost, the actual event of expenditure, and let the skilled readers of the financial statement interpret these numbers properly.Here are some specific comments and proposals for specific kinds of intangible assets:A company owns these legal rights in all developed and most undeveloped economies. Copyrights are very well defined but in some cases very difficult for the company or the state to actually control. Patents can be very ill defined, so that the occurrence of a loss of rights over the actual technology is unclear. However, presumably managers discount their original investments to take into account such risks. Thus, if costs can be allocated to particular patents and copyrights, they constitute a proxy measure for the value of patented and copyrighted assets. This is quite similar to using the cost of a physical asset, whose eventual cash flow value is highly uncertain, to value that asset, and allowing the skilled reader to interpret the resulting number properly.A company owns legal rights to its trademark in all developed and most undeveloped economies. Companies further have some control over perception in people's minds, insofar as their observable actions influence this perception. Some major brands names have shown a very persistent value, while lesser ones are more likely to be forgotten. One can map current accounting treatments for investment in, maintenance of, and depreciation of physical assets to investment in and maintance of a brand, as well as the tendency of customers to forget over time a brand that is not maintained.Employees are not owned, but the labor market is not perfectly fungible. There is some stickiness to it. Indeed, this stickiness can be measured by the turnover rate for the company. The turnover rate, a quite auditable number, may provide an excellent way to depreciate an asset defined by the costs of hiring and training.Until long experience is gained by stakeholders with particular kinds of intangible investments, the ability to judge whether costs are rational, and satisfy the interests of stakeholders besides management, will be poor. A wide variety of reporting experiments, most of which will fail, are nevertheless essential to achieving more accurate reporting of asset values to stakeholders. Interpretation of intangible-heavy financial statements is a job for skilled analysts, not casual readers. For the expert more information is better \u2013 the detailed records of expenditures and their allocation to intangible assets are more important to the skilled stakeholder than the summary totals. Such detailed records should be released to stakeholders despite objections about confidentiality. Only long experience with these details will teach stakeholders whether and how to judge summary totals involving intangibles.The measurement of value is one of the most intractable problems of civilization. Brilliant and highly non-obvious solutions to this problem \u2013 from markets to money to the time-wage to cost accounting \u2013 have constituted some of the most important steps from animal to civilization. Historically, the solutions to one value measurement problem (e.g., accounting for value in a large firm) made possible other institutions as well (e.g. income tax, which must first solve the same kind of problem in order to be Laffer competitive with other kinds of taxation). Intangible asset accounting may now be the most important value measurement problem we face as we move beyond the era where tangible industrial commodities dominated the economy.(under construction)Adams, Charles, For Good and Evil: The Impact of Taxes on Civilization \u21a9Barzel, Yoram, 1982. \"Measurement Cost and the Organization of Markets\", Journal of Law and Economics 25, no 1:27-48Cheung, Steven N.S., 1969. A Theory of Share Tenancy. University of Chicago Press.Cheung, Steven N.S., 1983. \"The Contractual Nature of the Firm\", Journal of Law and Economics 2, no 1:1-22Coase, R.H., 1937, \"The Nature of the Firm\", Economica 4, no. 3:386-405Coase, R.H., 1988 The Firm, the Market and the Law, University of Chicago Press 1988 \u21a9Coxon, T., 1996 Keep What You Earn, Times Business/Random HouseHayek, F., \"The Use of Knowledge in Society\"Williamson, Oliver, The Economic Institutions of Capitalism, Free Press 1985"}
{"prompt": "Financial Cryptography in 7 Layers", "completion": "Abstract: Financial Cryptography is substantially complex, requiring skills drawn from diverse and incompatible, or at least, unfriendly, disciplines. Caught between Central Banking and Cryptography, or between accountants and programmers, there is a grave danger that efforts to construct Financial Cryptography systems will simplify or omit critical disciplines.This paper presents a model that seeks to encompass the breadth of Financial Cryptography (at the clear expense of the depth of each area). By placing each discipline into a seven layer model of introductory nature, where the relationship between each adjacent layer is clear, this model should assist project, managerial and requirements people.Whilst this model is presented as efficacious, there are limits to any model. This one does not propose a methodology for design, nor a checklist for protocols. Further, given the young heritage of the model, and of the field itself, it should be taken as a hint of complexity rather than a defining guide.Financial Cryptography is substantially complex[3]. For a field that is nominally only half a decade old, by some viewpoints, it is apparent from the implementation work that has been done that many more aspects were involved than envisaged by early pioneers.Financial Cryptography appears to be a science, or perhaps an art, that sits at the intersection of many previously unrelated disciplines:At such a busy juncture of so many distinctive bases of knowledge, problems are bound to arise. Not only the inevitable confusion and wasted resources, but the difficulty in acquiring technical, management and marketing talent that can comfortably work in the field is an issue.As a preliminary step to the better understanding of Financial Cryptography projects, it is often of some interest to structure these disciplines into models that aid dialogue, comparisons and decision making.This paper presents one such model that attempts to describe the field in an introductory manner, as a preamble to greater learning. In this model, the terms Finance and Cryptography are stretched out in order to reveal the disciplines that might have been hidden within the name.Of course, no one model can plausibly cover the depth and breadth of a complex subject. The intent of this present model is to allow the reader to conceptualise the entire field, identifying the relationships of the disciplines, without spending too much time on the detailed nature of each component. Depth is sacrificed for breadth.This paper introduces a 7 layer model, akin to the Open Systems Interconnect Reference Model of networking fame, as shown in Figure 1[5][6]. In this model, Finance and Cryptography are stretched out, revealing five more areas of interest.An advantage of this model is traversal from the technical to the application, giving major stakeholders easy points of entry.We can start at the top, the Finance layer, and work top-down; this is a process of mapping requirements and following them down into lower layers. This might be the place to start if engaged in high-level application discussions.Or, we can start at the bottom, the Cryptography layer, and describe tool kits to offer the higher layers. From ever more sophisticated lower layers, we can build our way up to offering a smorgasboard of options to the all-encompassing financial applications layer.Here, we choose a descriptive presentation that traverses bottom-to-top. Later, an example is presented in the reverse order, top-to-bottom.At the bottom is Cryptography[7]. To some extent, the pure science domain of cryptography solves problems in a mathematical sense only, but it delivers useful properties, including:Cryptography also can solve special problems, when correctly formulated[8]. For example, how can Alice sign a statement of Bob's without being aware of the contents of the statement[9]?It takes Software Engineering, layer 2, to usefully benefit from the properties of cryptography. We draw from database theory (atomicity, transactional integrity and recovery) and networking theory (feedback and idempotency) in order to add such properties as reliability and robustness in the face of network and nodal unreliability, or, designed unavailability such as smart cards and handhelds[10][11].Software engineering provides us with a practical network. We can talk about sending a message across an open network and know that a message will eventually get to the addressee. With the integrity techniques of the previous layer, we can know that the information received by the addressee is as intended by the addressor. By using the specialised sequences of database theory, we can preserve the integrity of the messages over time, in the face of software and hardware failure.With both cryptography and software engineering providing a network upon which we can rely, we can think about distributing messages that are designed to Financial Cryptographic purposes[12]. In the Rights layer, we are looking for a protocol that provides a user with control over assets, in an unequivocable, determinable fashion[13]. Techniques aimed at achieving this include:although this is not an exclusive list[19][20].The previous layers provide methods reliable enough to be used for passing something of value, which we call rights, over an otherwise unsuitable network. Now, we need the techniques of Accounting in order to store and manage rights over time, To financial cryptographers, accounting is a mundane field, and it has perhaps been attractive to ignore it, but experience shows that systems without conventional accounting features tend to lose the value entrusted to them.The techniques of the accounting discipline include double-entry bookkeeping, balance sheets, and the accounting equation[21]. Accounting concepts permit builders of Financial Cryptography systems to build complex systems that guarantee not to lose value as long as everyone follows the rules; and to efficiently identify where the rules are not followed.The above layer, Rights, defines what needs to be accounted for. As an example, the most basic method would be token money. An accounting model based on tokens or coins would need a simple store of coins for the client. The server would be more complex, requiring an account for unissued value, a float account, and a double spend database that matches the float amount[22].Once there is a guarantee that the digital amounts \u2013 the accounting numbers \u2013 under management can be securely passed over the net, and stored on nodes safely, we need to cast our view wider to threats outside the technical domain[23].In any working technology, whether it be trading or cash purchasing, the threat of theft or abuse exists from parties who are trusted to manage the system. This problem, known as the agency problem, can be overcome with a wide variety of techniques that here I will label governance[24].Governance includes these techniques:As technologists, we strive to make the protocols that we build as secure and self-sustaining as possible; our art is expressed in pushing problem resolution into the lower layers. This is an ideal, however, to which we can only aspire; there will always be some value somewhere that must be protected by non-protocol means.Our task is made easier if we recognise the existance of this gap in the technological armoury, and seek to fill it with the tools of Governance. The design of a system is often ultimately expressed in a compromise between Governance and the lower layers: what we can do in the lower layers, we do; and what we cannot is cleaned up in Governance[31].With a system that provides internal and external stability and security, we are now in a position to assign value to the structure. By value, we mean the unit of account, the meaning of that unit, and the range of numbers that are applicable.For example, a Value layer might ascribe any one of the following to the virginal numbers of lower layers:As the software is somewhat unconcerned about this decision, we could just as easily used the software for any other value \u2013 but the business needs to harmonise the security and cost implications.We might also call this the Contract layer, as any value in electronic form is an agreement between the holder and the owner[35]. It is here that we design the contract that formalises the agreement between an Issuer and a user.Finally, on top of the value layer, which provides a structure for financial transactions, we can build our application. As we are concerned with Financial Cryptography, it is convenient to call this last layer the Finance layer. Here, we build an application that adds financial meaning to our designs.In the Finance layer, we construct any and all applications that might readily be useful to users. For example,And many more.In order to see the model in its descriptive role, I present an example, starting from the Finance layer and working down, by following the roadmap of requirements.In practice, the model is not a design methodology for setting and mapping requirements, but can be used to reverse-engineer an existing design, for the purposes of presentation and discussion of the mutually agreed contract between the builders and the stakeholders. The following description reflects such a process.Systemics, a company specialising in Financial Cryptography, built a system to trade financial securities[41]. The Ricardo system, as an application, required clients and servers to maintain securities, and they communicated using a value system suitable to manage securities and cash[42].As trials evolved into experience, and strategic analysis of the securities industry evolved into appreciation, if not wisdom, the following primary requirements were built up.These led to many subsidiary requirements:The following discussion concentrates on the value architecture of the Ricardo system built by Systemics, rather than the trading aspects. However, experience shows that trading becomes a tractable problem if the value architecture is solid.The requirements of the Finance layer result in a derivative requirement for a Value architecture, amongst other things. This Value architecture follows directly after the Finance layer, as the former defines the scope of the security requirements for the remaining layers.We developed a notion of instruments as follows:To meet many of these requirements, the notion of a contract for value was developed[43]. This document, which we call a Ricardian contract, documents an agreement between the holder of a security and the issuer of that security, and provides for the flexibility requirement by allowing many and arbitrary clauses to be included.It is both program- and user- readable, and is signed by the Issuer of the instrument as a binding agreement for any holder of units of that issue. By having a strong basis to determine the nature of the contract, in both human and program terms, we support the auditability requirement, and we can clearly identify the regime for resolution of disputes.Once set in stone with a digital signature, an identifier can be allocated, leading to efficient description in packets. Thus, this invention requires two things of lower layers \u2013 a signature form and a unique document identifier \u2013 which are addressed below.Once the Value context is defined, indicating the size and nature of instruments, we can address the Governance issues of payment systems and trading.These are substantially complex[44]. In order to preserve systems intact in the presence of active fraud in the non-technical domain, many disclosure and informational duties abound. In the Ricardo system, we address the governance layer in three main ways:Each of these is discussed below[45].In static governance, we ensure that the user has the contract, and that all concerned know that the user has the contract[46].In order to ensure that the Ricardian contract is always present and available to the user, and is continuously binding to the Issuer, we take the message digest of the document and use that message digest as the identifier of the instrument[47].Consider a message digest, for example, 9c7c9e7bb564224977aea8674623a37407b8f6ee being a large number of bits encoded in hexadecimal. The user cannot meaningfully interpret this string of apparently random information, so the software (and thus, the software engineer) is more or less forced to maintain a database that describes what the message digest represents. As the contract is readable by software, it makes a superior source of data than any other (such as an intermediate database that holds the contents) and thus we can reasonably assume, to the extent that the software can, that the user has the full contract available[48].The system will thus ensure that, to all practical intent, the user has the contract. This provides two cost savings, limiting both on-going support and the likelihood of litigation[49].Within structural governance, we consider the question of insider fraud, the theft of both digital value within the Financial Cryptography system and of any physical value that underlies the virtual value managed by the system.With any payment system, there is an ability to create new assets, or misdirect existing assets, all with no more work than a few button pushes. To address this, we use the approach of separation of concerns to address the agency problem of holding owners' assets, but protecting them from internal attack. This problem is normally handled by separating out management of day-to-day assets with the creation of assets in the system, and increasing the work required for any fraudulent transactions.The general schema that is advised to Issuers is as follows[50]. In order to limit the creation of value, for each issuance, a special account is designated as the mint, or the creator of value. This account is placed in the hands of a reliable professional source such as an accountant or lawyer, who will hopefully only have an interest in using the account under the probity of the governance regime.Then, a manager account is designated that receives any new float from the mint, and also returns any redemptions.It thus becomes the Issuer's responsibility to ensure that the mint account is rarely used, and then with full authorisation and wide scrutiny. Meanwhile, the manager's account is regularly used, but holds only limited amounts of value for day to day requirements.The above are general techniques that are supported within the Ricardo system, but are as applicable elsewhere. Certain features get specific support, such as value caps on accounts and target account limitatons.Note how these protection techniques that we use are partly outside the domain of the technical system. Rather than being outside scope, their discussion here is simply a reflection of the claims that the total security of the system is a holistic issue, and governance is the layer where we solve the security challenges that remain after we have attempted to solve as many as possible in the lower layers.Finally, in dynamic governance, we provide for monitoring of key values by the user community, and thus share the auditing burden. These values can be audited in an issued currency within the Ricardo system:It is also worth noting that when a currency is reserved by an underlying asset (for example, if a gold-denominated currency had physical metal escrowed to reserve it) then the above governance features should be mirrored for the reserves.That is, to continue the example of gold, there should be separate parties responsible for the ingress and egress of metal into storage, and there should be independent verification of the number of bars currently placed in escrow.In order to meet the conflicting objectives of privacy and flexibility, Ricardo uses a conventional accounting model with some additional features:Because of the top level requirement for cheapness, the accounting model was designed for complete reliability, right up to the support desk level. It does this by employing a group of non-obvious techniques:Using these techniques, the accounting model supports the Finance level requirement of being cheap to operate. If the client software is missing something, then it is a bug, and it properly belongs with the software developer, rather than being covered up as an Issuer help desk problem.In order to ensure that owners maintain rights to assets that are managed on the servers, the SOX protocol provides these three major features[56]:Each user creates key(s) which are registered with the server. These keys are as determined by Cryptography layer, below, and are required to provide a unique identifier.Value transfer is via three components:A key can be used to sign a payment order. This payment order can be directed to a target account, or be open (bearer), and it has a fixed amount of some determined type of value[57].In this sense, the payment is analogous to a cheque. It differs from chequing systems in that the SOX payment has no value until settled, whereas a cheque is expected to have value on signing[58].A payment order can be deposited to a sub-account. Settlement depends on a number of checks, such as funds in the source sub-account, and a valid payment order signature from the source key.The Issuer server returns the receipt, mentioned in the above Accounting layer.Finally, in order to cope with network failure, the SOX protocol includes a mail feature, that allows the server to communicate reliably with the client. Packets that must be delivered to the client are placed in the mailbox, and returned on every mail request. Each piece of mail must be signed for, and if not signed for, is simply returned again.In the context of the value transfer above, there is only one piece of mail, being the receipt.SOX is a flexible protocol. By replacing the deposit request, above, with trading requests, it can be used for market trades as well as settlements[59].In the trading context, requests that are implemented emulate standard market functions such as looking at the order book for an instrument, placing an order (buy or sell), monitoring the progress of an order and cancelling an order. The SOX mailbox is used for the return of orders (assets and results).SOX as a protocol spans both the Rights layer and the Software Engineering layer.In networking, every transmission must be considered as a contender for failure. As a corollary to this, relying on a connection-oriented protocol such as TCP will not guarantee reliability, as its promise is only that that the data that gets there is the correct data as sent[60].To cope with these problems, SOX asumes a datagram network only, and handles reliability itself[61].Secondly, it bases communications on a request model, with each request being independent of the next, and each request only being complete when positive feedback is received.Thirdly, SOX requests are idempotent, so they can simply be repeated until some confirmation comes back that one attempt has succeeded. Unique request identifiers are included and used to filter out retries.Fourthly, in order to implement SOX, a client must treat each request as unreliable. For example, when a payment is written by the current client, that payment is recorded as pending, which is eventually matched up with a receipt arriving from the Issuer.Or, the client gives the user the opportunity to cancel the payment simply by re-using the unique identifer, and thus stopping the lost payment ever settling. In this way, where it is impossible to guarantee a result, Ricardo extends reliability management out to include the user.Finally, SOX includes a comms layer that provides for key exchange for confidentiality and authentication purposes.The cryptography demanded by the upper layers includes:All of these algorithms are implemented as part of Cryptix, an open source project that was spun off by Systemics in 1996. Cryptography and the cryptographic techniques used in Ricardo are well discussed in the literature[62].The model works well in tackling and reducing the inherent complexities of Financial Cryptography. It does this by dividing the field into 7 areas, and providing an interconnection method (layering).Once a project is so layered, professionals within different disciplines can clearly deliniate those areas within their expertise, and those which call for other specialisations. Thus, lawyers can recognise the Governance layer as their bailiwick, and pay due attention to it. Other layers can be treated, more or less, as black boxes, interconnecting with requirements down and features up. Likewise, programmers can concentrate on Software Engineering and Rights, with more interest in Accounting than Governance.A project manager, with responsibility for delivery of a Financial Cryptography system, finds this even more powerful, as the model offers a natural checklist and vocabulary for coordinating the activity.As an analogue of the 7 layer ISO Reference Model, it also wins on easy familiarity with what we are trying to achieve.The designation of 7 layers does not, in and of itself, encourage the design or implementation of system components that fall neatly into one layer or another. The notion of a layer 3 protocol providing services to a layer 4 protocol simply does not work in practice[63].Likewise, this model is not a design methodology. The description of a top-down requirements process is illusory, and in practice, the requirements analysis is more modelled by continuing and volatile negotiations between the layers. Whilst it is descriptive to state that a requirement is bouncing up and down between layers one and five, inclusive, this does not give much assistance to a team leader in assisting a design process.It is easy to criticise any model, as by definition, a model falls short of reality. Here are some points:Does the set of layers describe Financial Cryptography accurately? Hettinga suggests, perhaps only partly in jest, the name cryptographic finance, implying that layers one to three may have greater claim to the original term[64].The 7 layer model is static rather than dynamic. Once described, it works, but how did we manage to construct it in the first place?Are there really 7 layers? Are the layers as described? About each of the different layers we can ask many questions, including some troublesome ones:My answer, today, is 'yes' to each, but only time will provide the real answer.The top-down requirements example of Ricardo seems to indicate a natural design flow or methodology, but in practice the design process does not follow that path.Experience has shown that concentration on Finance, and then Value is worthwhile. Then, the vertical flow breaks down; in particular, a lot of time is spent bouncing around the lower 4 layers in a negotiation for the best compromise, with occasional forays upwards in order to tune the requirements. Governance always seems to come last in the design process, as its contents are an admission of what the rest of the architecture has failed to cover.Layers one to four, up to Accounting, are fairly solid in terms of their disciplines, practices and methodologies. Layers five and up (Governance, Value, and Application) are less well-defined.This might represent a flaw, or it might indicate an intrinsically messy area. Perhaps coincidentally, the ISO Reference Model exhibits the same pattern.I believe that these criticisms are valuable in indicating that the model is promising, as they help to refine ideas, rather than destroy them.Ian Grigg can be reached at iang at systemics dot com. He is a founder of Systemics, Inc, a developer of Internet Financial Systems software. \u21a9This paper was presented at FC00 and is originally published in the Proceedings of Financial Cryptography Fourth International Conference, Anguilla, British West Indies, 21st - 24th February 2000. A web copy is located at http://www.iang.org/papers/.The model was initially inspired by discussions on the DBS mailing list, and was progressively refined in discussions with Twan Van Der Schoot. This paper has also benefitted from review remarks by Ian Brown, Zooko Journeyman and Rachel Willmer. \u21a9The term Financial Cryptography was invented by Robert Hettinga as a name for a conference held annually in Anguilla. \u21a9Ian Grigg, Virtual Finance Report, Digital Trading, November 1997. \u21a9Search on Google for ISO OSI Reference Model Seven Layer \u21a9It is mostly coincidence that there are 7 layers, and it may change if we find compelling reasons to add or subtract layers. \u21a9The Cryptix Resources Page lists popular cryptography books, including links for purchasing. \u21a9A large area of such problems, including the blinding property, is described in Rethinking public key infrastructures and digital certificates --- building in privacy Stefan Brands, ISBN 90-901-3059-4, 1999. \u21a9The blinding concept is most easily accessible in Achieving Electronic Privacy Scientific American David Chaum, August 1992. \u21a9An Introduction to Database Systems, Volume 2, by C.J Date, 6th Edition, Addison Wesley, 1995 \u21a9I studied with this text book nigh on 20 years ago, and it still appears to be the main text in the field of protocols and networking: Computer Networks, by Andrew S. Tannenbaum, 3rd ed., Prentice Hall, 1996 \u21a9A fullsome page of links to electronic purses \u2013 implementations of Rights protocols \u2013 is included in Leo Van Hove's bibliography. \u21a9I am indebted to Mark Miller for providing me with the name of this layer. \u21a9At the time of writing, the canonical example would be www.e-gold.com which provides identity-based access to currencies reserved in precious metals. \u21a9For example, the eCash (tm) tokens as implemented by eCash Technologies, Inc. \u21a9Originally presented in the Gary Howland, Development of an Open and Flexible Payment System. \u21a9Mark S. Miller, Chip Morningstar, Bill Frantz, Capability-based Financial Instruments, accepted by Financial Cryptography 2000, Anguilla, February 2000. \u21a9Systems such as Chipper and Mondex. Note that there is no need for a new hardware layer \u2013 the distinction here is that the hardware is supplied, rather than assumed. \u21a9For many more examples of theoretical approaches, see Financial Cryptography First through Fourth International Conferences, Anguilla, British West Indies, February 1997-2000. \u21a9For examples of approaches that have reached practical implementation stage, if not to market, see Edinburgh Financial Cryptography Engineering a new workshop that includes presentations of running code only. \u21a9Check any basic accounting text book for these terms. Google may provide some assistance on these terms. \u21a9As a wider comment, it is possible to model any electronic value scheme as a method of accounting. See Alan Tyree, The legal nature of electronic money.Whilst a valuable modelling exercise, caution is advised, as most conclusions drawn from such exercises are too broad. Specifically, institutional observers tend towards a line of logic: \"it can be modelled as a series of accounts, therefore it should be regulated like banking;\" such an approach is fraught with difficulties and unlikely to be satisfactory. \u21a9For general articles on the Governance aspects of Financial Cryptography, check John Muller's ABA site Electronic Financial Services Resources. \u21a9The Agency Problem:Also sometimes referred to as the principal-agent problem. The difficult but extremely important and recurrent organizational design problem of how organizations can structure incentives so that people (\"agents\") who are placed in control over resources that are not their own with a contractual obligation to use these resources in the interests of some other person or group of people actually will perform this obligation as promised \u2013 instead of using their delegated authority over other people's resources to feather their own nests at the expense of those whose interests they are supposed to be serving (their \"principals\"). Enforcing such contracts will involve transaction costs (often referred to as agency costs), and these costs may sometimes be very high indeed.A Glossary of Political Economy Terms Paul M. Johnson. See also Google. \u21a9Michael Froomkin's writings on Separation of Powers. \u21a9Robert Hettinga suggests some models in The Players \u21a9In Ricardo documentation, and also further below in the section on Structural Governance I suggest breaking up the system into 5 parties, Owner, Mint, Manager, Users, Operator. \u21a9See Jane Kaufman Winn's writings on the validity of current contracts in governance: Jane Kaufman Winn, Couriers without Luggage: Negotiable Instruments and Digital Signatures, South Carolina Law Review, 1998. \u21a9See the DigiGold Page for an example of a real time report on the currency balance sheet. \u21a9See the e-gold Examiner for an example of a real time report on reserves. \u21a9See Jane Kaufman Winn, op cit, for a classic description of the Certificate Authority industry's attempts to clean up a poor security model with an implausible contract. \u21a925 cents is a fair minimum for credit cards, due to the cost of these transactions. $500 is a popular upper limit imposed on smart cards by the threat model (actually, it is 500 of the local unit, for some obscure reason). \u21a9For a description of Individual Transferable Quotas \u2013 ITQs \u2013 describing instruments for quantities of fish stocks, see Policy, Fencing the Oceans A Rights-based Approach to Privatising Fisheries, Professor Birgir Runolfsson, Autumn 1998. \u21a9Ian Brown (ianb at acm dot com) points out that pollution is in fact a public bad. \u21a9Ian Grigg, Universal Value, work in progress. This is introduced later in the example. \u21a9For example, this was the target application of Cybercash Inc, First Virtual Inc, and DigiCash BV (now eCash Technologies Inc). \u21a9Digital Trading, op cit. \u21a9For example, see the so-called second wavers: Beenz, Flooz, Cybergold. \u21a9See Fencing the Oceans, op cit. Whilst not discussed in the article, there are a small number of marketmakers in Iceland that work the thin market in ITQs. For more background on fishing property rights, see The Ecological Implications of Establishing Property Rights in Atlantic Fisheries, Elizabeth Brubaker, April 1996. \u21a9Ian Grigg and C. Petros, Proceedings of Financial Cryptography, Using Electronic Markets to Achieve Efficient Task Distribution, February 1996. \u21a9Ian Grigg and Gary Howland designed the Ricardo system in 1996-1997. \u21a9The Ricardo system is currently in use for a series of metal based currencies managed by DigiGold. \u21a9Ian Grigg, work in progress, Universal Value. \u21a9Many designs of Financial Cryptography systems have limited Issuers to being banks, which allows the designer to assume away many complications. \u21a9This section is based upon Ian Grigg, Talk on DigiGold Governance, Financial Cryptography 1999, commercial sessions. \u21a9The same logic would also imply that the user must have access to dynamic trading information such as prices, but we pass over that here. \u21a9Having abstracted the contents from the identity of the document by taking a message digest of it, we can discuss value, from payment systems perspective, as being fully and uniquely defined by the message digest. This ensures that the Issuer of the security cannot change the terms of the contract in any way without offering to the user terms for exchange. \u21a9This also has a secondary effect of shortening the distance between the contract and the software that manages it, thus simplifying the design. However, the prime objective was, and remains, a system where we know that the user has strong access to contract information. \u21a9Such a scheme might not prevent the software engineer from providing a client application that misrepresents the contract. However, this would be an issue between the user and the software supplier, rather than the system itself, especially, the operators of the system and issuers of securities would clearly not be at fault. \u21a9This is described more fully in a FAQ question on Structural Governance \u21a9In order to force the client to maintain the data, the SOX mail facility, introduced in layer 3, requires signatures for all important documents such as receipts. \u21a9Or, more correctly, to treat such a support call as a bug, in that the client is not making the information available. \u21a9A signed request from the user has more meaning to the user \u2013 the client software must keep track of these as promises to pay, and in this sense, the system is analogous to a cheque system. \u21a9The receipt includes the authentication request supplied by the client in order to provide the chain of authentication back to the user. \u21a9In programming terms, stored balances are banned. The balances that are displayed by the software client are calculated on the fly, including every time the client redraws. Getting this right has proven to be a sizeable cost in development time, but it is believed that the requirements are valid and the costs are covered in the long run. \u21a9SOX is variously Systemics Open Transactions or Secure Open Transactions. It is discussed by its original author in Development of an Open and Flexible Payment System, Gary Howland, 1996, and also in an Executive Summary. An implementation exists in open form as a part of the WebFunds Project. \u21a9SOX provides a string or byte array that determines the type of value, which is open as an implementation detail. But, practically, this is the unique identifier for the Ricardian Contract as discussed in the Value layer. \u21a9Note the way in which SOX melds with the Internet, as implication of layer 2. When passing a payment to someone on the other side of the planet, that payment only has value if it is settled and cleared by the Issuer. Otherwise, the payment is an uninteresting series of bits, with similar value to any other random nonsense.In contrast, the passing of rubber cheques is illegal in some countries, and traumatic in most others. SOX payments are not cheques in that sense. \u21a9The value Issuers are distinct servers to market servers, it is just the protocol that is common. The protocol can also be used for other purposes, wherever a primary requirement is made for a reliable delivery. \u21a9The specific problem with a connection protocol arises when the connection dies. Did the last few bytes make it to the other end or not? With such protocols, there is generally no way to recover from this uncertainty without building an additional reliable protocol over the top of the first. Which of course raises interesting design questions that may lead to alternate paths such as connectionless protocols. \u21a9SOX packets can, and are, sent over TCP connections, but mostly so that firewalls may be easily navigated. \u21a9The Cryptix Resources Page. \u21a9Indeed, in my opinion, neither is it useful for networking. For critiques of the OSI 7 layer models, see M.A. Padlipsky, Elements of Networking Style, and RFC 874. \u21a9Robert Hettinga, email on dbs at philodox dot com. \u21a9Copyright \u00a9 1998 Systemics Ltd. All rights reservedEditor's note: Some links may be broken."}
{"prompt": "The Playdough Protocols", "completion": "Commercial security at the birth of writing, arithmetic, and religion in ancient Sumer (modern Iraq).It is five thousand years ago, and you pace fretfully in your office. Located in the temple of the great goddess Inanna in ancient Nippur (now in Iraq) you are buried, not in a blizzard of paper, but an avalanche of clay. You fret. You have entrusted a valuable cargo of sheep, barley, and beer to a crusty group of sailors from the Baba Temple in the nearby Lagash[1]. These navy types are far from pious devotees of the goddess Inanna and the great god Enlil with whom you are familiar.The sailors\u2018 job, and your payoff \u2013 take the goods down the Persian Gulf and across the sea to Mohenjo-Daro, in the valley of the Indus River (in modern Pakistan). There they will be delivered to your old friend, a trusted agent of Inanna, and sold to the locals for a very substantial amount of silver.Will the sailors get hungry and eat the sheep and barley? Party and drink the beer? Get nasty and poison the lot, throwing disrepute on the great goddess Inanna? Perhaps they will get clever and water down the beer \u2013 or get still more clever and resell your high-quality goods under the name of their crude god.You needn\u2018t worry so much. Long-distance commerce may be a novelty, but you have the clay.Nor, thanks to five thousand years of experience with the technologies of tamper evidence, need we worry so much in our modern era. The occasional embezzlement and rare but quite nasty poisoning occur far less often due to our technological and institutional descendants of the ancients\u2018 clay. And using the digital equivalent of seals, we can bring data integrity and unforgeable identities to online commerce.Terra cotta sealing (bottom) and rectangular stamp seals, Mohenjo-Daro, Indus Valley, c. 2,000 B.C. The central sign on the top seal may represent a house or temple and is a symbol that is often repeated on Indus seals with horned deities seated in yogic position. Courtesy harappa.com.Let\u2018s follow the professional archaeologists and distinguish between seals, the often cleverly carved cylinders or stamps that make the impressions, and sealings, the resulting impressions rolled or stamped on wet clay, and the clay they were impressed upon. Sealings of clay were wrapped around rope knots to seal bales of goods, and around the rims of wicker baskets and pottery jars to seal in their contents. Since these ancients lacked good locks, clay sealings were wrapped around door latches to seal rooms. The security provided \u2013 evidence of tampering, due to damage of the container itself or the clay that sealed it.Seals were carved from hard materials \u2013 usually stone but sometimes faience, glass, metal, wood, or bone. Sometimes sun-dried or baked clay itself was used. The Greeks and Romans used signet rings, their action ends shaped from metal or carved from gems, to stamp wax.The seal design was usually recessed, resulting in a raised impression; occasionally this was reversed. To creating a sealing, first wet clay was shaped around the plug of a jar, the rim of a basket, the knot of a well wrapped rope on a bale, or the latch of a door. Then the surface of the clay was thoroughly covered by the impressions of the seal. The Sumerians commonly used cylinder seals, repeating the pattern across the entire clay surface. Sometimes stamp seals were used for smaller surfaces. Finally, the clay was left to dry, in the sun if possible.While sun-dried clay could usually be remoistened and rewritten, it would have been very difficult to hide from a trained eye. Rejoining the breached container lid, knot, or latch and replacing the broken seal with a new, identical seal would have been, short of stealing the original unique seal carving, impossible to hide from the inspector. Looking for a particular seal impression and examining the container, the inspector could reliably tell whether the contents had been tampered with. The difference between an accidental crack, from dropping or hitting the object, and a breach that allowed the thief or adulterator access to the goods, would also be apparent. Ancient inspectors undoubtedly became experts at looking for clues to distinguish accident from fraud. In any case, a broken seal then as now indicated suspect goods suitable perhaps for the discount bin, but more normally for the trash. It also indicated error for fraud \u2013 and potential punishment.Cylinder seal (left) and its sealing (right), King Darius the Great, Persia, 586\u2013522 B.C., with weapons of warThe earliest stamp seals found were used in Iran in 5,000 B.C. Later on archaeologists can use both the trade in seals themselves, as well as the distances between seals and the corresponding sealings, to trace long-distance trade networks. One such set of seals were manufactured around 1,900 B.C. on two important island trading cities in the Persian Gulf \u2013 Bahrein and Failaka. These seals were traded all over the Middle East, and have been found at diverse and distant locations such as Susa in Iran , Bactria in Afghanistan, Ur in Iraq, and Lothal on the west coast of India. By 1,750 B.C. Common Style seals are found in locations ranging from Spain, to Mycenaean Greece, to Marlik near the shores of the Caspian Sea. These seals were made from faience, a less expensive material, and used by smaller merchants.[2]The first cylinder seals belonged to the now long dead civilization of the Sumerians, the inhabitants of Nippur, Lagash, and other cities on the Euphrates and Tigris rivers in what is now Iraq. They spoke a strange language \u2013 neither Semitic nor Indo-European, the family of languages spoken by many later civilizations and the most current inhabitants of the Middle East. Sumerian was an agglunative tongue, bearing resemblance to such diverse agglutinative languages as Turkish, Finnish, Japanese, and Dravidian. Indeed, it was probably some version of the latter tongue that was spoken by their neighbors, the early inhabitants of the Indus river valley. These Indus valley people developed, soon after the Sumerians, their own civilization and unique style of seals. Modern speakers of Dravidian languages are scattered all over the Indian subcontinent, including remnants in Afghanistan and a large number of Tamils in southern India. Seal impressions have been found in the ancient city of Harrapan, in the Indus River valley (modern Pakistan), that had been made by seals found in Lagash in Sumeria (modern Iraq). From 3,600 B.C. in Sumer, and a little later in the Indus Valley, we can find seals made out of a rare high-quality stone, lapis lazuli. These stones could only have originated from rather distant and inaccessible mines in Afghanistan.For the Sumerians a business protocol was also a religious ritual, and the reverse was usually true as well. In the Middle East seal breaking became one of the most important of these rituals, with terrifying spiritual consequences if the seal were broken by the wrong person or at the wrong time. Three thousand years later these poetic images had reached apocalyptic proportions in the writings of the early Christian mystic John. The grave religious powers that could be unleashed by breaking a seal are well illustrated by his book of Revelations, in which the breaking of the first four seals of a holy book release the Four Horsemen of the Apocalypse:6:1 And I saw in the right hand of him that sat on the throne a book written within and on the backside, sealed with seven seals.6:2 And I saw a strong angel proclaiming with a loud voice, Who is worthy to open the book, and to loose the seals thereof? \u2026A worthy deity is found, who starts breaking the seals and thereby loosing the Horsemen \u20136:5 When he opened the third seal, I heard the third living creature saying, \u201cCome and see!\u201d And behold, a black horse, and he who sat on it had a balance in his hand.6:6 I heard a voice in the midst of the four living creatures saying, \u201cA choenix of wheat for a denarius, and three choenix of barley for a denarius! Don\u2018t damage the oil and the wine!\u201d[3]The Sumerians used thin wires and flat ingots of gold and silver, carefully weighed in balance scales, rather than coins like the Roman denarius. Except for paying the price in coins rather than coils, the commerce of the Third Horseman would have sounded quite familiar to our Sumerian merchant.Wire ring and coil money, Sumeria, c. 2,500 B.C.The first documents ever written, in the 4th millennium B.C., were also about wheat and barley, and also sealed. Far earlier still, at least as far back as 8,000 B.C., archeologists have found even more alient artifacts \u2013 vast numbers of little clay tokens. In the first half of the 20th century archaeologists, looking for important artifacts of civilization like statues of gods and Moses-style law tablets, dismissed these tokens as some kind of trivia, probably game tokens or cheap unstrung beads. Now we know that these tokens led directly to what are now the very basics of our civilization \u2013 reading, writing, and arithmetic.Recall our merchant, entrusting goods to sailors. Not all goods could be sealed in a jar or small room \u2013 a flock of sheep entrusted to shepherds, for instance. And in some cases it was expected that goods would be have to be opened en route \u2013 for example, to be audited by a customs inspector. For this reason, a separate record of the goods was needed. Without writing, how was such a record created?Pebbles, shells, and other counters have long been used to count things. Without even knowing how to verbally count in order \u2013 some cultures do not have words for numbers above three \u2013 one can \u201ccount\u201d objects by placing a pebble, on a pile or in a bag, one for each object. One nomadic tribe in Africa[4] counts cattle passing through a gate by drilling furrows. As each cattle paces, a pebble is placed in the rightmost furrow. When there are nine pebbles in this furrow, and the tenth cow goes through the gate, the pebbles are removed from the first furrow and a single is placed in the next furrow to the left. This is a \u201ccarry\u201d operation, used in abacuses around the world and even used in modern computers. These nomads have, along with many other cultures, invented a kind of abacus, with a ones place, a tens place. A zero is simply an empty furrow. Many other cultures (though not this one) have taken this to the next step and used this abacus, in the form of pebbles on a board or beads strung on rods, to add, subtract, multiply, and perform other computations. Indeed, until the advent of our modern Arabic numbers, everywhere calculations were done by the abacus or fingers, not on paper.Clay envelope and tokens, Sumer, c. 3,400 B.C.In the ancient Middle East, these pebbles took the form of dried clay tokens. The clay was formed into pebbles of various shapes and sizes. Some represented sheep, some standard sized pots of barley, and so on. The number of kinds grew as commerce grew. Some represented one, five, or a dozen of the kind.Soon after 4,000 B.C., the clay tokens were combined with the idea of sealing to create bills of lading and warehouse receipts. To create a bill of lading for a consignment of sheep, the owner put in a one-sheep token for every sheep. Every time he counted five sheep, a five-sheep token could be substituted for a one-sheep token. Once the owner and the consignee agreed on the count, the tokens were placed in a wet clay envelope. The owner and the consignee rolled their seals over the envelope, then let it dry. The procedure for a warehouse receipt was similar. An owner of wheat or barley could consign his fresh harvest to the protection of a warrior-priest in his walled fortress. The receipt was tokens sealed in an envelope \u2013 when the owner got hungry, or wanted to sell to the hungry, or wanted the seed to plant next spring \u2013 he would take the envelope to the warehouse. The claimant and the warehouse operator would inspect the seal, break it, inspect the tokens, and then deliver the goods.It would be nice if one could learn the contents of the envelope \u2013 the number and kind of tokens \u2013 without having take the ominous and irreversible step of breaking the seal. Around 3,400 B.C. in Sumer, marks started appearing on the outside of these envelopes. These marks were simply made by the tokens themselves. The different shapes and sizes of the tokens created correspondingly unique impressions, and thus the same symbols.[4][5]. Such external marks weren\u2018t as secure \u2013 they could be erased, albeit not without detection by a well trained eye.As warehouse receipts and bills of lading became common, commerce diversified. So many different kinds and numbers of goods were involved that the shapes and sizes of clay tokens were growing out of control. What computer scientists call a \u201clevel of indirection\u201d was needed. With different tokens for one sheep, five sheep, one pot of barley, five pots of barley, and so forth, we get m*n different tokens, where m are the numerical denominations of the tokens and n are the number of different kinds of commodities. By creating separate tokens for the numbers and the goods, the number of different kinds of tokens were reduced to m + n, at the cost of up to twice as many tokens per envelope.This development wasn\u2018t entirely new. Abstract counting tokens, reused for sheep and people and pots of barley, are probably far more ancient. Nor were separate words for \u201csheep\u201d, and \u201cbarley\u201d new. What was new were the separate tokens for \u201csheep\u201d, \u201cbarley\u201d, to be used, like the counting tokens, in the bills of lading and warehouse receipts. The were still thought of as corresponding to the objects they represented, not the words \u201csheep\u201d and \u201cbarley\u201d, but it was a big step towards written language. Naturally these symbols also became external marks[4][5].The first written tablets, dating around 3,300 B.C. and again in Sumer, were simply these external marks, inscribed on clay tablets. To maintain the security properties of tokens in clay envelopes, some the tablets were themselves are sealed in clay envelopes.The evolution of writing proceeded from there. A hundred years later reed styluses were being used to badly mimic the clay token marks. Over succeeding centuries, scribes supplemented or replaced token-derived symbols with pictographs for the objects. The pictographs attempted to bring to mind the object visually. Both kinds of symbols became stylized as wedges, or \u201ccuneiform\u201d, optimized for the reed stylus. Still later, words represented by neither pictographs nor token-derived symbols come to be represented by a rebus. An example of a rebus in English is representing the word \u201cI\u201d with a pictographic symbol for \u201ceye\u201d. This gave rise to a semi-phonetic alphabet. From this evolved the Phoenician or true phonetic alphabet, which was in turned borrowed by the Greeks and Romans. We use the Roman alphabet.Evolving beyond clay tokens, accounting was the first use of the external marks and started to take a familiar form. Along with the tamper evident clay, the Sumerians developed a kind of virtual tamper evidence. It took the form of two sets of numbers. On the front of the tablet, each group of commodities would be recorded separately \u2013 For example on the front woudl be recorded 120 pots of wheat, 90 pots of barley, and 55 goats. On the reverse would simply be recorded \u201c265\u201d \u2013 the same objects counted gain, probably in a different order, and without bothering to categorize them. The scribe, or an auditor, would then verify that the sum was correct. If not, an error or fraud had occured. Note the similarity to tamper evident seals \u2013 if a seal is broken, this meant that error or fraud had occured. The breaker of the seals, or the scribe who recorded the wrong numbers, or the debtor who paid the wrong amounts of commodities would be called on the carpet to answer for his or her discrepancy.Checksums still form the basis of modern accounting. Indeed, the principle of double entry bookeeping is based on two sets of independently derived numbers that must add up to the same number. Below, we will see that modern computers, using cryptographic methods, can now compute unspoofable checksums.Breaking a seal still, but fortunately only quite rarely, can have implications that are apocalyptic \u2013 at least for the individuals involved. Tylenol in 1982 and 1986, Excedrin and Lipton Cup-A-Soup in 1986, Sudafed in 1991, and Goody's Headache Powder in 1992 all were tampered with by sickos who added cyanide to the product and killed people. This spurred a new emphasis on tamper evident plastic packaging which can now be found protecting a wide variety of the products we use.Everybody is familiar with shrink-wrapped plastic, a less secure but commonly used technology \u2013 as common as the ubiquitous price tag. Another favorite tamper-evident device is the seal used to protect pill bottles.Evidence bag. Courtesy Custom Specialties Inc. [no relationship to author].Bank employees, our modern descendants of ancient temple accountant-priests, still sometimes work in edifices designed to look like Roman temples. They carry cash, checks, and other valuables in tamper-evident clear plastic envelopes. Evidence of tampering comes either as a tear in the plastic, or from opening the bag normally. In the latter case, a seal (the same place you'd find the zip seal on a Zip-Loc bag) chemically alters, and words such as \u201cVOID\u201d or \u201cOPENED\u201d appear in large letters. When these bags carry unique serial numbers, inspectors at both ends can record the serial number while examining the bag for tampering. The unique serial number prevents the tamperer from simply transferring the contents from one such bag to another. Modern plastic bags with the altering chemical seal, used in conjunction with the tracking of unique serial numbers, provide a very strong kind of tamper evidence, and are used by high security institutions ranging from banks to the military to cryptographic certificate authorities. The evidence bags used by many police departments work the same way.Tamper evident tape on a cabinet door. Note the sequential number, which when recorded and checked detects the replacement of the original tape with a new one. (The security of the serial number assumes that this label is not easy to duplicate using a laser printer). On the right, the broken seal has left a difficult to remove mark including the word \u201ctamper\u201d. Courtesy tamper.com [no relationship to author].Many other kinds of security, from ancient to modern, can be thought of as providing a kind of tamper evidence. Laser-break and glass-break sensors can make an entire building trespass evident. Similarly, guard dogs bark to protect their territories, alterting their masters to visitors.One of the most high-tech kinds of security, cryptography, is no longer just secret writing, but has spawned a whole new family of mathematical functions to protect the integrity of digital data. These functions are quite analogous to the function of ancient seals.One cryptographic function, the hash function, acts like the Sumerian checksum described above. The difference is that the \u201cnumbers\u201d it adds up are the binary digits that make up text, images, or other data. A second difference is that, by using a one way function and very large numbers, it can make the checksum practically unspoofable. The way accountants normally use checksums, the fraudster can sometimes with some ingenuity guess what the input numbers are. With cryptographic hash functions, this is practically impossible for a human, and for a computer it would almost always take millions of years of brute-force guessing to reverse-engineer the checksum.Another cryptographic protocol, the \u201cdigital signature\u201d, resembles one of these ancient seals much more than it does a modern autograph. The protocol operates in two steps. In the first step, a piece of data is sealed using a hash function as describe above. This is analogous to surrounding a basket lid with clay. Then a reverse public key cryptography operation (mathematically equivalent to decrypting a message) is performed. This second step is analogous to rolling the cylinder on the seal to identify the sealer.The digital signature can be made only by the possessor of a private key just as a seal could be made only by the possessor of the unique seal carving. If the digital signature is bad, this provides evidence that the data was tampered with or the signature forged.Rhee, 1981 \u21a9Colon, Dominique, Near Eeastern Seals \u21a9Book of Revelations, Ch. 6 \u21a9Ifrah, Georges, The Universal History of Numbers, John Wiley & Sons 1998, pg. 73 \u21a9 \u21a9 \u21a9Rhee, 1981 \u21a9 \u21a9Schmandt-Bessarat, Denise, Accounting with Tokens in the Ancient Near EastMy thanks to Andrew Odlyzko and K. Eric Drexler for their insightful comments.Originally published on Nick Szabo\u2019s Papers and Concise Tutorials.Please send your comments to nszabo (at) law (dot) gwu (dot) edu"}
{"prompt": "Digital Cash & Privacy", "completion": "I agree with Anonymous that there are problems with the actual use of digital cash in the near term. But it depends to some extent on what problem you are trying to solve.One concern I have is that the move to electronic payments will decrease personal privacy by making it easier to log and record transactions. Dossiers could be built up which would track the spending patterns of each of us.Already, when I order something over the phone or electronically using my Visa card, a record is kept of exactly how much I spent and where I spent it. As time goes on, more transactions may be done in this way, and the net result could be a great loss of privacy.Paying in cash is still possible through the mail, but it is insecure and inconvenient. I think that the convenience of credit and debit cards will overcome most people\u2019s privacy concerns and that we will find ourselves in a situation where great volumes of information exist about people\u2019s private lives.This is a place that I could see digital cash playing a role. Imagine a Visa-like system in which I am not anonymous to the bank. In this model, imagine that the bank is granting me credit similar to a credit card. But instead of giving me just an account number which I read over the phone or send in an email message, it gives me the right to request digital cash on demand.I keep some digital cash around and spend it for transactions as I described in my previous posts. When I get low I send some email to the bank and get some more dcash. Every month I send a check to the bank to cover my account just as I do with my credit cards. My relations with the bank are very similar to my current relationships with the credit card companies: frequent withdrawals and a single payment each month by check.This has several advantages over the system which we are heading towards. No records are kept of where I spend my money. All the bank knows is how much I have withdrawn each month; I may or may not have spent it at that time. For some transactions (e.g. software) I could be anonymous to the vendor; for others the vendor might know my real address, but still no central location is able to track everything I buy.(There is also a security advantage over the ridiculous current system in which knowing a 16 digit number and an expiration date allows anyone to order anything in my name!)Furthermore, I don\u2019t see why this system could not be as legal as current credit cards. All that really differs in this system is the inability to track where users spend their money, and as far as I know this ability was never an important legal aspect of credit cards. Certainly nobody will admit today that the government has a vested interest in moving towards an environment in which every financial transaction is tracked.Granted, this does not provide full anonymity. It is still possible to see roughly how much each person spends (although nothing stops a person from withdrawing much more cash than he will spend in a given month, except perhaps for interest expenses; but maybe he can lend the extra digicash itself and gain interest on that to compensate). And it is oriented around the same customer/vendor model that Anonymous criticized. But I maintain that this model represents the majority of electronic transactions, today and in the near future.It\u2019s worth noting that it is not trivial to become a merchant who can accept credit cards. I went through this with a business I had a couple of years ago. We were selling software through mail order, and this makes the credit card companies very nervous. There is so much phone fraud in which credit card numbers are accumulated over a few months, then large amounts of charges made against them. By the time the user receives his monthly statement and complains, the vendor has disappeared. In order to get our credit card terminal we went to a company which \u201chelps\u201d startups with this. They seemed like a pretty shady outfit, themselves. We had to fudge our application to say that we\u2019d be selling something like 50% of the units at trade shows, which apparently counted as over-the-counter sales. And we had to pay about $3,000 up front, as a bribe, it seemed. Even then we probably couldn\u2019t have done it if we hadn\u2019t had an office in the business district.Under the digital cash system, this might be less of a problem. The main problem with digital cash is double-spending, and if you are willing to go with online verification (reasonable for any business which is going to take anything over several hours to deliver the merchandise) this can be completely prevented. So there is no longer any possibility of merchants collecting credit card numbers for later fraud. (You still have problems with non-delivery of merchandise, though, so not all risks are eliminated.) This might eventually make the system more widely available than current credit cards.I don\u2019t know whether this system could be used to support illegal actions, tax evasion, gambling, or whatever. That is not the purpose of this proposal. It does offer the prospect of improving personal privacy and security, in a framework that might even be legal, and that\u2019s not bad.Hal Finney\nhal@rain.orgHal Finney Home Page"}
{"prompt": "Bitcoin and Me", "completion": "Originally posted on BitcointalkI thought I'd write about the last four years, an eventful time for Bitcoin and me.For those who don't know me, I'm Hal Finney. I got my start in crypto working on an early version of PGP, working closely with Phil Zimmermann. When Phil decided to start PGP Corporation, I was one of the first hires. I would work on PGP until my retirement. At the same time, I got involved with the Cypherpunks. I ran the first cryptographically based anonymous remailer, among other activities.Fast forward to late 2008 and the announcement of Bitcoin. I've noticed that cryptographic graybeards (I was in my mid 50's) tend to get cynical. I was more idealistic; I have always loved crypto, the mystery and the paradox of it.When Satoshi announced Bitcoin on the cryptography mailing list, he got a skeptical reception at best. Cryptographers have seen too many grand schemes by clueless noobs. They tend to have a knee jerk reaction.I was more positive. I had long been interested in cryptographic payment schemes. Plus I was lucky enough to meet and extensively correspond with both Wei Dai and Nick Szabo, generally acknowledged to have created ideas that would be realized with Bitcoin. I had made an attempt to create my own proof of work based currency, called RPOW. So I found Bitcoin facinating.When Satoshi announced the first release of the software, I grabbed it right away. I think I was the first person besides Satoshi to run bitcoin. I mined block 70-something, and I was the recipient of the first bitcoin transaction, when Satoshi sent ten coins to me as a test. I carried on an email conversation with Satoshi over the next few days, mostly me reporting bugs and him fixing them.Today, Satoshi's true identity has become a mystery. But at the time, I thought I was dealing with a young man of Japanese ancestry who was very smart and sincere. I've had the good fortune to know many brilliant people over the course of my life, so I recognize the signs.After a few days, bitcoin was running pretty stably, so I left it running. Those were the days when difficulty was 1, and you could find blocks with a CPU, not even a GPU. I mined several blocks over the next days. But I turned it off because it made my computer run hot, and the fan noise bothered me. In retrospect, I wish I had kept it up longer, but on the other hand I was extraordinarily lucky to be there at the beginning. It's one of those glass half full half empty things.The next I heard of Bitcoin was late 2010, when I was surprised to find that it was not only still going, bitcoins actually had monetary value. I dusted off my old wallet, and was relieved to discover that my bitcoins were still there. As the price climbed up to real money, I transferred the coins into an offline wallet, where hopefully they'll be worth something to my heirs.Speaking of heirs, I got a surprise in 2009, when I was suddenly diagnosed with a fatal disease. I was in the best shape of my life at the start of that year, I'd lost a lot of weight and taken up distance running. I'd run several half marathons, and I was starting to train for a full marathon. I worked my way up to 20+ mile runs, and I thought I was all set. That's when everything went wrong.My body began to fail. I slurred my speech, lost strength in my hands, and my legs were slow to recover. In August, 2009, I was given the diagnosis of ALS, also called Lou Gehrig's disease, after the famous baseball player who got it.ALS is a disease that kills moter neurons, which carry signals from the brain to the muscles. It causes first weakness, then gradually increasing paralysis. It is usually fatal in 2 to 5 years. My symptoms were mild at first and I continued to work, but fatigue and voice problems forced me to retire in early 2011. Since then the disease has continued its inexorable progression.Today, I am essentially paralyzed. I am fed through a tube, and my breathing is assisted through another tube. I operate the computer using a commercial eyetracker system. It also has a speech synthesizer, so this is my voice now. I spend all day in my power wheelchair. I worked up an interface using an arduino so that I can adjust my wheelchair's position using my eyes.It has been an adjustment, but my life is not too bad. I can still read, listen to music, and watch TV and movies. I recently discovered that I can even write code. It's very slow, probably 50 times slower than I was before. But I still love programming and it gives me goals. Currently I'm working on something Mike Hearn suggested, using the security features of modern processors, designed to support \"Trusted Computing\", to harden Bitcoin wallets. It's almost ready to release. I just have to do the documentation.And of course the price gyrations of bitcoins are entertaining to me. I have skin in the game. But I came by my bitcoins through luck, with little credit to me. I lived through the crash of 2011. So I've seen it before. Easy come, easy go.That's my story. I'm pretty lucky overall. Even with the ALS, my life is very satisfying. But my life expectancy is limited. Those discussions about inheriting your bitcoins are of more than academic interest. My bitcoins are stored in our safe deposit box, and my son and daughter are tech savvy. I think they're safe enough. I'm comfortable with my legacy.\n[edited slightly]"}
{"prompt": "Intrapolynomial Cryptography", "completion": "Researchers have proposed a variety of \u201cclient puzzle\u201d or \u201cbusy-work\u201d proposals like hashcash, MicroMint, bit gold, and compute-cost postage to create independent currencies or make spamming costly. The mathematical implication of these proposals is that there is such a thing as intrapolynomial cryptography. Four motivations for intrapolynomial cryptography theory are (a) novel constructions such the aforementioned applications, (b) more accurate estimation of the computational cost of cracking a cipher, (c) it might be easier to prove lower bounds, rather than just conjecture them as is the case with superpolynomial (standard) cryptography, and (d) if there do not exist one-way functions, standard cryptography is intrapolynomial rather than superpolynomial.I propose the following formalization:In other words, there is no algorithm running faster than q(n,k)p(n) which can invert f for more than a negligibly small number of values.One can similarly define average-case, best-case, and worst-case k-degree benchmark functions, analogously to one-way functions. Open question (analogous to the open question in superpolynomial cryptography of whether one-way functions exist): can one prove (3) as lower and upper bounds for some function and k>=1 on some realizable machine model such as RAM-log?Strong and average case are most apropos to cryptography related applications. Unfortunately for these purposes we'd also need:Since this is at least very tedious, one hopes we can in practice get away with a short list which covers all plausibly implemented machine architectures. This might work where for example the total exposure from cracking a protocol is less than the R&D costs of designing and building a novel machine architecture to defeat it. Cryptanalyis would include discovering the machine architectures optimal for breaking an intrapolynomial cipher.There are at least two practical implications of the above analysis. One is that there is very little room for error in the analysis and implementation of compute-cost postage, hashcash, bit gold, MicroMint, and other such intrapolynomial cryptography schemes. Another is that, unless the opponent has a very low budget and is thus limited to standard personal computers, it does not make sense to analyze the security or cost of these schemes without reference to machine architecture. For example, spammers may be able to defeat compute-cost postage by using custom chips optimized for computing the particular puzzle function."}
{"prompt": "RPOW - Reusable Proofs of Work", "completion": "Archived website\nGitHubI'd like to invite members of this list to try out my new hashcash-based server, rpow.net.This system receives hashcash as a Proof of Work (POW) token, and in exchange creates RSA-signed tokens which I call Reusable Proof of Work (RPOW) tokens. RPOWs can then be transferred from person to person and exchanged for new RPOWs at each step. Each RPOW or POW token can only be used once but since it gives birth to a new one, it is as though the same token can be handed from person to person.Because RPOWs are only created from equal-value POWs or RPOWs, they are as rare and \"valuable\" as the hashcash that was used to create them. But they are reusable, unlike hashcash.The new concept in the server is the security model. The RPOW server is running on a high-security processor card, the IBM 4758 Secure Cryptographic Coprocessor, validated to FIPS-140 level 4. This card has the capability to deliver a signed attestation of the software configuration on the board, which any (sufficiently motivated) user can verify against the published source code of the system. This lets everyone see that the system has no back doors and will only create RPOW tokens when supplied with POW/RPOW tokens of equal value.This is what creates trust in RPOWs as actually embodying their claimed values, the knowledge that they were in fact created based on an equal value POW (hashcash) token.I have a lot more information about the system at rpow.net, along with downloadable source code. There is also a crude web interface which lets you exchange POWs for RPOWs without downloading the client.This system is in early beta right now so I'd appreciate any feedback if anyone has a chance to try it out. Please keep in mind that if there are problems I may need to reload the server code, which will invalidate any RPOW tokens which people have previously created. So don't go too crazy hoarding up RPOWs quite yet.Thanks very much -Hal Finney"}
{"prompt": "Negative Reputation", "completion": "An important and general problem seems to be that of tagging a negative behavior source for future recognition. The tag might be used for negative information shared publically (eg, credit ratings) or kept private (eg, kill files). The behavior source might be non-human (eg, recognizing virus patterns for the purposes of virus scanning). Where the behavior source is adaptable and self-interested, it has an incentive to spoof the tagging: a debtor to change names to avoid paying his debt, a virus to scramble its pattern to avoid scanning, and so on. If the tag carries a greater positive reputation (where zero is the reputation of a newcomer) this incentive is lost and the negative side of the reputation \u2014 the disreputation \u2014 must be borne.Can digital credentialling systems facilitate such negative reputation handling?Service-specific, aka local, nym reputation may not be able to accomplish such tracking of negative reputation. If a local nym accumulates more negative than positive credentials, it can simply be replaced by a newcomer local nym for this service, without harming the positive reputation capital of the other behavior source local nyms. Hostile sources can continuously spoof innocent newcomers. Counterparties lose the ability to determine a history of previous hostile behavhior \u2014 kill files, virus scanning, credit ratings, etc. fail.Chaumian credentials also give the credential holder control over the transfer of credentials between his local nyms, creating an incentive to show positive credentials and hide negative ones. To remedy this, counterparties can demand \"non-negative credentials\" (in a form such as, \"Alice in many transactions recorded by me in area X has never done bad things x,y,z\"), Non-negative credentials are limited to areas that can be well-tracked. One such may be credit ratings, as long as one is doing the bulk of one's credit transactions through is-a-person linked local nyms.Where Chaumian credentials are inapplicable, we might raise the cost of entry to be greater than that of a newcomer. This gives us two clearly defined reputation points to compare on an otherwise rather subjective scale: participation threshold and newcomer reputation. Both are subjective in the eye of the party choosing whether or not to participate in an activity with the nym.A participation threshold greater than newcomer reputation clashes with the desirable goal, that one be able to make a fresh start. For that matter, unless previous nyms and their positive reputations are linked to their new nyms, the pioneers cannot make a start, so that the institution itself cannot be started. Ditto for for institutional growth.Tags that bundle the results of a wide variety of transactions \u2014 global nyms, aka universal IDs, aka \"True Names\" \u2014 seem to provide the most incentive for parties to carry their negative credentials. Most people have accumulated enough positive reputation is some areas that it is well-nigh impossible for them to start over their entire lives as newcomers.A big problem arises with negative credentials when they are used, not merely to avoid engaging in a particular activity with a party, but for retribution against that party. Retribution may take some nonviolent online form, such as slander, denial of service attack, and so on, but the most worrisome form of retribution is a violent physical attack. Could we have digital tags that, while tracking negative behavior sources through the digital world, remain strictly unlinked to any kind of physical location data? Alas, we have several important systems, such as cellular phones, shipping addresses, etc. that provide such linkage.A big problem arises with negative credentials when they are used, not merely to avoid engaging in a particular activity with a party, but for retribution against that party. Retribution may take some nonviolent online form, such as slander, denial of service attack, and so on, but the most worrisome form of retribution is a violent physical attack. Could we have digital tags that, while tracking negative behavior sources through the digital world, remain strictly unlinked to any kind of physical location data? Alas, we have several important systems, such as cellular phones, shipping addresses, etc. that provide such linkage.The question may become one of deciding what of these three dimensions are most important, and how they can be traded off:Keep in mind too, that in practice these are evaluated primarily by a market evolving from its current state, rather than by abstract ethical philosophies.Robin Hanson has noted that in a world of global nyms, the use of a local nym may signal the hiding of negative credentials, so that the use of global nyms is in equilibrium. A further problem with local nyms is that our relationships are often not neatly compartmentalizable into standard service types, and even where they are we might like to expand them into new areas. I suggest that, at minimum, we will want to reveal progressively more local nyms to our counterparties as our relationships with them become closer and more co-exposed.While the global nym equilibrium may hold for many of our relationships, there may be plenty of areas where the privity benefits of localizing nyms outweigh the costs of being less or unable to differentiate newcomers from hostiles. (By \"privity\" I refer the entire general task of protecting relationships from hostile third parties; confidentiality and protection of property from theft are two examples of privity). For example, the preference-tracking service at www.firefly.com increases participation via the use of pseudonyms, and suffers little exposure from hostiles. On the other hand, credit transactions typically demand identifying information, because the contractual exposure typically outweighs benefits of privity.Global nym public keys, which have many drawbacks in terms of privity, may be the best way to track negative reputation, but they are no panacea. There is an important conundrum in an ID-based key system: the conflict between the ability to get a new key when the old one is or could be abused by another (key revocation), and the ability of another to be sure they are dealing with the same person again. This may also provide an opportunity for parties to selectively reveal positive credentials and hide negative ones. For example, a person with a bad credit rating could revoke the key under which that rating is distributed and create a new one, while selectively updating their positive credentials to the new key (eg, have their alma mater create a new diploma). Key revocation authorities might combine forces with credit rating agencies to avoid such erasure of negative history, but this gives them even more centralized control \u2014 not merely over IDs but over important elements of reputation associated with those IDs. This further violates the principles of separation of powers and segregation of duties, providing added opportunity for fraudulent issue or revocation of IDs along with fraudulent communication of reputation information.The current universal (non-cryptographic) key in the U.S., the SSN, is very difficult to revoke. Much easier to change your name. This policy is probably no accident, since the biggest economic win of global nym identification is the tracking of negative reputations, which revocation can defeat. As long as the SSN is a shared database key, not used for the purpose of securely identifying a faceless transaction, there is little need for revocation beyond the undesired erasure of negative history. Combining a secret authentication key, which must be revocable, with a public universal ID is quite problematic.Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 1996 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "PGP Web of Trust Misconceptions", "completion": "One of the key concepts widely used to describe PGP is the \"web of trust\". This brings to mind a network of connections between people who know and communicate with each other. Two people who want to communicate can do so securely if there is a path of connections in the form of signed keys that joins them.But this is not quite right. The fundamental fact about PGP key signatures, which is often misunderstood, is this:You can only communicate securely with someone whose key is signed by a person you know, either personally or by reputation.In other words, if I want to communicate with joe@abc.com, I can only do so if one of the signators of his key is a person I know. If not, I have no way of judging the validity of his key.This belies simple interpretations of the \"web of trust\". I may have signed A's key, A has signed B's, B has signed C's, C has signed D's, and D has signed Joe's, but this is of no value unless I know D. Only then can I trust Joe's key.This means that, in the \"web\" picture, I can only communicate securely with people who are at most two hops away in the web of connections. I can communicate with the people I know, and I can communicate with the people they know, and that is it.This is unfortunate, because the simple web model ties into some famous research which suggests that any two people chosen at random are only about half a dozen steps apart in the web of who-knows-whom connections. (This result is where the title of the movie \"Six Degrees of Separation\" comes from.) If you had a system which actually supported communications via such a web model, it actually would have hope of letting two people communicate who did not have a very long chain between them. But PGP, with a maximum chain length of two, will not allow this.What would have to be added in order to allow a true web of trust model to be used in a program like PGP? Basically what is needed is some way to judge the trustworthyness of signatures by people you don't know. This would most plausibly be provided by the people who had signed their keys. For example, if there were another type of key signature which did not only vouch for the person's identity, but also for his trustworthyness and care in signing keys, then a chain of such signatures could serve as the basis for a true web of trust. Obviously such signatures could not be given out nearly as easily as the kind we have now, where a glance at some stranger's drivers' licence is often all we get, but they could be given to close friends and those we know and trust.More elaborate systems might include numerical ratings of trustworthiness which would help to estimate the strength of any given path. The main point is that some information of this kind would be needed in order to allow communication with people distant in the web of connections.Without this, I think we will continue to have problems with PGP being unable to validate keys of people we want to communicate with. People will collect huge laundry lists of signatures in the hopes that whoever wants to communicate with them will know one of those people. Centralized key validators will appear (as in the case of the SLED service being started now, which will sign a key based on a signed check with your name on it). The result may be a choice between using an unsigned key or using one signed by some faceless bureaucracy, which is no better than the original PEM conception.(People may be confused by this essay because they thought PGP worked this way already. PGP does have a follow-the-web model, but that is only for following signatures. In the example above, where I wanted to talk to Joe and there was a chain to him through A, B, C, and D, we have to first suppose that I know and trust all of A, B, C, and D. Given that, what PGP can do is to determine whether I have valid keys for all of those people. It will notice that A has signed B's key, so it is valid. I know B and told PGP he was trustworthy, and he signed C's key, so therefore that one is valid. Similarly, I know C and I know D so PGP can follow the chain through them. Finally we come to Joe, whom I don't know, but because I know D and PGP followed the web to determine that D's key is valid, PGP can determine that Joe's key is valid. But again, that was only because I knew D and everyone else in the chain. The bottom line is still that I can only communicate with people who know someone I know.)Hal Finney\nhal@rain.orgHal Finney Home Page"}
{"prompt": "Scarce Objects", "completion": "A more intuitive and secure approach to programming with objects distributed across trust boundaries is presented. The approach involves scarce objects and software to support markets in trading scarce objects \"rights.\"Scarce objects are computational objects that like physical objects are finite and excludable, and force the client to either conserve or consume (use up) their own rights to use the object. References to scarce objects are bearer certificates with two key properties: (1) they are use-once or use-N-times tokens, and (2) like digital cash they are transferred using online clearing using \"spent lists\" to conserve the number of these scarce object references.Scarce objects, a.k.a. conserved objects, provide a user and programmer friendly metaphor for distributed objects interacting across trust boundaries. (To simplify the language, I will use the present tense to describe architectures and hypothetical software). Scarce objects also give us the ability to translate user preferences into sophisticated contracts, via the market translator described below. These innovations will enable us for the first time to break through the mental transaction cost barrier to micropayments and a micromarket economy.A scarce object is a software object (or one of its methods) which uses a finite and excludable resource \u2013 be it disk space, network bandwidth, a costly information source such as a trade secret or a minimally delayed stock quotes, or a wide variety of other scarce resources used by online applications. Scarce objects constrain remote callers to invoke methods in ways that use only certain amounts of the resources and do not divulge the trade secrets. Furthermore, scarce object wrappers form the basis for an online economy of scarce objects that makes efficient use of the underlying scarce resources.Scarce objects are also a new security model. No security model to date has been widely used for distributing objects across trust boundaries. This is due to their obscure consequences, their origins in single-TCB computing, or both. The security of scarce objects is much more readily understood, since it is based on duplicating in computational objects the essential intuitive features of physical possessions. Our brains reason in much more sophisticated ways about physical objects than about computational objects. Scarce objects are thus readily understood by programmers and end users alike. Scarce objects lower mental transaction costs, which are the main barrier to sophisticated small-scale commerce on the Net. Finally, scarce objects will solve for the first time denial of service attacks, at all layers above the primitive scarce object implementation.The intuitive physical metaphor of scarce objects gives scarce objects the following basic properties:Closely related to these is a social property of objects critical to the success of economies:Property rights and contracts are highly evolved methodologies for dealing with economic objects and each other across trust boundaries. Scarce object architecture can reuse this working paradigm, because it reuses the mental model of the physical world in which this security paradigm was invented.With scarce objects, any computation across trust boundaries will have these properties of atomicity, conservation, composition, and the accompanying clear delineation of rights and responsibilities. This model is rather restrictive compared to what we are used to within trust boundaries. However, it will much more readily keep programmers from writing obscurely insecure code, which is easy to do with either ACLs, capabilities, or cryptography. Furthermore, conservation (scarcity) and lack of externalities are the two major assumptions of microeconomics, the study of commercial transactions across trust boundaries. So the scarce objects security model allows us to inherit a rich literature of formal reasoning about such systems.Scarce objects are, in other words, online commodities. These commodities may represent, typically, rights (or expectations) to services \u2013 the right to use an e-mail or news service (or a component of that bundle of rights, e.g. the right to use that service\u2019s e-mail server), the right to upload or cache content, the \"right\" (here more like an expectation) to have e-mail read (digital postage to prevent spam), etc. Such service rights will usually be limited against the client by time or resource usage or number of invocations. When represented properly, by scarce objects, these services are conserved. Such \"rights\" or codified expectations are enforced against the server by reputation, by the \"physics\" of scarce objects, or both, in substitute for or in addition to expensive traditional legal means.Scarce objects may also represent unique or finite relationships between people and bits \u2013 names that correspond to addresses, ownership of trademarks, authorship of content, ownership of certain rights to content (which probably does not, for security reasons, include the right to exclude others from copying the bits), etc.Scarce objects are not a complete model of computation across trust boundaries. Indeed, there are many smart contracts that can be implemented with cryptographic protocols and/or secure hardware but not with scarce objects. What scarce objects provide is a straightforward basis for implementing, in an intuitively secure way, the anonymous commodity exchange economies formalized in microeconomics in a P2P fashion on the Internet.Another area important to scarce objects is in reasoning about supply chains. In distributed objects, the call graph is the supply chain. To stretch call graphs across trust boundaries, we must replace rigid client-server relationships with dynamically adaptable customer-supplier relationships. The ideal here is to create a rich toolset of exception handling across trust boundaries. Note that credit risks are a proper subset of supply chain risks. Ka-Ping Yee recently put the supply chain problem succinctly: \"be wary of return values from objects you don't trust.\"The scarce object architecture suggested here shares some things in common with capabilities, but it secures more kinds of resources and is far more affordable for users and programmers. Capabilities (along with ACLs) are a means of implementing access control. Access control simply deals with the first-level of issue of whether an entity has access or not to a given resource. If an entity has such access, this access is, as modelled or implemented by basic capabilities or ACLs, effectively unlimited in scope. Scarce objects, on the other hand, limit resource usage in three ways \u2013 first, by limiting the amount of resources used per invocation, second, by limiting the number of resources used per right (per ticket), and third, by limiting the number of tickets issued.A raw distributed capability system (i.e. what Mark Miller refers to as \"caps-as-data\", to distinguish from capabilities local to the TCB (\"object caps\") which have strictly stronger security properties) give out capabilities of infinite duration and unlimited invocations, cannot be considered to be a true principle of least authority (POLA) system. For an object reference to implement POLA, it must be finite in every dimension. A true POLA system never gives out more authority than is necessary and proper to compute the needed function. It is never either necessary or proper to allocate infinite resources, and usually it is not necessary to allocate large resources. The scarce object architecture is the first design for object systems to achieve finite authority, and to allow small allocations for objects that need only small amounts of resources. Scarce objects are thus the first architecture to make true POLA possible.Scarce object architecture depends on a distributed object architecture that makes minimal security assumptions. A good implementation strategy may be therefore to implement this model on top of E. No sophisticated use of its distributecd capability architecture need be made to securely distribute scarce objects; rather the resource-conserving features of scarce objects can be relied on for securing resources.A bearer right to invoke a scarce object method takes the form of a bearer certificate, or ticket. It can be generic, meaning a right to an N invocations of one of a set of similar or identical objects, or specific, meaning a right to invoke a particular object method in a unique way. Generic rights are fungible and can be transferred unlinkably, using Chaumian blinding.The general steps to build a scarce object are (1) define a normal object, then (2) wrap it in a layer that protects its public methods using tickets. Our sketch of the architecture here describes how this wrapping layer can work.The wrapping layer involves three different servers: a transfer agent (TA), a Provider, and an Issuer. The Issuer and TA operate like an accountless digital cash mint. The Issuer signs tickets. The TA clears the transfer of tickets for generic rights. Both the Issuer and TA have copies of the private keys (\"plates\") corresponding to each issue of generic right. A particular kind of generic right (e.g., a particular denomination of digital coin) can have multiple issues, usually ordered sequentially. Digital cash is a special case: money is the most generic of rights. Here is another example of a generic right, or class of fungible objects: \"A queriable SQL database with up to 10 MB of storage, and certain standard response time guaruntees\".It is a design option whether to combine the Issuer and TA into a single server (thereby reduce exposure of the private key) or keep them separate (thereby enable certain personell controls based on separation of duties). Distributed servers, described below, are an even better way to increase the trustworthiness of Issuers and TAs.The Provider is responsible for actually holding the object, which can contain unique state. It publishes a signed description of its scarce object method, describing a particular kind of generic right (e.g. in the form of design-by-contract pre- and post-conditions). The issuer and transfer agent then create plate(s) and prepare to issue tickets for the method.Any or all of these component servers can be distributed, using the methods described here and here. A distributed signature is used to issue tickets (M out of N must sign using a distributed private key for a verifiable signature to be produced). Such distribution greatly reduces exposure to breach of trust and thus lowers the mental transaction costs of reputation tracking.To implement exclusive transfers, the TA keeps a list of cancelled ticket numbers. A ticket is cancelled whenever it is transferred or used. The Provider instructs the TA when a ticket has been used, or alternatively they both write to a shared list of cleared tickets.The TA and Issuer see only classes of fungible objects. The Provider and users see particular instances with unique state. In the above example of a database generic right, the Provider sees a database filled with unique information while the TA and Issuer see only the generic description of the database object invocation methods.In contrast to the servers, the remote user of a scarce object wraps his object invocation stub with calls that trade for needed tickets (again using a market translator), send the tickets as needed with method invocations to those methods\u2019 Provider(s). In some (hopefully many) cases sufficiently identical generic services will be provided by competitors. Where this occurs a \"ticket client\" may also \"shop around\" in the sense that if the pre- or post-conditions of the method invocation fail, or if the invocation is otherwise detected as faulty, the ticket client will retry by invoking the competitor's method.The Provider server is almost just another ticket client to the TA, which like other clients can transfer or receive tickets. It special role is in informing the TA when tickets have been used thus should be cancelled (or, altrneatively, writing the cancelled ticket number directly to a list of cancelled ticket numbers that it shares with the TA). Only the Issuer can create tickets, and only the Provider can consume them.At the core of the Provider is the raw object itself, the set of methods that provide the defined services for scarce object clients. The Provider is the wrapper around this object. Besides its gatekeeping, ticket verification, and ticket consumption functions, the Provider can keep track of and inform the Issuer regarding resource usage.The Issuer in turn is the interface to the micromarket functions, especially the market translator described below. The Issuer may, for example, via a market translator, which incorporates the preferences of the person who operates the Provider, negotiate barter deals in which certain tickets are issued and exchanged for certain other tickets giving rights to invoke the counterparty's or a third party's scarce object methods. The negotiations might also be multi-party, i.e. auctions, and secondary exchanges for generic rights may also be developed for scarce object tickets. In turn, the market translator, to enable automated (low mental transaction cost) bartering operations, depends on the existence of reasonably liquid online exchanges of generic scarce object rights.The TA generates ticket supply only at the behest of the Issuer, and destroys it only at the behest of the Provider. All its own transfers conserve the supply of a particular generic right. The Provider is also responsible for the delivery of service to the client that satisfies the service description (contract, e.g. pre and post conditions), at which time the Provider \"deposits\" the generic ticket(s), i.e. adds them to the cancelled list.The Provider issues along with the initial generic rights ticket a signed affadavit, machine or human readable, describing aspects of the object which may be non-exlusive and unique, along with that instance's ticket number and the public key(s) of the generic right(s) for which it is valid. For example, it might say \"a database containing quotes of these two dozen listed stocks as of 12:22 pm Monday\", without actually containing those quotes. Often such description is worth more when bundled with generic exclusive rights, such as the right to a fast response time. The specific rights can elaborate in unique ways upon the generic rights, as long as these elaborations are not taken to define exclusive rights. The generic rights let the TAs garuntee exclusivity to users and conservation of resources to Providers, while the specific rights describe the unique state to any desired degree of elaboration. The Provider must be prepared to service any specific promise it has issued, as long as it is accompanied by the proper conserved generic tickets.This method of composing specific and generic rights, transferred as a bundle but with exlusive generic atoms cleared by different TAs, allows arbitrarily sophisticated rights bundles, referring to objects with arbitrarily unique state, to be transferred unlinkably. A wide variety of derivatives and combinations are possible. The only restriction is that obtaining rights to specific exclusive resources must either be deferred to the consumption phase, or transferred with online clearing via expensive communications mix.If the Provider wished to garuntee exclusivity to a specific right, transfer seems to require an expensive communications mix between Provider and transferee, rather than a cheap blinded ticket. For example, \"Deep Space Station 60 from 0500-0900 Sunday\" or \"a lock on autoexec.bat now\" demands exclusivity to a specific right, and thus seems to require a communications mix to unlinkably transfer. On the other hand, \"A one hour block on DSS-60 in May\" and \"the right to lock autoexec.bat at some point\" are generic and can be transferred privately with the much less expensive blinding, given a sufficient population of other ticket for this class of generic right transfered between the issuance and consumption of a given ticket.Clients can deal with the TA without a communications mix. They deal with the Provider via a communications mix. If both the initial and final holders failed to do this, the Provider could link them. If just the final holder failed to do so, the Provider could identify him as the actual user of the resource. Thus for full privacy generic transfers are cheap, and nonexclusive transfers are cheap, while specific exsclusive transfers and actually using the object seem to require the expensive communications mix.Here's a review of our architecture:Scarce objects, by creating a simpler and far more intuitive model of computation across trust boundaries, can make the distribution of objects on the global Internet a reality, just as the simplification of hypertext into HTML made the Web a reality.Click for larger versionThe mental transaction cost problem is one that underlies all markets \u2013 the mental effort it takes to shop \u2013 to map private preferences to prices to decide whether a bundle of rights is worth the cost. In particular this problem presents a severe barrier to micropayments and market-based resource allocation for networks and computers.The market translator is aimed squarely at solving, for the first time, this problem for Internet commerce. A market translator both enables and depends on online micromarkets to automate resource allocation among scarce objects. It will do so by enabling the following:The problem of \"translating\" between bearer contracts (which represent and secure rights to scarce objects) can be cast as a problem of translating between monetary currencies. For our purposes, a \"currency\" in a scarce object economy is simply any kind of bearer contract used for holding and transferring wealth, rather than for consumption by the holder. It is thus a \"collectible\" (or \"intermediate commodity\", to use Carl Menger\u2019s term). The market translator, incidentally, makes the O(n^2) prices in a barter economy, versus O(n) in a monetary economy, a far less important distinction.So let\u2019s look at currencies. Let's say small businessman Alice is negotiating cyberspace contracts with Bob, Charlie, etc. Typical of international contracts, terms can be denominated in a variety of ways. These are potentially unreliable: Joe-Bob's remailer postage, U.S. Federal Reserve Notes in their 1970s mode (or in 2003), Seychelles gold cache warehouse receipts, \"Asian Tiger\" currencies in 1997, and so on.Unreliable currencies can play havoc with:Each problem interferes with potential solutions to the other. On the one hand, picking one single best currency for all contracts concentrates risk. In some cases there is nothing close to a reliable currency, and in any case diversification is preferable. Without hedging Alice remains exposed to risks that more sophisticated traders can easily hedge.Another way of looking at it: there are no issuers in the world who are 100% trustworthy and 100% reliable. Lacking a security protocol to ensure that a currency retains its value, Alice needs risk management.On the other hand Alice, to plan her (personal and/or small business) budget and properly express her preferences, needs a simple, consistent long-term unit of account. Budgeting with a single fluctuating currency is bad enough, but if Alice denominates different expenditures and revenues in different currencies, her budget becomes an inconsistent mess. It's also unreasonable to ask a non-financial professional to worry about the finer points of exchange rates, hedging, etc.What is Alice to do? Old answer: Alice either hires, at a cost of both money and privacy, an accountant or financial planner, and may gain a few crude improvements. Mostly, she's out of luck: small businessmen have left most international trade to big corporations, whose finance officers partake in sophisticated hedging strategies.Proposed new answer: use a market translator to help Alice draft her contracts. This market translator should be useful for both normal law-enforced contracts and untraceable self-enforcing contracts, where the latter are feasible. In the following post I will sketch how a market translator can work.Automatic currency conversion, as done today by some credit cards and ATM machines, is a useful primitive kind of market translation. The casual reader (and user) can think of the market translator (MT) as a fancy kind of automated currency convertor, and get the basic gist of it. The MT serves to convert, hedge, and in general restructure the payment terms contracts negotiated in any manner.Our main novelty is to account for personal budgets, not in terms of any external standard of value, but rather in terms of personal accounting units (PAUs). PAUs correspond to what Alice can express of her personal utility. The MT determines Alice's static and and temporal preferences from the budget Alice already maintains (for example, her small business budget in Quicken). Additional preference specification forms may be provided beyond those of a normal budgeting program. For example, Alice\u2019s software preference settings, her behavior with keyboard and mouse, and similar clues might be usefully interpreted as economic preferences, for example with regard to where to allocate scarce screen real estate and network bandwidth.For convenience Alice's PAU might correspond to the local currency most commonly used by Alice. If most of Alice's budget items deal with online contracts negotiated via MT, then using the local currency is by no means necessary, and is undesirable if that currency is unstable.Here is a diagram showing Alice and Bob negotiating a contract using their market translators:One mode in which the MT can be used is to have Bob offer a take-it-or-leave-it binary contract, corresponding to the current retail practice of take-it-or-leave-it prices. In the mode pictured above, Alice and Bob negotiate back and forth. The negotation of the source contract terms will usually be manual. The \"source language\" will typically be a human readable GUI, while the \"target\" will be a standard formal contract language. If Alice and Bob can input preferences leading to automated negotiations, then a \"shopping bot\" and \"catalog bot\" respectively may be used. This is a layer above and beyond the scope of the MT. The MT is only a \"shopping bot\" in the restricted but important area of contracts composed of atomic bearer contracts \u2013 rights to scarce objects \u2013 to the extent that the price relationships between these bearer contracts are available from quoted markets.The MT acts like a computer language compiler. But it translates both ways, and in real time as Alice and Bob negotiate payment terms. So, for example, Alice changes a term in her contract, proposing to pay fewer Alice-PAUs for Bob's services. Her MT translates this into a series of payments and hedges: a sophisticated synthetic contract as obscure to Alice and Bob as binary code is to many programmers these days. This synthetic is constructed out of liquid market securities (bearer contracts) and derivatives of low transaction cost. A synthetic contract is naturally represented as a composite object, a part-whole hierarchy composing primitive contractual \"atoms\", such as securities and derivatives.Bob's MT reverse-translates the actual market terms into Bob-PAUs. Although they each agree to different looking amounts of payment, the visible structure besides amounts and the complete underlying contract is the same. They can be confident that when their preferences have been satisfied, their minds have met and they can commit to the contract.As a result, both Alice and Bob see the contract in terms of their own consistent personal utility units. All consideration of exchange rates, inflation risks, and so on is handled by the MT.Alice and Bob's MTs can make side conversions, hedges, and restructurings to balance their portfolios. These side hedges are not revealed to each other. Any binary terms which can be side hedged can be made almost arbitrarily distant from what Alice and Bob prefer financially. Thus Alice and Bob need not reveal their financial preferences to each other.(Note: For contracts with delayed payment terms, Alice and Bob determining the credit risk caused by each others' credit exposures is an important problem, but beyond the scope of the MT as I have described it).The whole set of Alice's contracts with all her counterparties constitutes her complete portfolio \u2013 not merely a segregated investment portfolio, but a complete portfolio encompassing all her finances. This portfolio is is represented as a composite of composite contracts, and forms the basis for all of Alice's financial planning, and for the automated portfolio rebalancing activity of the MT.The main data structure representing the contracts for analytical purposes is the chance/choice decision tree. This tree has two kinds of nodes, \"chance\" nodes which iterate through all material possibilities, and \"choice\" nodes where the optimal choice is made. The result is the expected value of a set of contractual terms. The trees can represent a large number of contracts with low resolution (lots of pruning and heuristics), or a simple contract with high resolution (all possibilities considered). Desktop computers are or will soon be fast enough to search through thousands of contingencies, and synthetic contracts composed of hundreds of atomic contracts, with delays less than Internet latencies. So the binary contract can be a very sophisticated synthetic, as long as its analysis is fully automated, and still conserve mental transaction costs.The MT relies on online, automated exchanges hosting liquid markets for fixed income securities and derivatives. These markets reveal the information the MT needs to properly hedge currencies. Market makers and arbitrageurs maintain these markets, ensuring the most accurate information on risk premiums, yield curves, and so on is available to MTs. Some information not automatically derivable from market prices might be made available online by financial consultants, in a standard format, downloadable by MTs for a fee.The source contract is normally negotiated and closed manually, as per normal shopping. The MT is a a \"shopping bot\", but only in the very restricted but important realm of finance related to payment terms. Sincethere should be no need for manual intervention in the hedging translation process. If such manual intervention is required, the system very quickly loses its appeal for most users.If the preference or market information is not available, or the securities and derivatives exchanges are not available, the market translator can revert back to simple automated currency conversion.The market translator thus solves a vexing problem faced by multinational small business, the hedging of payment terms using potentially unreliable currencies. More generally, the market translator built on a scarce object architecture will lower the mental transaction cost barrier to micropayments and micromarkets. It will translate skills and preferences into microrights and microduties for use in fine-grained allocation of resources and services \u2013 whether online e-mail accounts, online game collectibles, screen real estate, network bandwidth and caching, or a variety of other network objects which, thanks to scarce object architecture, become economic objects."}
{"prompt": "The Geodesic Market", "completion": "\u201cThe path-breaking work of Robert Hettinga was published in a series of newsletters issued by FT Virtual Finance Report during 1998-1999. Bob is well-known for starting the famous e$ and e$pam mailing lists, to which I was an early subscriber, and as the founder of the Internet Bearer Underwriting Corporation (IBUC). Along with fellow privacy stewards, Vince Cate and Ray Hirschfeld, he launched the world's first conference on financial cryptography, FC97, on the island of Anguilla.\u201dSince the invention of the telegraph, financial transaction settlement has had a problem: how do you transact business at a distance when the simplest way to execute, clear and settle a transaction is with an exchange of bearer certificates?Our current system of so-called \u2018book-entry\u2019 transaction settlement was invented in order to handle the problems caused by remote transaction execution and the subsequent need to physically exchange bearer certificates for settlement. We now have the means to return to \u2018digitally encoded\u2019 bearer settlement with a three orders of magnitude cost saving.Soon enough, the era of book-entry settlement, our way of representing money as offsetting debits and credits exchanged between the two parties of a trade through a hierarchy of trusted intermediaries, will be over.I think that the social and economic impact of the new alternative to book-entry settlement, digital bearer settlement, will be quite large, because, at the root of the status quo\u2019s book-entry transaction protocols is the need to involve government and regulation at the most intimate levels. Essentially, \u2018\u2026and then you go to jail\u2019 is the penultimate error-handling step in a book entry transaction.In the old days, before telegraphy, most financial transactions were done by trading bearer certificates, or tokens, of one form or another. Exchanging cash for a bearer bond would be a good 19th century example. Even trading bearer forms of equity was trivial and instantaneous: the offer, the acceptance of the offer, and the settlement of the transaction occurred almost all in one operation.With the advent of telegraphy and eventually telephony, it was possible to make the offer and accept the offer at a distance, but settlement had to wait until bearer certificates were physically relocated, sometimes over long distances and then exchanged. After all, you couldn\u2019t very well send them over a wire.The solution was to move all the certificates to a central trusted location, called a clearinghouse, and for the trading parties to swap debits and credits between themselves and the clearinghouse. It\u2019s pretty apparent that having the certificates physically locked down in the clearinghouse\u2019s vault becomes superfluous in such a scheme, because what really matters is the impartial arbitration of the clearinghouse in the case of a transaction dispute. All except for one thing. If someone lies or reneges on a book entry transaction, there isn\u2019t much that the other two parties can do except bar them from trading, which, of course, works in bearer certificates, but not nearly as well in book-entry settlement.So, we need several things to cope with nonrepudiation in book-entry settlement. First, we need the ability to determine who physically made what book-entry so we can find them and send them to jail for fraud if necessary. That\u2019s because book entries are inherently unstable, insecure, digits sitting in a database somewhere. Many people in Asia are familiar with commodities and derivatives traders who were capable of hiding fraudulent book-entries for long enough periods of time to bring down their respective firms, for instance. In cryptography we call this an authentication problem.So, besides authentication of the book-entries themselves, we need to secure the links between various charts of database accounts, first by authenticating the users of those electronic links, originally with passwords, then with cryptographic keys and signatures, and now with some combination of biometrics (finger or retinal prints, say) and digital signatures. And, second, by actually encrypting the links themselves so that no one can see what they are even if they can\u2019t change the authenticated data without someone noticing.Sorry for the long-winded explanation, but it\u2019s long-winded stuff, as most people who clear trades on the net for a living will tell you. Anyway, for all intents and purposes, you now know everything there is to know about the guts of electronic commerce on the Internet. When you punch your credit card number into a secure web page, pretty much all of the above happens, plus or minus the retinal scan.However, all this stuff about moving book-entries down encrypted pipes on the internet, including the much-heralded SET protocol for credit cards, is so much financial \u2018shovelware\u2019.Fortunately, there is much more that can be done with financial cryptography. There\u2019s a whole string of cryptographic protocols out there, beginning with David Chaum\u2019s blind digital signature patent in the middle 1980\u2019s. You can actually create unique digital objects which can\u2019t be forged if you handle them right (if you only exchange them on-line, for instance). You can attach any arbitrary financial value you want to these cryptographically secure objects as long as everyone else agrees with you, and, most important, you honor your agreements concerning their exchangeability into some other financial instrument. So, I call these objects \u2018digital bearer certificates\u2019, after the paper bearer certificates of yore, which I claim these crypto-blobs behave like, more or less.The fun part comes when you actually start to trade these things. The first thing you notice is that they settle instantly. I give you digital cash certificates, you give me digital bearer bond certificates. Trade over. Elapsed time, thousandths of a second. I can turn right around and take that bearer bond and sell it again, if I want. More to the point, I don\u2019t have to wait for my broker work out how to move my money to your broker through the clearinghouse, for their banks to arrange to pay each other, all of which takes days and costs lots of money. The cost of your on-line Schwab or E-trade transaction could move from being measured in dollars to somewhere in the sub-penny range, and probably less over time.Actually, these aren\u2019t account based protocols at all. So there ain\u2019t no Schwab, or Merrill Lynch, or Morgan Stanley, required. Well, not completely true. You still need financial intermediaries, no matter how small, to \u2018rent\u2019 reputation to a given transaction.As far as non-repudiation goes, I know that what you gave me is real because I can test it with the issuer. You can do the same thing. It\u2019s so trivial that I equate the act with the physical inspection each of us does, unconsciously or not, when we\u2019re handed a piece of cash. If I don\u2019t like what I \u2018see\u2019 (determined by the calculation of the cyptographic protocol, of course), I don\u2019t trade with you. I\u2019d say it\u2019s much better than detecting fraud after the fact, finding who made the offending book-entry, and apprehending, trying, and jailing the miscreant. Frankly, I\u2019d go one further and say book-entry settlement is so complicated and unwieldy that the only reason we have book-entry settlement now is because we couldn\u2019t shove paper down a wire back when telegraphy was invented.Finally, there\u2019s no real recordkeeping of transaction logs with digital bearer settlement. Like a pile of cash, you count it up, and that\u2019s what you have. There is no need for seven years of audit trails at up to six different transacting parties because you don\u2019t have to hunt someone down and send them to jail for reneging on a trade before it settles, and more frequently, to prove you\u2019re innocent should you be suspected of something untoward. You don\u2019t need a lawyer or an accountant to keep you out of jail at tax time for making the wrong book entry somewhere.In fact, you don\u2019t care who gave you what money as long as they\u2019re happy with what you gave them in exchange for it. Reputation becomes the most important thing there is, because damaging someone\u2019s reputation is your only recourse in a world where your digital signature is your only identity. The threat of blackballing is in fact a very effective fraud deterrent, and once a digital reputation is trashed, it takes time and higher transaction risk premia to build a new one. To quote J. Pierpoint Morgan on the subject, \u2018I wouldn\u2019t buy anything from a man with no character if he offered me all the bonds in Christendom.\u2019Once we get to digital bearer bonds, stocks, and derivatives thereof, the world starts to change considerably. However, I still claim that reality is not optional. If you reduce the cost of settling a transaction to effectively zero (okay, past the last basis point but not zero), then the financial markets are going to figure out how to use the technology. Not only is it cheaper, but by being cheaper, it allows for smaller and smaller publically held entities. And automated financial intermediaries. The asset sizes of various trades could get much smaller, but, in addition, I claim, that because trading of financial instruments can happen so quickly, efficiently, and by so many self-interested actors, it\u2019ll probably be the way money is raised for very large security issues and for very large projects. Maybe Intel\u2019s inevitable $10 billion chip fab, for instance, will be floated into a market \u2018swarm\u2019 of financial intermediaries. Microintermediation, instead of disintermediation, in other words\u2026Okay. I\u2019ve now walked you up the edge of the abyss, and pushed you over the cliff, and, you\u2019ll notice, you didn\u2019t get hurt at all. That\u2019s important to think about, because sometimes being quantitatively cheaper has qualitative effects, but, for modern society at least, the future is no different from the past, except that we\u2019ve figured out how to live better. I expect if we can blow the doors of the cost of financial services with digital bearer settlement, the world will be a much better place to live in, indeed.Back to table of contentsWhen I\u2019m working on a problem, I never think about beauty. I think only how to solve the problem. But when I have finished, if the solution is not beautiful, I know it is wrong.This is the first of a series of articles Duncan Goldie-Scot has commissioned me to write on the future of financial technology in an age of ubiquitous internetworks, Moore\u2019s law, and strong financial cryptography.I\u2019m calling this series The Geodesic Market, in the spirit of a \u2018popular\u2019 book I\u2019ve in the works named, oddly enough, Beyond Civilization: Life in a Geodesic Society. Actually, the core technology we\u2019re going to talk about is a group of financial cryptographic protocols I have termed digital bearer transaction settlement, which is the title of another book I\u2019m working on.When I was a teenager in the 70\u2019s, my best friend Jeff Blanton and I zealously devoured all of Stewart Brands\u2019 Whole Earth \u2018Domebooks\u2019. Back in 1974, when capitalism was the farthest thing from our mildly drug-addled minds, who would have thought that \u2018Bucky\u2019, R Buckminster Fuller, the greatest designer since Leonardo, we thought, had discovered not just an easy way for freaks like us to build cheap housing and squat on someone else\u2019s land, but that he had actually discovered the way that society, mapped as always to our communication topologies, would look in the not too distant future.Buckminster Fuller, for all his latter-day attempts to solve global resource allocation by good old fashioned top-down hierarchical industrial centralism, might not have imagined that the economics of semiconductor switching on telephone networks would eventually create giant, decentralized, capital markets. Markets so powerful that they would make the most out-of-control, rapacious 19th century industrial trust look like the most bucolic feudal guild. On a feast day. With their feet up. Capital markets operating on a network topology almost identical to the geodesic structures my friend and I were all so enamored with back in the days of the Allman Brothers, Levi\u2019s Big Bells, and ubiquitous low-yield psychochemicals.Even more ironic, you and I are going to raucously cheer these new geodesic markets on, as they surfact large concentrations of financial information and capital into fractally smaller and smaller bits, microintermediating it all like so much grease in soapy dishwater, in an instantaneous transnational market for capital. We\u2019re going to cheer these new markets on because they\u2019re going to make us so damned much money.These market will operate, finally, under the control of economics, instead of the confiscatory \u2018policies\u2019 of aristocrats or nation-states. Nation-states will eventually be as ceremonial as modern-day constitutional monarchs. Like the way physics and philosophy got out from under theology at the end of the dark ages, economics will no longer be the handmaiden of politics in a geodesic market.The fun part is, it\u2019s inevitable. It will come from the collapse of microprocessor prices, the 50% decline every 18 months that is Moore\u2019s \u2018Law\u2019, more an observation of the human ability to learn than any physical law. The geodesic market will come from the ubiquitous geodesic internet those prices create, and, in a remarkable reversal of history, a reemergence of the kinds of transaction settlement methods thought to be killed by the telegraph, and, ironically, mainframe batch computing.A geodesic market will use digital bearer transaction settlement protocols, perfect pseudonymity, and reputation sanction on ubiquitous public networks, instead of book-entry settlement, audit trails, and la, on the closed, private networks that we now have.Stunning? Outrageous? Preposterous? Before you click away in disgust, remember we only have what we use now because it was cheaper than what we used to use. Hence you and I don\u2019t go down to a bunch of merchants in the City to trade paper cash for paper shares anymore. I am perfectly serious. With financial cryptography and digital bearer transaction settlement, we can do perfectly safe, rational business on the internet without lawyers. Or, for that matter, cops.In addition to transaction costs three orders of magnitude cheaper than book-entry settlement (yes, past the last basis point: it\u2019s time to pick a new measurement unit), you will have perfect financial privacy as a happy accident of the same technology which drastically reduces transaction prices. Just like requiring the privacy-invading physical force of a nation-state in our very transaction clearing processes was an unhappy accident of book-entry settlement.All of this will happen with more non-repudiation and more asset safety features, including seemingly impossible things like limited liability and shareholder voting.The reason we have database marketing, book-entry taxes, (like income, capital gains, value added, and sales taxes), and book-entry regulations, (like, well, practically all regulation, these days), is because the book-entries are there.We need those book-entries in order to prevent repudiation of transactions. And, to enforce rules against a transaction\u2019s proven repudiation, we need the police. So, if you don\u2019t need book-entries, you can\u2019t have that other stuff, including, as Doug Barnes of C2NET likes to say \u2018\u2026and then you go to jail\u2019 as the error handling step in your transactions protocol.Impossible? If we can do digital bearer transactions, safely and anonymously over the internet for, say, 1000 times cheaper than book-entry settlement, what do you think will happen?As a brief preview, let\u2019s take a look at the things you can do with digital bearer settlement. Not surprising, it\u2019s everything you can do with book-entry settlement, and more.Consumer Debt: Instead of using a credit card, imagine issuing personal bearer bonds. Whole bond issues, actually. Microintermediated, by, you guessed it, a syndicate of micro-underwriters, living in the ubiquitous internet, all of whom, like under- writers always do, intermediate the market\u2019s loan of money to you based upon your reputation for repayment.Digital Cash: Since most people pay off their credit card purchases within a month after purchase, you will be relieved to know that instead of having to hassle with a credit card bill just to cover your normal monthly purchases, and the lack of privacy which goes with it, you will be able to use digital bearer cash, which will be as safe to use as checks or a credit cards are now, all without interest, or at least annual fees.The main reason you\u2019ll use digital bearer cash is, however, that eventually there\u2019ll be no float on your checks or even your credit cards. Notice how debit cards are cheaper already to use than credit cards, and that merchants are starting to see the advantages of getting their money without chargebacks hanging over their head.This is so fundamental a process that it should be a law of finance or something: the closer an electronic book-entry transaction system gets to instantaneous, the more digital bearer settlement becomes financially necessary. As a friend at a large IT consultancy in Cambridge (Massachusetts) likes to say, \u2018Real-time gross settlement is digital bearer settlement.\u2019Capital Markets: Instead of purchasing a stock through a broker with limited, hierarchical, almost oligopolistic access to the capital markets, you\u2019ll be able buy your digital bearer bonds or shares in public, or at least privately, using public networks. The internet is the equivalent of the old buttonwood tree on Wall Street, as I once wrote in Wired. I show up on the net with cash, you show up with your bearer shares, we exchange the two, and the trade is over. Execution, clearing and settlement, all in one step. Anonymously, because it\u2019s cheaper. That\u2019s the beauty of digital bearer settlement. You can do this for any financial instrument, debt, equity, or derivative.Internet Resource Allocation: Also, there are the things you can do with digital bearer settlement that you just can\u2019t do any other way. It\u2019s easy to imagine very small packets of digital bearer cash \u2018buying\u2019 a message across the internet, with each router buying packet switching low, and selling it high. Look, Ma, no human hands: No \u2018peering\u2019 arrangements, probably no network \u2018engineering\u2019 either, in the long run, as the internet becomes, like any free market, a complex self-adaptive system. I joke about \u2018picomoney as processor food\u2019. \u2018Micromoney mitochondria\u2019. Auction markets for bandwidth, certainly. Maybe for the guts of the machine itself, memory and processing time. All you need is Moore\u2019s Law, fast enough processors, and, of course, digital bearer financial cryptography protocols.Utilities: But, wait, it gets worse. You can pay for electricity, in cash, as you use it, down, of course, the same wire you got the electricity from. You can pay for roads as you use them, perhaps every few hundred yards or at every intersection. Like you can on the internet, you can pick the cheapest or fastest route to your destination. So much for \u2018public\u2019 roads. Just about everything you think of as a \u2018public service\u2019, or a \u2018natural monopoly\u2019 may be reduced some day to a continuous cash-settled electronic auction between competing parties. Moore\u2019 s law creates diseconomies of scale and geodesy. Hierarchy and economies of scale are a function of expensive (human) information switching.Geodesic Warfare?: Even force can be auctioned off and sold, same as it ever was, only this time to the highest microbidder. Imagine your land covered with semiautonomous landmines, keyed to your digital signature, which only go off when you tell them to. No, don\u2019t imagine them taking bribes to change sides. It\u2019s real. Someone at the US Army War College wrote a paper on just such a scenario four years ago. Of course, whether we\u2019ll need state-funded armies in a world where force has been disintermediated to such an extent or where taxes might be \u2018optional\u2019 is an entertaining proposition.So, who knows what the future\u2019s really going to look like. I may almost have my videophone now, but I have yet to see a (useable!) flying car, for instance. However, there\u2019s one thing we can be certain of. Information and knowledge will be developed and sold in much cheaper and smaller bits than we do it now. The prices for industrial goods will fall in a geodesic economy just like agricultural goods and raw materials did in the industrial economy.Just how far it goes is limited by Moore\u2019s Law. Moore\u2019s Law also enables the ubiquitous use of cryptographic financial protocols, like Chaum\u2019s original blind signature algorithm for digital bearer certificates, or the one for Rivest\u2019s MicroMint micropayment protocol.This series of articles is about how those markets, well capital markets, will come to be, how they will operate, and what actors will probably succeed in those markets.Next month I\u2019ll discuss geodesic networks and why I think they create geodesic social institutions like geodesic markets, how trade and money, how human society itself looks when viewed historically through the lens of their communications architectures. Then, I\u2019m going to talk in laymen\u2019s terms about the financial cryptography underpinning digital bearer transaction settlement, and then survey some of the different kinds of digital bearer settlement protocols on the market and in the labs at the moment.After that, I\u2019m going to apply these different protocols to different pieces of the capital markets we now have, and show you what the world looks like in a geodesic market for capital.Back to table of contentsIn this second instalment of the Geodesic Market, I\u2019m going to show how to underwrite digital bearer securities, using cash as an example.The business model I\u2019m using should be familiar to anyone who\u2019s been in the securities business for more than 20 years, and especially to anyone who\u2019s studied financial history. There\u2019s no surprise in that. We have 5,000 years of experience with bearer transactions. There\u2019s nothing new, except the cryptographic protocol, to worry about, and we\u2019re not going to talk about cryptography here in any detail.Another nice thing about this model as applied to cash is that it will be possible for people to convert their money to digital cash in and out of their own bank accounts, just like they can for paper cash. The underwriter, as I call the issuer of digital cash, becomes the internet equivalent of a third-party ATM machine, something everyone\u2019s familiar with.Because of this modular plug-and-play approach, it\u2019s pretty simple to obey all the rules we currently have about handling cash, while dramatically reducing the cost of cash transactions in the process.So, let\u2019s get started with a look at the players in this market.A consumer is someone who buys a piece of digital cash from a financial intermediary, an underwriter, in exchange for some other kind of money, a change in a bank account balance in this case, in order to effect a transaction on the net.A merchant is someone who accepts a digital bearer certificate in payment for something else.Of course, I hate the use of the words consumer and merchant because they don\u2019t describe geodesic peer-to-peer transactions very well, but the banking world understands them perfectly, like they do underwriter or trustee or custodian, so I use them here.The underwriter issues digital bearer certificates, and is fiduciarily responsible for exchanging them into other forms of money, again a bank account balance change, held by a custodian in a reserve account. Someday, of course, the reserve assets collateralising an issue of digital cash could be some other digital bearer asset.The second most important thing an underwriter does is to verify, at every transaction, that a given digital bearer cash certificate hasn\u2019t been double spent, copied by someone and spent twice. After that, the underwriter issues a brand new signature- blinded certificate to the person accepting the cash in payment. If the exchange fails at any point, so does the transaction, and the person offering the cash is prevented from double spending it, thus preventing repudiation of the transaction at execution time. Cheques, credit cards, or any book-entry transaction can\u2019t offer that security. Even with on-line validation for fraud, the merchant is still at risk of stopped checks or chargebacks.Finally, the most important thing an underwriter does is to market its certificates to the world. Which, if you look at an underwriter in the capital markets, is exactly what they do for both primary and secondary transactions, and that\u2019s why I use the label here.The original DigiCash ecash mint at Mark Twain Bank was a used 486 machine, just to give you an example of the hardware cost of being an under- writer. Eventually underwriting may be automated to the point of processor husbandry in the same way that one tends a web or router farm today, but it should always be done by a separate financial entity other than the trustee.A trustee, or custodian, holds the money reserving an issue of digital cash, on behalf of the cash certificate holders, in a bank account, though someday the reserve assets could be held in bearer form under the trustee\u2019s control. Like bond trustees or mutual fund custodians, the trustee operates according to an agreement, like a bond debenture, between the underwriter and the certificate holders. This agreement could specify fees and, most important in the early adoption process, reserve ratios.So, while the underwriter is the direct financial intermediary, and keeps the interest which accrues on the reserve account, the trustee risks their reputation by holding the reserves, is compensated for it, and controls that risk by making sure that the reserve agreement is adhered to.Put simply, there is no way to to get exchangeability of digital bearer securities into book-entry assets without a genuine, fully regulated trustee/custodial bank, which, in my opinion, is why we don\u2019t have internet digital bearer settlement today.The holders of the blind signature patent, and other protocol inventors, have a hard time understanding this. DigiCash, as the canonical example, will only license their patent to a single bank in a single country, and not to any one else, forcing the trustee and underwriter to be the same entity, creating a very brittle and not very robust network of financial entities. The result has been market failure, for the most part. Having a competitive, many-to-many, underwriter/trustee market system fixes that problem completely, as we\u2019ll see in a bit.For all intents and purposes, the consumer, merchant, underwriter and trustee are really all the financial entities necessary in a market for a digital bearer instrument.There are other entities required to make this work, of course. There are developers of the software for that market and, most important, the inventors of the financial cryptography protocols, like David Chaum, Mark Manasse, Stephan Brands, Ron Rivest or Ian Goldberg.Developers can either sell their software directly to customers or merchants, or they can sell servers to the underwriters and the underwriters can give away clients to their users.Inventors can license their protocol to the market as a whole through the trustee. This way, trustees can take royalties out of a percentage of the underwriters\u2019 interest earnings on the reserve account, or from the fees charged when some other asset is converted into the bearer instrument in question, or some combination of both.With book-entry or bearer-collateralised trustees, this rewards innovation cheaply and easily. You don\u2019t even need patents to do it. Even with bearer-collateralised trustees, the inventor of the protocol still gets paid, no matter who or where he is. This, among other things, is part of the judge role I was talking about above. The trustee, who\u2019s in business to be fair and impartial, loses reputation capital otherwise.The consumer buys, from a software developer, or is given, by an underwriter, a wallet: a client application which allows the storage and disbursement of digital bearer certificates. Wallets will probably be specific to the cash-protocol used, and not to the underwriter using the protocol.With a wallet installed, maybe as a browser plug-in, the consumer goes to the underwriter\u2019s secure web page. The consumer enters, either by swiping a card or emitting stored information on her hard drive, the account and PIN number for her bank account just like she would at an ATM. The consumer\u2019s account information is probably blinded, so that not even the underwriter, or even the trustee, sees it as it goes through the trustee and onto the ATM network for authorisation.The consumer\u2019s bank sends an authorisation message back to the trustee, who notifies the underwriter of the reserve account change, who in turn disburses digital cash certificates to the customer in the amount of her request. With the exception of the issuance of digital bearer cash instead of paper cash, this is roughly what happens with a private ATM machine.This is all done for whatever fee the underwriter charges, in the same way traveller\u2019s checks are sold at a premium at the time of sale, or that a foreign ATM machine charges for non-customer transactions. In fact, redeeming it off the net at par like a traveller\u2019s cheque, and exchanging it free for other digital bearer cash online is probably fundamental for merchant acceptance.The consumer then uses the new cash to buy something from a merchant on the net. In theory, a merchant could do offline transactions, without involving a direct exchange and replacement of certificates from the underwriter, but they\u2019re ridiculously insecure from the standpoint of double spending.This exchange of certificates, this printing of new certificates at the time of each transaction, is still orders of magnitude cheaper than book-entry payment methods, and, since it\u2019s blinded by cryptographic protocol, the transaction retains its bearer quality. That is, the asset changes hands anonymously (on the net at least), it exists in only one place at one time, and the only proof required for non-repudiation is the certificate itself. Just like dollar bills, only three orders of magnitude cheaper than an internet debit or a credit card transaction.With the transaction over, the merchant can instantly spend his newly minted cash certificate somewhere else, this time for free, because the longer it stays on the net, the more interest it earns in the underwriter\u2019s reserve account, all at minimal cost to the underwriter.Or, the merchant can turn around and redeem the certificate at par through the underwriter, who in turn has the trustee clear the money through the ATM system to the merchant\u2019s bank in the exact reverse of the process which got the money onto the net in the first place.Notice, for the first time, it is technically possible to use the ATM system for a cash deposit from a foreign bank, in this case, from the trustee, on behalf of the underwriter, to the merchant\u2019s bank account. Finally, notice that, since the wallets will probably be free, anyone can get paid in cash over the internet. They only need a bank account to put money on the net or take it off, important in the early stages, but not nearly so as time goes on.It should be obvious by now that we\u2019re looking at a classic case of Metcalfe\u2019s Law. The more entities there are in this market\u2019s network the more robust and valuable it is.The model gives us a many-to-many universe of interdependent underwriters, trustees, software developers and protocols, all in competition with their peers to offer the best price, collateral, reputation, quality of execution, and so on. The idea is to create a ubiquitous geodesic capital market composed of efficient, instantaneously cash-settled auctions of fungible, non-branded, risk-graded, digital bearer financial instruments.The other thing the model creates is something I call microintermediation. Because of the information processing diseconomies of scale in Moore\u2019s law, we have lots of small, automated financial intermediaries, each one operating directly between a given buyer and seller. This, I believe, is the logical outcome of financial disintermediation, which, until now, has been about removing multiple intermediaries between a buyer and seller. As we\u2019re starting to see in the internet search engine market, we\u2019ll start to see a speciation of financial intermediaries, by financial instrument, risk, etcetera, all brought about by Moore\u2019s law. After all, no single processor in a geodesic network can handle all the traffic.Note also that everyone who puts money on to the net or takes it off is identified to the complete satisfaction of government regulators everywhere. Digital bearer cash is treated just like physical cash in the eyes of regulators, and is subject to the same regulations. There is no functional difference between a digital cash underwriter and an ATM machine. And, yet, on the net itself, transactions are perfectly anonymous.This is the ultimate paradox of digital bearer settlement. The transaction protocols are so strong cryptographically that you don\u2019t need identity to keep your trades from breaking. More to the point, you don\u2019t even need biometric identity to prevent fraud. A digital signature is persistent enough to actually attach a reputation to.We\u2019ll talk more about this, and about digital bearer bonds, next month.Back to table of contentsIf you read the last instalment of The Geodesic Market, you now know how to put digital bearer cash on to the net. Of course, you can put every type of financial instrument into digital bearer form, and this month we\u2019re going to look at debt, which is the simplest extension of the cash model I showed you last time.Of course, to issue debt, the borrower (or any other market actor, of course, except secondary buyers and sellers) needs a good reputation, and we\u2019re going to talk about that first.With much fanfare, I now trot out my favourite quote from J Pierpoint Morgan, the last major denizen of the bearer-settled financial universe.At the time he uttered this pearl of financial wisdom, Morgan was more or less on his deathbed, and was literally hauled in front of the US Congress to testify before he died.So, imagine yourself there, in a congressional committee-room in 1913, (one year after 1912, the year libertarian columnist Vin Suprynowicz says was the high water mark in American liberty) and there you are, looking at the only man in history to refill Fort Knox with the proceeds of a typically-oversubscribed European bond issue on the strength of his signature alone, after this very same Congress had spent that treasury empty in the first place.A man who single-handedly stopped several bank panics, one of them by while playing solitaire in one room of the Morgan Library, with a roomful of bank presidents arguing in the room across the hall, shuttling occasional proposals to him for his hoped-for approval over the course of a few days, all while Wall Street held its breath.A very old man, now. An old man, being commanded, upon contempt of the best Congress money could ever buy before or since, to tell them the ultimate secret of banking. The most important thing a banker had to have to succeed.Is it the right, um, \u2018family background?\u2019 they seem to ask this paradigm of New England WASPiness. The right school tie? Never mind that Morgan was tutored for the most part. The right secret society membership? Of course, Morgan wasn\u2019t much of a joiner, except that he ran the board of trustees of his church, and that of the Metropolitan Museum of Art, like he did the rest of his enterprises, with an iron fist.Morgan just scowls at them. His answer is very simple:\u2018Character.\u2019Our would-be congressional inquisitor was probably dumbstruck. He was surely some loutish turn-of-the-twentieth-century urban machine politician, or maybe a rural silver-shoes-on-yellow-goldbrick-road bimetal free-silver populist in extreme Dorothy-Gone-to-Oz Mode.Whatever he was, he was almost certainly hoping for a financial conspiracy story of Bilderburg proportions to put into the next day\u2019s muckraking headlines. And, I bet, this modern Torquemada couldn\u2019t believe his ears.\u2018Character?\u2019, he sputters. Like he\u2019d never heard the word before.Morgan puffs himself up to his full 5-foot-rotund-something, gives the man one of those famous withering glares over a rosacea-mangled nose.\u2018Sir, I wouldn\u2019t buy anything from a man with no character if he offered me all the bonds in Christendom.\u2019Parsing that language to account for, um, \u2018late nineteenth-century Episcopalian sexism\u2019, we get as clear a definition of the enforcement power of reputation as has ever been stated this side of \u2018Caveat Emptor\u2019.In other words, if you lie, I don\u2019t do business with you again. Ever.And, in the world Morgan found himself in, that kind of financial shunning was pretty much all anyone really could do.It was really ever thus, throughout the history of money, much less finance. Sure, you could go to your friendly local force monopoly, be they monarchical, tyrannical, empirical (in the manner of Napoleon, not Hume), or oligarchal (or, even, democratic, on extremely rare occasions), and you could try to get them to beat up someone who ripped you off. But, usually, that was way too much work. Said regional force monopoly had to actually find this person, and then apprehend, try and convict him, and, frankly, more likely than not, he\u2019s changed his name and venue and spent the cash you paid him for those bogus bearer bonds you\u2019re now holding, and, well, so sorry, sir, but them\u2019s the breaks.And so, to sanitise and paraphrase the immortal Bluto Blutarski of \u2018Animal House\u2019 fame, it was actually you who screwed up: you trusted this brigand to begin with. You believed he had character, a good reputation, in other words, and it turned out that he didn\u2019t, at all.This was true up to and including J Pierpoint Morgan\u2019s day, where, although you could use a telegraph to execute a trade on the New York Stock Exchange floor, you still had to bring in actual paper and swap it for some other actual paper to clear and settle the trade.Yet, oddly enough, reputation sanction, plain old fashioned shunning, worked just fine for over 5,000 years. Marvellously well, in fact.Though, we now know what happened to J Pierpoint Morgan\u2019s tidy little financial universe of men with good character. Tabulators and comptometers begat computers, and, next thing we know, we\u2019re all using wires and computers to move accounting entries around, my debits for your credits, and bang, financial transactions execute, clear and settle more or less electronically, modulo a tape swap and a batch job or two.And, now, all I need to buy something over the internet is to give you a credit card account to take the money out of, and, maybe, but not necessarily, a cryptographic authentication (obviously, I hate the current misuse of \u2018signature\u2019, much less \u2018certificate\u2019) to prove that it was I who told you where the account with the money in it was.Yet, there\u2019s a little problem with book entry settlement and clearing, and it involves that force monopoly I was talking about.When we have to make copies of our transactions and give them to a \u2018trusted\u2019 third party to keep us from lying to each other, that\u2019s pretty awful, and not only from the standpoint of simple privacy.More important, there\u2019 s something particularly insidious to freedom itself about just shoving around debits and credits, instead of physical objects, or, now, digital objects, when you pay for things or convert one asset into another.With book entry settlement, you have to keep a virtually perpetual audit trail, so that on a \u2018syntactic\u2019 level, you can prove the trade happened some indeterminant date in the future, and so you can prevent the other party from denying (that famous legal double-negative, \u2018non-repudiation\u2019) the trade ever took place. And, once you\u2019ve done that, it\u2019s real easy to use those records to call a cop and send that person to jail. Actually, you\u2019re forced to, for any of a number of reasons, not the least because the clearing/settlement lag is such that someone might have absconded before you knew what happened to your money, and giving the clearing house physical enforcement capabilities in meatspace would make cause undue competitive pressure on the sovereign\u2019s monopoly on force.Now you can see why book-entry transaction settlement requires very strict biometric identification for anyone who changes the book-entries themselves, or even those who order book-entries to be changed. Everyone else (us customers, in other words) must deposit in advance of any significant financial activity, as sort of hostage capital to whatever transactions we execute.Everyone under the jurisdiction of the SEC has their fingerprints on file, for a reason, not to mention their current name and address. Enough information to drive a totalitarian tyranny through, frankly.And, so, the real reason governments have grown to control such an increasingly huge part of our lives, through book-entry taxes (sales, VAT , capital gains, income) and regulation (think of a regulation which doesn\u2019t eventually rely on transaction audit trails), is because, we require government intervention in our economic processes, our very transactions themselves, or those selfsame transactions wouldn\u2019t occur at all. Book-entry settlement and the ad baculum argument at the core of the very idea of the modern industrial nation-state are intimately related. A tax on income is easy to enforce because you need force to make the income transactions execute to begin with. One hand washes the other. Pay packets with paper cash cost too much to handle when you can just issue cheques for people to deposit into mainframe-enabled chequing accounts.Seen from a network perspective, a book-entry transaction is about shoving a very insecure piece of data, a positive or negative integer, a debit or credit, down a very secure pipe. And, to get access to that pipe, you have to be physically, um, obtainable, to law enforcement at any point in time before, during, and after the fact, should you lie about it.With digital bearer settlement, we have turned that last paragraph completely on its head. With a blind signature cryptographic protocol, for instance, we can send a secure transaction, a strongly encrypted and cryptographically authenticated token (a digital bearer certificate, if you will), down an insecure pipe, the internet, in other words, and with the right software, that\u2019s the end of the transaction.We don\u2019t need biometrically authenticated access control to a proprietary secure network in order to shove an inherently insecure book entry back and forth out of someone\u2019s database of transactions and, by extension, their chart of accounts. We actually don\u2019t need to keep audit trails at all anymore, much less for years at at time, and, more dramatically, we don\u2019t even need cops to hunt down miscreants who \u2018break\u2019 our trades, either in execution, settlement, or clearing.Instead, with a simple exchange of digital bearer certificates, we can execute, clear, and settle the transaction all at once, and the cryptographic financial protocol, executed in software, simply won\u2019t operate unless all conditions are met for the transaction to occur.Which, oddly enough, is exactly the way a physical bearer certificate works: I show up with my cash, you show up with your paper bonds, we agree on a price, we inspect and swap our various pieces of paper, and we walk away. I know the bonds are good by inspecting them, you know the cash is good by inspecting that, and, frankly, we don\u2019t care who each other is. Ever.Now, with digital bearer certificates, we can do exactly the same thing on the net. That \u2018inspection\u2019 step now occurs when we test and redeem our cash or bond certificates with their issuers online, and, if the certificates can\u2019t be redeemed, the trade can\u2019t even execute.It stops before it starts. Nobody gets burned, frankly, except the criminals who want to double spend the certificates. The only people who even need a reputation in the transaction itself are the issuers of the respective digital bearer certificates involved, and not the buyers and sellers of those certificates in the secondary markets.And, of course, that \u2018reputation\u2019 we\u2019re talking about here is the past behaviour, on the net, of a public-private keypair used in the authentication and issuance of a given digital bearer certificate. Or in the sale of anything else, for that matter. Just by using the public key and the signature on the certificate, anyone in the market can validate that the certificate was issued by the entity issuing or underwriting it. And, in the course of a transaction, as we said, the issuer itself can validate the \u2018semantic\u2019 part of the transaction, that the certificate is in fact unique and exchangeable at no cost for another unique set of bits representing the same value.So, a digital bearer certificate is authenticated by the issuer of that certificate, in the same way that the intaglio printing, special paper, serial numbers and signatures on a given paper bearer bond make it unique and non-replicable.That makes not only for a more secure, and completely private, transaction, but it also makes for a radically cheaper transaction, which is really the whole point. As we all know by now, the reason we have book-entry settlement to begin with is because it\u2019s radically cheaper than the physical delivery of paper bearer certificates, not so the government, or anyone else, can surveil us in our very grocery purchases.On the net, we talk about accumulating and quantifying reputation in some imaginary future denomination and we call that stuff \u2018reputation capital\u2019. Which immediately leads to the cypherpunk inside-joke about permanent shunning being \u2018reputation capital punishment\u2019. And, actually, that\u2019s pretty understandable. Instead of going off to San Francisco in the 1850\u2019s to change your name and venue after screwing up, you just delete your private/public key pair, and start a new reputation over from scratch. In a bearer settled world, of course, it happened all the time.I expect, like corporations today, reputations will be sold, and the variance between the market value of the assets controlled by that reputation, and the market value of the reputation itself will be our imaginary reputation \u2018capital\u2019, something we call \u2018goodwill\u2019 today.Now, to quote Bill Cosby, \u2018I told you that story to tell you this one.\u2019With digital bearer settlement, and the sanction of reputation against public keys which have bad character, as Morgan called it (reputation, to you and me) it is now possible to create digital bearer bonds.Actually, last time, in my underwriting model for digital cash, I cheated. When you think about it, a bank note, cash in other words, is an instantly callable, perpetually issued bond which pays no interest. It represents a claim, in the old days, at least, on some principal amount of a given debt, and not its interest, redeemable upon demand in the asset the note is reserved against and denominated in.So, to issue a digital bearer bond with a simple coupon, you just issue a digital bearer certificate for the principal amount, redeemable at the end of the life of the bond, and you bundle a bunch of coupons with that certificate for the redemption of principal, one for each interest period, and redeemable at the end of that interest period, and sell them all together as a unit.To do a zero-coupon bond, simply issue a certificate payable at expiration and sell it for the net present value of that amount given some fixed interest rate.Strips are just that. Strip the coupon certificates from the principal one and sell them all as individual certificates with their own prices. Notice that we bump into the old fixed income analysis chestnut about a bond being a series of options on cash flow, which, of course, I\u2019ll muck around with a bit more, when we get to derivatives.Convertible bonds should be redeemable either in cash or stock. Bearer stock, of course, which we\u2019ll talk about next time.Money market instruments, for the most part, are just bonds with extremely short lifespans.It\u2019s even conceivable to have microbonds, issued by individuals. After all, the size of an individual underwriter, and the resulting syndicates of underwriters, to boot, is probably completely driven by Moore\u2019s law. I joked in Wired a few years ago about a syndicate of microbond \u2018bots\u2019 loaning me the money for lunch, payable at the end of the month.If you can have microbonds, macrobonds are also possible. I expect that digital bearer settlement will be a universal phenomenon, just like book-entry settlement is today.Secured bonds, like equipment mortgage bonds, can use various trusted entities to validate the worth of the assets securing the bond, just like a trustee/custodian does for a bond or cash issue.And, of course, you can add all kinds of call provisions, redemption exclusions, and anything else you can think of, to a digital bearer bond, only this time, you\u2019re writing software, and not law, as the old cypherpunk mantra goes.Finally, any of the above bonds will be rated, just like bonds are today, yielding the same market we have now, with fungible graded commodities, in perfect competition, only, now the velocity of those markets can be greatly accelerated. After all, you are executing, settling, and clearing, instantly, and for cash.Notice several things here. First, the language of bearer settlement completely underlays our very discussion of bonds even today. The word \u2018coupon\u2019, for interest, \u2018holding\u2019 a bond, all of that. Digital bearer settlement makes it that more relevant. Back to the future, and all that. It says to me that we\u2019re not going to have too much conceptual trouble thinking about a world of digital bearer settlement, which is one of the principal attractions, besides reducing transaction cost by three orders of magnitude, of course.Second, and probably more important, by creating actual digital financial objects, objects which make electrons behave in certain ways online, just like the mouseprint covering those huge paper bearer bonds of yore caused lawyers and judges to behave in certain ways in meatspace, you have freed finance from a huge chunk of legal cycle-time itself, and you get a genuine financial ecology on the net, on top of that geodesic economy I talk so much about. In fact, most of the time it seems to me that they\u2019re part of the same thing. The geodesic network being the substrate upon which this bestiary of financial entities and objects are born, live, and die. It gets worse when I talk about the idea of \u2018micromoney mitochondria\u2019 at the end of this series, but I\u2019ll soften you up a bit before we get that far out over the edge of the cliff, into cartoon physics, as it were.Anyway, in this new financial ecosystem, financial theory and practice become one and the same thing, the behaviour of financial software and digital bearer objects on a ubiquitous global internetwork. It may be that, after years of using mathematics and physical analogs to describe financial economics, the ultimate anathema to mathematical finance will occur, and finance will become an observational science again.Frankly, I think we\u2019re looking at some combination of the two, where mathematical finance will propose, and the genetic behaviour of the market will dispose. Which, when you think about it, is exactly what happens today.Next month, we\u2019ll talk about digital bearer stock, and, implicit in that, how to achieve limited liability in \u2018cypherspace\u2019.Back to table of contentsSince law attempts to be as logical as possible, and software is nothing but mathematics, I\u2019m about to show you how to turn common law, or some of it, anyway, into software. We\u2019re going to do it all, of course, by talking about digital bearer equity.One of my favourite people in philosophical history is Bertrand Russell. Most people familiar with the history of computational logic know that not only did Russell discover a paradox that eventually undermined the foundations of logic when Goedel solved it a few decades later, that consistent systems could never be complete and complete systems could never be consistent, but also that Russell and his partner Alfred North Whitehead quite literally broke their brains proving, logically, that 1+1 was 2 using symbolic logic alone, unifying maths and logic for the first time.The idea of joint control of an enterprise is as old as western civilisation. Before the time of the Greeks, hierarchy and property rights had gotten so evolved that everyone belonged to someone else. Ministers of the pharaohs used to routinely sign their correspondence to their superiors, \u2018Your Slave\u2019. Hydraulic monopoly has a weird effect on people that way. Certainly the Chinese, Brahmins, and, to a lesser degree, the Mesopotamians, refined hierarchical lifetime control of their subjects to a fine art.It\u2019s questionable whether the Greeks were the sole inventors of democracy, small hunter-gatherer bands like the Australian aborigines had a more egalitarian society than most larger agricultural societies, for instance. Nonetheless, the Greeks are certainly the people we like to remember as the originators of the practice of voting as a \u2018protocol\u2019 for group decision-making. Especially since they actually had agriculture and actually kept written records of the votes they took.The Roman republic, literally, \u2018re publica\u2019, the public thing, abstracted direct voting up one level by electing representatives who in turn did the actual voting, proxies, if you will. This allowed a much greater span of control than a simple city state, Delian League or not. First \u2018pecunia\u2019, then \u2018re publica\u2019. Those Romans got to invent all the fun words, didn\u2019t they?Notice that neither democracies or republics are necessarily stable or even representative. Greece and Rome, or any of their early modern replicas including the one I\u2019m fond of, excluded most of their populations from actual voting control, but, as communication technology and industrial requirements for education increased in prevalence, suffrage tended to become universal, and, ironically, slavery itself has been shown to be a peculiarly agricultural institution, all of Marx\u2019s protestations to the contrary.Another way to think about it comes from an old college logic professor of mine. We all have the same information and intelligence, and the future is uncertain, so we might as well vote about what to do next.Of course, joint ownership is not new either, and neither is proportional voting control of businesses, or anything else. The corporation, peculiar this time to industrialism and the modern nation-state, has direct antecedents in other common-law business forms not requiring the force of that nation-state for their very existence, something important to anyone trying to code up erst-corporate behaviour in software instead of law.You don\u2019t even need the legal sanction of a nation state to have limited liability. Common law created limited partnership long before corporations. Britain had fully functioning non-corporate limited liability entities at least until the end of the nineteenth century. Lloyds not withstanding, of course.So, the point is, can you make all this fun stuff happen in software?Let\u2019s look at the cryptography for a bit. For starters, you can store multiple \u2018hashes\u2019 of the same data in such a fashion that with any m of n pieces, you can reconstruct the whole dataset. That is useful for storing, say, your digital bearer bonds, in various blinded cryptographic storage areas all over the net, for a fee of course, but it also provides a pointer to controlling a business entity as well.Why? Remember that \u2018identity\u2019 directly maps to \u2018key-pair\u2019 in cypherspace. With an m-of-n reconstruction scheme, any m members of a board could vote to control the \u2018root\u2019 key of a virtual corporation, for instance, you could actually control that key. There\u2019s considerable doubt whether hierarchies make sense in this context at all. In fact, most global name-space schemes based on key-management hierarchies bump right into Russell\u2019s Paradox and Goedel\u2019s Result as if their designers never took logic at all.Anyway, this form of m-of-n key-control works best for simple partnerships, but you still have the problem of voting control of larger entities, particularly if you want lots of shareholders. Fortunately, there are cryptographic protocols for anonymous voting, as well. I\u2019ll spare you the gory cryptographic details, but there are ways to elect a board, and for boards to vote control of a key, which can then be used to authenticate the actions of as large a business entity that you want. The creation of voting proxies, in other words.So, we\u2019ve taken care of common stock, and, because we know about digital bearer bonds, we can get a hint about how to do dividends: just present some token at the time of the dividend and collect cash. But, what kind of token do we use when all we have is a stock certificate? Clearly we don\u2019t want to redeem that at dividend time, do we?No, we don\u2019t have to. There is yet another class of cryptographic protocol called, weirdly enough, zero-knowledge proofs of knowledge. Using these methods, it is possible to hash a given bit of information and use that hash to prove to someone that you have that information in its entirety. No, it\u2019s not magic, it\u2019s mathematics. Using zero knowledge proofs on a stock certificate, you can prove not only that you are entitled to vote, but that you are entitled to collect dividends as well. In fact, you can use it to prove that you are a preferred stockholder, or that you are a holder of Class B instead of A, or anything else. Finally, the issuer can use these proofs to show that you have already collected a dividend, voted a stock, whatever.Oh. One other thing. Want to authenticate the books of a corporation for a given price earnings ratio without seeing the entire set? Want to authenticate an actual cashflow or asset holding for a debtor? Use the same zero-knowledge proof cryptography. Eric Hughes even claims to have invented a way to publish completely \u2018open\u2019, publicly available files, cryptographically munged, of course, which, when, a business entity wanted to prove a certain figure or set of line-items was in that otherwise encrypted information, they could use their unique key pair and a zero knowledge proof to show that the expenditure was in fact there. This could even be audited by a trusted third party, whose signature would be on the encrypted data. It just keeps getting weirder.Frankly, the reason we don\u2019t use zero knowledge proofs for bond payments is because bonds have finite duration. They all, with one exception proving the financial rule called a \u2018perpetuity\u2019, expire sooner or later. It\u2019ll probably be cheaper to just issue all the digital bearer certificates, principal and interest, en masse. It\u2019ll certainly be more financially reasonable from the standpoint of calculating the value of those certificates, as any student of fixed income mathematics will tell you. Simply issue all the certificates at once, and let them each be priced, and traded, accordingly.But getting back to equity, what about limited liability? Well, think about this for a minute. If, for instance, you have anonymous control of information, then the only thing you can do to the holder of that information in any meaningful sense is to discount the value of that information in the market. Remember, when we talked about reputation, we talked about reputation \u2018capital punishment\u2019, where a given cryptographic key pair is shunned, its economic value effectively zero.These days we do it with laws which say that a shareholder of a corporation is only liable for whatever money he invested into it, and, when the market says a stock is worthless, there isn\u2019t anything such thing as negative value.But, again, in cypherspace, we try to replace law with strong cryptographic software, and, most of the time, we get the same result. Funny how symbolic logic works that way. Call it Russell\u2019s revenge.In other words, if a shareholder spends money on a digital bearer certificate signifying partial ownership in an enterprise, and that bearer certificate, for whatever reason, is worth nothing, that\u2019s all the shareholder has lost. Since he\u2019s holding a certificate normally, his key is completely blinded, and he is thus anonymous. Only if he double spends the certificate is he unmasked. So, on a \u2018semantic\u2019 level, there\u2019s no other \u2018recourse\u2019 the market has but to the value of the equity certificates he holds. And, as any person who\u2019s holding shares of a fraudulently accounted company can tell you, that penalty is a good enough proxy for limited liability.Issuing digital bearer equity, or debt and cash, of course, is different, in that the key issuing the certificate must be known to have a good reputation, and have proven asset value in the case of collateralised debt. The holders of the certificates, though, don\u2019t need to be known at all for the system to work.Pretty cool, huh? With digital bearer equity, you can have publicly held business entities whose size limits are only driven by transaction cost, just as Coase\u2019s theorem says it should be, and, the shareholders can be completely anonymous.And, of course, as we all know by now, I claim, at least three times before breakfast every day, that digital bearer settlement will drop transaction costs by at least three orders of magnitude, which is why you have anonymous shareholders, and not though any desire for privacy per se. The reason we have registered stock ownership, remember, is because we have book-entry settlement. If we could do digital bearer settled equity, there would be no need to register securities from an economic standpoint, and, as I\u2019m also fond of saying, physics begets economics, which begets common law, which begets legislation and \u2018policy\u2019. You cannot run the causation movie backwards and get any money.So, no, I don\u2019t think that absolute deregulation of equities markets will be the only component of that cost reduction, though it may one of the most interesting effects of that cost reduction, no matter what its magnitude.Next time, we\u2019ll talk about digital bearer derivatives, but, after that, we\u2019ll come back to equity, and Coase\u2019s Theorem, and talk about micromoney, and its impact on the size of the firm. Stay tuned.Back to table of contentsDigital bearer derivatives are possible and, at the margin, digital bearer settlement is probably the technology most suited for the execution, clearing and settlement of derivatives.With the free-falling price of microprocessing, we\u2019re going to get more, and more complicated, derivatives, whether we want them or not, and, with ubiquitous internetworks, they\u2019re going to be digital bearer derivatives, because that\u2019s going to be the cheapest way to do them.So, before we start, let\u2019s review my (and Russell\u2019s) mantra that reality starts with physics and economics and ends with law, \u2018policy\u2019, and philosophy. Trying to legislate economics and finance, for instance, is one of the sillier things any sovereign, much less any religion, can do.I say religion here because, at some point in Christian theology, probably in deference to the Temple money-changing episode, interest was declared immoral, and, from that now-curious beginning, we get modern derivative transactions.Christian monarchs, in trying to outlaw interest, found that, no matter how hard they tried, they just couldn\u2019t, really. Eventually, in the late middle ages, they let religious undesirables, like Jews, be the money lenders and charge interest, but only after a ridiculous amount of creative denial.Muslim countries still outlaw interest today, for instance, and they go through an amazing amount of gyrations to keep their banks in business as a result. But, as Joe McCarthy used to say about communism, no one in, say, Saudi Arabia, dare call it \u2018interest\u2019, even today.Nonetheless, buried, deep in the glosses, palimpsests and marginalia, among all the shucks and jives that mediaeval sovereigns did to avoid the \u2018i\u2019 word, were some very interesting residents of the then-hand-illuminated financial bestiary. These critters really did look an awful lot like bonds, and, even, derivatives. Of course, they couldn\u2019t possibly be those unholy chimera, because they would be, quite literally, an abomination, a sin unto God Himself.Yet, in England, for instance, there was the ever-ubiquitous tally-stick, which started out being a poor man\u2019s depository receipt for taxes, with big notches for big money, and small notches for small, and split between the two counterparties to keep everyone honest. These sticks ended up, in rather short order, representing \u2018fictitious\u2019 transactions, and, more important, contingent claims, on some other asset, usually, bullion. The king would, instead of paying creditors in gold, pay them with tally-sticks, which would then \u2018mature\u2019 sometime later at the time of the bullion\u2019s eventual arrival in the treasury. These discounts were, of course, representing the, um, opportunity cost, of the money involved. Certainly not interest. That would be evil, of course.In fact, the considerable fortunes of the Knights Templar, and Hospitalar, too, were built on bills of exchange, issued to crusading nobility, who could, magically, deposit money in one place in Europe, and take it out of somewhere else upon their arrival in the Holy Land. \u2018Of course, Sire. Interest would be a sin. We can, however, sell you this bill of exchange at a discount, if you would should desire it\u2026\u2019You can account for a multitude of risks, if not sins, in the discounted price of that bill of exchange, including the obvious one of said Sovereign getting lost, bill and all, at sea on occasion.Not to mention creating bills of exchange for assets which never leave a country at all, thus avoiding taxes, even for the sovereign, at least in countries like England where the sovereign was accountable, even marginally, to the law. Bills of exchange were even created representing assets which might never exist, except if some contingency occurred. Guess what those were?Of course, most reasonably clueful bond folks will gladly haul out a trusty Fabozzi book or two and show you that, yes, a bond is, in fact, an option on some future cashflow that the bond promises, or, more precisely, that a bond is a bundle of options (interest coupons, remember?) on that future cash-flow, the granularity of the option\u2019s settlement date being either every quarter, if you feel discrete, or infinite, if you feel continuous and remember that most bonds are quite liquid assets. And this tide of financial calculus floats all boats, even a crusader\u2019s fleet mired in the middle ages, modulo the occasional Mediterranean storm.So, just like quarks, it seems that options and other derivatives are the very conceptual building blocks of the financial universe, and to ignore or restrict them is to do so at one\u2019s own economic peril, if not one\u2019s mortal soul.Thought about in those terms, of course, derivatives become as old as civilisation itself. Thales of Meletes (who was the world\u2019s first philosopher if you\u2019re in a medieval mood, and believe in the infallibility of Aristotle), answered the world\u2019s oldest taunt, \u2018if you\u2019re so smart, how come you aren\u2019t rich\u2019, by cornering the local olive oil-pressing futures market, monopolising those presses at harvest time. It not only made him rich, but famous, too, especially to everyone who\u2019s taken the nickel tour at the Chicago Board of Trade and walked away dreaming of being latter-day Hunt Brothers. Doing that ill-fated silver corner right, of course...Even before Hellenic Asia Minor, the owners of various grain depositories in Egypt, and even Babylon, raked it in one haircut at a time, purchasing grain before it was even planted, and flipping that imaginary grain, over and over again, until the harvest actually came in.This kept people from dumping grain in the streets at harvest time, certainly, because the prices were too low then, which is exactly the apocryphal event precipitating modern futures exchanges in places like Chicago, sans hydraulic monopoly. Those who forget history, and so forth.At the root of every derivative is a polite, and frequently mathematical, fiction. A fiction, which, if it turns to real prophecy, makes money. And, if you\u2019ve ever listened to any entrepreneur in heat spouting his latest funding pitch, you\u2019ll notice that predictions are pretty cheap to make. Moreover, an awful lot of of those predictions exist about any one event at any one point in time. Putting a value on that vast quantity of fiction might have been worth a Nobel Prize to some people who should now know better than to hang out with the likes of Mr Merriwether, but, more important, the process is driven by supply and demand. The initial price of futures, options, and other contingent claims, relative to the assets they make claims on, are, like talk, cheap for the most part.In addition, if the underlying asset of a class of contingent claims is volatile, it\u2019s a very good idea to settle and clear the purchase and sale of those claims as soon as possible, so people won\u2019t forget their sometimes large obligations, or can collect on their occasionally formidable returns. Which, oddly enough, is exactly what happens at options exchanges all over the world. Chicago, for instance, now has next day settlement, if I remember, and the trend has been towards even shorter settlement times, wherever possible.And digital bearer transactions settle fastest and cheapest.We need to look at something else about a derivative. All those conditions under which the contingent claim will be executed make things very complicated. You simply cannot have a modern derivative without computers and online real-time information. You need even more computational horsepower to model the damn things to see if they do what you want them to.This complexity, and the corresponding computational modelling requirements, has always been seen to be a bug. It\u2019s really a feature, though. The more you automate the process the better it works, and now, it can be automated up to and including settlement, scaring the wits out even the hardiest of souls.Already I can hear quite a few disgusted \u2018harumphs\u2019 out there, particularly from those of you who have seen formerly boring equity exchanges go limit-down like some CBOT pork-belly pit. You\u2019ve seen \u2018portfolio insurance\u2019 contracts blow up like so many World War I barrage balloons under the tracer bullets of illiquidity, causing markets to crash around the world.More to the point, we\u2019ve seen countless portfolio managers who claimed to be using derivatives, but who were doing nothing but speculation with large amounts of other people\u2019s money as if it were just another game of liar\u2019s poker.So, what does digital bearer settlement bring to the party? For starters, increased automation, of course. You can build an actual object, which lives out there on the network all by itself, waiting for the proper market conditions to be met before it executes. Furthermore, because of those extremely reduced transaction costs, you can do transactions at extremely small sizes. Well, sizes considerably less than the hundred-million, or even billion, dollar transactions required to make institutional-scale money in derivatives today.Because of this small transaction cost, you could actually create a bunch of micro-derivatives, set them loose, and see if they work. Nothing like small-scale working models to see what really works, certainly. You could even create, abomination of abominations, auto-mutating derivatives, following genetic algorithms, spawning slightly altered copies of themselves at settlement time with some of the proceeds. Fast, cheap, and out of control, indeed. It\u2019s enough to send you scurrying back to the monastery, sandals flying every which way\u2026Dragging us back to the human universe, with this kind of granularity you could also create a whole array of derivatives, representing a whole spectrum of possible positions, in smaller transaction sizes, allowing you much more flexibility in your financial plans. That\u2019s why derivatives exist, after all, to hedge your purchase or sale of something else against the unforeseen. At the expense of Godless speculators, of course.But, the primary problem with modern derivatives is that nobody is there on the other side of a desired trade at crunch time. Nobody there in the specific volume desired, and so, most hedging transactions, like the limit orders they are, go unanswered until the price is much lower, defeating the purpose of the derivative in the first place. Being able to execute a score of smaller transactions, instead of one giant one, at some intermediate prices in an avalanche of continuously falling prices gives a portfolio manager at least some comfort of dollar-cost averaging on the way down. Frankly, I expect that it will tame volatility as a result. It is precisely these precipitous free-falls with no answering bid, which cause the volatility problem in the first place.Oh. Right. Before I forget, the transactions are all anonymous, of course.So, how do you do all this fun stuff? Well, if you couple some bit of autoexecutable code with a digital bearer instrument, or a bundle of digital bearer instruments, you can execute all the pricing, and other financial data, requirements you want. Certainly a bit of XML, or Java, done right and properly authenticated, could do the trick, but, like most problems in financial cryptography, that trick is usually harder than it looks.Fortunately, what looks like an initial solution to the problem was presented at the 1998 International Conference on Financial Cryptography, FC98 to its friends, held this past February in Anguilla.X-Cash, a new transaction protocol by Markus Jakobsson of Bell Labs and Ari Juels of RSA Labs, is a bundle of digital bearer instruments which look for the terms they want, and when those terms meet with an acceptable offer, they execute, clear, and settle the transaction, all at once. If you\u2019re interested in this paper, and a whole bunch of others on the cutting edge of Financial Cryptography, you might want to look at the conference\u2019s proceedings, which are now available from Springer-V erlag. See www.fc98.ai for details.Of course, figuring out how, and doing it, are two entirely different things, and, frankly, X-Cash is only the first of what will necessarily be many attempts at solving the problem of autoexecutable, digitable bearer, derivatives.It\u2019s the same problem financial cryptographers fight every day: the problem of turning law and legal agreement into something much better: running software. Turning law, and apparently, thrill-addiction, into economic, literally physical, objects.Objects beyond the control of gamblers and, apparently, experts at liar\u2019s poker.Back to table of contents\u201cWhen the going gets weird, the weird turn pro\u201d, as Hunter S. Thompson once said, and the going, for this article, is going to get pretty weird, and in hurry.I\u2019ve taken you from digital bearer cash, through bonds and equity, and, last month, we ended up with derivatives, showing you could get as weird as you wanted, financially, and still use digital bearer settlement technology to make transaction settlement cheaper to use than book-entry methods. Probably by several orders of magnitude, or a thousand times, cheaper.Now we\u2019re going back to cash, microcash, to be exact, and, in the weird spirit of Mr. Thompson, we\u2019re going to talk not about Yage, or Ibogaine, or various reptilian pineal extracts, but about different kinds of hash.Well, okay, not hashish, exactly. Hashes, actually. And not anything even vaguely psychochemical, though the consequences of hashes might get pseudobiological sooner than you might imagine, and simply mind-bending to contemplate when we get there.The technology I\u2019m talking about here is that venerated mathematical algorithm and staple of computer science, the hash function.A hash function is something they teach you in your first year of computer science. Properly defined, a hash is a usually smaller, mechanically derived, fixed-length sample, subset, or just plain correlated bunch of bits related to usually a larger, and variable-length, bunch of other bits. A hash is something that allows you to mechanically check the integrity of data without actually examining the data itself. I can send you a hash of some computer program I\u2019ve written, so that you can run a hash of your copy, compare the hash you have to the hash I gave you, and, if they\u2019re identical, it\u2019s highly unlikely that your copy is different than mine.It\u2019s that \u201chighly unlikely\u201d bit that\u2019s important, here. For instance, if I hash a given bit of information and the result is 2128 bits in size, and the hash method is a one-way function which gives me a more or less random output, I have a 1 in 2128 chance of getting the same hash from some other bunch of data. Nice large number, that. Longer than the number of seconds the universe has been alive, even. Longer the total age of the universe if Mr. Hawking, and, more recently, experimental data, were both wrong and the universe is in fact closed.However, like all large numbers, including infinity, you can control those, um, astronomical probabilities if you want, and that control is at the heart of micromoney.If you reduce the output size of a one-way random hash function which uses a key (a \u201ccryptographic\u201d hash, in other words) you can control how much computation (money, in other words) is spent in the generation of a hash \u201ccollision\u201d, which is the name for happens when two entirely different blobs of data generate exactly the same hash value. Finally, if you use the right kind of hash function this way, and you find a hash collision, you can use that information to generate as many collisions like it as you want, with very little extra computation at all. Each one of those hashes are as hard to forge as the first one is.What you get is exactly the economics of minting a penny, only with bits, which are much cheaper to mint with. To mint a penny you have to literally build a factory, because that\u2019s what a modern mint really is. But, the next penny after the first one is barely noticeable in terms of marginal cost, and, so, it behooves you to mint as many pennies as possible to earn back the investment in your mint. That is, if you were selling pennies for a living, which governments claim they really don\u2019t do, though they book it on their balance sheets as seignorage income, nonetheless\u2026 Using hash collisions, as found in various the various micromoney algorithms out there including MicroMint from Ron Rivest and it\u2019s several progeny, and in Millicent by Mark Manasse, and in HashCash, a simple anti-spam protocol by Adam Back, that\u2019s exactly what you can do. You can take in people\u2019s money in one form or another and quite literally print them a positively huge amount of extremely low-value cryptographic hash-collision tokens, all while still turning a tidy profit. Seignorage for the rest of us, to paraphrase Mr. Jobs.The disparity in cost between the cost of \u201cminting\u201d the first token and minting the second is enormous, much greater than that required to mint the second penny in our example above. Remember, again, how long it takes to \u201cbrute-force\u201d a hash-string the size of 16 bytes, the size of this one: \u201c1234567812345678\u201d. That is, 128 bits divided by 8 bits per byte.Those 16 bytes, if handled properly, are certainly small enough to stick onto the most mundane events in cyberspace and pay directly for some service at the time it\u2019s rendered. All without an invoice, or clearing a check, or authenticating a credit card. and, without, of course, the finance and accounting departments backing them up.You can use those 16 bytes to pay for sending a piece of email. Or downloading a web page. Or, even, with enough 18-month turns of Moore\u2019s law and a stiff tailwind, routing a group of packets from here to there across the net.Imagine every router on the net buying bandwidth low and selling it high in a continuous, digital-bearer, microcash-settled, cash-on-the-routerhead auction for internet switching. In such a world, you don\u2019t even need network engineering, at least as we\u2019ve defined it today, because the market, and not some grand top-down design, will determine where the next router will go, without any human intervention in the purchase at all.\u2026Good. I see you\u2019ve drunk the Electric Kool-Aid, and the visuals are just starting to kick in. Great stuff, huh? Remember, I did warn you this was going to get weird in a hurry, and now, I believe, it\u2019s time for the weird to turn pro. Hold on\u2026But, wait, as they say in the more manic infomercials, there\u2019s more. As the internet becomes more and more ubiquitous, and microprocessors become cheaper and cheaper to make, the internet, defined as the TCP/IP protocol (or it\u2019s progeny, whatever that will be), it interlinks the most amazing places into a unified geodesic network, reachable through the air from local antennas, or satellite antennas, or just physically, by connecting you to the network with a wire or fiber optic cable. With an increasingly ubiquitous internetwork, you can sell even more and more mundane things this way. In the ultimate throes of this anarchocapitalist madness, everything can be for sale.Let\u2019s start with the obvious one first. Electricity. Already, they have demonstrated IP over electric lines in Britain. It is mostly trivial to do, especially over higher voltage power lines. Now, if you squint, you can see, with your newly dilated pupils, the very electrical appliances in your house, your microwave oven, your toaster, your teakettle, paying for their very electricity as they use it. With microcash.It\u2019s not that hard to do. I just showed you how, right? All you need is a hash-handling chip in the toaster a little smarter than the chip in that expensive \u201cgourmet\u201d toaster sitting right there, right now, on the shelf in the gourmet kitchen store down the street. I call these imaginary chips micromoney mitochondria, and with them you get the quasibiological effect of picomoney as processor food.If you remember the history of this century, and the first article in this series, it wasn\u2019t until checking accounts and hierarchical industrial networks became prevalent that lots of working folks stopped paying for their flat\u2019s electricity with actual coins in a meter somewhere on the premises. As we\u2019ll find out in the next article, that kind of \u201cunwinding\u201d of history is a very quick and dirty way to figure out how a bearer settled geodesic economy looks, if not how to implement it from scratch.To continue the weirdness, think about a world where an internet router can save enough retained cash out of operations to buy a new line to a less busy router. Or copy of itself. Or to sell itself off into \u201cslavery\u201d(?) to another router (which is buying a copy of itself, remember?) after losing too much money to stay in business anymore. Transported. Mr. Macawber, thy name is \u201ccypherspace\u201d. More time, running backwards, on Moore\u2019s law.Great acid, yes?But wait, there\u2019s more. If you can really do this with roads, paying at every intersection to get through it (money\u2019s cheap and small, remember?), does a, um, hierarchically organized force monopoly, a nation-state or it\u2019s smaller hierarchical subdivisions, need to \u201cown\u201d that road anymore? Shades of a favella in Sao Paulo, where the \u201cproperty\u201d lines extend into the middle of the street. Actually, not so \u201cproperty\u201d anymore, as the favella dwellers, along with their private piece of concrete to the middle of the street, now have secured real property rights to that concrete and the now-legally recognized road under it. So, are they charge you to drive over their little piece of micro-road? Stop this trip. Now. Please, make it go away\u2026 What\u2019s next? Paying microcash for water as it comes out of the tap? No, let\u2019s not think about the inverse of that particular plumbing operation, as it\u2019s fraught with images of misers, Gordon Gekko (as someone likened me to, after I started thinking too hard about this in public on the net), and of course, Scrooge himself, speaking of unwinding the clock to a more Dickensian universe.Paying auction prices for force? Landmines which won\u2019t blow up if you have the right key? And keep paying them? Mama told me not to come\u2026Okay. Let\u2019s abstract our selves back a level or two, and think about actual micro-economics for a while, both to cool off our blazing neurons, and to honor a promise I made last time. Early in this decade, Ronald Coase, formerly of the LSE \u2013 and now, I believe, at the University of Chicago, where all good Nobel laureates go to die \u2013 won, you guessed it, a Nobel prize in economics. Coase won the Nobel by hypothecating (without actual mathematics, a boon and comfort to innumerates like me everywhere), that firm size is directly related to transaction costs.That is, the cheaper the transaction cost, the smaller the firm can be. This has been proven, with actual data, to as much certainty as a fact of physics itself in the decades since the 1920\u2019s when Coase made this prediction.Well? Notice something? Some digital bearer protocols are really cheap to use. Some get us to efficient transaction spreads in milli-to-microcent range. That makes for really small \u201cfirms\u201d. Market actors. Proprietors, in other words.More to the point, if Moore\u2019s law reduces the price of switching enough to bearer-settle even the smallest conceivable purchases, like bandwidth, or road passage, or electricity, you end up a very strange universe, populated with a swarm of extremely competitive, dumb, randomly-behaving business entities motivated only by, as Dickens\u2019 Mr. Macawber said, \u201ckeeping income over expenditures\u201d. Curiouser and curiouser, to mix my Victorian fiction a bit.You don\u2019t just have an invisible hand, anymore.To steal the name of the Cato Institute\u2019s football team, you have an invisible foot. Something which can kick the pants off any large, vertically-integrated, hierarchically-organized industrial-era business now trying to combat its transfer pricing problems in order to compete with a market which, these days, values that business in pieces much more than it does the entire business, because, of course, the transaction costs are now low enough for those pieces of the old firm to sell their services directly to the market instead of doing it behind the \u201cfirewall\u201d of a company\u2019s chart of accounts.Diseconomies of scale, in other words. The world turned upside down. \u201cCats and dogs\u201d, as Bill Murray (who played Mr. Thompson once), \u201cliving together.\u201dThe weird have indeed turned pro.Cheers,\nRobert HettingaBack to table of contentsIn the final part of his series on the use of digital bearer financial instruments, Robert Hettinga moves on from the theory to explain how we can actually deploy these instruments.You couldn\u2019t have gotten through the capital market upheavals of the 1980\u2019s, much less Oliver Stone\u2019s movie Wall Street, without bumping into Sun Tsu, the ancient Chinese military thinker who, for our purposes, is best summed up by the Stonewall Jackson maxim, \u2018Hit \u2018em where they ain\u2019t\u2019.Among other things, Sun said that a small army should look large, a large army small, that one should attack when the enemy retreated, and retreat when the enemy attacked. You can almost hear P.T. Barnum muttering, somewhere, \u2018Never give a sucker an even break.\u2019 Mao, accommodating his intended audience with many simple single-worded exhortations and lots of exclamation points, recapitulated Sun\u2019s logic and won his wars in much the same way.I propose, in less florid terms here, to think about the deployment of digital bearer transactions in that same spirit. That is, start where book-entry settlement ain\u2019t, and move on from there. With that fulcrum, we can lever complexity of digital bearer settlement against itself, and start \u2018surfacting\u2019 the existing glops of book-entry markets into smaller, more geodesic ones.If you think about it, we face almost the same task that Copernicus, Kepler, and Gallileo did when they removed the earth from the centre of the universe. Like Kepler, we\u2019re going to use the simple mathematical ellipses of financial cryptography to replace the financial and legal Ptolomaic epicycles industrial economies had to build on top of their electronic, but still human-switched, information networks. We want to move money across these new geodesic networks we\u2019ve built in cypherspace without the financial shovelware that currently passes for internet transaction settlement. If, of course, that\u2019s what you can call the out of band settlement of internet-executed transactions, which is what internet credit card and even check transactions really are.I\u2019ve already spent the last six months telling you, with a broad brush, how to apply digital bearer transaction technology to every security imaginable. This article is about specific applications of digital bearer transaction technology to problems people have told me about. It\u2019s an effort to jump-start your own thinking about digital bearer settlement in your own business.Last November I went to to London, where, when I wasn\u2019t speaking to the E-Finance Forum, or to someone in the City, and, ultimately, to the Adam Smith Institute\u2019s conference on internet trading, all thanks to Duncan Goldie-Scot, I spent two evenings in a Kensington Australian wine bar, thinking about a couple of capital market bearer-settlement ideas with a few of the conference\u2019s participants.After we\u2019re through with those two, I\u2019d like to talk about micromoney mitochondria some, and an effort underway at DARPA to make the internet \u2018smarter\u2019.The first example, and the easiest to think about, is an already existing bearer-held Swiss hedge fund. Of course, bearer in Switzerland (or the BVI\u2019s, or wherever else) is quite different from the bearer I\u2019ve been talking about the past few months. Bearer shares are typically registered with a trustee of some kind, but that registration is blinded from the portfolio manager. So, imagine, in the spirit of my previous \u2018Bill and Ted\u2019s excellent mutual fund\u2019 scenario, we created Bill and Ted\u2019s excellent bearer hedge fund.That is, this existing hedge fund puts up a blind-signature certificate mint, right in the same room with their existing web server. When people pay the server digital cash, they are issued a digital bearer certificate representing assets in the fund. Right. What\u2019s digital cash? Okay, so we don\u2019t have digital cash. So we use checks, or bank wires. Somebody goes to a web page, is issued a non-transferable provisional certificate right off the bat, and, when the wire or cheque clears, they can come back and get real bearer certificates in exchange for the provisional one.If done right, such an automated customer service scheme will probably be much cheaper the way it\u2019s done now, even with the added complication of transaction latency, which is there right now, anyway. Whenever digital bearer cash is available, handling shareholder exchanges will be even that much cheaper. Again, as a portfolio manager, you don\u2019t ever know who your customers are, anyway. The trustee administers your customer\u2019s money in the logical opposite of an American blind trust. Instead of the customers not knowing what the portfolio\u2019s invested in, though, the portfolio manager doesn\u2019t know, legally, who\u2019s invested in his fund. Which is the rub.Notice my use of the word legally. There\u2019s this whole industry of fund trustees in Switzerland, using lots of lawyers no doubt, all devoted to administering those blinded lists of shareholders in bearer funds. I would even venture to guess that my digital bearer version of Bill and Ted\u2019s excellent Swiss bearer hedge fund is illegal, in order to perpetuate this cottage industry, though it might be fun to push the legal envelope a bit, to see how strong it is. We\u2019re still figuring it out.However, I would bet that if using digital bearer certificate servers lowered the trustee\u2019s customer service by three orders of magnitude, they would have to adopt the technology, and that\u2019s exactly how to sell this idea in Switzerland. Portfolio managers would much rather just run their money, without having to think about such things for the time being. Save that box in Bill and Ted\u2019s machine room for some later regulatory regime and a few more iterations of Moore\u2019s law.Which brings me, again, to the most important point I\u2019ve been making throughout this series of articles. There\u2019s not a cryptoanarchist cypherpunk in the world who wouldn\u2019t jump at doing this particular contract. If the blind signature patent was clear, which we\u2019ll talk about in a bit. But, unfortunately, those people are jumping at this kind of work for entirely the wrong reasons. It\u2019s almost as if they think that just because they can put up a digital bearer-settled fund, that in and of itself will sell the fund to investors.Remember again, slipping the surly bounds of earth is all well and good, but it\u2019s coach fare from Kitty Hawk to Dayton which put people into the air. Nobody\u2019s going to invest in \u2018Bill and Ted\u2019 s\u2019 excellent Swiss bearer hedge fund at all unless they can make more money there than they can at home. Part of that present advantage, is, of course, taxes, and, probably, more than one case of investing ill-gotten gains, defined how you will in the jurisdiction of the money\u2019s origin.However, the market for financial privacy is infinitesimally, ludicrously, small when compared to the market for cheaper transactions in general. And, frankly, the Swiss trustee, much less Bill and Ted themselves, are profitable enough already with the legislated privacy they already have, or they wouldn\u2019t be in business as it were.No, what will sell this contract to some lucky financial cryptography systems integrator is lowered cost of customer service, pure and simple. Again, I claim, issuing bearer certificates to the net is the way to do this, even if those certificates are purchased the old fashioned way, with cheques, bank wires, or, given the location in question, suitcases full of cash. Again, we\u2019re eventually looking at a world where digital cash will be involved, and, when that\u2019s possible, the whole idea of safe jurisdictions like Switzerland may end up an interesting footnote in financial history. If they don\u2019t do it in Switzerland first, of course, and get a technological jump on the rest of the world\u2026Now, lets look at the second deployment idea. This one is one where you\u2019d least expect it, in the heart of the institutional clearing system, literally under EuroClear\u2019s nose. Big institutions in Europe decided they needed a place to function for the myriad European exchanges in the same way that the Depository Trust Company does for the New York Stock Exchange. They hired J.P. Morgan to play that role, and called the system EuroClear. The problem is that the costs of the system are such that smaller institutions can\u2019t really afford to clear their trades there. A bunch of us figured, over some nice Australian Cabernet (and, um, kangaroo), that if you applied the model of digital bearer underwriting we talked about in July, and used Morgan as the institutional custodian for a jointly-held aggregate account, you could underwrite a bunch of closed-system bearer certificates against those shares and money, which a \u2018club\u2019 of smaller institutions could use to instantaneously clear trades against each other. Since this \u2018club\u2019 of smaller institutions would all be known to each other in the aggregate, all of the \u2018know your customer\u2019 rules could be adhered to, and, yet, the system could still, paradoxically, settle trades anonymously between club members.The result would be extremely lowered transaction costs between the club\u2019s members, and, of course, instantaneous clearing and settlement. Something which might even be interesting to the much larger members of EuroClear to use someday, we figured. Maybe, someday, anonymity in settlement could translate to anonymity in execution itself\u2026 This rather insidious application of digital bearer technology, at the very place where one would expect the next generation of book-entry technology to be deployed, is exactly what Sun Tsu, Stonewall Jackson, and I mean by \u2018hit \u2018em where they ain\u2019t\u2019.In other words, deploy digital bearer settlement where book-entry settlement, well, ain\u2019t, yet, and don\u2019t fool around with attacking the Maginot Line of the existing book-entry-settled capital market infrastructure until the battle\u2019s already over. Dropping a few geodesic smart-mines on their escape routes, like we did in the two examples above, would work perfectly.For the final deployment example, I\u2019ve just learned about a project which which leads me to believe that the era of cash-settled switching-level auctions of internet bandwidth is not too far off after all. DARPA, the Defense Research Projects Agency, the very agency which funded the original internet, has hired firewall/security/spook-crypto company Trusted Information Systems (now part of McAffee\u2019s and PGP\u2019s parent, Network Associates, Inc.), to build a so-called Active Network, a technology where internet packets include code which tells the router where they want to go.This is instead of a router needing increasingly larger route-lookup tables, requiring, you guessed it, hierarchical networks with big fast routers at the top-level \u2018backbone\u2019. Moreover, these packets will be cryptographically signed, to prevent their execution instructions from being tampered with.All of this is so the network can be more, you guessed it again, geodesic in structure and thus cheaper to use. Will wonders ever cease? So, avoiding geek-vs-spy conspiracy theories and the odd technological ad hominae against TIS in the expectation that the market requirement for cryptographic open source code solves the cypher-paranoia problem, this executable-as-network-packet idea looks like exactly like a running-code proof of my assertion that attaching micromoney to the information at the packet level is completely within technological reason. Welcome, one final time, to the future.Which brings me to a final hobbyhorse. Most of the problems, I think, with the deployment of digital bearer transactions are legal ones. Oddly enough, it\u2019s not even laws and regulation against bearer transactions themselves, which, on the face of it, are quite considerable. Even these regulations are completely surmountable given enough cost-reductions and increased profit margins. Law follows economics, in other words.The primary problem, as I see it, is the effective control, by the nation-state, of intellectual property. I tend to be extremely Coasian when it comes to my definition of private property. I believe that once information is on my hard drive, decrypted, and in a form useful to me, that\u2019s about as private as property can possibly be. It\u2019s mine. I can do anything I want to with it including sell it. Furthermore, as the internet becomes more and more location independent, you can\u2019t keep me from selling it.I challenge anyone to enforce an intellectual property patent against me in an environment where anything, encrypted or not, watermarked or not, can be auctioned to the highest bidder, in usable digital form, for digital bearer cash. Cryptolopes, or electronic software distribution, or stenographic watermarks, even custom-compiled executable code and escrowed funds, do not add a whit of value in such a world. As an inventor, much less a seller, of digital goods, there is simply no reason to increase your transaction costs, and, correspondingly, reduce your profit, in order to control your digital product once it has been sold to someone. Just auction your product off to the highest bidder and be done with it.The economics of the geodesic auction market says that if you have the first information of a specific type, you will make more money on that information than anyone else. Yet, before we can get there from here, there is a rather juicy irony involved. Because you need to cash digital bearer certificates into book-entry money sooner or later, the patents for digital bearer certificate technology are completely enforceable at the point of conversion, the gateways between the cypherspace and meatspace.As I\u2019m fond of saying, bankers and corporation presidents, as very creatures of the law itself, don\u2019t like to get sued for patent infringement anymore than they like to go to jail for financial crime in general. In fact, I think that patents on digital bearer transaction technology are so enforceable that they are completely obstructing progress in digital bearer settlement right now.I would even go so far as to say that none of the current holders of digital bearer patents, (and, frankly, most of the current crop of people who want to control those patents in the future) know the least thing about financial markets and about how to market digital bearer transaction settlement to the financial community.Well, actually, there is one person who might be the exception to that rule, and that\u2019s Scott Loftesness, the recently appointed President of DigiCash, Inc. DigiCash, you will remember, was founded by David Chaum, the father of modern financial cryptography, and is the company which holds the blind signature patent, the original patent on anonymously-transferable digital bearer certificates.Unfortunately, after finally getting control of his company\u2019 s intellectual property, Mr Loftesness now has to pay down a mountain of debt, mostly in failed bridge loans to venture capitalists, all of which are secured by those patents.In my opinion, this debt may already exceed the estimated experimental licensing revenue remaining in the useful lifetime of the patents involved. And, given DigiCash\u2019s failure to find a market for their digital bearer certificates, licenses for experimental purposes is about the only alternative left.DigiCash is already in Chapter 11, and, unless someone can see a way to market for that technology that others haven\u2019t seen already, the firm may not re-emerge.And so, a group of us are looking at putting together a research-based syndicate to hold the DigiCash patents, or at least the most important internet-only pieces of that portfolio, in order to keep it from being tied up for the rest of its usable lifetime. The idea would be to license it for research purposes to all comers, and only when bearer certificates using the patented technology were exchanged into book-entry assets would a modest royalty accrue to the syndicate membership, payable at the gateway between the internet and the proprietary financial networks.Syndicate members would get unlimited use of the patent, or at least a reduced royalty rate, as further remuneration for their investment. As much as I hate the idea of path dependency, I think that there are only so many neurones which any one company can apply to the problem of digital bearer settlement. If one company controls a critical bit of technology, the chances are too great, in a still incredibly experimental marketplace, of a dog in the manger preventing anyone else from making something happen.Internet years are too short for the rules on patent duration as it is without financial cryptographers trying to be software developers, or banks, or anything else; something I\u2019ve railed about on the net many times in the past few years. Since invalidating the very idea of software patents anytime soon is not reasonable (to the contrary, even business processes seem patentable at the moment, one look at the Walker Digital patent farm tells you that much), it might be worth figuring out a way for cryptographic protocol inventors to get paid for their intellectual property without holding up research in the field for everyone else.While I think forming a syndicate to hold those patents, or a royalty association, something like what ASCAP does for songwriters, is the way to solve the problem, I\u2019m certainly open to other suggestions.So, there, after about six months, you have it. Not only have I discussed the enormous possibilities of the emerging world of digital bearer transaction settlement, but I\u2019ve shown you how to do every financial instrument you can ever imagine in digital bearer form, using ubiquitous geodesic internetworks as your marketplace. All of this, hopefully, for significantly less cost than it would be to drag all those book-entry audit trails behind you all over the internet. I certainly enjoyed this series of articles, and I hope you did, too.Back to table of contentsThe weeks running up to this year\u2019s Financial Cryptography Conference (FC99) were really amazing, especially if you\u2019re a fan of digital bearer transaction settlement.First, there was a lot of excitement about the forthcoming disposal, out of bankruptcy, of the DigiCash patent portfolio. This includes David Chaum\u2019s blind signatures, which are useful, as you remember, for macro-scale cash, bonds, and even equity.Mark Briceno, a former DigiCash employee now turned dealmeister, said at FC99 that he has put together a syndicate which includes all of DigiCash\u2019s former licensees, and that upon acquisition, the patents will be royalty-free for open source and experimental use. Unfortunately, two of his promised closing days since have come and gone, however.Yet, I recently talked to Nicholas Negroponte at the joint MIT Media Lab/USENIX Things that Think / Embedded Systems Workshops. Negroponte, the Media Lab\u2019s founder, is also, hopefully, the final Chairman of DigiCash, and has arrows in his back to prove it. He was talking to me quite nicely about Zero Knowlege Systems, the primary sponsor of Briceno\u2019s syndicate effort, so maybe something is in the offing. Finally.Another wierd thing happened to me the week before the conference, when I got a query from a local investment banker, representing a public corporation with $5 million in cash and $7 million in market value. He proposed creating a company by buying both DigiCash and DEC/Compaq\u2019 s Millicent technology. I went downtown to visit him, and said no, that wasn\u2019t a good idea, but that doing some kind of publicly-held financial cryptography patent royal trust, a cross between an oil-patch deal and Buffet\u2019s Berkshire Hathaway, might be a fun thing to try. His firm didn\u2019t like the idea, but I still think it\u2019s a good one, and, upon leaving, I felt like I was resigned to evangelizing this stuff to deaf ears forever.But, that very night, things changed enormously. I got an email message that night from Ron Rivest, sent to John Gilmore and Paul Kocher and cc\u2019d to me and Adi Shamir. Rare company, indeed.Ron Rivest and Adi Shamir are, of course, the R and S of RSA, the DC3 of the public key cryptography business. Rivest, himself of MIT, is responsible for RC4, the cipher behind the lock that appears on your browser when you encrypt your credit card number to Amazon and purchase a book.In addition to co-inventing RSA with Rivest, Adi Shamir, from the Weisman Institute in Israel, has blown up more ciphers, more smart-card hardware, more supposedly secure commercial cryptosystems than practically any other man alive.John Gilmore is one of the founders of Sun Microsystems, one of the founding board members of the Electronic Frontier Foundation, and a founding cypherpunk. For someone who\u2019s stirred up so much trouble, and with all the right people, he\u2019s one of the kindest folks I\u2019ve ever met.Gilmore\u2019s also the man who funded, for $250,000 of his own money, a special-purpose cryptographic supercomputer humorously called \u2018Deep Crack\u2019, which broke the US Government-mandated 56-bit Data Encryption Standard, or DES. In less than 3 days. At an amortized cost per key of about $360.Paul Kocher, a well-respected cryptographer with several famous cryptosystem attacks of his own to his credit, was the man who designed and built \u2018Deep Crack\u2019 for Gilmore, and who now runs it occasionally, on behalf of the EFF, under whose auspices the DES effort was undertaken to begin with.DES is ubiquitous in finance: $3 trillion a day in currency transactions are encrypted using DES, for instance. Breaking DES, in so short a time, and especially for so little money, was an act which sent shivers up the spine of bank security professionals everywhere.It\u2019s even worse than that. 56 bits, the largest keysize possible with DES, is also the largest key-size allowed for export by the US government. Not a good place for the financial community to be in, technology-delaying \u2018exemptions\u2019 for financial cryptography aside.So, into my email inbox arrives a message by and for the aforementioned cryptographic pantheon. The message says, quite simply, that just by designing and building a special-purpose machine to brute-force-search the DES keyspace, Kocher and Gilmore had inadvertently constructed a prototype MicroMint machine. They had, without knowing it, built a machine which would mint money in very, very, small denominations. A production machine would start at one thousandth of a dollar and go down from there.I just sat there, stunned. I thought it would be years before something like this was going to happen. Digital bearer microcash has always been my \u2018way out there in left field\u2019 scenario, something I used to scare old people, children and politician with. I joked about routers that would use micromoney to buy bandwidth low and sell it high, saving enough out of operations to buy a copy of themselves. Or about toasters which would buy their electricity out of the wall. Or cars which pay tolls to use neighborhood streets and roads. Privately owned streets and roads, much to the joy of libertarians everywhere.Rivest apparently cc\u2019d me on this amazing email message because I had talked to him over lunch, almost two years ago, about commercializing MicroMint someday.So, in my reply to this email message from cryptographic Olympus, I effused, at typical great length, about my underwriting model for digital bearer settlement, and how, since the prototype was already there in the form of \u2018Deep Crack\u2019, it was probably time to talk about building a production version of a MicroMint machine. Somehow. An actual financial cryptography supercomputer, probably costing several million dollars or more. Somehow.Since everyone but Gilmore was going to Anguilla the next week for FC99 anyway, something I\u2019m sure Rivest knew when he\u2019d sent the email, I proposed that all of us talk about it there.Immediately, I started emailing all the other people I thought I needed to make this work. Fortunately, they, too, were almost all going to Anguilla for FC99.The very first person I wanted sitting on my shoulder for a reality check, Jiminy to my Pinnochio, was Paul Guthrie, VP of Advanced Technology at VISA. Paul has been a long-time subscriber to my all digital commerce and financial cryptography lists, and has gone to every one of my Financial Cryptography conferences since the beginning.Paul and I have talked extensively in the past about what it takes to effect a withdrawal of digital bearer cash from the automated teller network on to the internet, instead of a mere purchase of digital bearer cash with a credit card. Even more important was solving the problem of deposits from the net, which, oddly enough, is not intractable at all. Since VISA has it\u2019s hand in practically all funds-transfer and payment-systems networks, especially, for my purposes, the PLUS ATM network (Cirrus is owned by MasterCard), Paul\u2019s a very good person to know, and we have a lot of fun talking about this stuff.It dawned on me, as we approached the conference, that the only two people I really needed to talk to to see if this was technologically possible, better, to have talk to each other, was Paul Kocher, the builder of \u2018Deep Crack\u2019, and Paul Guthrie, who could figure out in detail what integrating a MicroMint machine with the rest of book-entry financial system meant. Everyone else was just window dressing.Did I get some amazing window dressing. I ended up with a dinner, for 17 people, at a nice French resturaunt just down the beach from FC99\u2019s first-night cocktail reception. I just went around the room towards the end of the reception, grabbing everyone I thought I needed and hauling them down the beach to dinner.Besides Duncan Goldie-Scot, of this newsletter, this crypto-herding exercise included people like Nicko van Someren, the founder and CTO of nCipher, a British company which makes cryptographic accellerator hardware for internet commerce; Adam Shostack, cypherpunk turned CTO of Netect, a network security software company; Fearghas McKay, former British Internet Society chairman and now CTO of MIDS, an internet traffic-analysis company; Derek Atkins, of PGP 3.0 fame and now of Lucent; and Jason Cronk, owner of a large Florida web-hosting firm, and a big advocate of cash-settled geodesic recursive markets for intellectual property.I didn\u2019t grab Ron Rivest himself and shove him down the beach towards dinner like I did the rest, because as someone with lots of people wanting his attention I figured he would be busy. But, to my surprise, after we had all sat down to dinner, Rivest and his wife wandered in for dinner on their own, and they came and sat with the rest of us. I was very happy.So, after sitting all the right people together so they could talk to each other afterward, I banged on a glass for attention and got everyone caught up on Rivest\u2019s email message about the possibility of \u2018Deep Crack\u2019 being used to run MicroMint, kicking off an excellent dinner conversation on how to make an internet bearer microcash system happen.It turns out that while it may be a little complicated to make changes to the ATM system to allow deposits from a third-party machine in much the same way that you can make withdrawls now, you can use other systems like ACH to get the same result, and, in fact, most of the problems faced by a nacent MicroMint are regulatory. People like Paul Guthrie kept beating me over the head with Federal Reserve Regulation E, which, as currently written, prevents digital bearer cash from being treated the same way as paper bearer cash is.At this point I said something fateful. I said, \u2018If you guys can design a system which allows me to withdraw money, in microcash, from my bank account over the internet, and to deposit it later the same way, I\u2019ll get you guys, Ron (Rivest), Paul (Kocher), Paul (Guthrie), and Nicko (van Someren) in front of Alan Greenspan himself if I have to, demo it, and get Reg E changed.\u2019 Dead silence. Followed by skeptical laughter all around.Fortunately, I\u2019m still immune to this stuff. I\u2019d been there before, and I consoled myself with my favorite Schopenhauer quote, the one about how new ideas are first ridiculed, then fought violently, and then declared obvious.Yet, Greenspan, a not-so-closet libertarian, if not a closet \u2018Austrian\u2019 economist, loves the idea of private currencies like we would be doing with this MicroMint box, and, if talked to in the right way, he would probably become an advocate for a revision of Reg E to account for digital bearer cash.So, for the next day or so, I couldn\u2019t get this idea out of my mind. It was dawning on me that, because of developments with the DigiCash patents, and especially with this news about MicroMint, that there was simply no scientific or technological obstacle whatsoever to the underwriting of internet-based digital bearer instruments, not just microcash, not just \u2018macro\u2019cash, but, someday soon, debt, equity, and any derivative thereof.It\u2019s time to do some actual finance with all the financial cryptography. Later in the conference II came up with a company name for an internet bearer underwriting corporation. I called it, oddly enough, the Internet Bearer Underwriting Corporation. The fact that the corporation\u2019s initials sound like \u2018I-Buck\u2019 never entered into my mind.Two weeks ago, I went downtown to the lawyers who incorporated my last company and got the ball rolling. We registered the Internet Bearer Underwriting Corporation in Delaware a week later, and I\u2019m actively seeking officers, a board of directors, and, of course, shareholders. I have signed the incorporation papers, so I guess it\u2019s official.I\u2019m hoping to turn the key on all of this, to go live to the net, by the first week of July, 2000. That should allow whatever Y2K hysteria is left to transpire, certainly, but it\u2019s mostly because I don\u2019t think I can raise money and get anything built faster than that, anyway. And, frankly, it will probably be later, \u2018internet years\u2019 or no.I want IBUC to underwrite, after 5 years, $30 billion a year in internet microcash, in bearer form, at an average front-end load of 85 basis points. That\u2019s how the investment hockey-stick looks, anyway. $30 billion is a scary number in the technology business, but it\u2019s not too scary in finance remember that $3 trillion-a-day currency market.So, wish me luck, everyone.Back to table of contentsAt the end of last month I began building the revenue model for IBUC, the Internet Bearer Underwriting Corporation, which I founded here in Boston, and wrote about in the last issue. You can \u2018back\u2019 into some pretty interesting numbers without doing a market test at all, something which is, frankly, impossible anyway, given the mostly unknown, and not insignificant capital cost of building the MicroMint box, for instance. First, you need an adoption curve. Typically, people in marketing use the logistics equation\u2019s curve. In our case, however, we had some real data, the historical and estimated future dollar volume of internet retail transactions, which, of course, are mostly credit card transactions. We got some from a fairly reliable source. These adoption curves start in the small hundreds of millions in 1995 or so, and, from 1996, they grow at a compound annual growth rate of about 100% or so over the last four years, into the tens of billions for this year. Using this time series, we now have as good a guess for an adoption curve as any for a proposed digital bearer payment technology. If something proves useful, it\u2019ll probably be adopted this fast, and if done right, probably won\u2019t be complementary or competitive with existing transaction types, thus increasing the dollar volume of internet transactions over time. So, we can take this normalised curve and tweak it for all transactions executed by mulitiplying the credit card number by some factor, or, we can use it fractionally, like we did, to gin up some numbers for a specific product. Again, you can back into a fairly nice approximation with actual data. Every year, the Bank for International Settlement publishes a report showing the global transaction counts and dollar volumes by each payment method, cash, credit cards, checks, wire, ACH, and so forth. Since virtually all transactions on the internet are executed with credit cards, if an meatspace-equivalent-risk digital form existed in digital bearer form, it\u2019s safe to assume that we might apply the meatspace ratio of that method to credit cards to the cypherspace credit card number. Of course, that doesn\u2019t work so good for MicroMint-based microcash, which doesn\u2019t have a meatspace equivalent, but it\u2019s a good start. So, use that factor times whatever market penetration number you think you can justify, and you have, voila, a revenue curve. So, now, we need an upper bound to all this unbounded enthusiasm. My CFO and I were wondering how we were going to do this, when, we remembered that we were in the underwriting business. After rooting around a bit, it dawned on us that Goldman Sachs had just filed a shelf offering for their IPO, so we went to the Securities and Exchange Commission\u2019s EDGAR website to go look at it. Right up there, on a metaphorical movie screen, was about a megabyte of information on how to be an underwriter, including the size of the global capital markets, Goldman\u2019s underwriting revenue and profits, and a whole host of other goodies. When we got through reading this, we were swinging from the lamp posts.Cheers,\nRobert HettingaBack to table of contentsRegulators have not even started to get to grips with the challenges they will face in the wired world.In the summer of 1996, about a year after a bunch of us started the Digital Commerce Society of Boston, friend and fellow ex-cypherpunk Perry Metzger, formerly of Bellcore and Morgan Stanley and now owner of Piermont Systems (www.piermont.com), a well-regarded financial computer security integrator, came up from New York to talk to us about how financial cryptography would allow the issue, on to the net in digital bearer form, of any financial instrument we could conceive of. Perry discussed some whimsical \u2018gold-denominated Burmese opium futures\u2019, for which he named his talk that day.Implicit in that title, of course, was the point that government financial regulation, and, someday, governments themselves, were somehow \u2018optional\u2019 in a world of totally anonymous, but still non-repudiable transactions.Eric Hughes, one of the co-founders of the cypherpunk cryptography enthusiasts\u2019 list, went even further in his thinking. He liked to say that, in imagining a world with ubiquitous internetworks and strong cryptography, it helped to \u2018think like an illegal actor\u2019. Imagine, in other words, a world of ubiquitous recreational vices, murder-for-hire, and all the other staples of any good mob novel: all of it available, with impunity, everywhere, all the time, on the net, for a price. A frankly romantic vision, now, in hindsight.If anything, recent history seems to show otherwise: all law seems to be enforceable everywhere, all at once.For instance, several years ago a gentleman was extradited to Tennessee and convicted for the pornographic contents of his California computer bulletin board.Within the last few years, two members of the cypherpunks list themselves have been convicted, and sent to jail, for making public threats to specific federal judges and officials, both involving completely hypothetical digital-cash-settled assassination auctions. Hypothetical, of course, because there isn\u2019t a working digital cash system, among other things. One of those convictions seemed, to me at least, more for a form of tacky political performance art than any physical threat to a judge, though the judge apparently thought otherwise.And, of course, we should expect equivalent international incidents of these kinds, sans theatrics, sooner or later. After all, almost all countries have extradition treaties with each other for violent crime, and most at least for fraud, if not necessarily for other financial or tax crimes. If the aforementioned gold-denominated Burmese opium futures were illegal in one place at all, current legal opinion holds, cyberspace makes them extraditable, and thus illegal, everywhere, no matter the server\u2019s physical jurisdiction.Yet, cryptography itself, the thing which could so romantically change this state of affairs, is still being \u2018decriminalized\u2019, and, recently, it has been done so an astonishing rate. Within the last month alone, Canada, Germany, and Britain, even France, who virtually outlawed cryptography of any strength whatsoever, have all seen the writing on the digital commerce wall, and have announced, grudgingly, that they will explicitly \u2018decontrol\u2019 cryptography in some fashion or another.As people on the net have known for years, nation-states can now see that digital commerce means financial cryptography, and that financial cryptography must, of necessity, be the strongest possible cryptography available if it is to be of any use at all.In other words, nation-states understand one of Hettinga\u2019s many \u2018laws\u2019 of digital commerce: Financial cryptography is the only cryptography that matters.Even national security is taking a back seat to commercial \u2018signals intelligence\u2019. Last month, the US Congress found itself the scene of the most amazing spectacle, with the National Security Agency claiming, of all things, attorney-client privilege in order to keep from discussing Echelon, a 40-year-old \u2018I\u2019ll spy on your people if you spy on mine\u2019 co-operative eavesdropping arrangement between the intelligence services of most developed nations.Yet, the primary reason for such sunshine in dark places is not politics at all: it is business.In the ultimate swords-to-ploughshares exercise, Echelon data, obtained at enormous taxpayer cost, is now being used, evidently, to give US companies an economic advantage in their international business negotiations. Why? Because, of course, other countries do it for their citizens. France, with its ironically strict cryptography controls, has been repeatedly caught informing companies like Bull and Airbus about the results of its operations against companies like IBM and Boeing.Access to Echelon data seems to have even been offered by David Aaron, the Clinton administration\u2019s erstwhile roving cryptography ambassador, as an inducement for countries like Australia to sign on to the Wassanar \u2018 arrangement\u2019, an \u2018informal\u2019 agreement among a large number of industrial nations to promote so-called \u2018key-escrow\u2019 encryption, a form of cryptography where the government has a copy of everyone\u2019 s encryption keys. Key-escrow, or Government Access to Keys (GAK) to its foes, is, of course, mutually exclusive from digital commerce, and GAK\u2019s various US legislative incarnations have been steamrollered accordingly.My guess is that the Jospin government finally figured out that \u2018infowar\u2019, when it happens, will occur not between nation-states, but between businesses, and that the best way for France to protect her businesses, and thus her tax base, is to allow their use of the strongest possible financial cryptography available. Which, given the eventual use of financial cryptography on the internet to hide private financial assets from confiscation by nation-states, makes for a marvelous paradox indeed.So, what about that romantic vision of \u2018cryptoanarchy\u2019 , as Tim May, another founding cypherpunk, called it?Remember, most of the acts that we call criminal today, especially those involving violence and property, still happen in \u2018meatspace\u2019, the abode of humans, and not \u2018cypherspace\u2019, the abode of encrypted electrons.Meatspace, as anyone who has seen (or suspected) a surveillance camera knows, is becoming more and more supervised with every iteration of Moore\u2019 s Law. A digital CCD video camera, ready to be plugged into the internet as a web-cam, sells for less than $100 these days. Thus, it\u2019 s no surprise that an overwhelming majority of this surveillance is the completely private supervision of completely private property to prevent that property\u2019s theft or damage. Yet, people don\u2019t complain about this ubiquitous videography nearly as much as they would if a government did it. In fact, except for ostensibly personal spaces like restrooms or employee locker rooms, people don\u2019 t complain at all about private supervision of private property.As we encrypt our digital property to protect it in \u2018cypherspace\u2019, making it more invisible to nation- states, we increasingly supervise our physical property to protect it in meatspace, making it more visible if you will, all without requiring a nation-state to do it for us.More important, we increasingly enforce those property rights with private means: security guards, for example, armed or otherwise. That\u2019s because, like everything else we buy, it is increasingly cheaper to buy private goods and services than \u2018public\u2019 ones, even force.Put another way, direct payments, priced in auction markets, are increasingly cheaper than transfer payments, at a calculated price, between various accounts on a firm\u2019s, or a country\u2019s, books. Professor Von Mises and his calculation argument against socialism strikes one more time.Moore\u2019s law accelerates this by dramatically reducing transaction costs, both in obtaining and processing necessary market information, first with cheap telephony, personal computers and faxes, and now with email and the web, but also in reducing the execution cost of those transactions themselves, with SSL and digital signatures for credit cards and checks, and, eventually, the clearing and settlement cost of those transactions as well, with digital bearer financial cryptography.The result of lower transaction costs, as Coase tells us, is smaller, and more autonomous, \u2018firms\u2019: private, public, or otherwise. The fractal disintegra- tion of large hierarchical empires like the former Soviet Union, or Yugoslavia, is a case in point, but so too is the peaceful \u2018devolution\u2019 of centralized power to smaller governmental units in both the US and Britain. Or, even, when one thinks about it, the apparent commercialisation of the Chinese People\u2019s Liberation Army.Nation-states, like their aristo/theocratic predeces- sors did with industrialism, will have to stand back and let the geodesic train go by. And, like aristo- crats and theologians before them, politicians will increasingly become mere ceremonial appendages to a larger, more geodesic, economy and society. The nation-state as entertainment, if you will.So, we might actually have gold-denominated Burmese opium futures someday. Financial cryp- tography allows anything to be bought and sold, of course, as long as it can be represented on a wire with bits. Getting delivery of physical goods in some eventually private \u2018 jurisdictions\u2019 may be an- other thing altogether.We might even have, heaven forbid, auction mar- kets for private-sponsored assassination itself, just as Hughes and May predicted, so long ago, at least in net-years. Certainly the death penalty is a type of state-sponsored assassination, and lots of countries still have that. Commercial assassination, ala \u2018The Godfather\u2019 is a, um, horse, of a different colour en- tirely, though.War is, of course, murder on a grand scale, and something the more centrally-controlled nation- states have been particularly good at in this century.But, I think, on the whole, with enough private supervision of private property, physical crimes, especially violent ones, will decline over time, and maybe even dramatically.War and murder, are, after all, seriously bad for business \u2013 ask any Serbian shopkeeper these days \u2013 and the best way to prevent vandalism and the destruction of property, even on a large scale, is to identify the people doing it and then physically prevent them from doing so. This process would start from the ground up, it would seem to me, just by securely broadcasting criminal actions to a geodesic network, and warning others nearby to secure their property, and by force, if necessary.So, even if, over time, most financial assets will migrate to the net, and the ability for an individual to act remotely to effect a physical outcome \u2013 even a violent one \u2013 increases, this action-at-a-distance can only occur within the bounds of someone else\u2019s private surveillance and protection scheme.Your freedom to act ends where my nose begins, in other words.That is not an intolerable state of affairs at all.Back to table of contentsBob Hettinga continues his series about his start-up Internet Bearer Underwriting Corporation \u2013 IBUCI started IBUC, my new internet bearer underwriting venture, because bearer micropayments, a technology I had left for the distant future of internet commerce, had come out of nowhere to be the easiest technology to implement first?The same kind of unexpected, amazing thing happened on the demand side of the equation last month, when internet advertising revenue began to decline precipitously.It was only within the past year that advertising revenue was overtaken by commerce revenue as the mainstay of the internet economy. First with brochure sites for companies such as AT&T made by companies with names such as net. genesis and RazorFish, and then with internet gold-rush sites such as Pathfinder, HotWired, Yahoo, Lycos, and Excite, it seemed that the only way to make money on the net was to either construct a brochure site, which itself was nothing but an advertisement, or own a content site, which was itself supported by advertising. Even better, obviously, was selling equipment and services to those who did one or the other of the above. Gold pans and blue jeans to the miners.The realisation that inventory databases could be linked with financial cryptography on a web-server means that commerce for things normally stored in warehouses and sold by salesmen has exploded on the net. Companies such as Dell and Cisco get a majority of their multi-billion-dollar revenues straight from the web, for instance. The total amount of internet commerce is expected by several sources to top a trillion dollars by 2002. With the very sizeable exception of financial assets (a majority of all individual stock trades will soon be originated from the internet, for instance), and travel services, most of that projected internet commerce revenue will still be for items you can physically touch, things which are delivered later, instead of now, things which you\u2019ll keep after you purchase them and not literally throw away after a single use.But it isn\u2019t that commerce for books, computers, and other actual stuff is just getting bigger than that for advertiser-paid content. Not at all. Advertisements on the web have shown themselves to be eminently ignorable by the web-browsing public, and, as a result, advertising revenue has actually fallen, and considerably so. Every large web-content site you have ever heard of has a huge budget for advertising outside the net, print, magazine, television, even radio, because ads on the internet itself just aren\u2019t that effective. And, yet, what these very firms sell, ostensibly, is internet advertising, and not the actual content of their websites. So, while things haven\u2019t reached panic proportions yet in the content business, it will be interesting to see how content providers are going to react to all this.The very definition of industrial-age mass media is that it is produced on something cheap enough that it can thrown away after consumption. Of course, geodesic media has the same or cheaper delivery cost. Furthermore, Moore\u2019s Law on a ubiquitous internetwork allows the size of a \u2018production run\u2019, or \u2018audience size\u2019, to approach one. Or, at least, you could do it that way, if you could lower your transaction costs far enough. In other words, in a geodesic medium such as the net, it will probably turn out cheaper to actually pay the content\u2019s creator directly for custom content with digital bearer microcash than it is to \u2018target\u2019 advertising through one or more industrially-organised \u2018infomediaries\u2019 (or whatever McKinsey\u2019 s buzzword-du-jour is these days).That\u2019ll be true no matter how big, or fast, your customer datamines can be. The market is your database, in other words. Database marketing, just like database transaction settlement, will choke on the sheer volume of \u2018targeted impressions\u2019 it has to monitor, and, more important, transfer prices it has calculate to pay for those impressions. A geodesic market sees such information choke points as damage, and routes around them.Advertising supported mass-media, is, of course, the quintessential transfer-priced command economy. That is, accountants, not markets, attempt to calculate the value of whatever content an advertiser purchases on behalf of that content\u2019s consumers, using not-always-accurate heuristics like cost per thousand impressions, say, or percentage audience share. As most serious students of finance already know, it was the demonstration of the near-impossibility calculating a transfer price which resulted in most of the Nobel prises in economics given out in the last few decades. And so, as I\u2019ve said about financial cryptography and cryptography itself, financial economics is the only economics that matters these days. In fact, the only time transfer pricing is even attempted is when transaction costs outside the firm were too high, for one reason or another, to get a market price. This is, of course, Coase\u2019s theorem, the fundamental theorem of microeconomics, and that theorem, in turn, is the very definition of what is, or isn\u2019t, a firm. More to the point, transaction cost determines exactly how large any firm can be.The very concept of economy of scale comes from this. Since we at IBUC have sworn ourselves the equivalent of a barbarian blood-oath against transfer pricing on the internet, we have always considered web-page advertising as an almost unitary proxy for the potential content segment of digital bearer microcash market, and thus completely fair game when we go \u2018viking\u2019 in that direction. However, it now appears, the market for that unitary proxy has fallen. Does mean that there\u2019ll be no more content on the internet, especially at very low cost? Hardly. It only means that transfer pricing doesn\u2019t work as a way to pay for internet content. It\u2019s only really a problem for industrial-style distribution hierarchies, not the people who actually produce new content. As the technology of internet content delivery keeps exploding, and the price of distribution itself collapses accordingly.MP3 audio files proliferate, much to the consternation of record company executives everywhere. And much to the delight of those artists getting heard by more people just by disintermediating those very same record companies. And, it\u2019s getting cheaper.All this new networked content business needs is a new way to pay for it all at that exponentially falling delivery price. (Shhhh. If you listen very carefully, you can hear a Norse rowing song coming up the river.) So, while most industrial content \u2018infomediaries\u2019 may be hiding behind their castle walls of lawyers, professional managers and strategic consultants, the smarter ones are investing a little danegeld to get involved in these new markets for content and get along with their new barbarian neighbours. After all, artists just want to be seen and heard, not sell to themselves.Intermediation doesn\u2019t go away in this new world: it atomises into smaller and smaller bits with each iteration of Moore\u2019s law. So there is a way to pay for micro-cost content, and that is digital bearer micropayment. It\u2019s simple to imagine a protocol where a content client keeps putting pennies into a server\u2019s coinbox for a certain number of megabytes or seconds of additional streamed content. It\u2019s even easier to see some kind of XML function for doing things with each web page we see. The problem is, most of this potentially valuable content is still, for all practical intents and purposes, buried deep inside the transfer-priced cost of other things, like advertising, and even internet access. Internet access which, itself, is buried in the cost of telephony in certain tariff-mandated transfer-priced markets such as Great Britain. It\u2019s \u2018free\u2019, in other words. That the word \u2018free\u2019 actually means a redirected payment and a transfer price makes no difference to an uninformed, and, frankly, innumerate, public. They are \u2018paying\u2019 all that they want to for using the web, for internet access, and especially for telephony and, they expect the price to fall as time goes on.It\u2019s what Michael Eisner likes to call the financial \u2018box\u2019 we have to operate in. As long as a customer\u2019s cost to use the net falls over time, he\u2019s happy, whether he pays cash to every website he sees, or he pays for it by the month to an ISP, or he pays what amounts to a tax on his phone calls, to get it.How does a content provider bootstrap this? Easy. Damn the torpedoes, sell stuff for cash anyway, and let the market sort it out. Transfer-priced content is going to go away, one way or another, and clinging to the sinking ship of advertiser revenue and other equivalents won\u2019t help matters.What will happen in the content market is what always happens when revenue dries up: a shakeout. If it\u2019s not currently underway, that is. Pathfinder, for instance, is gone, subsumed by a separate site for each Time Warner\u2019s media properties. The people who do things for free will continue to do so until their expenditures, or their opportunity cost, causes them to quit. The people who do really valuable things will continue to do so as well, and get paid for it somehow. For the rest, it\u2019s really a question of either being the lowest cost producer/ distributor, or finding new revenue streams, or some combination of both.My claim is that those in the last group will be people who focus on aggregating and distributing content instead of creating it, that everyone\u2019s going to be the lowest cost producer/distributor, that the transfer-priced revenue they were invented for will dry up. Any good market eats it\u2019s young, and all that.That brings me to something I\u2019ve called a geodesic recursive auction. I\u2019ve actually talked about the idea here in this column before, but this new \u2018emergency\u2019 in internet content revenue dictates a little more detail in the discussion.The idea itself is pretty simple. I create new content. I sell it to you for the most I can get for it, and I keep doing that until nobody else wants to buy it anymore. If people are deluging my server with purchase requests, I raise my prices until the load goes down to something manageable. If I have no traffic, then I\u2019m charging too much. Buy low, sell high; charge all that the market will bear. Darwin rules. By the same token, if I download something from you, I can turn right around and sell it again to anyone who wants to buy it, thus maybe recoup my costs, and even make a profit. The assumption is that on the net, things like copyright and other intellectual \u2018property\u2019 controls simply cost too much to enforce. It\u2019s hard to reach out and arrest somebody over the net, particularly if functionally anonymous bearer transactions are the cheapest possible transactions. Also, the additional cost of copy-control mechanisms such as \u2018watermarks\u2019, \u2018cryptolopes\u2019 and so on is simply too high for whatever extra value they might provide.Before the advent of ubiquitous geodesic internetworks, much less auction-priced digital bearer transactions, huge amounts of profit were eaten up in the inefficient transfer-pricing of production assets, or, more important, the information about that assets, up and down the organisation chart and its corresponding chart of accounts. Industrial-era record companies, publishers, and entertainment networks are all still fairly hierarchical entities today, even though the economics of Moore\u2019s law has changed their business considerably over the last thirty or forty years. It\u2019s not without a reason that the most important person in the movie business these days is the artist\u2019s agent, and not the studio head, for instance. Digital bearer cash, at sufficiently small denominations, probably the $10-3 (a tenth of a penny) range, or maybe lower, enables the direct purchase, and, more important, the immediate disposal of content after its use.In so doing, it solves precisely the problem that advertising does by batching impressions and transfer-pricing the cost of delivering the content responsible for those impressions. More to the point, it uses economics and software to solve the problem of copyright infringement, because storage cost should vastly exceed purchase price. (By the way, we at IBUC call $10^-3 a \u2018minidollar\u2019 because \u2018millidollar\u2019 sounds too close to \u2018Millicent\u2019 a proprietary trade-name belonging to Digital, now Compaq. Another transfer pricing problem, yes?) In other words, digital bearer minidollars give us the exact industrial definition of \u2018mass-media\u2019 \u2013 use it once and throw it away \u2013 but without the transfer-pricing overhead of hierarchically organised markets. Toffler\u2019s \u2018mass-customisation\u2019, indeed. Only there\u2019s no industrial-era \u2018mass\u2019 to any of it. Every single bit is paid for directly by the user of those bits, in a hyper-efficient, auction-priced, cash settled, geodesic, market. The customer, and the producer, get exactly what they want, and more of it, for less money. Sounds like progress, instead of disaster, to me. And, of course, for us at IBUC, it\u2019 s almost divine providence.Back to table of contents\"Who needs money anyway?\": The New Monetary Economics, Monetary Separation, and Digital Bearer SettlementOne of my best friends in the whole world is Mark Tenney of Mathematical Finance in Alexandria, Virginia. The best man at my wedding, I met Mark during my mostly sad attempt to go to the University of Chicago as a \u201cStudent-at-Large\u201d, where I snuck in the back door and hung out for almost a year before they threw me out \u2013 though, to my credit, or lack there of, it was for impecuniosity, more than anything else. \u201cFirst thing you do, you get the money\u201d, and all that.It was fun, though, and I did manage to transfer enough credit from Chicago to finish my undergraduate philosophy degree at Missouri. Up until the last five years or so, when I discovered the \u201cUniversity of the Internet\u201d, I\u2019d always wished I could afford to go back some day and play some more, especially in finance and economics.Anyway, Mark was one of those scary mathematical prodigies who finished both high-school and college in three years apiece, finished all-but-a-doctoral-dissertation in Physics at Brandeis in three years, hedging himself with an Master\u2019s, then turned on a dime and did the same thing in Finance at Chicago, hedging again with an MBA in Finance. All this before wading into the fray of quantitative fixed-income analytics-for-hire, swinging that claymore-sized intellect of his with both hands.Last year, I told Mark that I had decided to concentrate on digital bearer transactions full-time, and he asked a bunch of questions like he always does when I reveal my latest off-the-wall idea. And not saying much in reply, which he also always does, being one of the most laconic people I\u2019ve ever met. That\u2019s okay, I suppose. I talk enough for both of us.Anyway, a few days later, Mark calls me up, all excited. Well, as excited as Mark gets, anyway. \u201cYou could issue digital bearer certificates backed up by an S&P 500 portfolio,\u201d Mark says with not much affect, followed by dead air, which is my cue to talk.\u201cYup,\u201d says I, chattering away, \u201cThat\u2019s easy. Old hat. We talked about stuff like that on cypherpunks years ago. The only problem is, it\u2019s illegal in the US for various reasons, and proving that you\u2019re only issuing to and redeeming from foreign nationals is really too complicated. We don\u2019t call it \u2018digital bearer settlement\u2019 for nothing. Of course, that doesn\u2019t keep several smash-the-state cryptoanarchists out there from daydreaming, in color, about that idea pretty much full time. Expressions like \u2018tax-evasion\u2019 and \u2018money-laundering\u2019 only make them work harder, after all. Me, I\u2019m only in it to reduce transaction costs. Illegal business is chump change compared to putting the entire global economy onto the net in digital bearer form.\u201cSteve Schear and I even figured that you could do it with just about any stock, anywhere, from anywhere, as long as it was legal in the jurisdiction you did it from. Sort of an \u2018Unsponsored Network Depository Receipt\u2019, UNDRs, for short\u2026\u201d and then, I proceeded to go into an entire rant on that. In four-part harmony. Arlo Guthrie would have been proud\u2026Finally, I run out of gas, like I always do, and Mark says, \u201cIf you issue digital bearer certificates collateralized by the S&P 500, you won\u2019t need cash anymore.\u201d More dead air.\u201cWell,\u201d I said, jumping back in, \u201cmaybe, maybe not. I mean, the dollar\u2019s pretty much pecunia franca right now, yes? Anyway, you wanna write something up about it, and we\u2019ll zing it out onto some of my mail lists for comment?\u201dI figure that if Mark was excited enough, he could bash on the mathematical finance of this idea much better than I ever could, being mostly innumerate myself, with my undergraduate philosophy degree from a midwestern state-school, and leftover student-at-large credit from UofC.I mean, the closest thing I ever got to a genuine financial education was sneaking out of the University of Chicago Bookstore Graduate School of Business textbook section with books like Brealy & Meyers\u2019 \u201cCorporate Finance\u201d, and Sharpe\u2019s \u201cInvestments\u201d. Needless to say, reading stuff like that, and hanging around people like Mark at a place like Chicago pretty much set my \u201cif there\u2019s not a market for it, it really doesn\u2019t matter\u201d view of reality into steel-reinforced concrete. It\u2019s kind of the core of my anti-state bias as well, I suppose.Mark is, of course, a pro at this kind of stuff, having figured ways to use Green\u2019s functions to kill off lots of Monte-Carlo modeling, building closed-form solutions for various security prices, and so forth. His asset-liability models sit in the guts of several very large insurance companies, and there are questions about his asset-value calculation methods on the US actuarial exam. One of his latest projects is building the analytical core of start-up e-finance company in an as-yet undisclosed European country, and his client before that was one of the largest financial services firms in the world, owning well-known insurance and mutual fund companies everywhere you would care to name.So, I didn\u2019t hear much from Mark about this idea of his anymore, probably because most of his \u2018wetware\u2019 bandwidth is paid for these days, with real money, and he doesn\u2019t have much time to spare for actual fun \u2013 much less writing a non-reviewed finance paper that I would just pass around the net for free. And so that\u2019s the last I heard of it for a while.Then, a few months ago, after I\u2019d started up my new company, IBUC.COM, to actually issue digital bearer cash and other stuff some day, some newbie on the cypherpunks list talked about trying to do yet another internet currency, a smallish rant with a whole bunch of, well, wrong stuff in it. So wrong, in fact, I can\u2019t even remember most of it. As is unfortunately usual in these circumstances, I ended up writing my own rant in reply. It centered around my own favorite point on the subject, that unless any \u201cinternet currency\u201d was exchangeable into dollars, or some other standard unit of exchange, nobody was going to pay any attention to it.There have been several efforts on cypherpunks and elsewhere to think about synthetic currencies based on attention, or machine cycles, for instance, and, while using machine cycles to prevent forgery is at the core of most decent micromoney protocols like MicroMint, but you have to denominate your digital bearer cash in something financial, or it will be of no real use to normal people. Not that most cypherpunks care about being normal, you understand, but there it is.Nonetheless, I did toss off some nice words in the direction of the e-gold guys, who, at the time, were issuing a kind of gold-backed \u201cinternet currency\u201d, albeit in book-entry form. They had been having some success with it, mostly among the anarcho-survivalist gold-bug crowd. Meaning that a lot of very bright erst- and proto-cypherpunks have been playing with e-gold, for reasons of politics, paranoia, or both. Or at least so I figured at the time, anyway.Dr. Douglas Jackson, the oncologist-turned-founder of e-gold, is quite a bit more phlegmatic about these things himself, though certainly never a fan of fiat currency. He understands, for instance, that storage costs can make gold-backed account balances actually depreciate over time. But, in implementing the e-gold payment system, he and several thousand e-gold users have ended up with quite a bit more experience in non-credit-card internet payments than anyone else has to date, mostly because they didn\u2019t try to do anything too complicated in the early stages.More to the point, all of Doug\u2019s competition (like First Virtual, CyberCash, and DigiCash, to name a few) have killed themselves off going for the main chance. They kept trying to conquer the world, trying to be some kind of sole transactor of business on the web, without understanding that finance is a business of herds and swarms and that nobody trusts anyone who\u2019s the sole anything.Meanwhile, Doug\u2019s still doing a tidy, if not land-office, business, precisely because he\u2019s not trying to take over the world. In fact, I\u2019d say that anyone who\u2019s interested in internet payment should pay more than a little attention to e-gold, or, as their evangelist Jim Ray likes to call it, \u201cThe little internet payment system that could.\u201dAnyway, Ian Grigg, an expatriate Australian who I can\u2019t really call a cypherpunk \u2013 more of a \u201cmoneypunk\u201d, maybe, since he\u2019s spent a lot of time lately down in Anguilla building things for e-gold, among other people \u2013 sees this cypherpunks rant of mine about internet currency after I forwarded it to dbs, the digital bearer settlement discussion list that I run. Ian observed there that if transaction speed was fast enough, the market would probably converge to a world without cash at all. Shades of Mark Tenney.Since I respect Ian\u2019s opinion, because Ian seems to have read every \u201cAustrian\u201d economist there ever was, and is a great fan of Scottish free banking, not to mention because of all his work for e-gold, which now runs on his \u201cRicardo\u201d web-market-making system, I thought to myself, \u201cOkay. Maybe. Someday. In the meantime, I want IBUC to do cash, dollars preferably, thank you very much, and after that, other actual securities, and, after that, we\u2019ll see if the dollar really does evaporate as the world\u2019s primary exchange currency.\u201d And having said so to the list in reply, I left the discussion there for the time being.Which brings me to a little while ago, when I was half-to-three-quarters of the way through with a nice rant for this column on something else entirely, and ended up throwing it all in the trash.That was because of something I got in email from another friend of mine, one of the best internet transaction lawyers in the business, John Muller, a partner at Bobreck, Fleger and Harrison, in San Francisco. Among other things, John is Chair of the Web Site Working Group of the American Bar Association Joint Subcommittee on Electronic Financial Services (say that ten times fast), and Co-chair of the Automated Transactions and Electronic Agents project of the ABA Cyberspace Law Committee.What John sent me was the most recent Electronic Financial Services Update, the back issues of which can be seen at http://www.abanet.org/buslaw/efss/whatsnew.html, and in that update was \u201cTowards a Moneyless World?\u201d, a paper by Malte Krueger, of the University of Cologne and the University of Western Ontario, for the International Atlantic Economic Conference, which was held in Vienna this past March. Apparently, this paper was also presented in different form to the Second Berlin Conference on Internet Economics a little while later.And, there, after converting PDF to PostScript, and then PDF to ASCII text so I could read it faster, there was a pointer to where my friend Mark Tenney \u2013 and, I bet, Ian Grigg \u2013 got the idea that as transaction latency and transaction costs go to zero, the value function of currency converges to that of more \u201cfinancial\u201d assets: They were quoting, whether they knew it or not, the so-called \u201cNew Monetary Economics\u201d (NME), a phrase coined by Robert Hall, but conceived, in the early 1980\u2019s, by no less a pair of financial luminaries than Eugene Fama, of the Efficient Market Hypothesis, and Fischer Black, of the Black-Sholes option equation. Others, like Krueger, apparently, call this the \u201cBFH system\u201d, in their honor \u2013 or for other reasons, it\u2019s hard for me to tell.Krueger says, of NME/BFH,In the current system money (cash and deposits) is used as medium of exchange and unit of account. In the BFH system there would be no common medium of exchange with a fixed nominal value in terms of the unit of account. Instead, assets with variable prices are used. This implies that, in principle, any asset could serve as a medium of exchange. An example that is often used to illustrate \u2018moneyless\u2019 payments are mutual funds shares. The value of mutual funds\u2019 shares varies with the value of the funds\u2019 assets and within certain limits they can be used for making payments. So, the medium of payment \u2018mutual fund share\u2019 has a value that is not fixed in terms of the commonly used unit of account. Eugene Fama (1980) argues that monetary separation is efficient because the financial system (Fama uses the term \u2018banks\u2019) serves two functions that are independent of each other: the accounting function and the portfolio management function. Banks could fulfill the accounting function without holding assets or using any medium of payment. It would be sufficient to have a unit of account. As an uninvolved third party, banks could just keep records of transactions. The issue of liabilities and the purchase of assets is derived from the second function, the portfolio management function. In this function banks help individuals to hold their wealth in a form they desire.What the above means to me is pretty much what Tenney and Grigg said, that Moore\u2019s law creates an increasingly geodesic, ubiquitous, public internetwork, which, coupled with the financial cryptography of digital bearer settlement, \u201csurfacts\u201d currency into its constituent parts. Why keep something which doesn\u2019t earn you money, in other words? Why not use something which is as risk-free as possible but still earns money while it\u2019s in your possession? Furthermore, the longer money\u2019s going to be in your possession, the more incentive you have to invest in something where short-term volatility isn\u2019t a problem. We\u2019ll leave discussion of my opinion on the \u201caccounting\u201d function as an exercise for the reader.Anyway, Macroeconomists call this division of unit of exchange from unit of account, monetary separation. And, as a result, we get more and more different kinds of exchange with decreasing transaction cost. Banks go back to being \u201ccounting houses\u201d instead of fiduciaries, trustees, keeping track of who owes what to whom, and the returns on money are higher for the users of that money. The advent of the money-market mutual fund, was, of course, a step down this road.As to whether this means the death of currency, Krueger comes down on the side of network effects \u2013 unfortunately conflating them with path-dependency; network effects being cool, and path dependency being balderdash \u2013 and says that the opportunity costs of keeping track of various different asset classes, and, more importantly, exchanging those different asset classes with others just to effect any trade whatsoever in a virtual re-emergence of barter, still costs too darn much, and thus, the internet gives us monetary integration, and not separation. As someone said of Mozart, \u201ctoo many notes\u201d.I\u2019m personally not so sure, Moore\u2019s law being what it is. It might be easy enough with with enough bandwidth and processing power to do all those exchanges and re-balance one\u2019s \u201cportfolio\u201d of money-equivalents, paying people in whatever asset class they want, and still make more money than parking money as dollars in a bank somewhere, or, worse, keeping cash on hand.However, I also think that it\u2019ll be a while, just yet, for that world to emerge, and, frankly, I want to buy things with dollars, and right now.By way of some even more twisted synchronicity, Krueger\u2019s paper then points to my friend Tatsuo Tanaka\u2019s paper on the macroeconomic consequences of internet free banking. Which, oddly enough, I edited and recommended for publication in the peer-reviewed internet journal First Monday four or so years ago. I even invited Tanaka to come up and present the paper at a Digital Commerce Society of Boston luncheon shortly after the paper came out.Tanaka says, first of all, that internet free-banking is like the expatriate-cash Eurodollar market on steroids. Internet free-banking drives the final nail in the coffin of central bank control of any nation\u2019s currency, because, if a currency is stable enough, and maybe even if it isn\u2019t, sooner or later more of the currency is \u201cissued\u201d on a fiduciary basis outside a country, collateralized by foreign-held dollar-denominated accounts, for instance, than is issued by the central bank itself. And the net makes where the money is, heh, immaterial.Unfortunately, Tanaka also says that competition for underwriting cash to the net causes the eventual fractional reservation of digital cash against its denominated currency, and that, sooner or later, crises of confidence in all those different issues, and their various partial reserves, force the creation of, you guessed it, monetary union of some kind. Tanaka liked to wax about the eventual creation of a central bank of cyberspace, thus setting most cypherpunks\u2019 and other free-money advocates\u2019 teeth on edge, mine included, skyward-rolling eyes and all.But the story gets weirder than that. Recently, Douglas Jackson and his crew at e-gold have been taking their association with \u201cmoneypunks\u201d like Mr. Grigg (and, um, others :-) ), to heart lately. They split themselves into a trustee-underwriter relationship of several firms, and, in the process, have created an offshore subsidiary, based in, where else, Anguilla, to, you guessed it, offer fractionally-reserved, (but non-blinded) gold-denominated digital bearer certificates, called, oddly enough, DigiGold.The idea behind DigiGold is to fractionally reserve gold denominated transactions, loaning out the reserve\u2019s other fraction to offset the cost of gold storage, which, as we noted above, at a percent or more a year, is a considerable one if you\u2019re trying to create a currency which is supposed to hold its value. In fact, Ian went so far as to start buying and selling notes denominated in gold recently, apparently as part of his work with DigiGold.\u201cGold-denominated Burmese opium futures\u201d, indeed.For one final bit of weirdness, I eventually got around to reading Glassman and Hassett\u2019s Dow 36,000 article in the Atlantic Monthly, which, at the core of its analysis, notes that among other things and contrary to received wisdom, equities held in the long term are much less risky than even long-term government bonds are, and how the market has been compensating for that for the last few decades or so by driving equity prices slowly upward to their risk-adjusted \u201creasonable\u201d price. Like their title says, they say that the Dow could be at 36,000 and still be \u201creasonable\u201d, whatever that means. Mercy.A splendid read nonetheless, whether you agree with them or not, and the bit about the risk of the equity market certainly makes a compelling argument for a very, very, interesting result for us, in light of all of the above.At the core of all modern financial analysis is the proposition that government bonds, especially short-term ones, are the safest investment. They\u2019re safe because, for instance, the chance of the US government defaulting on any given 90-day T-Bill on any given day is virtually non-existent. T-Bills are literally risk free, and all other investment is calculated against them for riskiness. The Net Present Value equation, for instance, says that if the returns of a proposed investment are less than you would get from a T-Bill, you should forget the investment and keep your money in T-Bills instead.And, at every year of bond maturity, the government bond sits at the lowest point of the risk \u201cwell\u201d for that maturity. Or so I thought, until I saw Glassman and Hassett\u2019s description of what all financial theorists knew already for a fact, that the long-term risk of the overall equity market is much less than that of even government bonds.So. Can we back that \u201czero\u201d equity-market risk down the maturity curve to the present? Maybe, with a derivative or two. I haven\u2019t gone looking for the answer, and it\u2019s press time already. I wouldn\u2019t be surprised, though, and to walk out on a very thin limb, I\u2019m going to assume it to be true.Certainly the idea of, say an S&P 500, or maybe a larger-index-based \u201ccash\u201d starts to make sense, if we can do it. After all, Ian Grigg and his friends are trying, for all intents and purposes, to do roughly the same kind of thing with gold. Gold hops around a bunch, and volatility is probably not a good thing for a currency to have. So any financial engineering you can do to at least take the volatility down a bit would be good. And you\u2019d want to do the same thing with equity indices, because, as a functional perpetuity, a stock can be just as volatile as a 30-year bond might be.What we get, if we do create a low-volatility equity-based currency, is really very interesting.We get what Gene Fama and Fisher Black must have been thinking about back in early eighties heyday of the \u201cNew Monetary Economics\u201d: a completely private form of \u201criskless\u201d return.Think about that for a minute. Not only do we have digital bearer settlement, so we don\u2019t need the nation-state to provide force and ensure the non-repudiation of our transactions, but we don\u2019t even need another kind of force either: the confiscatory force of a nation\u2019s tax system, making for \u201criskless\u201d government securities, which, in turn, undergird our very concept of what risk is.What we get is truly private money. That is, someday we can create a completely synthetic currency based upon a commonly-referenced equity market index.Look, Ma, no currency board, much less a central bank. No guns. No sovereign. And we still get money. Amazing.So now, instead of stepping back to a commodity economy to avoid state control of the monetary supply, using something like gold to anchor value on the net, we can step forward into the information economy, the geodesic economy: All we need to collateralize our transactions is a sufficiently representative and publicly known equity index, with the volatility hedged for short term use using other publicly known derivatives. Presto change-o, a synthetic internet security. And, of course, this works with bearer held stocks, if we ever get those, as well.Finally, anyone who wants to can do this \u2013 well, if their reputation\u2019s good enough. This is finance, after all.Of course, the sticking point all this fun is the state itself, as I said to Mark Tenney more than a year ago. Remember all the book-entry taxes and regulations about bearer ownership of bonds, TEFRA, et. al., here in the U.S., and then exponentiate that number to get the regulatory barriers for bearer equity.It\u2019ll certainly be easier, for the time being, to issue cash denominated in dollars than it would be to try to climb an enormous ziggurat of regulators and legislators, telling all of them that issuing bearer-form equity-index-denominated money would be a good thing, even if it completely removed their central banks, much less their very government bonds, from the center of the financial universe. A lead balloon, indeed. Almost makes you want to believe in path-dependency, that does.But don\u2019t despair. Remember that if digital bearer transactions really do something I\u2019m betting my company on, sooner or later an equity index-based \u201cinternet currency\u201d will in fact emerge as the best way to buy things.Even more interesting, if we\u2019re right, government-extorted revenue will cease to be the foundation upon which the concept of \u201criskless\u201d return \u2013 and all of finance itself \u2013 rests.But that\u2019s probably what Fama and Black had in mind, right?Back to table of contents"}
{"prompt": "A Declaration of the Independence of Cyberspace", "completion": "Governments of the Industrial World, you weary giants of flesh and steel, I come from Cyberspace, the new home of Mind. On behalf of the future, I ask you of the past to leave us alone. You are not welcome among us. You have no sovereignty where we gather.We have no elected government, nor are we likely to have one, so I address you with no greater authority than that with which liberty itself always speaks. I declare the global social space we are building to be naturally independent of the tyrannies you seek to impose on us. You have no moral right to rule us nor do you possess any methods of enforcement we have true reason to fear.Governments derive their just powers from the consent of the governed. You have neither solicited nor received ours. We did not invite you. You do not know us, nor do you know our world. Cyberspace does not lie within your borders. Do not think that you can build it, as though it were a public construction project. You cannot. It is an act of nature and it grows itself through our collective actions.You have not engaged in our great and gathering conversation, nor did you create the wealth of our marketplaces. You do not know our culture, our ethics, or the unwritten codes that already provide our society more order than could be obtained by any of your impositions.You claim there are problems among us that you need to solve. You use this claim as an excuse to invade our precincts. Many of these problems don\u2019t exist. Where there are real conflicts, where there are wrongs, we will identify them and address them by our means. We are forming our own Social Contract. This governance will arise according to the conditions of our world, not yours. Our world is different.Cyberspace consists of transactions, relationships, and thought itself, arrayed like a standing wave in the web of our communications. Ours is a world that is both everywhere and nowhere, but it is not where bodies live.We are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.We are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.Your legal concepts of property, expression, identity, movement, and context do not apply to us. They are all based on matter, and there is no matter here.Our identities have no bodies, so, unlike you, we cannot obtain order by physical coercion. We believe that from ethics, enlightened self-interest, and the commonweal, our governance will emerge. Our identities may be distributed across many of your jurisdictions. The only law that all our constituent cultures would generally recognize is the Golden Rule. We hope we will be able to build our particular solutions on that basis. But we cannot accept the solutions you are attempting to impose.In the United States, you have today created a law, the Telecommunications Reform Act, which repudiates your own Constitution and insults the dreams of Jefferson, Washington, Mill, Madison, DeToqueville, and Brandeis. These dreams must now be born anew in us.You are terrified of your own children, since they are natives in a world where you will always be immigrants. Because you fear them, you entrust your bureaucracies with the parental responsibilities you are too cowardly to confront yourselves. In our world, all the sentiments and expressions of humanity, from the debasing to the angelic, are parts of a seamless whole, the global conversation of bits. We cannot separate the air that chokes from the air upon which wings beat.In China, Germany, France, Russia, Singapore, Italy and the United States, you are trying to ward off the virus of liberty by erecting guard posts at the frontiers of Cyberspace. These may keep out the contagion for a small time, but they will not work in a world that will soon be blanketed in bit-bearing media.Your increasingly obsolete information industries would perpetuate themselves by proposing laws, in America and elsewhere, that claim to own speech itself throughout the world. These laws would declare ideas to be another industrial product, no more noble than pig iron. In our world, whatever the human mind may create can be reproduced and distributed infinitely at no cost. The global conveyance of thought no longer requires your factories to accomplish.These increasingly hostile and colonial measures place us in the same position as those previous lovers of freedom and self-determination who had to reject the authorities of distant, uninformed powers. We must declare our virtual selves immune to your sovereignty, even as we continue to consent to your rule over our bodies. We will spread ourselves across the Planet so that no one can arrest our thoughts.We will create a civilization of the Mind in Cyberspace. May it be more humane and fair than the world your governments have made before.FDavos, Switzerland\nFebruary 8, 1996"}
{"prompt": "Smart Contracts Glossary", "completion": "Agent: A person or organization, usually represented by a true name or nym. Also, a computer program controlled by, and acting on behalf of, an agent. More generally, a combination of a nym with a persistent pattern of behavior, upon which can be based a reputation. Note that this differs from the legal and business definitions of\"agent\", but corresponds more closely to the economics and computer science uses of the term.Contract: A set of agreements or promises between agents.Parties (aka Principals): Agents who have agreed to the contracting question.Third Parties: Agents who have not agreed to the contract in question.Performance: Carrying out the promises specified in a contract.Contractual Security: A paradigm for making security arrangements between organizations, based on two claims: (1) the primary goal of inter-organization security is to protect and enforce the performance of contracts, and (2) where this goal is achieved, dependence on reputation, outside enforcement, and other factors for the secure performance of that organization's contracts is minimized.Contractual Key Distribution: a paradigm for distributing keys among individuals and organizations, in which the key distribution and certificate structure reflects the contractual arrangements between parties.Protocol: A sequence of messages between multiple agents.Smart contract: A set of promises, including protocols within which the parties perform on the other promises. The protocols are usually implemented with programs on a computer network, orin other forms of digital electronics, thus these contracts are \"smarter\" than their paper-based ancestors. No use of artificial intelligence is implied.Alice and Bob: Our exemplar parties to a smart contract.Eve: Our exemplar eavesdropper, whose objective is to find out valuable information about about a contract and its performance without being a party to that contract.Mallet: Our exemplar active attacker. His objective might either be stealing something of value involved in the performance of a smart contract, or denying it to the parties to the contract. He might either be an economically rational agent, out for pure personal gain,or Byzantine, a worst-case attacker who inflicts the greatest possible damage on one or more of the parties regardless of personal loss.Mediator: A third party involved realtime in the protocols between smart contract parties, trusted with some of the contents and/or performance of that contract.Arbitrator: A third party trusted with some of the contents,and some of the history of performance, of a contract, and trusted by contracted parties to resolve disputes arising from that contract fairly.Unbundling: The principle of distribution of trust. Unbundling of mediation and arbitration functions separates tasks, spreads risk, minimizes vulnerability, and reduces linkability, but often at the cost of greater complexity.Enemy (aka attacker): An agent whose preferences could cause another agent harm; a third party who influences performance of a contract to the detriment of one or both parties.Object: Herein used to refer generically to any kind of digital data, which could be a key, a credential, a contract, a program, or a wide variety of other things.Credential: A claim made by one agent about another.Positive credential: A claim made about an agent, that the agent would prefer to reveal, such as a degree from a prestigious school.Negative credential: A claim made about an agent, that the agent would prefer not to reveal, such as a bad credit rating.Cryptographic protocol: A protocol that uses mathematical principles and keys to accomplish smart contract objectives.Privity: The principle that only the parties to a contract, including its designated arbitrators, need to have knowledge of or control over the contents and performance of that contract. Privity as an objective of smart contract is a generalization of the legal principle of privity. It formalizes the tradition of \"it's none of your business\". Attacks against privity are epitomized by Eve the eavesdropper, a passive observer of contents or performance, and malicious vandal Mallet, who actively interferes with performance or steals value. Privacy and confidentiality, or protecting the value of information about a contract, its parties, and its performance from Eve, is thus subsumed under privity. Privity often comes into conflict with observability and verifiability.Observability: The ability of the parties to a contract to observe each other's performance of that contract, or to prove their performance to the other party. Also, the ability to differentiate between intentional violations of the contract and good faith errors. An important objective of smart contract design that often comes into conflict with privity.Verifiability: The ability of a party to prove to an arbitrator that a contract has been performed or breached, and to differentiate between intentional violation and good faith errors. An important objective of smart contract design that often comes into conflict with privity.Reputable name: A nym or true name that has a good reputation, usually because it carries many positive credentials, has a good credit rating, or is otherwise highly regarded. Companies strive to carry reputable brand names, while professionals such as doctors and lawyers strive to have many good personal recommendations of their name. Reputable names can be difficult to transfer between agents, because reputation assumes persistence of behavior, but such transfer can sometimes occur (for example, the sale of brand names between companies).True name: An identifier that links many different kinds of information about an agent, such as a full birth name or social security number. As in magick, knowing a true name can confer tremendous power to one's enemies. It also can have major economic value among those who cooperate peacefully, as in the use of direct marketing to target product information to those agents most likely to be interested in those particular products.Mix: A cryptographic protocol for messaging, in which analysis of who is talking to whom (traffic analysis) by Eve is prevented by the Russian-doll encryption of the message by the sender with the public keys of each mix operator in the chain, and the mixing of messages by each operator, so that panoptic wiretapper Eve loses track of the messages. Only 1 out of N of the operators needs to be trusted with the traffic information, although Eve can sometimes gather statistics over large numbers of messages to eventually guess who is talking to whom. The communicating parties can also be mutually anonymous, and with normal encryption need trust no other parties with the content of messages. Confidential messaging is necessary for the some of the privity features of Chaumian credentials and bearer securities to be strongly implemented on an actual network. Another confidential messaging system is the \"Dining Cryptographers\" net, also invented by Chaum.Nym: An identifier that links only a small amount of related information about a person, usually that information deemed by the nym holder to be relevant to a particular organization or community. Examples of nyms include electronic bulletin board nicknames, pen names, aliases, and brand names. A nym may gain reputation within its community. For example, a conglomerate may sell a wide variety of brand names, each reputable in its own market niche. With Chaumian credentials, a nym can take advantage of the positive credentials of the holder's other nyms, as provably linked by the is-a-person credential.Name space: a set of short identifiers with a simple syntax, such as telephone numbers, computer-readable Internet address numbers, human-readable Internet domain names, etc.Chaumian credentials: a cryptographic protocol for proving one possesses claims made about oneself by other nyms, without revealing linkages between those nyms.Is-a-person credential: In Chaumian credentials, the true name credential, used to prove the linkage of otherwise unlinkable nyms, and to prevent the transfer of nyms between agents.Key: A focus of obscurity and control; a random number drawn from a name space so large that a lucky guess is vastly improbable. The public key half of an assymetric key pair can also act as a nym.Biometric: Information pattern used to identify a particular body, such as a fingerprint, autograph, retina scan, password, etc.Authentication: Proof that one is communicating with an agent that possesses a particular key.Secret key (symmetric) cryptography: Uses a key shared between agents to communicate with confidentiality and authentication.Public key (assymmetric) cryptography: Uses two keys, the private key and the public key. The public key is used to encrypt objects,and to verify digital signatures. The private key is used to to decrypt and sign objects, and is typically kept secret by one or more key holders. Allows key distribution without exposing the key.Secret sharing: method of splitting a key (and thus, in effect,any object encrypted with that key) into N parts, of which only M are needed to recreate the key, but less than M of the parts provide no information about the key. A potent tool for distributing control over objects between agents.Digital signature: Cryptographic protocol, based on public key cryptography, that proves that an object was in active contact with the private key corresponding to the signature: the object was actively \"signed\" with that key. Probably should have been called a \"digital stamp\" or \"digital seal\" since its function resembles more those methods than an autograph.Bit commitment: A variant of digital signatures, used to commit an object, such as a promise or prediction, without revealing that object until later. It is impossible to unobservably violate the protocol, or to modify the object after it has been committed.Blind signature: digital signature and secret-key encryption protocols that together have the mathematical property of commutativity, so that they can be stripped in reverse of the order they were applied. The effect is that Bob \"signs\" an object, for which he can verify its general form, but cannot see its specific content. Typically the key of the signature defines the meaning of the signed object, rather than the contents of the object signed, so that Bob doesn't end up signing a blank check. Used in digital bearer instruments, where Bob is the clearing agent, and Chaumian credentials, where Bob is the credential issuer.Digital bearer instruments: Objects identified by a unique key,and issued, cleared, and redeemed by a clearing agent. When an the object is transferred, the transferee can request the clearing agent to verify that the key has never before been cleared, and issue a new key. The clearing agent prevents multiple clearing of particular objects, but can be prevented from linking particular objects one or both of the clearing nyms who transferred that object. These instruments come in an \"online\" variety, cleared during every transfer, and thus both verifiable and observable, and an \"offline\" variety, which can be transferred without being cleared, but is only verifiable when finally cleared, by revealing any the clearing nym of any intermediate holder who transferred the object multiple times (a breach of contract). Privacy from the clearing agent can take the form of transferree-unlinkability, transferrer-unlinkability, or \"double blinded\" where both transferrer and transferee are unlinkable by the clearing agent. Digital cash is a popular form of digital bearer instrument.Locality: * immediacy, such as that provided by online clearing of digital bearer instruments * dealing with the agents one knows best * dealing in one's area of specialtyHot Backup: A backup service which comes online upon failure of the current service. Usually triggered by a dead-man switch.Zero-Knowledge Interactive Proof (ZKIP): A cryptographic protocol that can be used to prove that an agent possesses a key (and by weaker implication, that otherwise normally functioning agents who have an incentive to respond properly to the challenge, but fail to do so, do not possess the key), without revealing any information about that key. Currently used for authentication, and in smart weapons for Identification Friend or Foe (IFF).Smart Property: Software or physical devices with the desired characteristics of ownership embedded into them; for example devices that can be rendered of far less value to agents who lack possession of a key, as demonstrated via a zero knowledge interactive proof. Methods of implementing smart property might include OND (cf.), and engrained immobilizing or destructive devices to foil attempts to hot-wire the property.Operation Necessary Data (OND): Data necessary to the operation of smart property. For example, a complex, proprietary firing sequence needed to operate a computerized engine, a CAD file needed to manufacture a specialized part, etc. To avoid theft of service, ZKIP is required to open an encrypted channel to the device. To avoid leaking the OND to Eve, tamper detection combined with a dead-man switch can be used on the device end of the channel.Smart Lien: Sharing control of smart property between parties, usually two parties called the owner and the lien holder. This property may be in the proximate possession of the owner or the lien holder, corresponding to the common-law notions of \"artisan's lien\" and \"innkeeper's lien\" respectively. Might be used to secure lines of credit, insurance policies, and many other kinds of contracts that involve smart property.Security: Represents a basic asset, such as a share of ownership (stock) or a claim debt (bonds, cash).Contingent contract: Contains terms which depend on the choice of a party or a state of the world. An option is an example of a contingent contract.Derivative: A call or put option, future, or synthetic asset;such a contract is \"derived\" from a basic underlying security.Synthetic asset: A derivative constructed, or \"synthesized\", by combining securities and other derivatives. Cash flows for sophisticated synthetics can be calculated to high precision, by means of finely grained decision trees.Cash flow: The expected sequence of payments according to the terms of a contract. From cash flow can be computed the basic financial objectives of a contract, such as net present value.Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 1995 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "For-Pay Remailers", "completion": "What if you could make money by running a remailer?Right now, most remailer operators are operating out of altruism. This is good in a lot of ways but it has its problems, as recent events have shown:I'm sure we can all think of more. I know that it would be a lot easier to justify continuing to run the remailer to myself if it were bringing in a few dollars a month.I think there are some experiments in for-pay remailers that have been tried. Sameer is, I think, charging for some services, although paerhaps that was just for anonymous return addresses. A long time ago Karl Barrus had a service which required pre-issued \"digital postage stamps\", but I don't think many people used it.The time may be ripe to look at this more seriously. Several factors are coming together:To expand on these:It is obviously difficult to operate a remailer service that charges if other people are offering the equivalent service for free. Since it is pretty easy to start up a remailer, the marginal cost to do so is low, hence the profits are low, too. However, although it is easy to start a remailer, it is not so easy to keep one running in the face of complaints from recipients of abusive mail or inappropriate posts; hassles from sysops, owners, net feeds, or others upwards in that great chain of command; possible law enforcement problems when illegal communications occur; possible threats of lawsuits (such as from the scientologists when their sacred documents are posted), etc. So we should not be misled into thinking that running a remailer is cost free.On the other hand I should be clear that I would not expect to make a killing on this service. Something on the order of a penny a message seems reasonable just at a guess. Maybe it should be a factor of 10 higher or lower.One issue is of course the additional difficulty this will cause in the use of the remailer. There are several things to consider here. On the one hand you could argue that it is already too difficult to use the remailers, and any additional hassles involved with including some kind of payment tokens would kill the market. OTOH I can agree in spirit with the sentiments expressed here recently about the low quality which seems to characterize much of the use of the remailers.I don't look at messages, but occasionally I do see bounces, and very frequently they are ugly little flames or similar worthless material. Now, I hope that I am seeing the dregs, that the kinds of clueless people who make the mistakes which cause me to see the messages are the ones least likely to use the service in a worthwhile manner. But still, it is discouraging. In that context, maybe making the system a little harder to use would be worthwhile, in that it would screen out the casual harrasser. (Or, more realistically, this might just keep the exceptionally motivated harrassers.)In any case, I think the presence of the remailer scripts can make using a for-pay remailer not much more difficult than using a free one. If the cost is as low as I suggested and the inclusion of payment tokens is nearly automatic, then adding costs should not have much negative impact on use, certainly not on meaningful, worthwhile use.And even a modest cost might arrest the wholesale spamming that Detweiler and/or the recent \"Scythe\" seem to love. At least we would be paid for enduring the hassle of the complaints.Now, the next question is the details of the payment. Frankly, I don't think any of the current systems are quite right for us due to our special needs, but things are changing rapidly. Let me describe something about how they work.I know of two systems that are VISA/Mastercard based. One is called First Virtual (http://www.fv.com). They are oriented towards information sales and say that they aren't for service providers, but in practice it looked to me like they could be used for services. When a customer wants to pay, he sends you his FV ID. You send this to FV and they send an email message to the customer asking whether he authorizes the payment. If he says \"yes\", FV credits your account. You get a check every month. Customers who always say \"no\" get booted out of the system (as do merchants who submit bogus bills). They charge 29 cents plus 2 percent per transaction, but merchants can batch up multiple orders by a single customer before sending it in.There are a few problems with a system like this, many of which are somewhat generic to our situation. The most fundamental is that we don't know who our customers are much of the time. In fact, the whole point of the remailer network is that we not know that fact for any case except the first hop in the chain. If we required customers to expose their FV account ID at every hop, it would make it a lot easier to track messages through the network (even if the ID's were hidden in the encryption envelope it seems risky). If we then sent a message to FV saying that we needed to charge ID XXX, and FV responds with an email to the person's home address, this offers more possibilities for tracing.One solution would be only to charge on entry into the remailer net. Perhaps remailer operators would even charge each other then, and the first remailer would charge some larger amount to deal with a \"typical\" chain length? Many interesting possibilities here.Another issue is that the overhead charges by FV would require batching up messages before submitting them. Let me make clear that the batch must consist all of charges to a single user. It doesn't do any good to send one message to FV asking them to please charge a penny to each of 100 VISA accounts. No, you would have to count messages from each user, separately, and when user XXX had sent, say, $1 worth of messages, you could send in the request to FV and get back 70 or so cents.So this adds some overhead and record-keeping that we don't currently have to do, although perhaps it is not so difficult. But it would raise new questions of authenticating FV ID's, and shares some of the negative privacy impacts and message linking issues mentioned above.The other VISA based system is called OpenMarket. I just read about it tonight so I don't know it as well (http://www.openmarket.com). It is pretty tied to the WWW so it would not seem to work for us. Customers get connected to a particular WWW server which authenticates them and charges their VISA card appropriately, then they get redirected to the merchant with some kind of token that says they have paid.The NetBank (email to netbank-intro@agents.com) is a digital-cash like system. Customers get tokens which are basically large secret numbers which have a cash value. They send them to the merchants, and the merchants then send them to the bank which credits their account. The NetBank sends you a check every month.The interesting thing is how customers buy the cash tokens. One way is by connecting to a 900 number with your modem. They charge the customer $10.00 and give him a digital cash token worth that much. Another way is by faxing a check to them. I wasn't clear on how you get the cash token back in that case; I guess they email it to you at an address you specify. From the privacy point of view, these are not that great; 900 numbers have Automatic Number Identification so unless you are willing to tramp out to a pay phone to get your cash then it could be linked to your phone number. And the fax system must have some kind of return address that would link to you.The other problem with NetBank is that the smallest denomination which can be spent is 25 cents. Due to the cash-like nature of the tokens, I don't see a natural way to accumulate several messages into one payment. Maybe we could layer our own low-value digital cash system on top of NetBank, where users could buy our anonymous cash for 25 cents and get enough tokens for 25 messages, then we would settle amongst ourselves (or actually with the anon-mail-token bank). Actually this might help with the privacy problems, too. Anonymous digital cash is heavily patented, though.With a cash-like system, each message would include a numeric token in the header which is the digital cash. The remailer would strip that out and send it in for credit. This is a simple system and could be largely automatic. However there are some tricky issues about cheaters re-using cash.NetBank charges $4 per month, plus, for the 900-number-based cash, 20% off of face value.The last system I'll describe is David Chaum's DigiCash (http://www.digicash.com). Chaum is the inventor of digital cash and he certainly knows his stuff, plus as I said he has the intellectual property pretty well sewed up patent-wise. The DC payment system is also WWW based at present. The customer has to be running a special program on his computer, separate from his web browser. This program holds his digital cash, which is similar conceptually to the NetBank cash but more sophisticated cryptographically. When he wants to buy something, the merchant's web server makes a connection to the customer's DC program, and it transfers the cash to the merchant.DigiCash says they are planning an email based system but for now their emphasis is on the WWW. Right now they are only in beta and not using real money. I don't know when they will be real and email based, and I don't know if they have said what their commission will be. But when this comes up it may be the best approach if small-value transactions can be supported. DigiCash is fully anonymous in the sense that once a customer receives the money, it is \"blinded\" in a special cryptographic way so that the bank cannot associate it with that customer (and no one else can, either). This kind of anonymity fits in very well with our remailer requirements.Well, I know this is a lot of information to work through, but mostly I want people to be aware of the possibilities. Most of this stuff is very, very new, only weeks old, generally. Probably over the next few months we will see a lot more options appear. I am confident that there will soon be payment systems that would provide the technical basis for fee based remailing. I don't expect anyone to get rich by this, but it might help compensate for the risks we all face, and it might serve to improve the quality of the remailer network.Hal Finney\nhal@rain.orgHal Finney Home Page"}
{"prompt": "Politics vs Technology", "completion": "This position seems to be fast becoming cypherpunks dogma, but I don't agree. The notion that we can just fade into cypherspace and ignore the unpleasant political realities is unrealistic, in my view.Have people forgotten the Clipper proposal, with the possible follow-on to make non-Clipper encryption illegal? To the extent this proposal has been or will be defeated, it will happen through political maneuvering, not technology.Have people forgotten the PGP export investigation? Phil Zimmermann hasn't. He and others may be facing the prospect of ten years in prison if they were found guilty of illegal export. If anyone has any suggestions for how to escape from jail into cyberspace I'd like to hear about them.Mike's SecureDrive is a terrific program for protecting privacy. But if we want to keep keys secret from politically-motivated investigations, we have to rely on the very political and non-technological Fifth Amendment (an amendment which Mike Godwin of EFF and others contend does not actually protect disclosure of cryptographic keys). Again, we need to win political, not technological, victories in order to protect our privacy.I even question Mike's point about the government's inability to ban books. Look at the difficulty in keeping PGP available in this country even though it is legal. Not only have FTP sites been steadily closed down, even the key servers have as well. And this is legal software.Sure, this software is currently available overseas, but that is because PGP's only legal limitations are the U.S. patent issues. Imagine how much worse it would be if non-escrowed encryption were made illegal in a broad range of countries, with stringent limits on net access to countries which promote illegal software? Here again, these kinds of decisions will be made in the political realm.Fundamentally, I believe we will have the kind of society that most people want. If we want freedom and privacy, we must persuade others that these are worth having. There are no shortcuts. Withdrawing into technology is like pulling the blankets over your head. It feels good for a while, until reality catches up. The next Clipper or Digital Telephony proposal will provide a rude awakening.Hal Finney\nhal@rain.orgHal Finney Home Page"}
{"prompt": "The Case for Privacy", "completion": "An old science fiction novel features a device that surrounds its bearer with an impenetrable bubble of force. The inventor rapidly discovers that every government and political faction on the planet wants what he has and is prepared to use any means, from persuasion to brute force, to get it. Our hero spends most of the book alternately listening to arguments, trying to decide who are the good guys and using his invention to help him escape attempts to capture him.After about a hundred and fifty pages he realizes that he has been asking the wrong question. The answer to \"what faction can be trusted with a monopoly over the shield\" is \"no.\" The right question is how the shield will affect the world\u2014how it will alter the balance between freedom and oppression, individual and state, small and big. The answer to that is easy. A world where the random individual is armored against anything short of an atomic explosion will be, on net, a better and freer world than the one he is currently living in. He writes out an explanation of how the shield works and spends two days distributing the information to people all over the world. By the time Military Security\u2014the most formidable of his pursuers\u2014catches up with him, it is too late. The cat is out of the bag.Poul Anderson's shield is fiction. The nearest real world equivalent is privacy\u2014my control over other people's access to information about me. Neither my government nor my neighbor can punish my thoughts, because neither can read my mind. That is why thoughts are free. However much other people are offended by what I write, they cannot retaliate unless they know who wrote it, what he looks like, where he lives. That is why Salmon Rushdie is still alive despite the death sentence passed on the author of The Satanic Verses fifteen years ago by Iranian authorities.Defensive weapons can be used for bad purposes; an impenetrable shield would be very useful for a bank robber. But it would be even more useful for the bank teller. Robbing banks would be harder in a world where everyone had the shield than in a world where nobody did.The ability to control other people's access to information about you can be used for bad purposes too. That is the usual argument against privacy\u2014\"If you haven't done anything wrong, what do you have to hide?\" The ability to conceal past crimes from the police and potential victims is useful to a robber. But the ability to conceal what I have that is worth stealing, where it is, how it is protected, is equally useful to the potential victim. Broadly stated, privacy gives each of us more control over his own life\u2014which on average, if not in every case, is likely to lead to a freer world.If I am a bad guy, the police are not the only people I might want to keep secrets from. When courting a wealthy widow, it helps if she does not know that my last three wives drowned in their bath tubs after taking out large life insurance policies. When borrowing money, it helps if the lender does not know that I have declared bankruptcy twice already.But in a world of voluntary transactions\u2014such as loans and marriages\u2014my privacy does not require you to take me on faith. You have the option of not taking me. I have the power to keep my past defaults secret from a potential lender but he has the power to refuse to lend to me if I do. Privacy is my ability to control other people's access to information about me. That does not mean that they cannot get the information\u2014only that they cannot get it without my permission. Someone who offers to take care of my children but refuses to allow me access to the records that would show whether or not he has ever been convicted of child abuse has already told me all I need to know.In some contexts I am willing to let other people know things about me. In others I am eager to. If only lenders knew a little more about my finances I would not be interrupted at dinner by phone calls from people offering to refinance my nonexistent mortgage. If sellers were better informed about what sorts of things I was interested in buying, advertisements would be less of a nuisance and more of a service. Even in a world where I could keep information secret, I often would choose not to. Privacy provides me protection when I want it and only when I want it.Government is not reason. It is not eloquence. It is a force, like fire: a dangerous servant and a terrible master.Privacy includes the ability to keep things secret from the government. The better I can do that, the less able government is to help me\u2014I might be keeping secret my weakness for alcohol, or heroin, or gambling or pornography and so preventing the government from stepping in to protect me from myself. And the better other people can keep secrets from the government, the harder it is for the government to protect me from them. If you view government as a benevolent super being watching over you\u2014a wise and kindly uncle with a long white beard\u2014you will and should reject much of what I am saying.But government is not Uncle Sam or a philosopher king. Government is a set of institutions through which human beings act for human purposes. Its special feature\u2014what differentiates political action from the other ways in which we try to get what we want\u2014is that government is permitted to use force to make people do things. A firm can try to fool me into giving it my money. A tax collector uses more direct methods. A preacher can try to persuade me to renounce my sins. The Drug Enforcement Administration, with the help of the local police, can arrange to have me locked up until I do.Part of the genius of American political culture is the recognition that making it hard for governments to control people is not always a bad thing. Political mechanisms, even in a democracy, give us only very limited control over what government can do to us. Reducing government's ability to do bad things to us, at the cost of limiting its ability to protect us from bad things done to us by ourselves or by other people, may not be such a bad deal. And since government, unlike a private criminal, has overwhelming superiority of physical force, control over what information it can get about me is one of the few ways in which I can limit its ability to control me.I have defined privacy and sketched the reasons why I think it is, on the whole, a good thing. The obvious next questions are where privacy comes from\u2014what determines how much of it we have\u2014and what we can and should do to get more of it.One of the things that determines how much control I have over other people's access to information about me is technology. If someone invents a mind reading machine or a reliable truth drug, my thoughts will no longer be as private as they now are. Or as free.Another is custom\u2014systems of social norms. The more willing my friends and neighbors are to gossip about something, the easier it is for information about that something to get from those who have it to those who want it. That is one reason why Israelis are better informed about how much money their friends and relations make than Americans are and modern Americans better informed about other people's sex lives than nineteenth century Britons were.A final factor is law. In the U.S., the Fourth Amendment to the Constitution prohibits \"unreasonable searches and seizures\" and requires that search warrants shall only be issued with probable cause. The more narrowly courts interpret that restriction, the easier it is to keep secrets from the police. One important example is the series of cases that applied the restriction to wiretaps as well as physical searches. Later cases have ruled on to what extent the use of high tech devices to figure out what people are doing inside their houses\u2014infrared photographs to spot illegal greenhouses growing marijuana, for example\u2014is a search and so requires a warrant.Law and technology interact in complicated ways. For your neighbor's nosy fifteen year old to use a scanner to listen to the phone calls you make on your wireless phone and tell his friends about them is illegal. It is also easy, making that particular legal protection of privacy in practice unenforceable. The substitute is technology\u2014encryption of the signal from the handset to the base station. Similarly with cell phones.As these examples suggest, technological developments can both decrease and increase privacy. So can law. Legal rules that ban or limit technologies for learning things about other people, such as laws against wiretaps, increase privacy. Legal rules that ban or limit technologies for preventing other people from learning things about us, such as restrictions on the use of encryption, decrease it.It used to be that one reason to move from a village to the big city was to get more privacy. Walls were no higher in the city, windows no less transparent. But there were so many more people. In the village, interested neighbors could keep track of what who was doing with whom. In the city, nobody could keep track of everyone.That form of privacy\u2014privacy through obscurity\u2014is doomed. I cannot keep track of the million people who share the city I live in. But the computer on my desk has enough space on its hard drive to hold a hundred pages of information on every man, woman and child in San Jose. With a few hundred dollars worth of additional storage, I could do it for everyone in California, for a few thousand, everyone in the country. And I can do more than store the information. If I had it I could search it\u2014produce, in a matter of seconds, a list of those of my fellow citizens who are left handed gun owners with more than six children. Privacy through obscurity cannot survive modern data processing.As it happens, I do not have a hundred pages worth of information on each of my fellow citizens. But with a little time and effort\u2014too much for a single individual, but not too much for a government, a police department, or a large firm\u2014I could. It is hard to pass through the world without leaving tracks. Somewhere there is a record of every car I have registered, every tax form I have filed, two marriages, one divorce, the birth of three children, thousands of posts to online forums on a wide variety of subjects, four published books, medical records and a great deal more.Much such information, although not all of it, was publicly available in the past. But actually digging it up was a lot of work. The result was that most of us went through life reasonably sure that most of the people we met did not know much about us beyond what we chose to tell them. That will not be true in the future.Data processing is one technology with the potential to sharply reduce privacy. Another is surveillance. One form\u2014already common in England\u2014is a video camera on a pole.A video camera in a park connected to a screen with a police officer watching it is, at first glance, no more a violation of privacy than the same police officer standing in the park watching what is going on. It merely lets the officer do his watching somewhere warm and out of the wet. Add a video recorder and it is arguably an improvement, since the evidence it produces is less subject to mistake or misrepresentation than the memory of the policeman. And, judging by British experience, such surveillance cameras are an effective way of reducing crime. What's the problem?To see the answer, add one more technology\u2014face recognition software. Combine that with a database, put up enough cameras, and we have a record of where everyone was any time of the day and\u2014with suitable cameras\u2014night. The arresting officer, or the prosecuting attorney, no longer has to ask the defendant where he was at eight P.M. of July ninth. All he has to do is enter the defendant's social security number and the date and the computer will tell him. And, if the defendant was in a public place at the time, show him.For a slightly lower tech version of the same issue, consider the humble phone tap. In the past, the main limit on how many phones got tapped by police was not the difficulty of getting a court order but the cost of implementing it. Phone taps are labor intensive\u2014someone has to listen to a lot of phone calls in order to find the ones that matter.That problem has now been solved. Voice recognition software originated by companies such as Dragon Systems and IBM lets computers convert speech into text\u2014a boon for computer users who are slow typists. The same technology means that the police officer listening to someone else's phone calls can now be replaced by a computer. Only when it gets a hit, spots the words or phrases it has been programmed to listen for, does it need to call in a human being. Computers work cheap.In an old comedy thriller (The President's Analyst, starring James Coburn) the hero, having temporarily escaped his pursuers and made it to a phone booth, calls a friendly CIA agent to come rescue him. When he tries to leave the booth, the door won't open. Down the road comes a phone company truck loaded with booths. The truck's crane picks up the one containing the analyst, deposits it in the back, replaces it with an empty booth and drives off.A minute later a helicopter descends containing the CIA agent and a KGB agent who is his temporary ally. They look in astonishment at the empty phone booth. The American speaks first:\"It can't be. Every phone in America tapped?\"The response (you will have to imagine the Russian accent)\"Where do you think you are, Russia?\"A great scene in a very funny movie\u2014but it may not be a joke much longer. The digital wiretap bill, pushed through Congress by the FBI a few years ago, already requires phone companies to provide law enforcement with the ability to simultaneously tap one percent of all phones in a selected area. There is no obvious reason why that cannot be expanded in the future. My current estimate is that the dedicated hardware to do the listening part of the job\u2014for every phone call in the U.S.\u2014would cost less than a billion dollars. And it is getting cheaper.So far I have been discussing technologies that already exist. Fast forward a little further and surveillance need no longer be limited to public places. Video cameras are getting smaller. It should not be all that long before we can build one with the size\u2014and the aerodynamic characteristics\u2014of a mosquito.Here again, if we regard government law enforcement agents as unambiguously good guys, there is no problem. The better our record of where everyone was when, the easier it will be to catch and convict criminals.The same technology would make keeping track of dissidents, or political opponents, or members of an unpopular religion, or people with the wrong sexual tastes, or people who read the wrong books, or anyone else, a great deal easier than it now is. It is true that the random government is rather less likely to have bad intentions than the random criminal. But if it does have bad intentions it can do a great deal more damage.The technologies I have been discussing so far\u2014database and face recognition software, surveillance hardware\u2014have the potential to make this a much less private world. So do other technologies that I have not covered: improvements in lie detectors and interrogation drugs to learn what we think, biometric identification by fingerprints, retinal patterns, DNA to learn who we are, with or without our permission. The future implications of such developments are sufficiently strong to have convinced at least one thoughtful observer that the best we can hope for in the future is a transparent society, a world without privacy where the police can watch us but we can also watch them (Brin 1999). I would find the symmetry of that future more appealing if it did not conceal an important asymmetry: They can arrest us and we cannot arrest them.But there are other technologies.We start with an old problem: How to communicate with someone without letting other people know what you are saying. There are a number of familiar solutions. If worried about eavesdroppers, check under the eaves. To be safer still, hold your private conversation in the middle of a large, open field, or a boat in the middle of a lake. The fish are not interested and nobody else can hear.That no longer works. The middle of a lake is still within range of a shotgun mike. Eaves do not have to contain eavesdroppers\u2260just a microphone and a transmitter. Phone lines can be tapped, cordless or cell phone messages intercepted. An email bounces through multiple computers on its way to its destination\u00e3anyone controlling one of those computers can save a copy for himself.The solution is encryption. Scramble the message. Provide the intended recipient with the formula for unscrambling it. Now it does not matter if someone intercepts your mail. He can't read it.There is still a problem. In order to read my scrambled message you need the key\u2260the formula describing how to unscramble it. If I do not have a safe way of sending you messages, I may not have a safe way of sending you the key either. If I sent it by a trusted messenger but made a small mistake as to who he was really working for, someone else now has a copy and can use it decrypt my future messages to you.About twenty-five years ago, this problem was solved. The solution is public key encryption. It works by using two keys, each of which decrypts what the other encrypts. One of the two\u2014my public key\u2014I make available to anyone who might want to send me a message. The other never leaves my hands. Someone who wants to communicate with me encrypts his messages with my public key. I use my private key to decrypt them.Public key encryption provides a free bonus\u2014digital signatures. In order to prove that a message was sent by me I can encrypt it using my private key. The recipient decrypts it using my public key. The fact that what comes out is text rather than gibberish proves it was encrypted with the matching private key\u2014which only I have. Hence, unless I have been very careless, the message is from me.Imagine a world where public key encryption is in general use. Add in related technologies such as anonymous digital money, to permit payments that leave no paper trail, and anonymous remailers, to keep who I am talking to, as well as what I am saying, private\u2014for details see (Friedman 1996). In that world I can email someone\u2014anyone\u2014with reasonable certainty that nobody else can read the message. I can have telephone conversations without worrying about who may be listening. In that world I can if I wish establish an online persona\u2014an identity defined by my digital signature\u2014while keeping control over the link between that and my realspace persona. However much my online persona offends someone\u2014even the rulers of Iran\u2014there is very little anyone can do about it. It is hard to murder someone when you don't know his name, what he looks like, or what continent he is on.I have been describing things we already know how to do. Most can already be done\u2014using free software that runs on the computers most of us have. I now take a small step forward to add one more element to the mix: Virtual reality. Using goggles and earphones\u2014if we are willing to step further into science fiction, direct links between mind and computer\u2014we create the illusion of seeing, hearing, perhaps tasting and touching. The world of strong privacy expands from text messages and phone conversations to something very much like the real world we currently live in. Just let your fingers do the walking.I have described two clusters of technologies. One\u2014database, voice and text recognition, surveillance\u2014has the potential to reduce privacy to the point where those who control the technology know very nearly everything that everyone does. The other\u2014encryption, online communication, virtual reality\u2014has the potential to increase privacy to the point where individuals have nearly total control over other people's access to information about them. What if we get both?It will be an interesting world. Everything you do in realspace will be known to the authorities, perhaps to everyone\u2014David Brin's Transparent Society. But most of the important stuff\u2014all transactions involving information, ideas, arguments, beliefs\u2014will have been moved to cyberspace, protected by the strong privacy of encryption. Freedom of speech will no longer depend on how the Supreme Court interprets the First Amendment. It will be protected, instead, by the laws of mathematics\u2014which so far, at least, heavily favor defense over offense, encryption over cracking.There will be\u2014already have been\u2014attempts to use law to block both futures. Supporters of privacy will try to get laws restricting the ability of law enforcement\u2014and other people\u2014to use technology to learn our secrets. Opponents of privacy will try to get laws restricting the ability of private individuals to use encryption to protect their secrets.There are at least two legal approaches to preserving privacy in the face of technologies such as computer databases and surveillance. One is to use law to prevent other people from getting information\u2014a data base is of no use if there is nothing in it. The other is to permit other people to get information but use law to limit what they can do with it.An example of the first approach is regulation of wire tapping and other forms of surveillance\u2014both laws against private surveillance and laws restricting surveillance by law enforcement agents. Such restrictions can keep some information about me from getting to other people. But they do nothing to protect the vast amount of information that I generate by going about my daily life in the public view\u2014buying and selling, marrying and getting divorced, writing and talking.An example of the second approach is the web of restrictions, legal, contractual, and customary, on the use of confidential information. I cannot keep my doctor from having access to the medical information he creates when he examines me and uses when he prescribes for me. But I can, to some limited degree, prevent him from sharing that information with other people. Credit bureaus are free to collect information on people in order to advise other people as to whether to lend them money but, under current Federal law, they are only permitted to release that information in response to requests from people who have a legitimate need for it.As the example of credit bureaus suggests, there are practical difficulties with protecting privacy by letting other people have information and then controlling what they do with it. Credit agencies could not serve their intended purpose at any reasonable cost if they engaged in an extensive investigation of everyone who asked for information. And even if the agency limits itself to giving the information to people who can prove they are entitled to it, there is no way it can control who they then give it to. It is probably prudent to assume that what the credit agency knows about you any else can know if he really wants to. The forms you sign when you shift to a new doctor include an extensive list of people to whom and circumstances under which your medical information will be made available, so it might be equally prudent not to rely too much on your medical privacy.As long as we limit our options to current technologies for protecting privacy, the outlook does not look good. We might succeed in restricting the use of surveillance, wiretapping, and similar technologies, although attempts to restrict their use by law enforcement face serious opposition by those concerned with the threat of crime and terrorism. But most information about us is public, and once information is out it is hard to control how other people use it or who they give it to.The technologies of strong privacy offer at least a partial solution. If I make a purchase with a credit card, I create a paper trail\u2014someone, somewhere, knows what I bought. Even if I use cash, a purchase in real space requires me to walk into a store where someone sees me\u2014the information about what I bought is now his as well as mine. In a world where the relevant software is a little better than it now is\u2014say ten years in the future\u2014that someone is a store video camera linked to facial recognition software linked to a database. Stores, after all, like to know who their customers are.If, however, I buy something over the phone or over the internet, using the digital equivalent of cash\u2014anonymous digital currency\u2014only I know that I bought it. If the something is not a physical object that must be delivered to me but information\u2014music, data, software\u2014I can collect my purchase online without ever revealing my identity or location.Thus the technologies of encryption and computer networking can permit us, to a considerable extent, to move through the world without leaving footprints behind. If I want to receive advertising based on my past purchases\u2014as it happens I often do\u2014I can choose to make those purchases under my real name and provide my real address. If I want to receive the advertising without making my acts publicly observable\u2014perhaps I am purchasing pornography\u2014I can do it via an online identity. The link that ties my realspace body to my cyberspace persona is under my control. I have privacy\u2014control over other people's access to information about me.If we go a little further into science fiction I could even have privacy from my doctor. He knows the information that an examination\u2014via remote controlled devices\u2014revealed about me. He does not need to know what my name is, my face looks like, or where I live. It is not likely that I would want to carry my privacy that far\u2014but I could.So far I have been considering ways in which we might preserve privacy against the threat posed by technology. But there is another side to the story. For those who think that we already have too much privacy, what I view as the solution may look more like the problem. There have already been attempts to restrict the use of encryption to protect privacy. There will be more.Suppose I concede, at least for the purposes of argument, that it is possible to have too much privacy as well as too little. Further, and less plausibly, suppose I believed that the strong privacy provided by encryption is a serious problem. How might one use law to solve it?One difficulty is that encryption regulation poses the problem summed up in the slogan\u2014\"when guns are outlawed, only outlaws have guns.\" The mathematics of public key encryption have been public for decades. The software to do it already exists in a variety of forms, some of them freely available. Given the nature of software, once you have a program you can make an unlimited number of copies. Keeping encryption software out of the hands of spies, terrorists, and competent criminals is not a practical option. They probably have it already, and if they don't they can easily get it. The only people affected by a law against encryption software are the law abiding.What about banning or restricting the use of encryption\u2014at least encryption that cannot be broken by law enforcement agents? To enforce such a ban law enforcement agencies could randomly monitor all communication systems, looking for illegally encrypted messages. One practical problem is the enormous volume of information flowing over computer networks. A second and even more intractable problem is that while it is easy enough to tell whether a message consists of text written in English, it is very much harder\u2014in practice impossible\u2014to identify other sorts of content well enough to be sure that they do not contain encrypted messages.Consider a three million pixel digital photo. To conceal a million character long encrypted message\u2014an average sized novel\u2014I replace the least significant bit of each of the numbers describing the color of a pixel with one bit of the message. The photo is now a marginally worse picture than it was\u2014but there is no way an FBI agent, or a computer working for an FBI agent, can know precisely what the photo ought to look like.Short of banning communication over computer networks or at least restricting it to text messages, there is no way that law enforcement can keep sophisticated criminals, spies, or terrorists from using encryption. What can be done is to put limits on the encryption software used by the rest of us\u2260to insist, for example, that if AOL or Microsoft builds encryption into their programs it must contain a back door permitting properly authorized persons to read the message without the key.This still leaves the problem of how to give law enforcement what it wants without imposing unacceptably high costs on the rest of us. Consider the description of adequate regulation given by Louis Freeh, at the time the head of the FBI\u2014the ability to crack any encrypted message in half an hour. The equivalent in realspace would be legal rules that let properly authorized law enforcement agents open any lock in the country in half an hour. That includes not only the lock on your front door but the locks protecting bank vaults, trade secrets, lawyers' records, lists of contributors to unpopular causes, and much else.Encryption provides the locks for cyberspace. If all legal encryption comes with a mandatory back door accessible in half an hour to any police officer with a court order, everything in cyberspace is vulnerable to a private criminal with the right contacts. Those locks have billions of dollars worth of stuff behind them\u2260money in banks, trade secrets in computers and in messages. If being a police officer gives you access to locks with billions of dollars behind them, in cash, diamonds, or information, some cops will become criminals and some criminals will become cops.In one important way, the consequence for cyberspace is even worse than the equivalent in realspace. If a police officer opens a safe and pockets a stack of cash or a bag of diamonds, the owner can see that something is missing and demand it back. But when information is copied the original is still there. If the officer who has decrypted your communications or stored data assures you that he found nothing relevant to his investigation and so took nothing away, there is no way to prove he is lying.For encryption regulation to be useful it must either prevent the routine use of encryption or make it easy for law enforcement agents to access encrypted data and messages. Not only would that seriously handicap routine transactions, it would make computer crime easier by restricting the technology best suited to defend against it. And what we get in exchange is protection not against the use of encryption by sophisticated criminals and terrorists\u2260there is no way of providing that\u2260but only against its use by ordinary people and unsophisticated criminals. It does not look like a very attractive deal.Some years ago Professor Etzioni, who has contributed a chapter to this volume, published a book arguing for some restrictions on privacy as ways of promoting the common good. In reading it, I was struck by two differences between our views that explain much of the difference in our conclusions.The first was that I did, and he did not, define privacy in the context of freedom of association. Consider the question of airlines requiring their pilots to be tested for drugs and alcohol. Professor Etzioni regards that as a (desirable) restriction on the pilots' privacy. I agree that it is desirable but not that it restricts privacy.In a society where privacy is protected you have a right not to be tested. You do not have a right to be hired to fly airplanes\u2014and, if you choose to exercise your right not to be tested, you should not be surprised if the airline exercises its right not to hire you. The background legal principle is not that I have a right to be hired as a pilot or that United Airlines has a right to have me fly their planes. The background principle is that they can hire me to fly their planes if and only if both they and I agree. Given that principle of free association many\u2014although not all\u2014of the problems that Professor Etzioni sees with privacy vanish.The second difference has to do with our different views of government. While Professor Etzioni makes occasional references to the risk of some future oppressive government misusing information, he does not take seriously similar concerns with regard to our current government. His implicit assumption is that government is to be viewed as a benevolent agent standing above the human struggle, not as a mechanism through which individuals seek to achieve their goals, often at the expense of other individuals. That is not a view that strikes me as realistic.Privacy, like almost anything else, can be used for good or bad purposes. My thesis in this chapter is that, on net, more privacy makes the world a better place. It does so because it is an essentially defensive weapon, a way of reducing the ability of other people to control us.Reducing the ability of other people to control us is not always a good thing\u2014someone may, after all, want to control me for my own good or control you to keep you from hurting me. But we live in a world where too much control is more of a problem than too little. In the entire world over the past century, something on the order of ten million people have been killed by private murderers. Between a hundred and two hundred million have been killed by the governments that ruled them (Rummel (1999) estimates about 170 million from 1900 to 1987). Quite a lot of individual pain, suffering, injustice has been due to the acts of private individuals; some could have been prevented by better law enforcement. But mass pain, suffering and injustice has been very nearly a monopoly of governments. If governments were better able to control us, there would have been more of it. And at the individual level, while privacy can be used to protect criminals against police, it can also be used to protect victims against criminals.It is tempting to try for the best of both worlds\u2014to restrict the privacy of bad people while protecting that of good, permit governments to collect detailed information about us but only allow it to be used for good purposes. But somebody must decide who are the good people and the bad, what purposes are worthy or unworthy. Whoever that somebody is will have his own agenda, his own purposes. Angels are in short supply.To put the matter differently, \"cannot\" is better protection than \"may not.\" If we permit law enforcement agents to know everything about everybody but forbid them fro using that information against individuals with unpopular views or political opponents of the party in power, we are protected only by a \"may not.\" The same is true if private parties are able to collect information but restricted in what they may do with it. If the law keeps the information from being collected in the first place, we are protected by a cannot\u2014however corrupt or dishonest they are, or however convinced that they are working for a greater good, people cannot use information they do not have.\"Cannot\" at one level may depend on \"may not\" at another. You cannot use information that you do not have. You do not have it because you may not collect it. But even if the law forbids wiretaps or unauthorized surveillance, a sufficiently determined agency\u2014or a sufficiently competent private criminal\u2014can violate the law. That is where technologies that support privacy come into the picture. In a world where encryption is routine it does you no good to tap my phone because you cannot understand what I am saying. It does no good to intercept my email because you cannot read it. \"Cannot\" is better than \"may not.\"We can and should fight a delaying action against the use of technology to restrict privacy. But in the long run technology\u2014useful technology\u2014is hard to stop. In the long run, the real battle will be the one fought in defense of technologies that protect privacy. That one we might win.Brin, David (1999), The Transparent Society: Will Technology Force Us to Choose Between Privacy and Freedom? Perseus (The first chapter is webbed at http://www.kithrup.com/brin/tschp1.html)Etzioni, Amitai (1999), The Limits of Privacy, Basic Books.Friedman, David (1996) \"A World of Strong Privacy: Promises and Perils of Encryption,\" Social Philosophy and Policy, pp. 212-228. Webbed at http://www.daviddfriedman.com/Academic/Strong_Privacy/Strong_Privacy.htmlRummel, Rudolph J. (1999), Statistics of democide: Genocide and mass murder since 1900, Lit Verlag.Anderson, Poul, ShieldEllen Frankel Paul, Fred D. Miller, Jr., & Jeffrey Paul (Eds). (2000) The Right to Privacy, Cambridge University Press.http://www.mega.nu:8080/ampp/rummel/20th.htm (detailed statistics on 20th century democide)http://www.daviddfriedman.com/future_imperfect_draft/future_imperfect.html (Much more detailed account of encryption, surveillance, and much else.)David Friedman is a professor of law at Santa Clara University; his specialty is the economic analysis of law and his current interests include the effect of technology on the world over the next few decades. His most recent book is Law's Order: What Economics has to do with Law and Why It Matters. You can learn more than you want to know about both him and his ideas at www.daviddfriedman.com."}
{"prompt": "Money, Blockchains, and Social Scalability", "completion": "Blockchains are all the rage. The oldest and biggest blockchain of them all is Bitcoin, which over its eight-year history so far starshipped in value from 10,000 bitcoins per pizza (before there were exchanges that priced bitcoin in traditional currencies) to over $1,000 per bitcoin. As of this writing Bitcoin has a market capitalization of over $16 billion. Running non-stop for eight years, with almost no financial loss on the chain itself, it is now in important ways the most reliable and secure financial network in the world.The secret to Bitcoin\u2019s success is certainly not its computational efficiency or its scalability in the consumption of resources. Specialized Bitcoin hardware is designed by highly paid experts to perform only one particular function\u2014to repetitively solve a very specific and intentionally very expensive kind of computational puzzle. That puzzle is called a proof-of-work, because the sole output of the computation is just a proof that the computer did a costly computation. Bitcoin\u2019s puzzle-solving hardware probably consumes in total over 500 megawatts of electricity. And that is not the only feature of Bitcoin that strikes an engineer or businessman who is focused on minimizing resource costs as highly quixotic. Rather than reduce its protocol messages to be as few as possible, each Bitcoin-running computer sprays the Internet with a redundantly large number of \u201cinventory vector\u201d packets to make very sure that all messages get accurately through to as many other Bitcoin computers as possible. As a result, the Bitcoin blockchain cannot process as many transactions per second as a traditional payment network such as PayPal or Visa. Bitcoin offends the sensibilities of resource-conscious and performance-measure-maximizing engineers and businessmen alike.Instead, the secret to Bitcoin\u2019s success is that its prolific resource consumption and poor computational scalability is buying something even more valuable: social scalability. Social scalability is the ability of an institution\u2014a relationship or shared endeavor, in which multiple people repeatedly participate, and featuring customs, rules, or other features which constrain or motivate participants\u2019 behaviors\u2014to overcome shortcomings in human minds and in the motivating or constraining aspects of said institution that limit who or how many can successfully participate. Social scalability is about the ways and extents to which participants can think about and respond to institutions and fellow participants as the variety and numbers of participants in those institutions or relationships grow. It's about human limitations, not about technological limitations or physical resource constraints. There are separate engineering disciplines, such as computer science, for assessing the physical limitations of a technology itself, including the resource capacities needed for a technology to handle a greater number of users or a greater rate of use. Those engineering scalability disciplines are not, except by way of contrast with social scalability, the subject of this essay.Even though social scalability is about the cognitive limitations and behavior tendencies of minds, not about the physical resource limitations of machines, it makes eminent sense, and indeed is often crucial, to think and talk about the social scalability of a technology that facilitates an institution. The social scalability of an institutional technology depends on how that technology constrains or motivates participation in that institution, including protection of participants and the institution itself from harmful participation or attack. One way to estimate the social scalability of an institutional technology is by the number of people who can beneficially participate in the institution. Another way to estimate social scalability is by the extra benefits and harms an institution bestows or imposes on participants, before, for cognitive or behavioral reasons, the expected costs and other harms of participating in an institution grow faster than its benefits. The cultural and jurisdictional diversity of people who can beneficially participate in an institution is also often important, especially in the global Internet context. The more an institution depends on local laws, customs, or language, the less socially scalable it is.Without institutional and technological innovations of the past, participation in shared human endeavors would usually be limited to at most about 150 people\u2014the famous \u201cDunbar number\u201d. In the Internet era, new innovations continue to scale our social capabilities. In this article I will discuss how blockchains, and in particular public blockchains that implement cryptocurrencies, increase social scalability, even at a dreadful reduction in computational efficiency and scalability.Cognitive capacity\u2014here in the form of the relative size of a species\u2019 neocortex\u2014set limits on how large primate groups can be. Maintaining animal or intimate human groups requires extensive emotional communications and investments in relationships, such as grooming in primates and gossiping, humor, story-telling, and other conversations, songs, and play in traditional human groups. Overcoming human cognitive limits to who or how many people can participate in an institution\u2014the famous \u201cDunbar number\u201d of around 150 people\u2014requires institutional and technological innovation. (Source)Innovations in social scalability involve institutional and technological improvements that move function from mind to paper or mind to machine, lowering cognitive costs while increasing the value of information flowing between minds, reducing vulnerability, and/or searching for and discovering new and mutually beneficial participants. Alfred North Whitehead said, \u201cIt is a profoundly erroneous truism, repeated by all copy-books and by eminent people when they are making speeches, that we should cultivate the habit of thinking what we are doing. The precise opposite is the case. Civilization advances by extending the number of important operations which we can perform without thinking about them.\u201d Friedrich Hayek added: \u201cWe make constant use of formulas, symbols, and rules whose meaning we do not understand and through the use of which we avail ourselves of the assistance of knowledge which individually we do not possess. We have developed these practices and institutions by building upon habits and institutions which have proved successful in their own sphere and which have in turn become the foundation of the civilization we have built up.\u201dA wide variety of innovations reduce our vulnerability to fellow participants, intermediaries, and outsiders, and thereby lower our need to spend our scarce cognitive capacities worrying about how an increasingly large number of increasingly diverse people might behave. Another class of improvements motivates the accurate collection and transmission of valuable information between an increasing number and variety of participants. Yet other advances enable a wider number or variety of mutually beneficial participants can discover each other. All these kinds of innovations have over the course of human prehistory and history improved social scalability, sometimes dramatically so, making our modern civilization with its vast global population feasible. Modern information technology (IT), especially by making use of the historically recent discoveries of computer science, can often discover many more mutually beneficial matches, can improve motivations for information quality, and can reduce the need for trust within certain kinds of institutional transactions, with respect to an increasingly large number and variety of people, thereby further increasing social scalability in some very important ways.Information flows between minds\u2014what I have called intersubjective protocols\u2014include spoken and written words, custom (tradition), the contents of law (its rules, customs, and case precedents), a variety of other symbols (e.g. \u201cstar\u201d ratings common in online reputation systems), and market prices, among many others.Trust minimization is reducing the vulnerability of participants to each other\u2019s and to outsiders\u2019 and intermediaries\u2019 potential for harmful behavior. Most institutions which have undergone a lengthy cultural evolution, such as law (which lowers vulnerability to violence, theft, and fraud), as well as technologies of security, reduce, on balance, and in more ways than the reverse, our vulnerabilities to, and thus our needs to trust, our fellow humans, compared with our vulnerabilities before these institutions and technologies evolved. In most cases an often trusted and sufficiently trustworthy institution (such as a market) depends on its participants trusting, usually implicitly, another sufficiently trustworthy institution (such as contract law). These trusted institutions in turn traditionally implement a variety of accounting, legal, security, or other controls that make them usually and sufficiently, at least for facilitating the functionality of their client institutions, trustworthy, by minimizing vulnerability to their own participants (such as accountants, lawyers, regulators, and investigators). An innovation can only partially take away some kinds of vulnerability, i.e. reduce the need for or risk of trust in other people. There is no such thing as a fully trustless institution or technology.The nonexistence of complete trustlessness is true even of our strongest security technology, encryption. Although some cryptographic protocols do guarantee certain specific data relationships with astronomically high probability against opponents with astronomically high computing power, they do not provide complete guarantees when accounting for all possible behaviors of all participants. For example, encryption can strongly protect an e-mail from direct eavesdropping by third parties, but the sender still trusts the recipient to not forward or otherwise divulge the contents of that email, directly or indirectly to any undesired third parties. As another example, in our strongest consensus protocols harmful behavior by certain fractions of participants or intermediaries well short of 100% (as measured by their computing power, stake-holding, or individuation and counting) can compromise the integrity of transactions or information flows between participants and thereby on balance harm the participants. The historically recent breakthroughs of computer science can reduce vulnerabilities, often dramatically so, but they are far from eliminating all kinds of vulnerabilities to the harmful behavior of any potential attacker.Matchmaking is facilitating the mutual discovery of mutually beneficial participants. Matchmaking is probably the kind of social scalability at which the Internet has most excelled. Social networks like Usenet News, Facebook, and Twitter facilitate the mutual discovery of like-minded or otherwise mutually entertaining or mutually informing people (and even future spouses!). After they have allowed people more likely to be of mutual benefit to discover each other, social networks then facilitate relationships at various levels of personal investment, from casual to frequent to obsessive. Christopher Allen among others has done some interesting and detailed analyses about group size and time spent mutually interacting in online games and associated social networks.eBay, Uber, AirBnB, and online financial exchanges have brought social scalability via often great improvements in commercial matchmaking: searching for, finding, bringing together, and facilitating the negotiation of mutually beneficial commercial or retail deals. These or related services also facilitate performances such as payment and shipping, as well as verification that other obligations undertaken by strangers in these deals have been performed and communication about the quality of such performances (as with \u201cstar rating\u201d systems, Yelp reviews, and the like).Whereas the main social scalability benefit of the Internet has been matchmaking, the predominant direct social scalability benefit of blockchains is trust minimization. A blockchain can reduce vulnerability by locking in the integrity of some important performances (such as the creation and payment of money) and some important information flows, and in the future may reduce the vulnerability of the integrity of some important matchmaking functions. Trust in the secret and arbitrarily mutable activities of a private computation can be replaced by verifiable confidence in the behavior of a generally immutable public computation. This essay will focus on such vulnerability reduction and its benefit in facilitating a standard performance beneficial to a wide variety of potential counterparties, namely trust-minimized money.Money and markets directly benefit the participants in each particular trade by the market matching a buyer with a mutually beneficial seller and by a widely acceptable and standardized counter-performance (money). I use markets here in the sense Adam Smith used the term: not as a specific place or service where buyers and sellers are brought together (although it might sometimes involve these), but rather the broad set of typically pairwise exchanges whereby the supply chain that makes a product is coordinated.Money and markets also incentivize creation of more accurate price signals that reduce negotiation costs and errors for participants in other similar exchanges. The potent combination of money and market thereby allowed a far higher number and variety of participants to coordinate their economic activities than previous exchange institutions, which more resembled bilateral monopolies than competitive markets.Markets and money involve matchmaking (bringing together buyer and seller), trust reduction (trusting in the self-interest rather than in the altruism of acquaintances and strangers), scalable performance (via money, a widely acceptable and reusable medium for counter-performance), and quality information flow (market prices).The greatest early thinker about money and markets was Adam Smith. At the dawn of the industrial revolution in Britain, Smith observed in The Wealth of Nations how making even the most humble of products depended, directly and indirectly, on the work of large numbers of a wide variety of people:Observe the accommodation of the most common artificer or day-laborer in a civilized and thriving country, and you will perceive that the number of people of whose industry a part, though but a small part, has been employed in procuring him this accommodation, exceeds all computation. The woolen coat, for example, which covers the day laborer, as coarse and rough as it may appear, is the produce of the joint labor of a great multitude of workmen. The shepherd, the sorter of the wool, the wool-comber or carder, the dyer, the scribbler, the spinner, the weaver, the fuller, the dresser, with many others, must all join their different arts in order to complete even this homely production. How many merchants and carriers, besides, must have been employed in transporting the materials from some of those workmen to others who often live in a very distant part of the country! How much commerce and navigation in particular, how many shipbuilders, sailors, sail makers, rope makers, must have been employed in order to bring together the different drugs made use of by the dyer, which often come from the remotest corners of the world! What a variety of labor, too, is necessary in order to produce the tools of the meanest of those workmen! To say nothing of such complicated machines as the ship of the sailor, the mill of the fuller, or even the loom of the weaver, let us consider only what a variety of labor is requisite in order to form that very simple machine, the shears with which the shepherd clips the wool. The miner, the builder of the furnace for smelting the ore, the feller of the timber, the burner of the charcoal to be made use of in the smelting-house, the brick maker, the brick layer, the workmen who attend the furnace, the millwright, the forger, the smith, must all of them join their different arts in order to produce them. Were we to examine, in the same manner, all the different parts of his dress and household furniture, the coarse linen shirt which he wears nest his skin, the shoes which cover his feet, the bed which he lies on, and all the different parts which compose it, the kitchen grate at which be prepares his victuals, the coals which he makes use of for that purpose, dug from the bowels of the earth, and brought to him perhaps by a long sea and a long land carriage, all the other utensils of his kitchen, all the furniture of his table, the knives and forks, the earthen or pewter plates upon which he serves up and divides his victuals, the different hands employed in preparing his bread and his beer, the glass window which lets in the heat and the light, and keeps out the wind and the rain, with all the knowledge and art requisite for preparing that beautiful and happy invention, without which these northern parts of the world could scarce have afforded a very comfortable habitation, together with the tools of all the different workmen employed in producing those different conveniences; if we examine, I say, all these things, and consider what a variety of labor is employed about each of them, we shall be sensible that without the assistance and co-operation of many thousands, the very meanest person in a civilized country could not be provided, even according to what we may falsely imagine the easy and simple manner in which he is commonly accommodated.And this was before the many successive waves of industrial revolution and globalization between 1776 and now that refined, elaborated, and extended the division of labor many times more. Rather than trusting in the unlikely altruism of so many strangers, markets and money create many pairings of mutual benefit and thus motivate this large network of mutually oblivious people to act in our interests:In civilized society man stands at all times in need of the cooperation and assistance of great multitudes, while his whole life is scarce sufficient to gain the friendship of a few persons\u2026[In contrast to other animals,] man has an almost constant occasion for the help of his brethren, and it is vain for him to expect it from their benevolence only\u2026 [Exchange is the] manner in which we obtain from another the far greater part of those good offices which we stand in need of. It is not from the benevolence of the butcher, the brewer, or the baker, that we expect our dinner, but from their regard for their own interest.Smith goes on to describe how division of labor, and thus labor productivity, depends on the extent of the network of pairwise exchanges: \u201cAs it is the power of exchanging that gives occasion to the division of labor, so the extent of this division must always be limited by the extent of that power, or, in other words, by the extent of the market\u201d. As the exchange network around a country and around the globe grows, involving a greater number and variety of producers, so grows the division of labor and thereby labor productivity.Money facilitates social scalability by increasing the opportunities for this exchange. By lowering coincidence problems (coincidence-of-wants in exchange and coincidence-of-want-and-event in unilateral transfers), via a widely acceptable and reusable form of wealth storage and transfer, money greatly lowered transaction costs, making possible more exchanges of a greater variety of goods and services involving exchanges and other wealth transfer relationships with a much larger number and much wider variety of people.A wide variety of media, from oral language itself, clay, paper, telegraph, radio, and computer networks, have served to communicate offers, acceptances, and the resulting deals and prices, as well as performance monitoring and other business communications.One of the most knowledgeable observations of the price network produced by markets and money can be found in Friedrich Hayek\u2019s essay, \u201cThe Use of Knowledge in Society\u201d:In a system in which the knowledge of the relevant facts is dispersed among many people, prices can act to coordinate the separate actions of different people\u2026in any society in which many people collaborate, this planning, whoever does it, will in some measure have to be based on knowledge which, in the first instance, is not given to the planner but to somebody else, which somehow will have to be conveyed to the planner. The various ways in which the knowledge on which people base their plans is communicated to them is the crucial problem for any theory explaining the economic process, and the problem of what is the best way of utilizing knowledge initially dispersed among all the people is at least one of the main problems of economic policy\u2014or of designing an efficient economic system\u2026 The mere fact that there is one price for any commodity\u2014or rather that local prices are connected in a manner determined by the cost of transport, etc.\u2014brings about the solution which (it is just conceptually possible) might have been arrived at by one single mind possessing all the information which is in fact dispersed among all the people involved in the process\u2026 The marvel is that in a case like that of a scarcity of one raw material, without an order being issued, without more than perhaps a handful of people knowing the cause, tens of thousands of people whose identity could not be ascertained by months of investigation, are made to use the material or its products more sparingly; i.e., they move in the right direction\u2026.The price system is just one of those formations which man has learned to use (though he is still very far from having learned to make the best use of it) after he had stumbled upon it without understanding it. Through it not only a division of labor but also a coordinated utilization of resources based on an equally divided knowledge has become possible\u2026a solution is produced by the interactions of people each of whom possesses only partial knowledge.Where long ago we used clay, and more recently paper, today programs and protocols running on our computers and data networks implement most of our commercial dealings. While this has greatly improved matchmaking and information flow, it has come at the cost of an increase in vulnerability to harmful behavior.As networks grow, more people with fewer mutually understood habits of and constraints on behavior are added. Security via root-trusting access control, designed for small and chummy offices like Bell Labs where co-workers were well known and income and expenditures well controlled by paper procedures rather than performed on these office computers, breaks down as an efficient and effective security mechanism as organizations become larger, as organizational boundaries are crossed, and as more valuable and concentrated resources such as money are put on or activated via the computers. The more strangers one receives emails from, the more likely one is likely to get a phishing attack or a malware-laced attachment. Traditional computer security is not very socially scalable. As I describe in \u201cThe Dawn of Trustworthy Computing\u201d:When we currently use a smart phone or a laptop on a cell network or the Internet, the other end of these interactions typically run on other solo computers, such as web servers. Practically all of these machines have architectures that were designed to be controlled by a single person or a hierarchy of people who know and trust each other. From the point of view of a remote web or app user, these architectures are based on full trust in an unknown \u201croot\u201d administrator, who can control everything that happens on the server: they can read, alter, delete, or block any data on that computer at will. Even data sent encrypted over a network is eventually unencrypted and ends up on a computer controlled in this total way. With current web services we are fully trusting, in other words we are fully vulnerable to, the computer, or more specifically the people who have access to that computer, both insiders and hackers, to faithfully execute our orders, secure our payments, and so on. If somebody on the other end wants to ignore or falsify what you've instructed the web server to do, no strong security is stopping them, only fallible and expensive human institutions, which often stop at national borders.Many server computers are not valuable enough for insiders or outsiders to attack. But an increasing number of others contain valuable concentrations of resources, motivating attack. Centralized root-trusting security scales poorly. As the resources controlled by computers become more valuable and more concentrated, traditional root-trusting security becomes more like the \u201ccall the cop\u201d security we are used to in the physical world. Fortunately, with blockchains we can do much better for many of our most important computations.Scalable markets and prices require scalable money. Scalable money requires scalable security, so that a greater number and variety of people can use the currency without losing its integrity against forgery, inflation, and theft.An individual or group communicating under the name \u201cSatoshi Nakamoto\u201d brought Bitcoin to the Internet in 2009. Satoshi\u2019s breakthrough with money was to provide social scalability via trust minimization: reducing vulnerability to counterparties and third parties alike. By substituting computationally expensive but automated security for computationally cheap but institutionally expensive traditional security, Satoshi gained a nice increase in social scalability. A set of partially trusted intermediaries replaces a single and fully trusted intermediary.Financial controls on computational steroids: a blockchain as an army of robots, each checking up on each other\u2019s work.When we can secure the most important functionality of a financial network by computer science rather than by the traditional accountants, regulators, investigators, police, and lawyers, we go from a system that is manual, local, and of inconsistent security to one that is automated, global, and much more secure. Cryptocurrencies, when implemented properly on public blockchains, can substitute an army of computers for a large number of traditional banking bureaucrats. \u201cThese block chain computers will allow us to put the most crucial parts of our online protocols on a far more reliable and secure footing, and make possible fiduciary interactions that we previously dared not do on a global network.\u201d (Source)The characteristics most distinctively valuable in blockchain technology in general, and Bitcoin in particular \u2014 for examplecome from the high levels of security and reliability a blockchain can maintain without human intervention. Without that high security it\u2019s just a gratuitously wasteful distributed database technology still tied to the local bureaucracies it would have to depend upon for its integrity.Since the mid-20th century computing has increased in efficiency by many orders of magnitude, but humans are using the same brains. This has created plenty of possibility for overcoming human limitations, and institutions based solely on human minds, with computational capabilities, including in security, doing what they do best, with human minds doing what they still do best. As a result, humans have no more raw mental ability to scale up our institutions than we ever have. But there is plenty of potential for improving social scalability by replacing some human functions with computational ones. (An important note\u2014this argument depends on the slope, not the absolute position, of the human ability line. The absolute position shown above is arbitrary and depends on what human \u201ccomputation\u201d we are measuring).A new centralized financial entity, a trusted third party without a \u201chuman blockchain\u201d of the kind employed by traditional finance, is at high risk of becoming the next Mt. Gox; it is not going to become a trustworthy financial intermediary without that bureaucracy.Computers and networks are cheap. Scaling computational resources requires cheap additional resources. Scaling human traditional institutions in a reliable and secure manner requires increasing amounts accountants, lawyers, regulators, and police, along with the increase in bureaucracy, risk, and stress that such institutions entail. Lawyers are costly. Regulation is to the moon. Computer science secures money far better than accountants, police, and lawyers.In computer science there are fundamental security versus performance tradeoffs. Bitcoin's automated integrity comes at high costs in its performance and resource usage. Nobody has discovered any way to greatly increase the computational scalability of the Bitcoin blockchain, for example its transaction throughput, and demonstrated that this improvement does not compromise Bitcoin\u2019s security.It is probable that no such big but integrity-preserving performance improvement is possible for the Bitcoin blockchain; this may be one of these unavoidable tradeoffs. Compared to existing financial IT, Satoshi made radical tradeoffs in favor of security and against performance. The seemingly wasteful process of mining is the most obvious of these tradeoffs, but Bitcoin also makes others. Among them is that it requires high redundancy in its messaging. Mathematically provable integrity would require full broadcast between all nodes. Bitcoin can\u2019t achieve that but to even get anywhere close to a good approximation of it requires a very high level of redundancy. So a 1 MB block consumes far more resources than a 1 MB web page, because it has to be transmitted, processed, and stored with high redundancy for Bitcoin to achieve its automated integrity.These necessary tradeoffs, sacrificing performance in order to achieve the security necessary for independent, seamlessly global, and automated integrity, mean that the Bitcoin blockchain itself cannot possibly come anywhere near Visa transaction-per-second numbers and maintain the automated integrity that creates its distinctive advantages versus these traditional financial systems. Instead, a less trust-minimized peripheral payment network (possibly Lightning) will be needed to bear a larger number of lower-value bitcoin-denominated transactions than Bitcoin blockchain is capable of, using the Bitcoin blockchain to periodically settle with one high-value transaction batches of peripheral network transactions.Bitcoin supports a lower rate transactions than Visa or PayPal, but due to its stronger automated security these can be much more important transactions. Anybody with a decent Internet connection and a smart phone who can pay $0.20-$2 transaction fees\u2014substantially lower than current remittance fees\u2014can access Bitcoin any where on the globe. Lower value transactions with lower fees will need to be implemented on peripheral bitcoin networks.When it comes to small-b bitcoin, the currency, there is nothing impossible about paying retail with bitcoin the way you\u2019d pay with a fiat currency \u2014 bitcoin-denominated credit and debt cards, for example, with all the chargeback and transactions-per-second capabilities of a credit or debit card. And there are also clever ways to do peripheral bitcoin retail payments in which small value payments happen off-chain and are only periodically bulk-settled on the Capital-B Bitcoin blockchain. That blockchain is going to evolve into a high-value settlement layer as bitcoin use grows, and we will see peripheral networks being used for small-b bitcoin retail transactions.When I designed bit gold I already knew consensus did not scale to large transaction throughputs securely, so I designed it with a two-tier architecture: (1) bit gold itself, the settlement layer, and (2) Chaumian digital cash, a peripheral payment network which would provide retail payments with high transactions-per-second performance and privacy (through Chaumian blinding), but would like Visa be a trusted third party and thus require a \u201chuman blockchain\u201d of accountants, etc. to operate with integrity. The peripheral payment network can involve only small value transactions, thereby requiring much less of a human army to avoid the fate of Mt. Gox.Ralph Merkle: pioneer of public-key cryptography and inventor of hierarchical hash-tree structures (Merkle trees).Money requires social scalability in its design, via security. For example it should be very hard for any participant or intermediary to forge money (to dilute the supply curve leading to undue or unexpected inflation). Gold can have value anywhere in the world and is immune from hyperinflation because its value doesn\u2019t depend on a central authority. Bitcoin excels at both these factors and runs online, enabling somebody in Albania to use Bitcoin to pay somebody in Zimbabwe with minimal trust in or and no payment of quasi-monopoly profits to intermediaries, and with minimum vulnerability to third parties.There are all sorts of definitions of \u201cblockchain\u201d out there, almost all of them just implicitly broad hand-waving amid the mountains of marketing hype. I suggest a clear definition that can be communicated to lay people. It is a blockchain if it has blocks and it has chains. The \u201cchains\u201d should be Merkle trees or other cryptographic structures with a similar integrity functionality of post-unforgeable integrity. Also the transactions and any other data whose integrity is protected by a blockchain should be replicated in a way objectively tolerant to worst-case malicious problems and actors to as high a degree as possible (typically the system can behave as previously specified up to a fraction of 1/3 to 1/2 of the servers maliciously trying to subvert it to behave differently).Bitcoin\u2019s socially scalable security, based on computer science rather than on police and lawyers, allows, for example, customers in Africa to pay suppliers in China seamlessly across borders. A private blockchain cannot accomplish this feat nearly as easily, since it would require an identification scheme, certificate authority, and PKI shared between these various jurisdictions. (Source)Because of this fraction, and because of the (hopefully very rare) need to update software in a manner that renders prior blocks invalid\u2014an even riskier situation called a hard fork\u2014blockchains also need a human governance layer that is vulnerable to fork politics. The most successful blockchain, Bitcoin, has maintained its immutable integrity via decentralized decision-making among experts in the technology combined with a strong dogma of immutability, under which only the most important and rare bug fixes and design improvements, that cannot be made any other way, justify a hard fork. Under this philosophy of governance accounting or legal decisions (such as altering an account balance or undoing a transaction) never justify a hard fork, but should be accomplished by traditional governance outside of (or on top of) the system (e.g. via a court injunction forcing a Bitcoin user to send a new transaction that effectively undoes the old one, or confiscating the particular keys and thus the particular holdings of a particular user).To say that data is post-unforgeable or immutable means that it can\u2019t be undetectably alteredafter being committed to the blockchain. Contrary to some hype this doesn\u2019t guarantee anything about a datum\u2019s provenance, or its truth or falsity, before it was committed to the blockchain. That requires additional protocols, often including expensive traditional controls. Blockchains don\u2019t guarantee truth; they just preserve truth and lies from later alteration, allowing one to later securely analyze them, and thus be more confident in uncovering the lies. Typical computers are computational etch-a-sketch, while blockchains are computational amber. Important data should be committed to blockchain amber as early as possible, ideally directly from and cryptographically signed by the device in which it was generated, to maximize the blockchain\u2019s benefit in securing its integrity.A Merkle tree of four transactions (tx0 through tx3). Combined with a proper replication and chains of transaction blocks protected by proof-of-work, Merkle trees can make data such as transactions post-unforgeable by consensus. In Bitcoin, a Merkle root hash securely summarizes and is used to verify the unaltered state of all the transactions in a block.My own 1998 \u201csecure property title\u201d architecture had Merkle trees and replication of data tolerant against an objective fraction of arbitrarily faulty software or malicious actors, but not blocks. It demonstrated my theory that you could protect the integrity of globally shared data and transactions, and use that ability to design a cryptocurrency (bit gold). It did not have the more efficient and computationally scalable blocks-and-ledger system that Bitcoin does. Also like today\u2019s private blockchains, secure property titles assumed and required securely distinguishable and countable nodes.Given the objective 51% hashrate attack limit to some important security goals of public blockchains like Bitcoin and Ethereum, we actually do care about the distinguishable identity of the most powerful miners to answer the question \u201ccan somebody convince and coordinate the 51%?Blockchain security is objectively limited and blockchain governance is heavily influenced by the potential for a 51% attack. An attack of course does not have to be called an \u201cattack\u201d by the attackers; instead they might call it \u201cenlightened governance\u201d or \u201cdemocracy in action\u201d. Indeed some kinds of software updates needed to fix bugs or otherwise improve the protocol require a soft fork. Some other kinds of software updates require hard forks, which in Bitcoin pose an even greater security and continuity risks than soft forks. Blockchains, although reducing trust far more than any other network protocols, are still far from trustless. Miners are partially trusted fiduciaries, and those who are not expert developers or computer scientists who have invested a great deal of time in learning the design principles and codebase of a blockchain must place a great deal of faith in the expert developer community, much as non-specialists who want to understand the results of a specialized science do of the corresponding scientists. During a hard fork exchanges can also be very influential by deciding which fork to support with their order books and trade symbol continuity.Public blockchains thus mostly but not entirely dodge the identity-is-hard bullet and take care of its remaining problem of identifying the most powerful miners at a higher \u201cwet\u201d/\u201csocial\u201d level, where it is probably more appropriate, rather than trying to securely map such an inherently wet (brain-based) concept onto the protocol, as PKI (public key infrastructure) rather awkwardly tries to do.So I think some of the \u201cprivate blockchains\u201d qualify as bona fide blockchains; others should go under the broader rubric of \u201cdistributed ledger\u201d or \u201cshared database\u201d or similar. They are all very different from and not nearly as socially scalable as public and permissionless blockchains like Bitcoin and Ethereum.All of the following are very similar in requiring an securely identified (distinguishable and countable) group of servers rather than the arbitrary anonymous membership of miners in public blockchains. In other words, they require some other, usually far less socially scalable, solution to the Sybil (sockpuppet) attack problem:The dominant, but usually not very socially scalable, way to identify a group of servers is with a PKI based on trusted certificate authorities (CAs). To avoid the problem that merely trusted third parties are security holes, reliable CAs themselves must be expensive, labor-intensive bureaucracies that often do extensive background checks themselves or rely on others (e.g. Dun and Bradstreet for businesses) to do so. (I once led a team that designed and built such a CA). CAs also act as a gatekeeper, rendering these permissioned systems. CAs can become singular points of political control and failure. \u201cPublic blockchains are automated, secure, and global, but identity is labor-intensive, insecure, and local.\u201dPKI-enabled private blockchains are a nice for banks and some other large enterprises because they already have mature in-house PKIs that cover the employees, partners, and private servers needed to approve important transactions. Bank PKIs are relatively reliable. We also have semi-reliable CAs for web servers, but not generally speaking for web clients, even though people have been working on the problem of client certificates since the invention of the web: for example advertisers would love to have a more secure alternative to phone numbers and cookies for tracking customer identities. Yet it hasn\u2019t happened.PKI can work well for some important things and people but it is not nearly so nice or so easy for lesser entities. Its social scalability is limited by the traditional wet identity bureaucracy on which it depends.Some significant thefts in the broader bitcoin ecosystem. Whereas the Bitcoin blockchain itself is probably the most secure financial network in existence (and indeed must remain far more secure than traditional payment networks in order to maintain its low governance costs and seamless cross-border capability), its peripheral services based on older centralized web servers are very insecure. (Source: author)We need more socially scalable ways to securely count nodes, or to put it another way to with as much robustness against corruption as possible, assess contributions to securing the integrity of a blockchain. That is what proof-of-work and broadcast-replication are about: greatly sacrificing computational scalability in order to improve social scalability. That is Satoshi\u2019s brilliant tradeoff. It is brilliant because humans are far more expensive than computers and that gap widens further each year. And it is brilliant because it allows one to seamlessly and securely work across human trust boundaries (e.g. national borders), in contrast to \u201ccall-the-cop\u201d architectures like PayPal and Visa that continually depend on expensive, error-prone, and sometimes corruptible bureaucracies to function with a reasonable amount of integrity.The rise of the Internet as seen the rise of a variety of online institutions, among them social networks, \u201clong-tail\u201d retail (e.g. Amazon), and a variety of services that allow small and dispersed buyers and sellers to find and do business with each other (eBay, Uber, AirBnB, etc.) These are just the initial attempts to take advantage of our new abilities. Due to the massive improvements in information technology over recent decades, the number and variety of people who can successfully participate in an online institution is far less often restricted by the objective limits of computers and networks than it is by limitations of mind and institution that have usually have not yet been sufficiently redesigned or further evolved to take advantage of those technological improvements.These initial Internet efforts have been very centralized. Blockchain technology, which implements data integrity via computer science rather than via \u201ccall the cops\u201d, has so far made possible trust-minimized money\u2014cryptocurrencies\u2014and will let us make progress in other financial areas as well as other areas where transactions can be based primarily on data available online.This is not to say that adapting our institutions to our new capabilities will be easy, or indeed in particular cases anything short of difficult and improbable. Utopian schemes are very popular in the blockchain community, but they are not viable options. Reverse-engineering our highly evolved traditional institutions, and even reviving in new form some old ones, will usually work better than designing from scratch, than grand planning and game theory. One important strategy for doing so was demonstrated by Satoshi\u2014sacrifice computational efficiency and scalability\u2014consume more cheap computational resources\u2014in order to reduce and better leverage the great expense in human resources needed to maintain the relationships between strangers involved modern institutions such as markets, large firms, and governments."}
{"prompt": "The Idea of Smart Contracts", "completion": "What is the meaning and purpose of \"security\"? How does it relate the the relationships we have? I argue that the formalizations of our relationships\u2014especially contracts\u2014provide the blueprint for ideal security.Many kinds of contractual clauses (such as collateral, bonding, delineation of property rights, etc.) can be embedded in the hardware and software we deal with, in such a way as to make breach of contract expensive (if desired, sometimes prohibitively so) for the breacher. A canonical real-life example, which we might consider to be the primitive ancestor of smart contracts, is the humble vending machine. Within a limited amount of potential loss (the amount in the till should be less than the cost of breaching the mechanism), the machine takes in coins, and via a simple mechanism, which makes a freshman computer science problem in design with finite automata, dispense change and product according to the displayed price. The vending machine is a contract with bearer: anybody with coins can participate in an exchange with the vendor. The lockbox and other security mechanisms protect the stored coins and contents from attackers, sufficiently to allow profitable deployment of vending machines in a wide variety of areas.Smart contracts go beyond the vending machine in proposing to embed contracts in all sorts of property that is valuable and controlled by digital means. Smart contracts reference that property in a dynamic, often proactively enforced form, and provide much better observation and verification where proactive measures must fall short.As another example, consider a hypothetical digital security system for automobiles. The smart contract design strategy suggests that we successively refine security protocols to more fully embed in a property the contractual terms which deal with it. These protocols would give control of the cryptographic keys for operating the property to the person who rightfully owns that property, based on the terms of the contract. In the most straightforward implementation, the car can be rendered inoperable unless the proper challenge-response protocol is completed with its rightful owner, preventing theft.If the car is being used to secure credit, strong security implemented in this traditional way would create a headache for the creditor - the repo man would no longer be able to confiscate a deadbeat's car. To redress this problem, we can create a smart lien protocol: if the owner fails to make payments, the smart contract invokes the lien protocol, which returns control of the car keys to the bank. This protocol might be much cheaper and more effective than a repo man. A further reification would provably remove the lien when the loan has been paid off, as well as account for hardship and operational exceptions. For example, it would be rude to revoke operation of the car while it's doing 75 down the freeway.In this process of successive refinement we've gone from a crude security system to a reified contract:Mature security systems will be undertaking different behavior for different contracts. To continue with our example, if the automobile contract were a lease, the final payment would switch off leasee access; for purchase on credit, it would switch off creditor access. A security system, by successive redesign, increasingly approaches the logic of the contract which governs the rights and obligations covering the object, information, or computation being secured. Qualitatively different contractual terms, as well as technological differences in the property, give rise to the need for different protocols.(Derived from \"Formalizing and Securing Relationships on Public Networks\", by Nick Szabo)A related article discusses a formal language for analyzing contracts and specifying smart contracts.Please send your comments to nszabo (at) law (dot) gwu (dot) eduCopyright \u00a9 1997 by Nick Szabo\nPermission to redistribute without alteration hereby granted"}
{"prompt": "Cyberspace, Crypto Anarchy, and Pushing Limits", "completion": "This messages touches on two topics of recent interest (to some) here:Setting up payment systems for message transmission, to handle the issues of \u201cmailbombing\u201d and \u201cflooding\u201d in a more natural way (locality of reference, user of a service pays, avoidance of the \u201cMorris Worm\u201d explosion effects which could\u2019ve happened with Detweiler bombed us, as Hal noted).The general issue of \u201cCyberspace.\u201d This lies at the root of some recent disagreements here, and is worthy of more discussion. Crypto will make this a very real cusp issue in the next several years.Why debate it now? What could possibly come out of such a debate?It happens that I\u2019m reading a wonderful new book by Kip Thorne, entitled \u201cBlack Holes and Space Warps.\u201d This is widely available in bookstores, in hardback only at this time. ($30, but it\u2019s a whopping big book, and I got it at Barnes and Noble for $24. Speaking of Barnes and Noble, the Santa Clara store is selling Li and Vitanyi\u2019s \u201cIntro. to Kolmogorov Complexity\u201d book for $44, before the 20% hardback discount, which may be a mispricingm, as I paid $60 for mine. Check it out if you\u2019re interested....I think there were two copies.)Thorne has spent 30 years studying gravitational collapse and black holes, and was a coauthor of the famed 1973 book on \u201cGravitation,\u201d which I got to use in a Xeroxed form for my general relativity class in 1973.The point? Thorne describes his involvement with Carl Sagan in working out the physics of time travel via wormholes. Thorne had an epiphany: however unlikely the engineering or financing of something is, there is something valuable to be gained in examining the absolute limits of what is possible without regard for engineering practicalities. Thus, he and his students looked into the implications of an extremely advanced civilization able to somehow hold open the mouth of a wormhole. The conclusions are fascinating and led to a new line of thinking about the structure of space-time.Pushing limits and seeing \u201cideal\u201d behavior is invigorating.The connection to crypto is this: Perhaps we should be thinking more about the implicaitons and effects of strong crypto, digital money, ideal remailers, etc., assuming that certain practical problems that bedevil us today are, or soon will be, solved. To some extent we already do this, as when we discuss Chaum\u2019s ideal mixes in the same way engineer\u2019s discuss ideal op amps--a useful abstraction of behavior in the limit that lesser, real world implementations can then be contrasted with.And of course many of us have found Vernor Vinge\u2019s \u201cTrue Names\u201d to be an excellent (and quickly readable) treatment of how things could work in a world of fast, cheap, and secure communication. Other writers have seen things differently (e.g., \u201cShockwave Rider,\u201d \u201c1984,\u201d \u201cSnow Crash\u201d).Here, to cut to the chase, are some brief statements of what I see as the \u201cbehavior in the limits.\u201d I won\u2019t elaborate on them right now.\u201cPay as you go\u201d is the natural way to handle most economic transactions. There are exceptions, of course, such as insurance, contracts for future perfomance, etc., but for the most part money is used to mediate immediate exchanges. For a timely example, why can your enemies not \u201cjunk mail bomb\u201d you with truly large (tons) of junk mail? Junk mail, as we call it, is in relatively small volumes (at most a mailbox full, except for celebrities perhaps) because of one simple thing: someone has to pay for the delivery! There is no possibility of a \u201cfree\u201d way to \u201cMake 19 copies of this ton of garbabe and mail them to your enemies.\u201d That there is with software--the remailer bombing by Detweiler, the 1988 Morris Worm, the \u201cDave Rhodes\u201d chain letters--is due to some flaws in the current Net model:costs of message trasnmission are not directly borne by senders (encourage overuse by some of scarce resources, a la the \u201ctragedy of the commons\u201d).sites and remailers will respond to \u201cinstructions\u201d to send the message on, to make copies of it, etc.I thus consider it imperative that we develop as quickly as we can the following:payment systems for message transmission (I\u2019ve argued for \u201cdigital postage\u201d as a first and comparatively easy application of digital money, others have as well, and Ray Cromwell just today issued his own proposal....time we get going on this. And lest you think I\u2019m calling for altruism here, I think some fortunes will be made in this area.)anonymous or identity-obscuring protocols, a la Chaum.a general move away from \u201ccommons\u201d-oriented systems, which breed the notions of \u201cfair access\u201d and such. If the \u201cproblem\u201d is that poor people cannot--it is alleged--afford a $17 a month Net connection (what Netcom charges, in about 25 cities and growing), then my solution would be to simply subsidize their bill. (I\u2019m not advocating this, nor do I think it wise to subsidize anyone\u2019s phone, Net, or dinner bills, but better this than \u201cnationalizing\u201d networks and thus creating more confusion and less efficiency for all.)Connectivity will be altered dramatically, The \u201cdistance\u201d in cyberspace is already uncorrelated to physical distance. (Hardly surprising, as this was apparent with the telephone. But a useful way of looking at cyberspace, as being a space of radically altered connectivities and distances.)Local access to service, the phone or cable lines that reach the home or office, is a potential bottleneck. But once a connection is made to a local node where multiple competitors exist (that is, once beyond the local government-granted monopoly), the possibility of \u201ccensorship\u201d decreases rapidly, for several reasons.thus, push for \u201cencrypted access\u201d lines from a terminal node (home, office) to a point with unlimited connectivity.this is the situation I now have with my PacBell line and Netcom: PacBell doesn\u2019t \u201ccare\u201d what I use the local line for, and once outside, I can dial a less-censorious Netcom rather than a Big Brotherish AOL or Prodigy.Cyberspace is infinitely colonizable. No limits to growth. (Assumption: realization of cyberspace is on various machines and networks, which are not free, nor infinite. But the \u201cno limits\u201d comes from ease with which those near a \u201cboundary\u201d can simply push out that boundary with more CPU resource, more networks, etc.).Crypto means access to \u201cregions\u201d can be controlled by \u201cowners\u201d:\u201cmy house, my rules\u201d enforced locally, without central State authorityessentially unbreakable security (in crypto sense)By the way, strong crypto is the \u201cbuilding material\u201d of cyberspace...the mortar, the bricks, the support beams, the walls. Nothing else can provide the \u201cpermanence\u201d...without crypto, the walls are subject to collapse at the first touch by a malicious person or agency. With crypto, not even a 100 megaton H-bomb can breach the walls.(If you think I\u2019m exaggerating, do some calculations on the energy to break a 1000-decimal-digit modulus.)No \u201czoning laws\u201d will be needed, or possible, in cyberspace. (Neil Stephenson\u2019s \u201cSnow Crash,\u201d while a wonderful and thought-provoking read, got it wrong here: cyberspace is too extensible and locally controllable.)Physical location of cyberspace locations will be increasingly hard to pin down. A vast \u201clabyrinth of rooms and corridors\u201d might be physically instantiated on a computer in Malaysia, while a \u201cvirtual gambling hall\u201d is being run via cryptographic cutouts (remailers) from someone\u2019s bedroom in Provo, Utah.The talk about \u201caccess rules\u201d is thus shown to be meaningless, unless the governments crack down on networks, crypto, and private systems in a way far beyond anything now being talked about.This is the \u201ccrypto anarchy\u201d I have been writing about since 1988. Cyberspace will turn out to be a far vaster frontier than anything we have seen so far. With \u201conly\u201d 10^70 or so particles in the entire universe, there\u2019s vastly more \u201cspace\u201d (address space, key space, etc.) in even a relatively small set of digits. Cyberspace is mathematical space, and its spaciousness is truly unlimited.And we\u2019ll be moving our trade, our entertainment, and much of our lives into cyberspace a whole lot faster than we\u2019ll be slowly moving into low Earth orbit and beyond. In fact, I consider that I\u2019m already half-way in. In a few years, with Mosaic-like one-touch connectivity, with a plethora of network choices, with secure remailers and similar tools to anonymize my transactions, I\u2019ll be so far in there\u2019ll be turning back.Enough for these remarks right now. I think it makes sense to take a slightly longer-range view of the inevitable trends, to see where we\u2019re going, to see what issues need more work.I hope some of you agree with me.--Tim May"}
{"prompt": "Confidential Auditing", "completion": "The auditing function is a vast and indispensable part of the modern economy. Auditing controls allow, among other things, employers to delegate resources and authority to employees, franchisors to delegate to franchisees, stockholders to delegate to management, advertisers to count eybeballs, marketers to gather more reliable data on customers, and make possible a wide variety of other such relationships. Auditing controls might fairly be called the security protocols of capitalism.A recent general survey showed that 83% of Americans are \"very concerned\" about their privacy on the Internet. One can expect even stronger figures from European customers, who have more first-hand experience with private data, much of it originally compiled for innocuous reasons, being used for political repression. Businesses recognize the shortcomings of NDAs and are looking for more reliable ways to protect confidential data. The vast majority of e-commerce customers are concerned about privacy.Auditing is in deep conflict with efforts towards greater privacy. Auditors have an ethic of recording, investigating, and reporting as much as possible, and often see privacy efforts as attempts to prevent auditing and potentially cover up fraud. Indeed, the recent multi-$billion failures of Baring's Bank and the Long Term Capital hedge fund, and more generally the recent problems with \"crony capitalism\" which have shorn stockholders and creditors of over $1 trillion, have been ascribed to such secrecy[3]. At the top of the list of current IMF reforms is \"openness\", a buzzword for the introduction of greater auditing controls and reporting requirements.Since auditing controls are used to secure trillions of dollars of transactions every year, they are not going away, and indeed will likely grow more effective and intrusive. On the other hand, we now have at our disposal the many breakthroughs achieved over the last two decades in modern cryptography. Can we use these to strike a better balance between auditing and privacy? I have come up with an architecture which uses such protocols to greatly improve this tradeoff: confidential auditing.We can achieve auditing logs unforgeable after commitment via secure timestamps[1]. We can then achieve to a great extent unforgeability prior to commitment, with segregation of duties via multiparty integrity constraints[2]. We then audit these commitments via multiparty private computations[4]. This combination allows a wide variety of transactions, conducted with normal efficiency, to be observed and verified by selected arbitrators or auditors, via more expensive private computations applied to randomly sampled commitments. This maintains a high degree of confidentiality for the inputs.The participants in this mutually confidential auditing protocol can verify that the books match the details of transactions stored in a previously committed transaction log, and that the numbers add up correctly. The participants can compute summary statistics on their confidentially shared transaction logs, including cross-checking of the logs against counterparties to a transaction, without revealing those logs. They only learn what can be inferred from the statistics, can't see the details of the transactions.Assuming many practical details I have glossed over in this sketch (such as the efficiency of auditing computations, the availability of digital transaction records in standard format, etc.), confidential auditing can bring a substantial improvement over current practices. Currently the details of all an organization's transactions, including for example medical records in an HMO and transactions in top-secret government programs, are either exposed directly to auditors, or are immune from auditing, allowing fraud.With mutually confidential auditing we will be able to gain high confidence in the factuality of counterparties' claims and reports without revealing identifying and other detailed information from the transactions underlying those reports. This will provide the basis for solid reputation systems, and other trusted third party systems, that maintain integrity across time, communications, summarization, and preserve confidentiality for transaction participants. With confidential auditing we will often be able to have both openness and privacy.BLLV98 A. Buldas, P. Laud, H. Lipmaa, J. Villemson, \"Time-Stamping with Binary Linking Schemes\", Crypto 98 \u21a9Szabo, in progress \u21a9See recent back issues of The Wall Street Journal and The Economist \u21a9Overview, http://szabo.best.vwh.net/msc.html; Quorum systems model, http://szabo.best.vwh.net/quorum.html \u21a9[B91] D. Beaver, \"Efficient Multiparty Protocols Using Circuit Randomization\", ACM STOC 91[RB89] T. Rabin & M. Ben-Or, \"Verifiable Secret Sharing and Multiparty Protocols with Honest Majority\", ACM STOC 89[GRR98] R. Gennaro, T. Rabin, & M. Rabin: \"Simplified VSS and Fast-Track Multiparty Computations\", PODC 98"}
{"prompt": "Proplets: Devices for Controlling Property", "completion": "Civilization has highly evolved practices for determining whether certain actions are allowable or not, or who should prevail in a dispute, namely law. Such a body of knowledge cannot be reinvented from scratch, so instead e-commerce security should draw heavily on it\u2014building property rights, contract and tort law into technology at a very basic level. Proplets define the basic security architecture for local evidence gathering, enforcement, and negotiation of such laws.Proplets do not rely on central planning, AI, or a single trusted third party for any function. Central planning is not able to account for the distributed and diverse knowledge and preferences of different people. A \"trusted third party\" is a nice-sounding synonym for a wide-open security hole that a designer chooses to overlook. Proplet design places strong emphasis on eliminating such exposures.The key is building in, at the most basic level of technology, code (in both the legal and software sense) that allows a widely distributed people, each person having his own unique information, circumstances, and preferences, to cooperate within well known, mutually agreeable, and strongly enforced constraints. With these constraints the risks and benefits of technology are balanced, weapons are monitored and securely restricted in their use to only very narrow, specific, lawful conditions, and for every person there is more profit from peace than from destruction.The goal of proplet design is to control physical objects with digital protocols. Proplets protect its structure and function from non-owners, and observe the environment for phenomena impinging on a region, on matter, or on its owner. A proplet is an electromechanical device (e.g. a MEMS device) with the following core abilities:A proplet may optionally also have the following abilities:No computational module can be read or controlled by physical tampering\u2014it will shut down, erase itself, or even self-destruct depending on the severity of tampering. Computational modules are \"transparent\" to their publically registered controller and opaque to other entities.Only protocols that are simple and composable with provable security govern the communications between the security kernel (private key operations), control box, sandbox, and other components of a computation modules. Similarly for communications between modules and between proplets.How does a proplet find out who owns it, or a guest module who controls it? There are two basic ways:A proplet's guest modules are publicly listed and transferred independently of each other and of the proplet's ownership module.With the home proplet alternative, biometric control of the home proplets may replace public ownership records.Proplets control electronics directly from ownership or guest modules. Proplets control machinery via entanglement. Entanglement can take at least two forms:Entanglment designs have in common that they make it too expensive for the attacker to steal the electronics or machinery by severing it from the controlling proplet.Deeds, in the context of replicated property titles and proplets, are smart contracts executed by a deed module. The current owner may add new deeds agreed to (but not remove old ones) by drafting signing and signing such a smart contract with other current property owners. The deed binds both properties (perhaps to different terms, depending on what the two current owners have negotiatied). The deed modules can be audited at any time by the contemporary owners of other proplets bound to the deeds. Founders of competing property title registries define master deeds, or tort laws, to govern disputes within registry properties. They also define tort law for disputes between their properties and properties defined by other registires, by coming to agreements with those registry founders. Founders also create the initial allocations.Founders are often the manufacturers of proplets. They build in a particular registry as authoratative for their proplets as well as designing an accompanying tort law.For example, the founder of registry of fixtures in a spatial region can sign an agreement with a movable property (chattel) registry, governing the behavior of chattel moving through space and interacting with fixtures. The manufacturers of chattel and fixtures program their proplets to respect the appropriate registries and constrain their sensors and effectors to follow the tort law that has been agreed to.Proplets combine our most highly evolved practices for cooperation on a large scale with a technology architecture suitable for advances well into the future, even well into posthuman civilization. Proplets provide a much sounder footing for solving the problems of high technology cooperation including problems such as privacy, weapons of mass destruction, and other abuses of the power of advanced technology.\"Computer Security as the Future of Law\", Mark Miller\n\"Formalizing and Securing Relationships on Public Networks\", Nick Szabo\n\"Secure Property Titles\", Nick SzaboMy thanks to Gregory Burch, J.D. for his helpful questions.Please send your comments to nszabo (at) law (dot) gwu (dot) edu"}
